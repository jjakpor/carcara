(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))
(assume nst19.0 (not (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))))))
(assume nst19.1 (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha))))))
(assume nst19.2 (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))
(assume t18 (or (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))
(step st19 (cl (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))) :rule or :premises (t18))
(step t.end (cl) :rule resolution :premises (nst19.0 nst19.1 nst19.2 st19))
