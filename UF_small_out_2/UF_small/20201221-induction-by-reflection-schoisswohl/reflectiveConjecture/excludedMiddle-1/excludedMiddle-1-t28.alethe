(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))
(assume nst28.0 (not (models empty (forallR_alpha v0_alpha (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))
(assume nst28.1 (not (not (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))))))
(assume nst28.2 (not (not (= (models empty (forallR_alpha v0_alpha (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))) (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))))
(assume t27 (or (not (= (models empty (forallR_alpha v0_alpha (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))) (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))))) (models empty (forallR_alpha v0_alpha (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))) (not (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))))))
(step t27' (cl (not (= (models empty (forallR_alpha v0_alpha (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))) (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))))) (models empty (forallR_alpha v0_alpha (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))) (not (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))))) :rule or :premises (t27))
(step st28 (cl (models empty (forallR_alpha v0_alpha (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))) (not (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))) (not (= (models empty (forallR_alpha v0_alpha (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))) (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))) :rule reordering :premises (t27'))
(step t.end (cl) :rule resolution :premises (nst28.0 nst28.1 nst28.2 st28))
