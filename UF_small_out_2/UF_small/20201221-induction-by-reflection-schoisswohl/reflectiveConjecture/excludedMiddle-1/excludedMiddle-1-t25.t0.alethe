(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))
(assume nt25.0 (not (= (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))
(anchor :step t25 :args ((:= (x alpha) @quantifiers_skolemize_3)))
(step st25.t0 (cl (= (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))) :rule refl)
(step t25.t0 (cl (= (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))) :rule trust)
(step t25 (cl (= (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))) :rule sko_forall)
(step t.end (cl) :rule resolution :premises (nt25.0 t25))
