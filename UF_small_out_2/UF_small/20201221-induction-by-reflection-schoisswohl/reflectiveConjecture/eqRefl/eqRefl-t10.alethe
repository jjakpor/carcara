(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))))))
(assume nst10.0 (not (=> (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)))))))
(assume nst10.1 (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha))))))
(assume t8 (or (=> (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha))))) (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y))))))
(assume t9 (or (not (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y))))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha))))))
(step t8' (cl (=> (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha))))) (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y))))) :rule or :premises (t8))
(step t9' (cl (not (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y))))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha))))) :rule or :premises (t9))
(step st10 (cl (=> (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha))))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha))))) :rule resolution :premises (t8' t9'))
(step t.end (cl) :rule resolution :premises (nst10.0 nst10.1 st10))
