(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))))))
(assume nst6.0 (not (= (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))))))
(assume t4 (= (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) true)))
(assume t5 (= (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) true) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha)))))
(step st6 (cl (= (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))))) :rule trans :premises (t4 t5))
(step t.end (cl) :rule resolution :premises (nst6.0 st6))
