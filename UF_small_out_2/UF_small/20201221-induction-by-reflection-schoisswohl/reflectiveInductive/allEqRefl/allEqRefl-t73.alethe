(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (equal x x x))))
(define-fun @quantifiers_skolemize_7 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))))
(assume nst73.0 (not (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))))
(assume t61 (or (not (= (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat))) true)) (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))))
(assume t72 (= (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat))) true))
(step t61' (cl (not (= (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat))) true)) (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))) :rule or :premises (t61))
(step st73 (cl (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))) :rule resolution :premises (t61' t72))
(step t.end (cl) :rule resolution :premises (nst73.0 st73))
