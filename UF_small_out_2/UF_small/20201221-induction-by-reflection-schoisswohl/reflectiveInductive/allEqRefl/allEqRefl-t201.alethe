(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (equal x x x))))
(define-fun @quantifiers_skolemize_7 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))))
(assume nst201.0 (not (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1))))
(assume a20 (not (forall ((x nat)) (equal x x x))))
(assume t198 (or (not (= (not (forall ((x nat)) (equal x x x))) (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1)))) (not (not (forall ((x nat)) (equal x x x)))) (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1))))
(assume t200 (= (not (forall ((x nat)) (equal x x x))) (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1))))
(step t198' (cl (not (= (not (forall ((x nat)) (equal x x x))) (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1)))) (not (not (forall ((x nat)) (equal x x x)))) (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1))) :rule or :premises (t198))
(step st201 (cl (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1))) :rule resolution :premises (t198' t200 a20))
(step t.end (cl) :rule resolution :premises (nst201.0 st201))
