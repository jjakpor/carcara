(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (equal x x x))))
(define-fun @quantifiers_skolemize_7 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))))
(assume nst163.0 (not (not (= (models (push_nat empty v0_nat @quantifiers_skolemize_7) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat))) (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)))))))
(assume nst163.1 (not (not (models (push_nat empty v0_nat @quantifiers_skolemize_7) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat))))))
(assume nst163.2 (not (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)))))
(step st163 (cl (not (= (models (push_nat empty v0_nat @quantifiers_skolemize_7) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat))) (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))))) (not (models (push_nat empty v0_nat @quantifiers_skolemize_7) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst163.0 nst163.1 nst163.2 st163))
