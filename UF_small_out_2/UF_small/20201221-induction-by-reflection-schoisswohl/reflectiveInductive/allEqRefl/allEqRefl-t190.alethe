(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (equal x x x))))
(define-fun @quantifiers_skolemize_7 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))))
(assume nst190.0 (not (= (forall ((phi form)) (=> (and (=> true (models (push_nat empty v0_nat zero) phi)) (forall ((x0 nat)) (=> (models (push_nat empty v0_nat x0) phi) (models (push_nat empty v0_nat (s x0)) phi)))) (forall ((x nat)) (models (push_nat empty v0_nat x) phi)))) (forall ((phi form) (BOUND_VARIABLE_560 nat)) (or (not (models (push_nat empty v0_nat zero) phi)) (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) phi)) (models (push_nat empty v0_nat (s x0)) phi)))) (models (push_nat empty v0_nat BOUND_VARIABLE_560) phi))))))
(assume t186 (= (forall ((phi form)) (=> (and (=> true (models (push_nat empty v0_nat zero) phi)) (forall ((x0 nat)) (=> (models (push_nat empty v0_nat x0) phi) (models (push_nat empty v0_nat (s x0)) phi)))) (forall ((x nat)) (models (push_nat empty v0_nat x) phi)))) (forall ((phi form)) (=> (and (models (push_nat empty v0_nat zero) phi) (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) phi)) (models (push_nat empty v0_nat (s x0)) phi)))) (forall ((x nat)) (models (push_nat empty v0_nat x) phi))))))
(assume t189 (= (forall ((phi form)) (=> (and (models (push_nat empty v0_nat zero) phi) (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) phi)) (models (push_nat empty v0_nat (s x0)) phi)))) (forall ((x nat)) (models (push_nat empty v0_nat x) phi)))) (forall ((phi form) (BOUND_VARIABLE_560 nat)) (or (not (models (push_nat empty v0_nat zero) phi)) (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) phi)) (models (push_nat empty v0_nat (s x0)) phi)))) (models (push_nat empty v0_nat BOUND_VARIABLE_560) phi)))))
(step st190 (cl (= (forall ((phi form)) (=> (and (=> true (models (push_nat empty v0_nat zero) phi)) (forall ((x0 nat)) (=> (models (push_nat empty v0_nat x0) phi) (models (push_nat empty v0_nat (s x0)) phi)))) (forall ((x nat)) (models (push_nat empty v0_nat x) phi)))) (forall ((phi form) (BOUND_VARIABLE_560 nat)) (or (not (models (push_nat empty v0_nat zero) phi)) (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) phi)) (models (push_nat empty v0_nat (s x0)) phi)))) (models (push_nat empty v0_nat BOUND_VARIABLE_560) phi))))) :rule trans :premises (t186 t189))
(step t.end (cl) :rule resolution :premises (nst190.0 st190))
