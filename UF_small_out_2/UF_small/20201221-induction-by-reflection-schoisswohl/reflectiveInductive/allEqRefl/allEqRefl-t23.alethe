(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (equal x x x))))
(define-fun @quantifiers_skolemize_7 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))))
(assume nst23.0 (not (or (not (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1))) (not (= @quantifiers_skolemize_1 (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat))) (not (= (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat))) (not (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)))))))
(assume nst23.1 (not (not (not (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1))))))
(step st23 (cl (or (not (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1))) (not (= @quantifiers_skolemize_1 (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat))) (not (= (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat))) (not (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat))))) (not (not (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1))))) :rule or_neg :args (0))
(step t.end (cl) :rule resolution :premises (nst23.0 nst23.1 st23))
