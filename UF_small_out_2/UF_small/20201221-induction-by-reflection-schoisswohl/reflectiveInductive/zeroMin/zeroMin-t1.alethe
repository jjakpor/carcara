(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst1.0 (not (= (not (not (leq zero @quantifiers_skolemize_1))) (leq zero @quantifiers_skolemize_1))))
(step st1 (cl (= (not (not (leq zero @quantifiers_skolemize_1))) (leq zero @quantifiers_skolemize_1))) :rule hole)
(step t.end (cl) :rule resolution :premises (nst1.0 st1))
