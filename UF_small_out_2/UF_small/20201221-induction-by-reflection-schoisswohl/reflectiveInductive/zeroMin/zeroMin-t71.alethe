(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst71.0 (not (or (not (forall ((x nat)) (leq x x))) (leq zero zero))))
(step st71 (cl (or (not (forall ((x nat)) (leq x x))) (leq zero zero))) :rule forall_inst :args (zero))
(step t.end (cl) :rule resolution :premises (nst71.0 st71))
