(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst212.0 (not (not (= (not (forall ((x nat)) (leq zero x))) (not (leq zero @quantifiers_skolemize_1))))))
(assume nst212.1 (not (not (not (forall ((x nat)) (leq zero x))))))
(assume nst212.2 (not (not (leq zero @quantifiers_skolemize_1))))
(step st212 (cl (not (= (not (forall ((x nat)) (leq zero x))) (not (leq zero @quantifiers_skolemize_1)))) (not (not (forall ((x nat)) (leq zero x)))) (not (leq zero @quantifiers_skolemize_1))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst212.0 nst212.1 nst212.2 st212))
