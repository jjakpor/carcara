(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst214.0 (not (= (not (forall ((x nat)) (leq zero x))) (not (leq zero @quantifiers_skolemize_1)))))
(assume t213 (= (forall ((x nat)) (leq zero x)) (leq zero @quantifiers_skolemize_1)))
(step st214 (cl (= (not (forall ((x nat)) (leq zero x))) (not (leq zero @quantifiers_skolemize_1)))) :rule cong :premises (t213))
(step t.end (cl) :rule resolution :premises (nst214.0 st214))
