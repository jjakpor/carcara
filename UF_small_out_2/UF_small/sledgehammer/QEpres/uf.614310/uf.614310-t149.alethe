(define-fun @quantifiers_skolemize_5 () S6 (choice ((?v2 S6)) (not (not (= (f11 (f12 f14 f15) (f11 (f12 f14 f10) (f16 (f17 f18 f19) f9))) (f11 (f12 f34 f20) ?v2))))))
(define-fun @quantifiers_skolemize_6 () S6 (choice ((?v2 S6)) (not (not (= (f11 (f12 f14 f15) (f11 (f12 f14 f8) (f16 (f17 f18 f19) f9))) (f11 (f12 f34 f20) ?v2))))))
(assume nt149.0 (not (= (forall ((?v0 S6) (?v1 S6)) (= (= (f11 (f12 f13 ?v0) ?v1) f36) (exists ((?v2 S6)) (= ?v0 (f11 (f12 f34 ?v1) ?v2))))) (forall ((?v0 S6) (?v1 S6)) (= (= f36 (f11 (f12 f13 ?v0) ?v1)) (not (forall ((?v2 S6)) (not (= ?v0 (f11 (f12 f34 ?v1) ?v2))))))))))
(anchor :step t149 :args ((?v0 S6) (?v1 S6) (:= (?v0 S6) ?v0) (:= (?v1 S6) ?v1)))
(step t149.t2 (cl (= (= (= (f11 (f12 f13 ?v0) ?v1) f36) (exists ((?v2 S6)) (= ?v0 (f11 (f12 f34 ?v1) ?v2)))) (= (= f36 (f11 (f12 f13 ?v0) ?v1)) (not (forall ((?v2 S6)) (not (= ?v0 (f11 (f12 f34 ?v1) ?v2)))))))) :rule trust)
(step t149 (cl (= (forall ((?v0 S6) (?v1 S6)) (= (= (f11 (f12 f13 ?v0) ?v1) f36) (exists ((?v2 S6)) (= ?v0 (f11 (f12 f34 ?v1) ?v2))))) (forall ((?v0 S6) (?v1 S6)) (= (= f36 (f11 (f12 f13 ?v0) ?v1)) (not (forall ((?v2 S6)) (not (= ?v0 (f11 (f12 f34 ?v1) ?v2))))))))) :rule bind)
(step t.end (cl) :rule resolution :premises (nt149.0 t149))
