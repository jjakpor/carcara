(assume nst116.0 (not (= (forall ((?v0 S3)) (= (= (f3 (f15 f16 (f5 f10 ?v0)) f12) f1) (= (f3 (f15 f16 ?v0) f12) f1))) (forall ((?v0 S3)) (= (= (f3 (f15 f16 ?v0) f25) (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25))))) (= (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25)))) (f3 (f15 f16 (f5 f10 ?v0)) f25)))))))
(assume t112 (= (forall ((?v0 S3)) (= (= (f3 (f15 f16 (f5 f10 ?v0)) f12) f1) (= (f3 (f15 f16 ?v0) f12) f1))) (forall ((?v0 S3)) (= (= f1 (f3 (f15 f16 (f5 f10 ?v0)) f12)) (= f1 (f3 (f15 f16 ?v0) f12))))))
(assume t115 (= (forall ((?v0 S3)) (= (= f1 (f3 (f15 f16 (f5 f10 ?v0)) f12)) (= f1 (f3 (f15 f16 ?v0) f12)))) (forall ((?v0 S3)) (= (= (f3 (f15 f16 ?v0) f25) (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25))))) (= (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25)))) (f3 (f15 f16 (f5 f10 ?v0)) f25))))))
(step st116 (cl (= (forall ((?v0 S3)) (= (= (f3 (f15 f16 (f5 f10 ?v0)) f12) f1) (= (f3 (f15 f16 ?v0) f12) f1))) (forall ((?v0 S3)) (= (= (f3 (f15 f16 ?v0) f25) (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25))))) (= (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25)))) (f3 (f15 f16 (f5 f10 ?v0)) f25)))))) :rule trans :premises (t112 t115))
(step t.end (cl) :rule resolution :premises (nst116.0 st116))
