(assume nst0.0 (not (not (= (=> (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78)))) (or (not (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76) (f64 f65 f66 f67 f72 f78)))) (=> (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78)))) (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76)))))))
(assume nst0.1 (not (not (=> (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78)))) (or (not (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76) (f64 f65 f66 f67 f72 f78)))))))
(assume nst0.2 (not (=> (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78)))) (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76)))))
(step st0 (cl (not (= (=> (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78)))) (or (not (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76) (f64 f65 f66 f67 f72 f78)))) (=> (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78)))) (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76))))) (not (=> (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78)))) (or (not (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76) (f64 f65 f66 f67 f72 f78))))) (=> (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78)))) (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst0.0 nst0.1 nst0.2 st0))
