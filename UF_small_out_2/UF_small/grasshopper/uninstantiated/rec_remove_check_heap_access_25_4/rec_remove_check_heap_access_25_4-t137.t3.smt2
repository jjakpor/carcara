(set-logic UF)
(declare-sort Loc 0)
(declare-sort SetLoc 0)
(declare-sort FldBool 0)
(declare-sort FldLoc 0)
(declare-fun null$0 () Loc)
(declare-fun read$0 (FldLoc Loc) Loc)
(declare-fun ep$0 (FldLoc SetLoc Loc) Loc)
(declare-fun emptyset$0 () SetLoc)
(declare-fun setenum$0 (Loc) SetLoc)
(declare-fun union$0 (SetLoc SetLoc) SetLoc)
(declare-fun intersection$0 (SetLoc SetLoc) SetLoc)
(declare-fun setminus$0 (SetLoc SetLoc) SetLoc)
(declare-fun Btwn$0 (FldLoc Loc Loc Loc) Bool)
(declare-fun Frame$0 (SetLoc SetLoc FldLoc FldLoc) Bool)
(declare-fun in$0 (Loc SetLoc) Bool)
(declare-fun Alloc$0 () SetLoc)
(declare-fun Alloc_1$0 () SetLoc)
(declare-fun Axiom$0 () Bool)
(declare-fun Axiom_1$0 () Bool)
(declare-fun Axiom_2$0 () Bool)
(declare-fun FP$0 () SetLoc)
(declare-fun FP_1$0 () SetLoc)
(declare-fun FP_2$0 () SetLoc)
(declare-fun FP_Caller$0 () SetLoc)
(declare-fun FP_Caller_1$0 () SetLoc)
(declare-fun lseg_domain$0 (FldLoc Loc Loc) SetLoc)
(declare-fun lseg_struct$0 (SetLoc FldLoc Loc Loc) Bool)
(declare-fun lst$0 () Loc)
(declare-fun n1_2$0 () Loc)
(declare-fun n2_2$0 () Loc)
(declare-fun next$0 () FldLoc)
(declare-fun next_1$0 () FldLoc)
(declare-fun nondet_1$0 () Bool)
(declare-fun sk_?X_9$0 () SetLoc)
(declare-fun sk_?X_10$0 () SetLoc)
(declare-fun sk_?X_11$0 () SetLoc)
(declare-fun t$0 () Loc)
(declare-fun t_1$0 () Loc)
(declare-fun t_2$0 () Loc)
(declare-fun t_3$0 () Loc)
(declare-fun t_4$0 () Loc)
(assert (not (= (forall ((BOUND_VARIABLE_716 Loc)) (or (Btwn$0 next$0 n1_2$0 BOUND_VARIABLE_716 null$0) (and (or (= null$0 BOUND_VARIABLE_716) (not (Btwn$0 next$0 n1_2$0 BOUND_VARIABLE_716 null$0))) (not (in$0 BOUND_VARIABLE_716 (lseg_domain$0 next$0 n1_2$0 null$0)))))) (forall ((BOUND_VARIABLE_716 Loc)) (or (Btwn$0 next$0 (read$0 next$0 lst$0) BOUND_VARIABLE_716 null$0) (and (or (= null$0 BOUND_VARIABLE_716) (not (Btwn$0 next$0 (read$0 next$0 lst$0) BOUND_VARIABLE_716 null$0))) (not (in$0 BOUND_VARIABLE_716 (lseg_domain$0 next$0 (read$0 next$0 lst$0) null$0)))))))))
(check-sat)
(exit)
