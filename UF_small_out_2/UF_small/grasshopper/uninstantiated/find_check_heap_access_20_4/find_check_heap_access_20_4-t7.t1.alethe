(assume nt7.0 (not (not (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?x)) (= ?x ?y))))))
(assume nt7.1 (not (or (not (Btwn$0 next$0 x$0 root_x$0 x$0)) (= x$0 root_x$0))))
(anchor :step t7)
(assume t7.a0 (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?x)) (= ?x ?y))))
(step t7.t0 (cl (or (not (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?x)) (= ?x ?y)))) (or (not (Btwn$0 next$0 x$0 root_x$0 x$0)) (= x$0 root_x$0)))) :rule trust :args (next$0 x$0 root_x$0))
(step st7.t1 (cl (not (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?x)) (= ?x ?y)))) (or (not (Btwn$0 next$0 x$0 root_x$0 x$0)) (= x$0 root_x$0))) :rule or :premises (t7.t0))
(step t7.t2 (cl (or (not (Btwn$0 next$0 x$0 root_x$0 x$0)) (= x$0 root_x$0))) :rule trust)
(step t7 (cl (not (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?x)) (= ?x ?y)))) (or (not (Btwn$0 next$0 x$0 root_x$0 x$0)) (= x$0 root_x$0))) :rule subproof :discharge (t7.a0))
(step t.end (cl) :rule resolution :premises (nt7.0 nt7.1 t7))
