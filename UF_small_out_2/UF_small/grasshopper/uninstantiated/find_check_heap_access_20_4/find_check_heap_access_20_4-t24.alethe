(assume nst24.0 (not (=> (and (= root_x$0 x$0) (= (read$0 next$0 root_x$0) (read$0 next_2$0 root_x$0))) (= (read$0 next_2$0 x$0) (read$0 next$0 x$0)))))
(assume nst24.1 (not (= (read$0 next_2$0 x$0) (read$0 next$0 x$0))))
(assume t17 (or (=> (and (= root_x$0 x$0) (= (read$0 next$0 root_x$0) (read$0 next_2$0 root_x$0))) (= (read$0 next_2$0 x$0) (read$0 next$0 x$0))) (and (= root_x$0 x$0) (= (read$0 next$0 root_x$0) (read$0 next_2$0 root_x$0)))))
(assume t23 (or (not (and (= root_x$0 x$0) (= (read$0 next$0 root_x$0) (read$0 next_2$0 root_x$0)))) (= (read$0 next_2$0 x$0) (read$0 next$0 x$0))))
(step t17' (cl (=> (and (= root_x$0 x$0) (= (read$0 next$0 root_x$0) (read$0 next_2$0 root_x$0))) (= (read$0 next_2$0 x$0) (read$0 next$0 x$0))) (and (= root_x$0 x$0) (= (read$0 next$0 root_x$0) (read$0 next_2$0 root_x$0)))) :rule or :premises (t17))
(step t23' (cl (not (and (= root_x$0 x$0) (= (read$0 next$0 root_x$0) (read$0 next_2$0 root_x$0)))) (= (read$0 next_2$0 x$0) (read$0 next$0 x$0))) :rule or :premises (t23))
(step st24 (cl (=> (and (= root_x$0 x$0) (= (read$0 next$0 root_x$0) (read$0 next_2$0 root_x$0))) (= (read$0 next_2$0 x$0) (read$0 next$0 x$0))) (= (read$0 next_2$0 x$0) (read$0 next$0 x$0))) :rule resolution :premises (t17' t23'))
(step t.end (cl) :rule resolution :premises (nst24.0 nst24.1 st24))
