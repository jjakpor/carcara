(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst64.0 (not (not (= (member @quantifiers_skolemize_3 (union b c)) (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c))))))
(assume nst64.1 (not (member @quantifiers_skolemize_3 (union b c))))
(assume nst64.2 (not (not (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c)))))
(step st64 (cl (not (= (member @quantifiers_skolemize_3 (union b c)) (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c)))) (member @quantifiers_skolemize_3 (union b c)) (not (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c)))) :rule equiv_pos1)
(step t.end (cl) :rule resolution :premises (nst64.0 nst64.1 nst64.2 st64))
