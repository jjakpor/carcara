(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst5.0 (not (member @quantifiers_skolemize_4 (intersection a b))))
(assume nst5.1 (not (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b))))))
(assume nst5.2 (not (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b))))))
(assume t2 (or (not (member @quantifiers_skolemize_4 a)) (not (= a (intersection a b))) (member @quantifiers_skolemize_4 (intersection a b))))
(assume t3 (or (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (member @quantifiers_skolemize_4 a)))
(assume t4 (or (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (= a (intersection a b))))
(step t3' (cl (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (member @quantifiers_skolemize_4 a)) :rule or :premises (t3))
(step t2' (cl (not (member @quantifiers_skolemize_4 a)) (not (= a (intersection a b))) (member @quantifiers_skolemize_4 (intersection a b))) :rule or :premises (t2))
(step t4' (cl (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (= a (intersection a b))) :rule or :premises (t4))
(step st5 (cl (member @quantifiers_skolemize_4 (intersection a b)) (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b))))) :rule resolution :premises (t2' t3' t4'))
(step t.end (cl) :rule resolution :premises (nst5.0 nst5.1 nst5.2 st5))
