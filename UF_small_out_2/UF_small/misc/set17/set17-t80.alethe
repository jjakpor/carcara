(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst80.0 (not (not (or (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 (intersection a c))))))
(assume nst80.1 (not (member @quantifiers_skolemize_3 (intersection a b))))
(assume nst80.2 (not (member @quantifiers_skolemize_3 (intersection a c))))
(step st80 (cl (not (or (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 (intersection a c))) :rule or_pos)
(step t.end (cl) :rule resolution :premises (nst80.0 nst80.1 nst80.2 st80))
