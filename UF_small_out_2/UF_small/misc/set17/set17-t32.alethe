(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst32.0 (not (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c))))))))
(assume nst32.1 (not (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c))))))))
(assume t29 (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))))
(assume t30 (or (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))) (not (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))))))
(assume t31 (or (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))) (not (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c))))))))
(step t29' (cl (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))) :rule or :premises (t29))
(step t31' (cl (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))) (not (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c))))))) :rule or :premises (t31))
(step t30' (cl (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))) (not (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))))) :rule or :premises (t30))
(step st32 (cl (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))) (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c))))))) :rule resolution :premises (t29' t30' t31'))
(step t.end (cl) :rule resolution :premises (nst32.0 nst32.1 st32))
