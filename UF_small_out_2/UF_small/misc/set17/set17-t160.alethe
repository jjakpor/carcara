(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst160.0 (not (member @quantifiers_skolemize_4 a)))
(assume t140 (or (member @quantifiers_skolemize_4 a) (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 (union b c))))))
(assume t159 (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 (union b c))))
(step t140' (cl (member @quantifiers_skolemize_4 a) (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 (union b c))))) :rule or :premises (t140))
(step st160 (cl (member @quantifiers_skolemize_4 a)) :rule resolution :premises (t140' t159))
(step t.end (cl) :rule resolution :premises (nst160.0 st160))
