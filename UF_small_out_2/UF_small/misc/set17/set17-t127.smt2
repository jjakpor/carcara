(set-logic UF)
(declare-sort Set 0)
(declare-sort Elem 0)
(declare-fun member (Elem Set) Bool)
(declare-fun subset (Set Set) Bool)
(declare-fun seteq (Set Set) Bool)
(declare-fun union (Set Set) Set)
(declare-fun intersection (Set Set) Set)
(declare-fun difference (Set Set) Set)
(declare-fun a () Set)
(declare-fun b () Set)
(declare-fun c () Set)
(assert (not (not (subset (intersection a (union b c)) (union (intersection a b) (intersection a c))))))
(assert (or (and (subset (union (intersection a b) (intersection a c)) (intersection a (union b c))) (subset (intersection a (union b c)) (union (intersection a b) (intersection a c)))) (not (subset (union (intersection a b) (intersection a c)) (intersection a (union b c)))) (not (subset (intersection a (union b c)) (union (intersection a b) (intersection a c))))))
(assert (not (and (subset (union (intersection a b) (intersection a c)) (intersection a (union b c))) (subset (intersection a (union b c)) (union (intersection a b) (intersection a c))))))
(assert (subset (union (intersection a b) (intersection a c)) (intersection a (union b c))))
(check-sat)
(exit)
