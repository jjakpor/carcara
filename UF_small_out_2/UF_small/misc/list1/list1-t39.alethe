(define-fun @quantifiers_skolemize_1 () Elem (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))))
(define-fun @quantifiers_skolemize_2 () List (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))))
(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2)))))))
(define-fun @quantifiers_skolemize_4 () List (choice ((?y2 List)) (not (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2)))))) ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2))))))) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2))))))
(assume nst39.0 (not (= @quantifiers_skolemize_1 (car (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2)))))
(assume t35 (or (not (forall ((?x Elem) (?y List)) (= ?x (car (cons ?x ?y))))) (= @quantifiers_skolemize_1 (car (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2)))))
(assume t38 (forall ((?x Elem) (?y List)) (= ?x (car (cons ?x ?y)))))
(step t35' (cl (not (forall ((?x Elem) (?y List)) (= ?x (car (cons ?x ?y))))) (= @quantifiers_skolemize_1 (car (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2)))) :rule or :premises (t35))
(step st39 (cl (= @quantifiers_skolemize_1 (car (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2)))) :rule resolution :premises (t35' t38))
(step t.end (cl) :rule resolution :premises (nst39.0 st39))
