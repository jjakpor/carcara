(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst6.0 (not (not (= (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))) (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (member @quantifiers_skolemize_4 (intersection b a)))))))
(assume nst6.1 (not (not (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))))))
(assume nst6.2 (not (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (member @quantifiers_skolemize_4 (intersection b a)))))
(step st6 (cl (not (= (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))) (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (member @quantifiers_skolemize_4 (intersection b a))))) (not (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a)))))) (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (member @quantifiers_skolemize_4 (intersection b a)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst6.0 nst6.1 nst6.2 st6))
