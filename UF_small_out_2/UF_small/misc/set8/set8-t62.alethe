(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst62.0 (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(assume nst62.1 (not (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))))
(assume t61 (or (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))))
(step st62 (cl (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) :rule or :premises (t61))
(step t.end (cl) :rule resolution :premises (nst62.0 nst62.1 st62))
