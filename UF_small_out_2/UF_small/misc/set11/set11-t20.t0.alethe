(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x b)) (member ?x (union a b))))))
(assume nt20.0 (not (= (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b)))) (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))))
(anchor :step t20 :args ((:= (?x Elem) @quantifiers_skolemize_3)))
(step st20.t0 (cl (= (or (not (member ?x b)) (member ?x (union a b))) (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))) :rule refl)
(step t20.t0 (cl (= (or (not (member ?x b)) (member ?x (union a b))) (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))) :rule trust)
(step t20 (cl (= (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b)))) (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))) :rule sko_forall)
(step t.end (cl) :rule resolution :premises (nt20.0 t20))
