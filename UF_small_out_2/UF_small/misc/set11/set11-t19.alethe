(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x b)) (member ?x (union a b))))))
(assume nst19.0 (not (not (= (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))) (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))))))
(assume nst19.1 (not (not (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))))))
(assume nst19.2 (not (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))))
(step st19 (cl (not (= (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))) (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b)))))) (not (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b)))))) (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst19.0 nst19.1 nst19.2 st19))
