(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst82.0 (not (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)))))
(assume nst82.1 (not (member @quantifiers_skolemize_3 b)))
(step st82 (cl (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) (member @quantifiers_skolemize_3 b)) :rule and_pos :args (1))
(step t.end (cl) :rule resolution :premises (nst82.0 nst82.1 st82))
