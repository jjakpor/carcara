(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst123.0 (not (not (member @quantifiers_skolemize_3 (difference c a)))))
(assume nst123.1 (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))))
(assume nst123.2 (not (not (= (member @quantifiers_skolemize_3 (difference c a)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))))))
(assume t122 (or (not (= (member @quantifiers_skolemize_3 (difference c a)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))))) (not (member @quantifiers_skolemize_3 (difference c a))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))))
(step t122' (cl (not (= (member @quantifiers_skolemize_3 (difference c a)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))))) (not (member @quantifiers_skolemize_3 (difference c a))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))) :rule or :premises (t122))
(step st123 (cl (not (member @quantifiers_skolemize_3 (difference c a))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))) (not (= (member @quantifiers_skolemize_3 (difference c a)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))))) :rule reordering :premises (t122'))
(step t.end (cl) :rule resolution :premises (nst123.0 nst123.1 nst123.2 st123))
