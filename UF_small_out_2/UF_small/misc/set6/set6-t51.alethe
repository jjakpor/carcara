(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst51.0 (not (and (subset (union (difference c a) (difference c b)) (difference c (intersection a b))) (subset (difference c (intersection a b)) (union (difference c a) (difference c b))))))
(assume nst51.1 (not (not (subset (union (difference c a) (difference c b)) (difference c (intersection a b))))))
(assume nst51.2 (not (not (subset (difference c (intersection a b)) (union (difference c a) (difference c b))))))
(step st51 (cl (and (subset (union (difference c a) (difference c b)) (difference c (intersection a b))) (subset (difference c (intersection a b)) (union (difference c a) (difference c b)))) (not (subset (union (difference c a) (difference c b)) (difference c (intersection a b)))) (not (subset (difference c (intersection a b)) (union (difference c a) (difference c b))))) :rule and_neg)
(step t.end (cl) :rule resolution :premises (nst51.0 nst51.1 nst51.2 st51))
