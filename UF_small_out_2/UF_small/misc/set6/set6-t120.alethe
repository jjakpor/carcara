(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst120.0 (not (not (or (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b))))))
(assume nst120.1 (not (member @quantifiers_skolemize_3 (difference c a))))
(assume nst120.2 (not (member @quantifiers_skolemize_3 (difference c b))))
(step st120 (cl (not (or (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b)))) (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b))) :rule or_pos)
(step t.end (cl) :rule resolution :premises (nst120.0 nst120.1 nst120.2 st120))
