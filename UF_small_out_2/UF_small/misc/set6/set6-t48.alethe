(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst48.0 (not (forall ((?x Elem)) (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst48.1 (not (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))))))
(assume t47 (or (forall ((?x Elem)) (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b))))) (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))))))
(step st48 (cl (forall ((?x Elem)) (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b))))) (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))))) :rule or :premises (t47))
(step t.end (cl) :rule resolution :premises (nst48.0 nst48.1 st48))
