(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst124.0 (not (not (= (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference c a)))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference c a)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))))))))
(assume nst124.1 (not (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference c a)))))))
(assume nst124.2 (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference c a)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))))))
(step st124 (cl (not (= (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference c a)))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference c a)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))))))) (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference c a))))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference c a)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst124.0 nst124.1 nst124.2 st124))
