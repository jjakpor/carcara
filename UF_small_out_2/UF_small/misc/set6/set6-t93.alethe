(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst93.0 (not (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b)))))))
(assume nst93.1 (not (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b)))))))
(assume nst93.2 (not (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b)))))))
(assume t89 (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))))
(assume t90 (or (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))))))
(assume t91 (or (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (not (not (member @quantifiers_skolemize_3 c)))))
(assume t92 (or (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (not (not (not (member @quantifiers_skolemize_3 (intersection a b)))))))
(step t91' (cl (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (not (not (member @quantifiers_skolemize_3 c)))) :rule or :premises (t91))
(step t92' (cl (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (not (not (not (member @quantifiers_skolemize_3 (intersection a b)))))) :rule or :premises (t92))
(step t89' (cl (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) :rule or :premises (t89))
(step t90' (cl (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))))) :rule or :premises (t90))
(step st93 (cl (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b)))))) :rule resolution :premises (t89' t90' t91' t92'))
(step t.end (cl) :rule resolution :premises (nst93.0 nst93.1 nst93.2 st93))
