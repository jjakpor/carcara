(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst240.0 (not (or (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 c)) (not (not (member @quantifiers_skolemize_4 b))))))
(assume nst240.1 (not (not (not (not (member @quantifiers_skolemize_4 b))))))
(step st240 (cl (or (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 c)) (not (not (member @quantifiers_skolemize_4 b)))) (not (not (not (member @quantifiers_skolemize_4 b))))) :rule or_neg :args (2))
(step t.end (cl) :rule resolution :premises (nst240.0 nst240.1 st240))
