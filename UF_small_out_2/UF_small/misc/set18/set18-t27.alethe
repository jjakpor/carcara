(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference b a))) (member ?x (difference b d))))))
(assume nst27.0 (not (= (not (forall ((?x Elem)) (or (not (member ?x (difference b a))) (member ?x (difference b d))))) (not (or (not (member @quantifiers_skolemize_3 (difference b a))) (member @quantifiers_skolemize_3 (difference b d)))))))
(assume t26 (= (forall ((?x Elem)) (or (not (member ?x (difference b a))) (member ?x (difference b d)))) (or (not (member @quantifiers_skolemize_3 (difference b a))) (member @quantifiers_skolemize_3 (difference b d)))))
(step st27 (cl (= (not (forall ((?x Elem)) (or (not (member ?x (difference b a))) (member ?x (difference b d))))) (not (or (not (member @quantifiers_skolemize_3 (difference b a))) (member @quantifiers_skolemize_3 (difference b d)))))) :rule cong :premises (t26))
(step t.end (cl) :rule resolution :premises (nst27.0 st27))
