(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union a b))) (member ?x c)))))
(assume nst47.0 (not (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (union a b)))))))
(assume t46 (or (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (union a b))))) (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (union a b)))))))
(step t46' (cl (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (union a b))))) (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (union a b)))))) :rule or :premises (t46))
(step st47 (cl (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (union a b)))))) :rule contraction :premises (t46'))
(step t.end (cl) :rule resolution :premises (nst47.0 st47))
