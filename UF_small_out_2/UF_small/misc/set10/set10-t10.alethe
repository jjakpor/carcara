(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union a b))) (member ?x c)))))
(assume nst10.0 (not (not (= (not (forall ((?x Elem)) (or (not (member ?x (union a b))) (member ?x c)))) (not (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)))))))
(assume nst10.1 (not (not (not (forall ((?x Elem)) (or (not (member ?x (union a b))) (member ?x c)))))))
(assume nst10.2 (not (not (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)))))
(step st10 (cl (not (= (not (forall ((?x Elem)) (or (not (member ?x (union a b))) (member ?x c)))) (not (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c))))) (not (not (forall ((?x Elem)) (or (not (member ?x (union a b))) (member ?x c))))) (not (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst10.0 nst10.1 nst10.2 st10))
