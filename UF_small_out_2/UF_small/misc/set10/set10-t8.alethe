(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union a b))) (member ?x c)))))
(assume nst8.0 (not (not (subset a c))))
(assume nst8.1 (not (member @quantifiers_skolemize_3 c)))
(assume nst8.2 (not (not (member @quantifiers_skolemize_3 a))))
(assume nst8.3 (not (not (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c)))))
(assume t7 (or (not (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c)))
(step t7' (cl (not (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c)) :rule or :premises (t7))
(step st8 (cl (not (subset a c)) (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)) (not (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c)))) :rule reordering :premises (t7'))
(step t.end (cl) :rule resolution :premises (nst8.0 nst8.1 nst8.2 nst8.3 st8))
