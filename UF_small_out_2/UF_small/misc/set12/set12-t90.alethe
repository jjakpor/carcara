(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst90.0 (not (member @quantifiers_skolemize_3 (intersection (intersection a b) c))))
(assume nst90.1 (not (not (and (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 c)))))
(assume nst90.2 (not (not (= (member @quantifiers_skolemize_3 (intersection (intersection a b) c)) (and (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 c))))))
(assume t89 (or (not (= (member @quantifiers_skolemize_3 (intersection (intersection a b) c)) (and (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)) (not (and (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 c)))))
(step t89' (cl (not (= (member @quantifiers_skolemize_3 (intersection (intersection a b) c)) (and (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)) (not (and (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 c)))) :rule or :premises (t89))
(step st90 (cl (member @quantifiers_skolemize_3 (intersection (intersection a b) c)) (not (and (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 c))) (not (= (member @quantifiers_skolemize_3 (intersection (intersection a b) c)) (and (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 c))))) :rule reordering :premises (t89'))
(step t.end (cl) :rule resolution :premises (nst90.0 nst90.1 nst90.2 st90))
