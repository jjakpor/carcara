(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst49.0 (not (not (or (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))))))
(assume nst49.1 (not (subset (intersection a (intersection b c)) (intersection (intersection a b) c))))
(assume nst49.2 (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))))
(step st49 (cl (not (or (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))) (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))) :rule or_pos)
(step t.end (cl) :rule resolution :premises (nst49.0 nst49.1 nst49.2 st49))
