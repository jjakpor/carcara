(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst0.0 (not (not (= (member @quantifiers_skolemize_4 (intersection b c)) (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 c))))))
(assume nst0.1 (not (member @quantifiers_skolemize_4 (intersection b c))))
(assume nst0.2 (not (not (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 c)))))
(step st0 (cl (not (= (member @quantifiers_skolemize_4 (intersection b c)) (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 c)))) (member @quantifiers_skolemize_4 (intersection b c)) (not (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 c)))) :rule equiv_pos1)
(step t.end (cl) :rule resolution :premises (nst0.0 nst0.1 nst0.2 st0))
