(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst97.0 (not (not (= (or (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (not (member @quantifiers_skolemize_3 a)) (not (not (member @quantifiers_skolemize_3 (difference a b))))) (or (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (not (member @quantifiers_skolemize_3 a)) (member @quantifiers_skolemize_3 (difference a b)))))))
(assume nst97.1 (not (not (or (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (not (member @quantifiers_skolemize_3 a)) (not (not (member @quantifiers_skolemize_3 (difference a b))))))))
(assume nst97.2 (not (or (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (not (member @quantifiers_skolemize_3 a)) (member @quantifiers_skolemize_3 (difference a b)))))
(step st97 (cl (not (= (or (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (not (member @quantifiers_skolemize_3 a)) (not (not (member @quantifiers_skolemize_3 (difference a b))))) (or (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (not (member @quantifiers_skolemize_3 a)) (member @quantifiers_skolemize_3 (difference a b))))) (not (or (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (not (member @quantifiers_skolemize_3 a)) (not (not (member @quantifiers_skolemize_3 (difference a b)))))) (or (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (not (member @quantifiers_skolemize_3 a)) (member @quantifiers_skolemize_3 (difference a b)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst97.0 nst97.1 nst97.2 st97))
