(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst18.0 (not (not (= (or (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 a)) (not (not (member @quantifiers_skolemize_4 b)))) (or (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 a)) (member @quantifiers_skolemize_4 b))))))
(assume nst18.1 (not (not (or (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 a)) (not (not (member @quantifiers_skolemize_4 b)))))))
(assume nst18.2 (not (or (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 a)) (member @quantifiers_skolemize_4 b))))
(step st18 (cl (not (= (or (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 a)) (not (not (member @quantifiers_skolemize_4 b)))) (or (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 a)) (member @quantifiers_skolemize_4 b)))) (not (or (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 a)) (not (not (member @quantifiers_skolemize_4 b))))) (or (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 a)) (member @quantifiers_skolemize_4 b))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst18.0 nst18.1 nst18.2 st18))
