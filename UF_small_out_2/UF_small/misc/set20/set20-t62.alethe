(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst62.0 (not (not (or (subset (intersection a b) (difference a (difference a b))) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b))))))))))
(assume nst62.1 (not (subset (intersection a b) (difference a (difference a b)))))
(assume nst62.2 (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b))))))))
(step st62 (cl (not (or (subset (intersection a b) (difference a (difference a b))) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))) (subset (intersection a b) (difference a (difference a b))) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b))))))) :rule or_pos)
(step t.end (cl) :rule resolution :premises (nst62.0 nst62.1 nst62.2 st62))
