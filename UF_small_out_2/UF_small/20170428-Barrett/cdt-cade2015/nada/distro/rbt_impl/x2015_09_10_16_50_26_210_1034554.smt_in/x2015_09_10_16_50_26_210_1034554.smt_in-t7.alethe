(assume nst7.0 (not (= (fun_app$f (rbt_sorted$ less$) (branch$ c$ t1$ k$ v$ t2$)) (and (fun_app$f (rbt_less$ less$ k$) t1$) (fun_app$f (rbt_greater$ less$ k$) t2$) (fun_app$f (rbt_sorted$ less$) t1$) (fun_app$f (rbt_sorted$ less$) t2$)))))
(assume t3 (or (not (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (and (fun_app$f (rbt_less$ less$ ?v2) ?v1) (fun_app$f (rbt_greater$ less$ ?v2) ?v4) (fun_app$f (rbt_sorted$ less$) ?v1) (fun_app$f (rbt_sorted$ less$) ?v4))))) (= (fun_app$f (rbt_sorted$ less$) (branch$ c$ t1$ k$ v$ t2$)) (and (fun_app$f (rbt_less$ less$ k$) t1$) (fun_app$f (rbt_greater$ less$ k$) t2$) (fun_app$f (rbt_sorted$ less$) t1$) (fun_app$f (rbt_sorted$ less$) t2$)))))
(assume t6 (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (and (fun_app$f (rbt_less$ less$ ?v2) ?v1) (fun_app$f (rbt_greater$ less$ ?v2) ?v4) (fun_app$f (rbt_sorted$ less$) ?v1) (fun_app$f (rbt_sorted$ less$) ?v4)))))
(step t3' (cl (not (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (and (fun_app$f (rbt_less$ less$ ?v2) ?v1) (fun_app$f (rbt_greater$ less$ ?v2) ?v4) (fun_app$f (rbt_sorted$ less$) ?v1) (fun_app$f (rbt_sorted$ less$) ?v4))))) (= (fun_app$f (rbt_sorted$ less$) (branch$ c$ t1$ k$ v$ t2$)) (and (fun_app$f (rbt_less$ less$ k$) t1$) (fun_app$f (rbt_greater$ less$ k$) t2$) (fun_app$f (rbt_sorted$ less$) t1$) (fun_app$f (rbt_sorted$ less$) t2$)))) :rule or :premises (t3))
(step st7 (cl (= (fun_app$f (rbt_sorted$ less$) (branch$ c$ t1$ k$ v$ t2$)) (and (fun_app$f (rbt_less$ less$ k$) t1$) (fun_app$f (rbt_greater$ less$ k$) t2$) (fun_app$f (rbt_sorted$ less$) t1$) (fun_app$f (rbt_sorted$ less$) t2$)))) :rule resolution :premises (t3' t6))
(step t.end (cl) :rule resolution :premises (nst7.0 st7))
