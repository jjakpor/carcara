(define-fun @quantifiers_skolemize_10 () A_list$ (choice ((?v3 A_list$)) (not (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3)))))))
(assume nst55.0 (not (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0))))))
(assume a8 (forall ((?v0 A_list$)) (=> (= xs$ (fun_app$g llist_of$ ?v0)) thesis$)))
(assume t42 (or (not (= (forall ((?v0 A_list$)) (=> (= xs$ (fun_app$g llist_of$ ?v0)) thesis$)) (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0)))))) (not (forall ((?v0 A_list$)) (=> (= xs$ (fun_app$g llist_of$ ?v0)) thesis$))) (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0))))))
(assume t54 (= (forall ((?v0 A_list$)) (=> (= xs$ (fun_app$g llist_of$ ?v0)) thesis$)) (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0))))))
(step t42' (cl (not (= (forall ((?v0 A_list$)) (=> (= xs$ (fun_app$g llist_of$ ?v0)) thesis$)) (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0)))))) (not (forall ((?v0 A_list$)) (=> (= xs$ (fun_app$g llist_of$ ?v0)) thesis$))) (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0))))) :rule or :premises (t42))
(step st55 (cl (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0))))) :rule resolution :premises (t42' t54 a8))
(step t.end (cl) :rule resolution :premises (nst55.0 st55))
