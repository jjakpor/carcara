(assume nst59.0 (not (not (fun_app$h lnull$ (fun_app$c (ltake$ n$) xs$)))))
(assume t30 (or (fun_app$h lnull$ xs$) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)) (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$)))))
(assume t31 (or (or (fun_app$h lnull$ xs$) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)))))
(assume t32 (or (or (fun_app$h lnull$ xs$) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$))))
(assume t34 (or (not (fun_app$h lnull$ (fun_app$c (ltake$ n$) xs$))) (not (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$)))) (not (= (not (fun_app$h lnull$ (fun_app$c (ltake$ n$) xs$))) (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$)))))))
(assume t44 (= (not (fun_app$h lnull$ (fun_app$c (ltake$ n$) xs$))) (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$)))))
(assume t58 (or (not (fun_app$h lnull$ (fun_app$c (ltake$ n$) xs$))) (not (or (fun_app$h lnull$ xs$) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))))))
(step t30' (cl (fun_app$h lnull$ xs$) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)) (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$)))) :rule or :premises (t30))
(step t34' (cl (not (fun_app$h lnull$ (fun_app$c (ltake$ n$) xs$))) (not (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$)))) (not (= (not (fun_app$h lnull$ (fun_app$c (ltake$ n$) xs$))) (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$)))))) :rule or :premises (t34))
(step t58' (cl (not (fun_app$h lnull$ (fun_app$c (ltake$ n$) xs$))) (not (or (fun_app$h lnull$ xs$) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))))) :rule or :premises (t58))
(step t32' (cl (or (fun_app$h lnull$ xs$) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$))) :rule or :premises (t32))
(step t31' (cl (or (fun_app$h lnull$ xs$) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)))) :rule or :premises (t31))
(step st59 (cl (not (fun_app$h lnull$ (fun_app$c (ltake$ n$) xs$)))) :rule resolution :premises (t30' t31' t32' t34' t44 t58'))
(step t.end (cl) :rule resolution :premises (nst59.0 st59))
