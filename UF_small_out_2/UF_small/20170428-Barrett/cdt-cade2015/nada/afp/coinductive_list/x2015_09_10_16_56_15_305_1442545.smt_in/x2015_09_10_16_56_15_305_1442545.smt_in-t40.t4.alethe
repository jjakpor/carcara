(assume nt40.0 (not (= (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= (fun_app$n (enat_unfold$b lnull$ uud$) lNil$) ?v0)) (not (fun_app$h lnull$ ?v1))))) (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ ?v1))))))))
(anchor :step t40 :args ((?v0 Enat$) (?v1 A_llist$) (:= (?v0 Enat$) ?v0) (:= (?v1 A_llist$) ?v1)))
(step t40.t2 (cl (= (not (= (fun_app$n (enat_unfold$b lnull$ uud$) lNil$) ?v0)) (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))))) :rule trust)
(step t40.t3 (cl (= (not (fun_app$h lnull$ ?v1)) (not (fun_app$h lnull$ ?v1)))) :rule trust)
(step st40.t4 (cl (= (and (not (= (fun_app$n (enat_unfold$b lnull$ uud$) lNil$) ?v0)) (not (fun_app$h lnull$ ?v1))) (and (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ ?v1))))) :rule cong :premises (t40.t2 t40.t3))
(step t40.t5 (cl (= (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= (fun_app$n (enat_unfold$b lnull$ uud$) lNil$) ?v0)) (not (fun_app$h lnull$ ?v1)))) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ ?v1)))))) :rule trust)
(step t40 (cl (= (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= (fun_app$n (enat_unfold$b lnull$ uud$) lNil$) ?v0)) (not (fun_app$h lnull$ ?v1))))) (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ ?v1))))))) :rule bind)
(step t.end (cl) :rule resolution :premises (nt40.0 t40))
