(assume nt34.0 (not (not (forall ((?v0 Nat$) (?v1 A_a_fun$) (?v2 A$)) (= (fun_app$ (ldropn$ ?v0) (iterates$ ?v1 ?v2)) (iterates$ ?v1 (fun_app$a (fun_app$b (fun_app$c funpow$ ?v0) ?v1) ?v2)))))))
(assume nt34.1 (not (= (fun_app$ (ldropn$ n$) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)))))
(anchor :step t34)
(assume t34.a0 (forall ((?v0 Nat$) (?v1 A_a_fun$) (?v2 A$)) (= (fun_app$ (ldropn$ ?v0) (iterates$ ?v1 ?v2)) (iterates$ ?v1 (fun_app$a (fun_app$b (fun_app$c funpow$ ?v0) ?v1) ?v2)))))
(anchor :step t34.t3 :args ((?v0 Nat$) (?v1 A_a_fun$) (?v2 A$) (:= (?v0 Nat$) ?v0) (:= (?v1 A_a_fun$) ?v1) (:= (?v2 A$) ?v2)))
(step t34.t3.t1 (cl (= ?v1 ?v1)) :rule trust)
(step t34.t3.t7 (cl (= (fun_app$a (fun_app$b (fun_app$c compow$ ?v0) ?v1) ?v2) (fun_app$a (fun_app$b (fun_app$c funpow$ ?v0) ?v1) ?v2))) :rule trust)
(step st34.t3.t8 (cl (= (iterates$ ?v1 (fun_app$a (fun_app$b (fun_app$c compow$ ?v0) ?v1) ?v2)) (iterates$ ?v1 (fun_app$a (fun_app$b (fun_app$c funpow$ ?v0) ?v1) ?v2)))) :rule cong :premises (t34.t3.t1 t34.t3.t7))
(step t34.t3.t9 (cl (= (= (fun_app$ (ldropn$ ?v0) (iterates$ ?v1 ?v2)) (iterates$ ?v1 (fun_app$a (fun_app$b (fun_app$c compow$ ?v0) ?v1) ?v2))) (= (fun_app$ (ldropn$ ?v0) (iterates$ ?v1 ?v2)) (iterates$ ?v1 (fun_app$a (fun_app$b (fun_app$c funpow$ ?v0) ?v1) ?v2))))) :rule trust)
(step t34.t3 (cl (= (forall ((?v0 Nat$) (?v1 A_a_fun$) (?v2 A$)) (= (fun_app$ (ldropn$ ?v0) (iterates$ ?v1 ?v2)) (iterates$ ?v1 (fun_app$a (fun_app$b (fun_app$c compow$ ?v0) ?v1) ?v2)))) (forall ((?v0 Nat$) (?v1 A_a_fun$) (?v2 A$)) (= (fun_app$ (ldropn$ ?v0) (iterates$ ?v1 ?v2)) (iterates$ ?v1 (fun_app$a (fun_app$b (fun_app$c funpow$ ?v0) ?v1) ?v2)))))) :rule bind)
(step t34.t5 (cl (= (fun_app$ (ldropn$ n$) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)))) :rule trust)
(step t34 (cl (not (forall ((?v0 Nat$) (?v1 A_a_fun$) (?v2 A$)) (= (fun_app$ (ldropn$ ?v0) (iterates$ ?v1 ?v2)) (iterates$ ?v1 (fun_app$a (fun_app$b (fun_app$c funpow$ ?v0) ?v1) ?v2))))) (= (fun_app$ (ldropn$ n$) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)))) :rule subproof :discharge (t34.a0))
(step t.end (cl) :rule resolution :premises (nt34.0 nt34.1 t34))
