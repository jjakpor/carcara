(assume nst2.0 (not (not (or (not (consistent$ t$)) (not (member$ a$ (alphabet$ t$))) (not (member$ d$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$))) (not (fun_app$b (less_eq$ (depth$ t$ a$)) (depth$ t$ d$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$))))))
(assume nst2.1 (not (not (consistent$ t$))))
(assume nst2.2 (not (not (member$ a$ (alphabet$ t$)))))
(assume nst2.3 (not (not (member$ d$ (alphabet$ t$)))))
(assume nst2.4 (not (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$)))))
(assume nst2.5 (not (not (fun_app$b (less_eq$ (depth$ t$ a$)) (depth$ t$ d$)))))
(assume nst2.6 (not (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$))))
(step st2 (cl (not (or (not (consistent$ t$)) (not (member$ a$ (alphabet$ t$))) (not (member$ d$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$))) (not (fun_app$b (less_eq$ (depth$ t$ a$)) (depth$ t$ d$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$)))) (not (consistent$ t$)) (not (member$ a$ (alphabet$ t$))) (not (member$ d$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$))) (not (fun_app$b (less_eq$ (depth$ t$ a$)) (depth$ t$ d$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$))) :rule or_pos)
(step t.end (cl) :rule resolution :premises (nst2.0 nst2.1 nst2.2 nst2.3 nst2.4 nst2.5 nst2.6 st2))
