(assume nt37.0 (not (not (not (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$))))))
(assume nt37.1 (not (not (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$)))))))
(assume nt37.2 (not (not (= (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))))
(assume nt37.3 (not (not (= (fun_app$f (swapSyms$ t$ a$) d$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))))
(assume nt37.4 (not (not (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$)))))
(anchor :step t37)
(assume t37.a0 (not (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$))))
(assume t37.a1 (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$)))))
(assume t37.a2 (= (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))
(assume t37.a3 (= (fun_app$f (swapSyms$ t$ a$) d$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))
(step t37.t31 (cl (= (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))))) :rule trust)
(step t37.t32 (cl (= (cost$ t$) (cost$ t$))) :rule trust)
(step st37.t33 (cl (= (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)))) :rule cong :premises (t37.t31 t37.t32))
(step t37.t40 (cl (not (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$)))) :rule trust)
(step t37 (cl (not (not (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)))) (not (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (not (= (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$)))) (not (= (fun_app$f (swapSyms$ t$ a$) d$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$)))) (not (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$)))) :rule subproof :discharge (t37.a0 t37.a1 t37.a2 t37.a3))
(step t.end (cl) :rule resolution :premises (nt37.0 nt37.1 nt37.2 nt37.3 nt37.4 t37))
