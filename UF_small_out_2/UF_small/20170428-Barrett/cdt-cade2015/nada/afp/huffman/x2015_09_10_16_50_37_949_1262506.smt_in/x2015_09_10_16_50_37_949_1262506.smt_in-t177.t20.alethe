(assume nt177.0 (not (not (= t$ (fun_app$f (swapSyms$ t$ b$) b$)))))
(assume nt177.1 (not (not (= b$ c$))))
(assume nt177.2 (not (not (= (fun_app$f (swapSyms$ t$ b$) c$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$)))))))
(assume nt177.3 (not (not (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$)))))))
(assume nt177.4 (not (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$))))
(anchor :step t177)
(assume t177.a0 (= t$ (fun_app$f (swapSyms$ t$ b$) b$)))
(assume t177.a1 (= b$ c$))
(assume t177.a2 (= (fun_app$f (swapSyms$ t$ b$) c$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$)))))
(assume t177.a3 (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$)))))
(step t177.t2 (cl (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ (fun_app$f (swapSyms$ t$ b$) c$)))) :rule trust)
(step t177.t19 (cl (= (cost$ (fun_app$f (swapSyms$ t$ b$) c$)) (cost$ t$))) :rule trust)
(step st177.t20 (cl (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$))) :rule trans :premises (t177.t2 t177.t19))
(step t177.t20 (cl (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$))) :rule trust)
(step t177 (cl (not (= t$ (fun_app$f (swapSyms$ t$ b$) b$))) (not (= b$ c$)) (not (= (fun_app$f (swapSyms$ t$ b$) c$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (not (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$))) :rule subproof :discharge (t177.a0 t177.a1 t177.a2 t177.a3))
(step t.end (cl) :rule resolution :premises (nt177.0 nt177.1 nt177.2 nt177.3 nt177.4 t177))
