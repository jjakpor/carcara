(assume t52 (or (or (not car) (not clk)) (not (not clk))))
(assume t53 (or (or (or (not car) (not clk)) (not (not clk))) (not (or (not car) (not clk)))))
(assume t54 (or (or (or (not car) (not clk)) (not (not clk))) (not (not (not clk)))))
(assume nt55.0 (not (or (or (not car) (not clk)) (not (not clk)))))
(assume nt55.1 (not (or (or (not car) (not clk)) (not (not clk)))))
(step t54' (cl (or (or (not car) (not clk)) (not (not clk))) (not (not (not clk)))) :rule or :premises (t54))
(step t52' (cl (or (not car) (not clk)) (not (not clk))) :rule or :premises (t52))
(step t53' (cl (or (or (not car) (not clk)) (not (not clk))) (not (or (not car) (not clk)))) :rule or :premises (t53))
(step t55 (cl (or (or (not car) (not clk)) (not (not clk))) (or (or (not car) (not clk)) (not (not clk)))) :rule resolution :premises (t52' t53' t54'))
(step t.end (cl) :rule resolution :premises (nt55.0 nt55.1 t55))
