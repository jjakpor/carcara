(assume t818 (or (and (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))) (= e1 (op e3 (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3))))) (not (= e1 (op e3 (op (op e1 e3) e3))))))
(assume t830 (or (not (and (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))) (= e1 (op e3 (op (op e1 e3) e3))))) (= (op e3 e1) (op (op e1 e3) e3))))
(assume nt831.0 (not (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))))))
(assume nt831.1 (not (not (= e1 (op e3 (op (op e1 e3) e3))))))
(assume nt831.2 (not (= (op e3 e1) (op (op e1 e3) e3))))
(step t830' (cl (not (and (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))) (= e1 (op e3 (op (op e1 e3) e3))))) (= (op e3 e1) (op (op e1 e3) e3))) :rule or :premises (t830))
(step t818' (cl (and (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))) (= e1 (op e3 (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3))))) (not (= e1 (op e3 (op (op e1 e3) e3))))) :rule or :premises (t818))
(step t831 (cl (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3))))) (not (= e1 (op e3 (op (op e1 e3) e3)))) (= (op e3 e1) (op (op e1 e3) e3))) :rule resolution :premises (t818' t830'))
(step t.end (cl) :rule resolution :premises (nt831.0 nt831.1 nt831.2 t831))
