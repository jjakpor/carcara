(assume t1142 (or (not (= (op (op e1 e3) e1) (op e3 (op e1 e3)))) (not (= (op e1 e3) (op e3 (op e3 (op e1 e3))))) (= (op e1 e3) (op e3 (op (op e1 e3) e1)))))
(assume t1143 (or (not (and (= (op (op e1 e3) e1) (op e3 (op e1 e3))) (= (op e1 e3) (op e3 (op e3 (op e1 e3)))))) (= (op (op e1 e3) e1) (op e3 (op e1 e3)))))
(assume t1144 (or (not (and (= (op (op e1 e3) e1) (op e3 (op e1 e3))) (= (op e1 e3) (op e3 (op e3 (op e1 e3)))))) (= (op e1 e3) (op e3 (op e3 (op e1 e3))))))
(assume nt1145.0 (not (= (op e1 e3) (op e3 (op (op e1 e3) e1)))))
(assume nt1145.1 (not (not (and (= (op (op e1 e3) e1) (op e3 (op e1 e3))) (= (op e1 e3) (op e3 (op e3 (op e1 e3))))))))
(assume nt1145.2 (not (not (and (= (op (op e1 e3) e1) (op e3 (op e1 e3))) (= (op e1 e3) (op e3 (op e3 (op e1 e3))))))))
(step t1142' (cl (not (= (op (op e1 e3) e1) (op e3 (op e1 e3)))) (not (= (op e1 e3) (op e3 (op e3 (op e1 e3))))) (= (op e1 e3) (op e3 (op (op e1 e3) e1)))) :rule or :premises (t1142))
(step t1144' (cl (not (and (= (op (op e1 e3) e1) (op e3 (op e1 e3))) (= (op e1 e3) (op e3 (op e3 (op e1 e3)))))) (= (op e1 e3) (op e3 (op e3 (op e1 e3))))) :rule or :premises (t1144))
(step t1143' (cl (not (and (= (op (op e1 e3) e1) (op e3 (op e1 e3))) (= (op e1 e3) (op e3 (op e3 (op e1 e3)))))) (= (op (op e1 e3) e1) (op e3 (op e1 e3)))) :rule or :premises (t1143))
(step t1145 (cl (= (op e1 e3) (op e3 (op (op e1 e3) e1))) (not (and (= (op (op e1 e3) e1) (op e3 (op e1 e3))) (= (op e1 e3) (op e3 (op e3 (op e1 e3)))))) (not (and (= (op (op e1 e3) e1) (op e3 (op e1 e3))) (= (op e1 e3) (op e3 (op e3 (op e1 e3))))))) :rule resolution :premises (t1142' t1143' t1144'))
(step t.end (cl) :rule resolution :premises (nt1145.0 nt1145.1 nt1145.2 t1145))
