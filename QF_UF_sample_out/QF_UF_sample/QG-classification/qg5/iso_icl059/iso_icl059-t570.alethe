(assume t569 (= (= (= (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))) false) (not (= (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))))))
(assume nt570.0 (not (= (= (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))) false)))
(assume nt570.1 (not (not (not (= (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0)))))))
(step t570 (cl (= (= (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))) false) (not (not (= (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0)))))) :rule equiv2 :premises (t569))
(step t.end (cl) :rule resolution :premises (nt570.0 nt570.1 t570))
