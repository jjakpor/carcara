(assume t636 (and (and (and (and (and (and (and (and (and (not (= (op e0 e0) (op e1 e0))) (not (= (op e0 e0) (op e2 e0)))) (not (= (op e0 e0) (op e3 e0)))) (not (= (op e0 e0) (op e4 e0)))) (not (= (op e1 e0) (op e2 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0)))) (not (= (op e3 e0) (op e4 e0)))))
(assume nt637.0 (not (and (and (and (and (and (and (and (and (not (= (op e0 e0) (op e1 e0))) (not (= (op e0 e0) (op e2 e0)))) (not (= (op e0 e0) (op e3 e0)))) (not (= (op e0 e0) (op e4 e0)))) (not (= (op e1 e0) (op e2 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0))))))
(step t637 (cl (and (and (and (and (and (and (and (and (not (= (op e0 e0) (op e1 e0))) (not (= (op e0 e0) (op e2 e0)))) (not (= (op e0 e0) (op e3 e0)))) (not (= (op e0 e0) (op e4 e0)))) (not (= (op e1 e0) (op e2 e0)))) (not (= (op e1 e0) (op e3 e0)))) (not (= (op e1 e0) (op e4 e0)))) (not (= (op e2 e0) (op e3 e0)))) (not (= (op e2 e0) (op e4 e0))))) :rule and :premises (t636))
(step t.end (cl) :rule resolution :premises (nt637.0 t637))
