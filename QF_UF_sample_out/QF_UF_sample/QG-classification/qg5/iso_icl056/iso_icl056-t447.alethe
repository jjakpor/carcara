(assume t401 (or (= (op e1 (op e1 e1)) (op (op e1 e1) (op e1 e1))) (= (op e1 e1) (op e1 (op e1 e1))) (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op e1 (op e1 e1)) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))))
(assume t408 (not (= (op e1 (op e1 e1)) (op (op e1 e1) (op e1 e1)))))
(assume t420 (not (= (op e1 e1) (op e1 (op e1 e1)))))
(assume t357 (not (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))))
(assume t446 (not (= (op e1 (op e1 e1)) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))))))
(assume nt447.0 (not (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))))
(step t401' (cl (= (op e1 (op e1 e1)) (op (op e1 e1) (op e1 e1))) (= (op e1 e1) (op e1 (op e1 e1))) (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op e1 (op e1 e1)) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))) :rule or :premises (t401))
(step t447 (cl (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))) :rule resolution :premises (t401' t408 t420 t357 t446))
(step t.end (cl) :rule resolution :premises (nt447.0 t447))
