(assume t858 (or (= (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0))) false) (not (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0)))))))
(assume t859 (or (not (not (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0)))))) (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0)))))
(assume nt860.0 (not (= (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0))) false)))
(assume nt860.1 (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0)))))
(step t859' (cl (not (not (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0)))))) (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0)))) :rule or :premises (t859))
(step t858' (cl (= (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0))) false) (not (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0)))))) :rule or :premises (t858))
(step t860 (cl (= (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0))) false) (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0)))) :rule resolution :premises (t858' t859'))
(step t.end (cl) :rule resolution :premises (nt860.0 nt860.1 t860))
