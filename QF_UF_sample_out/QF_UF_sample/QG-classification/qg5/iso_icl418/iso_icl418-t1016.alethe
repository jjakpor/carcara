(assume t1010 (or (= (op e3 (op e4 e3)) (op (op e4 e3) e3)) (not (and (= (op (op e4 e3) e4) (op e4 (op e4 e3))) (= (op e3 (op e4 e3)) (op (op e4 e3) e3)) (= (op (op e3 e4) (op e4 e3)) (op (op e4 e3) (op e3 e4))) (= (op (op e4 e3) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) (op e4 e3)))))))
(assume t1015 (not (= (op e3 (op e4 e3)) (op (op e4 e3) e3))))
(assume nt1016.0 (not (not (and (= (op (op e4 e3) e4) (op e4 (op e4 e3))) (= (op e3 (op e4 e3)) (op (op e4 e3) e3)) (= (op (op e3 e4) (op e4 e3)) (op (op e4 e3) (op e3 e4))) (= (op (op e4 e3) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) (op e4 e3)))))))
(step t1010' (cl (= (op e3 (op e4 e3)) (op (op e4 e3) e3)) (not (and (= (op (op e4 e3) e4) (op e4 (op e4 e3))) (= (op e3 (op e4 e3)) (op (op e4 e3) e3)) (= (op (op e3 e4) (op e4 e3)) (op (op e4 e3) (op e3 e4))) (= (op (op e4 e3) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) (op e4 e3)))))) :rule or :premises (t1010))
(step t1016 (cl (not (and (= (op (op e4 e3) e4) (op e4 (op e4 e3))) (= (op e3 (op e4 e3)) (op (op e4 e3) e3)) (= (op (op e3 e4) (op e4 e3)) (op (op e4 e3) (op e3 e4))) (= (op (op e4 e3) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) (op e4 e3)))))) :rule resolution :premises (t1010' t1015))
(step t.end (cl) :rule resolution :premises (nt1016.0 t1016))
