(assume t900 (= (and (= (op e4 e4) (op e4 e4)) (= (op e4 e3) (op e3 e4)) (= (op e4 e2) (op e2 e4)) (= (op e4 e0) (op e0 e4)) (= (op e4 e1) (op e1 e4))) (and true (= (op e3 e4) (op e4 e3)) (= (op e2 e4) (op e4 e2)) (= (op e0 e4) (op e4 e0)) (= (op e1 e4) (op e4 e1)))))
(assume t901 (= (and true (= (op e3 e4) (op e4 e3)) (= (op e2 e4) (op e4 e2)) (= (op e0 e4) (op e4 e0)) (= (op e1 e4) (op e4 e1))) (and (= (op e3 e4) (op e4 e3)) (= (op e2 e4) (op e4 e2)) (= (op e0 e4) (op e4 e0)) (= (op e1 e4) (op e4 e1)))))
(assume nt902.0 (not (= (and (= (op e4 e4) (op e4 e4)) (= (op e4 e3) (op e3 e4)) (= (op e4 e2) (op e2 e4)) (= (op e4 e0) (op e0 e4)) (= (op e4 e1) (op e1 e4))) (and (= (op e3 e4) (op e4 e3)) (= (op e2 e4) (op e4 e2)) (= (op e0 e4) (op e4 e0)) (= (op e1 e4) (op e4 e1))))))
(step t902 (cl (= (and (= (op e4 e4) (op e4 e4)) (= (op e4 e3) (op e3 e4)) (= (op e4 e2) (op e2 e4)) (= (op e4 e0) (op e0 e4)) (= (op e4 e1) (op e1 e4))) (and (= (op e3 e4) (op e4 e3)) (= (op e2 e4) (op e4 e2)) (= (op e0 e4) (op e4 e0)) (= (op e1 e4) (op e4 e1))))) :rule trans :premises (t900 t901))
(step t.end (cl) :rule resolution :premises (nt902.0 t902))
