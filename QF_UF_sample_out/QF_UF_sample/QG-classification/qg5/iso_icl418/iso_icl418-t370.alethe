(assume nt370.0 (not (not (= (or (or (or (or (= (op e0 e3) e0) (= (op e0 e3) e1)) (= (op e0 e3) e2)) (= (op e0 e3) e3)) (= (op e0 e3) e4)) (or (= e4 (op (op (op e4 e3) (op e4 e3)) e3)) (= e3 (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e3)) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e4 e3) (op (op (op e4 e3) (op e4 e3)) e3)))))))
(assume nt370.1 (not (not (or (or (or (or (= (op e0 e3) e0) (= (op e0 e3) e1)) (= (op e0 e3) e2)) (= (op e0 e3) e3)) (= (op e0 e3) e4)))))
(assume nt370.2 (not (or (= e4 (op (op (op e4 e3) (op e4 e3)) e3)) (= e3 (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e3)) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e4 e3) (op (op (op e4 e3) (op e4 e3)) e3)))))
(step t370 (cl (not (= (or (or (or (or (= (op e0 e3) e0) (= (op e0 e3) e1)) (= (op e0 e3) e2)) (= (op e0 e3) e3)) (= (op e0 e3) e4)) (or (= e4 (op (op (op e4 e3) (op e4 e3)) e3)) (= e3 (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e3)) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e4 e3) (op (op (op e4 e3) (op e4 e3)) e3))))) (not (or (or (or (or (= (op e0 e3) e0) (= (op e0 e3) e1)) (= (op e0 e3) e2)) (= (op e0 e3) e3)) (= (op e0 e3) e4))) (or (= e4 (op (op (op e4 e3) (op e4 e3)) e3)) (= e3 (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e3)) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e4 e3) (op (op (op e4 e3) (op e4 e3)) e3)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nt370.0 nt370.1 nt370.2 t370))
