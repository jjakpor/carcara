(assume t343 (or (not (= (= (op e0 e1) (op e1 e0)) (= (op e1 (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1)))) (op (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1))) e1)))) (not (= (op e0 e1) (op e1 e0))) (= (op e1 (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1)))) (op (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1))) e1))))
(assume t346 (= (= (op e0 e1) (op e1 e0)) (= (op e1 (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1)))) (op (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1))) e1))))
(assume t349 (= (op e0 e1) (op e1 e0)))
(assume nt350.0 (not (= (op e1 (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1)))) (op (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1))) e1))))
(step t343' (cl (not (= (= (op e0 e1) (op e1 e0)) (= (op e1 (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1)))) (op (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1))) e1)))) (not (= (op e0 e1) (op e1 e0))) (= (op e1 (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1)))) (op (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1))) e1))) :rule or :premises (t343))
(step t350 (cl (= (op e1 (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1)))) (op (op (op (op e1 e1) (op e1 e1)) (op (op e1 e1) (op e1 e1))) e1))) :rule resolution :premises (t343' t346 t349))
(step t.end (cl) :rule resolution :premises (nt350.0 t350))
