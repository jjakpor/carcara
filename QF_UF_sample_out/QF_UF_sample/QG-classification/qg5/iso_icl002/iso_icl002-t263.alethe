(assume t256 (or (not (= (= (op e3 e4) (op e4 e3)) (= (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0))))) (not (= (op e3 e4) (op e4 e3))) (= (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0)))))
(assume t259 (= (= (op e3 e4) (op e4 e3)) (= (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0)))))
(assume t262 (= (op e3 e4) (op e4 e3)))
(assume nt263.0 (not (= (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0)))))
(step t256' (cl (not (= (= (op e3 e4) (op e4 e3)) (= (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0))))) (not (= (op e3 e4) (op e4 e3))) (= (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0)))) :rule or :premises (t256))
(step t263 (cl (= (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0)))) :rule resolution :premises (t256' t259 t262))
(step t.end (cl) :rule resolution :premises (nt263.0 t263))
