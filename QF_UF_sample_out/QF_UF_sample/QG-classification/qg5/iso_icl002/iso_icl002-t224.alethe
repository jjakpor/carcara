(assume t223 (or (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op e0 (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))
(assume nt224.0 (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))))
(assume nt224.1 (not (= (op e0 e0) (op e0 (op e0 e0)))))
(assume nt224.2 (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))
(assume nt224.3 (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0)))))
(assume nt224.4 (not (= (op e0 (op e0 e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0)))))
(step t223' (cl (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op e0 (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))) :rule or :premises (t223))
(step t224 (cl (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))) (= (op e0 e0) (op e0 (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))) (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 (op e0 e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0)))) :rule reordering :premises (t223'))
(step t.end (cl) :rule resolution :premises (nt224.0 nt224.1 nt224.2 nt224.3 nt224.4 t224))
