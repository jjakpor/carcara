(assume t80 (and (or (or (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= (op e0 e0) unit))) (and (= (op e1 (op e1 e0)) e0) (not (= (op e1 e0) unit)))) (and (= (op e2 (op e2 e0)) e0) (not (= (op e2 e0) unit)))) (and (= (op e3 (op e3 e0)) e0) (not (= (op e3 e0) unit)))) (and (= (op e4 (op e4 e0)) e0) (not (= (op e4 e0) unit)))) (and (= (op e5 (op e5 e0)) e0) (not (= (op e5 e0) unit)))) (or (or (or (or (or (and (= (op e0 (op e0 e1)) e1) (not (= (op e0 e1) unit))) (and (= (op e1 (op e1 e1)) e1) (not (= (op e1 e1) unit)))) (and (= (op e2 (op e2 e1)) e1) (not (= (op e2 e1) unit)))) (and (= (op e3 (op e3 e1)) e1) (not (= (op e3 e1) unit)))) (and (= (op e4 (op e4 e1)) e1) (not (= (op e4 e1) unit)))) (and (= (op e5 (op e5 e1)) e1) (not (= (op e5 e1) unit))))))
(assume nt81.0 (not (or (or (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= (op e0 e0) unit))) (and (= (op e1 (op e1 e0)) e0) (not (= (op e1 e0) unit)))) (and (= (op e2 (op e2 e0)) e0) (not (= (op e2 e0) unit)))) (and (= (op e3 (op e3 e0)) e0) (not (= (op e3 e0) unit)))) (and (= (op e4 (op e4 e0)) e0) (not (= (op e4 e0) unit)))) (and (= (op e5 (op e5 e0)) e0) (not (= (op e5 e0) unit))))))
(step t81 (cl (or (or (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= (op e0 e0) unit))) (and (= (op e1 (op e1 e0)) e0) (not (= (op e1 e0) unit)))) (and (= (op e2 (op e2 e0)) e0) (not (= (op e2 e0) unit)))) (and (= (op e3 (op e3 e0)) e0) (not (= (op e3 e0) unit)))) (and (= (op e4 (op e4 e0)) e0) (not (= (op e4 e0) unit)))) (and (= (op e5 (op e5 e0)) e0) (not (= (op e5 e0) unit))))) :rule and :premises (t80) :args (0))
(step t.end (cl) :rule resolution :premises (nt81.0 t81))
