(assume t168 (or (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0)))) (not (= e3 (op e3 e0))) (not (= e0 (op e3 (op e3 e0))))))
(assume t180 (or (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0))))) (= e3 (op e3 (op e3 e3)))))
(assume nt181.0 (not (not (= e3 (op e3 e0)))))
(assume nt181.1 (not (not (= e0 (op e3 (op e3 e0))))))
(assume nt181.2 (not (= e3 (op e3 (op e3 e3)))))
(step t168' (cl (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0)))) (not (= e3 (op e3 e0))) (not (= e0 (op e3 (op e3 e0))))) :rule or :premises (t168))
(step t180' (cl (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0))))) (= e3 (op e3 (op e3 e3)))) :rule or :premises (t180))
(step t181 (cl (not (= e3 (op e3 e0))) (not (= e0 (op e3 (op e3 e0)))) (= e3 (op e3 (op e3 e3)))) :rule resolution :premises (t168' t180'))
(step t.end (cl) :rule resolution :premises (nt181.0 nt181.1 nt181.2 t181))
