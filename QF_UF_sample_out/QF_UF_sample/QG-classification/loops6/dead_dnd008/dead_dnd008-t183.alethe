(assume t170 (or (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0)))) (not (= e3 (op e3 e0))) (not (= e0 (op e3 (op e3 e0))))))
(assume t182 (or (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0))))) (= e3 (op e3 (op e3 e3)))))
(assume nt183.0 (not (not (= e3 (op e3 e0)))))
(assume nt183.1 (not (not (= e0 (op e3 (op e3 e0))))))
(assume nt183.2 (not (= e3 (op e3 (op e3 e3)))))
(step t170' (cl (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0)))) (not (= e3 (op e3 e0))) (not (= e0 (op e3 (op e3 e0))))) :rule or :premises (t170))
(step t182' (cl (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0))))) (= e3 (op e3 (op e3 e3)))) :rule or :premises (t182))
(step t183 (cl (not (= e3 (op e3 e0))) (not (= e0 (op e3 (op e3 e0)))) (= e3 (op e3 (op e3 e3)))) :rule resolution :premises (t170' t182'))
(step t.end (cl) :rule resolution :premises (nt183.0 nt183.1 nt183.2 t183))
