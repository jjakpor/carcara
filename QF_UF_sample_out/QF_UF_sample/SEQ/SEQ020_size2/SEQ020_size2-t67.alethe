(assume t64 (or (not (not (= (f6 c_1) (f5 c_1)))) (not (= c_0 (f6 c_1))) (not (= c_0 (f5 c_1)))))
(assume t65 (or (not (and (not (= (f6 c_1) (f5 c_1))) (= c_0 (f6 c_1)))) (not (= (f6 c_1) (f5 c_1)))))
(assume t66 (or (not (and (not (= (f6 c_1) (f5 c_1))) (= c_0 (f6 c_1)))) (= c_0 (f6 c_1))))
(assume nt67.0 (not (not (= c_0 (f5 c_1)))))
(assume nt67.1 (not (not (and (not (= (f6 c_1) (f5 c_1))) (= c_0 (f6 c_1))))))
(assume nt67.2 (not (not (and (not (= (f6 c_1) (f5 c_1))) (= c_0 (f6 c_1))))))
(step t66' (cl (not (and (not (= (f6 c_1) (f5 c_1))) (= c_0 (f6 c_1)))) (= c_0 (f6 c_1))) :rule or :premises (t66))
(step t64' (cl (not (not (= (f6 c_1) (f5 c_1)))) (not (= c_0 (f6 c_1))) (not (= c_0 (f5 c_1)))) :rule or :premises (t64))
(step t65' (cl (not (and (not (= (f6 c_1) (f5 c_1))) (= c_0 (f6 c_1)))) (not (= (f6 c_1) (f5 c_1)))) :rule or :premises (t65))
(step t67 (cl (not (= c_0 (f5 c_1))) (not (and (not (= (f6 c_1) (f5 c_1))) (= c_0 (f6 c_1)))) (not (and (not (= (f6 c_1) (f5 c_1))) (= c_0 (f6 c_1))))) :rule resolution :premises (t64' t65' t66'))
(step t.end (cl) :rule resolution :premises (nt67.0 nt67.1 nt67.2 t67))
