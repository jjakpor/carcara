unsat
(assume a0 (forall ((env env) (v var_alpha) (x alpha)) (= (evalV_alpha (push_alpha env v x) v) x)))
(assume a1 (forall ((env env) (v var_alpha) (w var_alpha) (x alpha)) (=> (not (= v w)) (= (evalV_alpha (push_alpha env w x) v) (evalV_alpha env v)))))
(assume a2 (forall ((env env) (v var_alpha)) (= (eval_alpha env (inj_alpha v)) (evalV_alpha env v))))
(assume a3 (forall ((env env)) (= (eval_alpha env aR) a)))
(assume a4 (forall ((env env)) (= (eval_alpha env bR) b)))
(assume a5 (forall ((env env)) (= (eval_alpha env cR) c)))
(assume a6 (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))))
(assume a7 (forall ((env env) (t0 term_alpha)) (= (models env (pR t0)) (p (eval_alpha env t0)))))
(assume a8 (forall ((env env) (t0 term_alpha)) (= (models env (qR t0)) (q (eval_alpha env t0)))))
(assume a9 (forall ((env env) (t0 term_alpha)) (= (models env (rR t0)) (r (eval_alpha env t0)))))
(assume a10 (forall ((env env)) (= (models env falseR) false)))
(assume a11 (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))))
(assume a12 (forall ((env env) (phi form) (psi form)) (= (models env (orR phi psi)) (or (models env phi) (models env psi)))))
(assume a13 (forall ((env env) (phi form) (v var_alpha)) (= (models env (forallR_alpha v phi)) (forall ((x alpha)) (models (push_alpha env v x) phi)))))
(assume a14 (! (not (! (models empty (orR (! (notR (! (orR (! (notR (! (orR (! (notR (pR aR)) :named @p_1) (! (qR bR) :named @p_2)) :named @p_8)) :named @p_9) (! (notR (! (orR (! (notR (! (notR @p_2) :named @p_3)) :named @p_4) @p_1) :named @p_5)) :named @p_6)) :named @p_13)) :named @p_14) (! (notR (! (orR (! (notR @p_9) :named @p_10) (! (notR @p_6) :named @p_7)) :named @p_11)) :named @p_12))) :named @p_15)) :named @p_16))
(step t0 (cl (! (not (! (= (! (not (! (models empty @p_2) :named @p_18)) :named @p_19) (! (models empty @p_3) :named @p_17)) :named @p_20)) :named @p_99) @p_19 (! (not @p_17) :named @p_27)) :rule equiv_pos1)
(step t1 (cl @p_19 @p_27 @p_99) :rule reordering :premises (t0))
(step t2 (cl (! (not (! (or (! (models empty @p_1) :named @p_31) @p_18) :named @p_84)) :named @p_86) @p_31 @p_18) :rule or_pos)
(step t3 (cl @p_31 @p_18 @p_86) :rule reordering :premises (t2))
(step t4 (cl (! (or (! (models empty @p_4) :named @p_28) @p_31) :named @p_32) (! (not @p_31) :named @p_92)) :rule or_neg :args (1))
(step t5 (cl @p_92 @p_32) :rule reordering :premises (t4))
(step t6 (cl (! (not (! (= (! (models empty @p_5) :named @p_34) @p_32) :named @p_35)) :named @p_105) @p_34 (! (not @p_32) :named @p_33)) :rule equiv_pos1)
(step t7 (cl @p_34 @p_33 @p_105) :rule reordering :premises (t6))
(step t8 (cl (! (not (! (= (! (models empty @p_6) :named @p_38) (! (not @p_34) :named @p_37)) :named @p_39)) :named @p_93) (! (not @p_38) :named @p_88) @p_37) :rule equiv_pos2)
(step t9 (cl @p_88 @p_37 @p_93) :rule reordering :premises (t8))
(step t10 (cl (! (not (! (or (! (models empty @p_9) :named @p_40) @p_38) :named @p_41)) :named @p_107) @p_40 @p_38) :rule or_pos)
(step t11 (cl @p_40 @p_38 @p_107) :rule reordering :premises (t10))
(step t12 (cl @p_33 @p_28 @p_31) :rule or_pos)
(step t13 (cl @p_31 @p_28 @p_33) :rule reordering :premises (t12))
(step t14 (cl (! (not (! (= @p_28 @p_27) :named @p_29)) :named @p_106) (! (not @p_28) :named @p_30) @p_27) :rule equiv_pos2)
(step t15 (cl @p_30 @p_27 @p_106) :rule reordering :premises (t14))
(step t16 (cl (or (! (not (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) :named @p_21) @p_29)) :rule forall_inst :args (empty @p_3))
(step t17 (cl @p_21 @p_29) :rule or :premises (t16))
(step t18 (cl @p_29) :rule resolution :premises (t17 a11))
(step t19 (cl @p_105 @p_37 @p_32) :rule equiv_pos2)
(step t20 (cl @p_37 @p_32 @p_105) :rule reordering :premises (t19))
(step t21 (cl (or (! (not (forall ((env env) (phi form) (psi form)) (= (models env (orR phi psi)) (or (models env phi) (models env psi))))) :named @p_36) @p_35)) :rule forall_inst :args (empty @p_4 @p_1))
(step t22 (cl @p_36 @p_35) :rule or :premises (t21))
(step t23 (cl @p_35) :rule resolution :premises (t22 a12))
(step t24 (cl (not (! (= (! (or @p_99 (! (not @p_19) :named @p_101) @p_17) :named @p_102) (! (or @p_99 @p_18 @p_17) :named @p_100)) :named @p_103)) (not @p_102) @p_100) :rule equiv_pos2)
(step t25 (cl (= @p_99 @p_99)) :rule refl)
(step t26 (cl (! (= @p_101 @p_18) :named @p_104)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_104 1 5))
(step t27 (cl (= @p_17 @p_17)) :rule refl)
(step t28 (cl @p_103) :rule cong :premises (t25 t26 t27))
(step t29 (cl @p_99 @p_101 @p_17) :rule equiv_pos2)
(step t30 (cl @p_102 (not @p_99)) :rule or_neg :args (0))
(step t31 (cl @p_102 (not @p_101)) :rule or_neg :args (1))
(step t32 (cl @p_102 @p_27) :rule or_neg :args (2))
(step t33 (cl @p_102 @p_102 @p_102) :rule resolution :premises (t29 t30 t31 t32))
(step t34 (cl @p_102) :rule contraction :premises (t33))
(step t35 (cl @p_100) :rule resolution :premises (t24 t28 t34))
(step t36 (cl @p_99 @p_18 @p_17) :rule or :premises (t35))
(step t37 (cl @p_18 @p_17 @p_99) :rule reordering :premises (t36))
(step t38 (cl (not (! (= (! (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (! (= @p_17 @p_19) :named @p_23)) :named @p_24) (! (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) @p_20) :named @p_22)) :named @p_25)) (not @p_24) @p_22) :rule equiv_pos2)
(step t39 (cl (= (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))))) :rule refl)
(step t40 (cl (! (= @p_23 @p_20) :named @p_26)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_26 1 5))
(step t41 (cl @p_25) :rule cong :premises (t39 t40))
(step t42 (cl @p_24 (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) :rule implies_neg1)
(anchor :step t43)
(assume t43.a0 (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))))
(step t43.t0 (cl (or @p_21 @p_23)) :rule forall_inst :args (empty @p_2))
(step t43.t1 (cl @p_21 @p_23) :rule or :premises (t43.t0))
(step t43.t2 (cl @p_23) :rule resolution :premises (t43.t1 t43.a0))
(step t43 (cl @p_21 @p_23) :rule subproof :discharge (t43.a0))
(step t44 (cl @p_24 @p_23) :rule resolution :premises (t42 t43))
(step t45 (cl @p_24 (not @p_23)) :rule implies_neg2)
(step t46 (cl @p_24 @p_24) :rule resolution :premises (t44 t45))
(step t47 (cl @p_24) :rule contraction :premises (t46))
(step t48 (cl @p_22) :rule resolution :premises (t38 t41 t47))
(step t49 (cl @p_21 @p_20) :rule implies :premises (t48))
(step t50 (cl @p_20) :rule resolution :premises (t49 a11))
(step t51 (cl (not (! (= (! (or @p_93 @p_38 (! (not @p_37) :named @p_95)) :named @p_96) (! (or @p_93 @p_38 @p_34) :named @p_94)) :named @p_97)) (not @p_96) @p_94) :rule equiv_pos2)
(step t52 (cl (= @p_93 @p_93)) :rule refl)
(step t53 (cl (= @p_38 @p_38)) :rule refl)
(step t54 (cl (! (= @p_95 @p_34) :named @p_98)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_98 1 5))
(step t55 (cl @p_97) :rule cong :premises (t52 t53 t54))
(step t56 (cl @p_93 @p_38 @p_95) :rule equiv_pos1)
(step t57 (cl @p_96 (not @p_93)) :rule or_neg :args (0))
(step t58 (cl @p_96 @p_88) :rule or_neg :args (1))
(step t59 (cl @p_96 (not @p_95)) :rule or_neg :args (2))
(step t60 (cl @p_96 @p_96 @p_96) :rule resolution :premises (t56 t57 t58 t59))
(step t61 (cl @p_96) :rule contraction :premises (t60))
(step t62 (cl @p_94) :rule resolution :premises (t51 t55 t61))
(step t63 (cl @p_93 @p_38 @p_34) :rule or :premises (t62))
(step t64 (cl @p_38 @p_34 @p_93) :rule reordering :premises (t63))
(step t65 (cl (or @p_21 @p_39)) :rule forall_inst :args (empty @p_5))
(step t66 (cl @p_21 @p_39) :rule or :premises (t65))
(step t67 (cl @p_39) :rule resolution :premises (t66 a11))
(step t68 (cl @p_84 @p_19) :rule or_neg :args (1))
(step t69 (cl @p_84 @p_92) :rule or_neg :args (0))
(step t70 (cl (! (not (! (= (! (models empty @p_7) :named @p_69) @p_88) :named @p_89)) :named @p_91) (! (not @p_69) :named @p_90) @p_88) :rule equiv_pos2)
(step t71 (cl @p_88 @p_90 @p_91) :rule reordering :premises (t70))
(step t72 (cl (or @p_21 @p_89)) :rule forall_inst :args (empty @p_6))
(step t73 (cl @p_21 @p_89) :rule or :premises (t72))
(step t74 (cl @p_89) :rule resolution :premises (t73 a11))
(step t75 (cl (! (not (! (= (! (models empty @p_8) :named @p_65) @p_84) :named @p_85)) :named @p_87) @p_65 @p_86) :rule equiv_pos1)
(step t76 (cl @p_65 @p_86 @p_87) :rule reordering :premises (t75))
(step t77 (cl (or @p_36 @p_85)) :rule forall_inst :args (empty @p_1 @p_2))
(step t78 (cl @p_36 @p_85) :rule or :premises (t77))
(step t79 (cl @p_85) :rule resolution :premises (t78 a12))
(step t80 (cl (! (not (! (or (! (models empty @p_10) :named @p_61) @p_69) :named @p_70)) :named @p_83) @p_61 @p_69) :rule or_pos)
(step t81 (cl @p_61 @p_69 @p_83) :rule reordering :premises (t80))
(step t82 (cl (! (not (! (= (! (models empty @p_11) :named @p_71) @p_70) :named @p_72)) :named @p_82) (! (not @p_71) :named @p_73) @p_70) :rule equiv_pos2)
(step t83 (cl @p_73 @p_70 @p_82) :rule reordering :premises (t82))
(step t84 (cl (not (! (= (! (or (! (not (! (= (! (models empty @p_12) :named @p_48) @p_73) :named @p_74)) :named @p_76) @p_48 (! (not @p_73) :named @p_78)) :named @p_79) (! (or @p_76 @p_48 @p_71) :named @p_77)) :named @p_80)) (not @p_79) @p_77) :rule equiv_pos2)
(step t85 (cl (= @p_76 @p_76)) :rule refl)
(step t86 (cl (= @p_48 @p_48)) :rule refl)
(step t87 (cl (! (= @p_78 @p_71) :named @p_81)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_81 1 5))
(step t88 (cl @p_80) :rule cong :premises (t85 t86 t87))
(step t89 (cl @p_76 @p_48 @p_78) :rule equiv_pos1)
(step t90 (cl @p_79 (not @p_76)) :rule or_neg :args (0))
(step t91 (cl @p_79 (! (not @p_48) :named @p_75)) :rule or_neg :args (1))
(step t92 (cl @p_79 (not @p_78)) :rule or_neg :args (2))
(step t93 (cl @p_79 @p_79 @p_79) :rule resolution :premises (t89 t90 t91 t92))
(step t94 (cl @p_79) :rule contraction :premises (t93))
(step t95 (cl @p_77) :rule resolution :premises (t84 t88 t94))
(step t96 (cl @p_76 @p_48 @p_71) :rule or :premises (t95))
(step t97 (cl @p_48 @p_71 @p_76) :rule reordering :premises (t96))
(step t98 (cl (! (or (! (models empty @p_14) :named @p_45) @p_48) :named @p_49) @p_75) :rule or_neg :args (1))
(step t99 (cl (! (not (! (= @p_15 @p_49) :named @p_51)) :named @p_52) @p_15 (! (not @p_49) :named @p_50)) :rule equiv_pos1)
(step t100 (cl @p_15 @p_50 @p_52) :rule reordering :premises (t99))
(step t101 (cl (or @p_36 @p_51)) :rule forall_inst :args (empty @p_14 @p_12))
(step t102 (cl @p_36 @p_51) :rule or :premises (t101))
(step t103 (cl @p_51) :rule resolution :premises (t102 a12))
(step t104 (cl @p_50) :rule resolution :premises (t100 a14 t103))
(step t105 (cl @p_75) :rule resolution :premises (t98 t104))
(step t106 (cl (or @p_21 @p_74)) :rule forall_inst :args (empty @p_11))
(step t107 (cl @p_21 @p_74) :rule or :premises (t106))
(step t108 (cl @p_74) :rule resolution :premises (t107 a11))
(step t109 (cl @p_71) :rule resolution :premises (t97 t105 t108))
(step t110 (cl (or @p_36 @p_72)) :rule forall_inst :args (empty @p_10 @p_7))
(step t111 (cl @p_36 @p_72) :rule or :premises (t110))
(step t112 (cl @p_72) :rule resolution :premises (t111 a12))
(step t113 (cl @p_70) :rule resolution :premises (t83 t109 t112))
(step t114 (cl (! (not (! (= @p_40 (! (not @p_65) :named @p_66)) :named @p_67)) :named @p_68) (! (not @p_40) :named @p_60) @p_66) :rule equiv_pos2)
(step t115 (cl @p_60 @p_66 @p_68) :rule reordering :premises (t114))
(step t116 (cl (or @p_21 @p_67)) :rule forall_inst :args (empty @p_8))
(step t117 (cl @p_21 @p_67) :rule or :premises (t116))
(step t118 (cl @p_67) :rule resolution :premises (t117 a11))
(step t119 (cl (! (not (! (= @p_61 @p_60) :named @p_62)) :named @p_64) (! (not @p_61) :named @p_63) @p_60) :rule equiv_pos2)
(step t120 (cl @p_60 @p_63 @p_64) :rule reordering :premises (t119))
(step t121 (cl (or @p_21 @p_62)) :rule forall_inst :args (empty @p_9))
(step t122 (cl @p_21 @p_62) :rule or :premises (t121))
(step t123 (cl @p_62) :rule resolution :premises (t122 a11))
(step t124 (cl @p_60) :rule resolution :premises (t13 t15 t18 t20 t23 t37 t50 t64 t67 t68 t69 t71 t74 t76 t79 t81 t113 t115 t118 t120 t123))
(step t125 (cl (! (not (! (= (! (models empty @p_13) :named @p_42) @p_41) :named @p_43)) :named @p_59) (! (not @p_42) :named @p_44) @p_41) :rule equiv_pos2)
(step t126 (cl @p_44 @p_41 @p_59) :rule reordering :premises (t125))
(step t127 (cl (not (! (= (! (or (! (not (! (= @p_45 @p_44) :named @p_46)) :named @p_53) @p_45 (! (not @p_44) :named @p_55)) :named @p_56) (! (or @p_53 @p_45 @p_42) :named @p_54)) :named @p_57)) (not @p_56) @p_54) :rule equiv_pos2)
(step t128 (cl (= @p_53 @p_53)) :rule refl)
(step t129 (cl (= @p_45 @p_45)) :rule refl)
(step t130 (cl (! (= @p_55 @p_42) :named @p_58)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_58 1 5))
(step t131 (cl @p_57) :rule cong :premises (t128 t129 t130))
(step t132 (cl @p_53 @p_45 @p_55) :rule equiv_pos1)
(step t133 (cl @p_56 (not @p_53)) :rule or_neg :args (0))
(step t134 (cl @p_56 (! (not @p_45) :named @p_47)) :rule or_neg :args (1))
(step t135 (cl @p_56 (not @p_55)) :rule or_neg :args (2))
(step t136 (cl @p_56 @p_56 @p_56) :rule resolution :premises (t132 t133 t134 t135))
(step t137 (cl @p_56) :rule contraction :premises (t136))
(step t138 (cl @p_54) :rule resolution :premises (t127 t131 t137))
(step t139 (cl @p_53 @p_45 @p_42) :rule or :premises (t138))
(step t140 (cl @p_45 @p_42 @p_53) :rule reordering :premises (t139))
(step t141 (cl @p_49 @p_47) :rule or_neg :args (0))
(step t142 (cl @p_47) :rule resolution :premises (t141 t104))
(step t143 (cl (or @p_21 @p_46)) :rule forall_inst :args (empty @p_13))
(step t144 (cl @p_21 @p_46) :rule or :premises (t143))
(step t145 (cl @p_46) :rule resolution :premises (t144 a11))
(step t146 (cl @p_42) :rule resolution :premises (t140 t142 t145))
(step t147 (cl (or @p_36 @p_43)) :rule forall_inst :args (empty @p_9 @p_6))
(step t148 (cl @p_36 @p_43) :rule or :premises (t147))
(step t149 (cl @p_43) :rule resolution :premises (t148 a12))
(step t150 (cl @p_41) :rule resolution :premises (t126 t146 t149))
(step t151 (cl @p_38) :rule resolution :premises (t11 t124 t150))
(step t152 (cl @p_37) :rule resolution :premises (t9 t151 t67))
(step t153 (cl @p_33) :rule resolution :premises (t7 t152 t23))
(step t154 (cl @p_92) :rule resolution :premises (t5 t153))
(step t155 (cl @p_87 @p_66 @p_84) :rule equiv_pos2)
(step t156 (cl @p_66 @p_84 @p_87) :rule reordering :premises (t155))
(step t157 (cl (not (! (= (! (or @p_68 @p_40 (! (not @p_66) :named @p_114)) :named @p_115) (! (or @p_68 @p_40 @p_65) :named @p_113)) :named @p_116)) (not @p_115) @p_113) :rule equiv_pos2)
(step t158 (cl (= @p_68 @p_68)) :rule refl)
(step t159 (cl (= @p_40 @p_40)) :rule refl)
(step t160 (cl (! (= @p_114 @p_65) :named @p_117)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_117 1 5))
(step t161 (cl @p_116) :rule cong :premises (t158 t159 t160))
(step t162 (cl @p_68 @p_40 @p_114) :rule equiv_pos1)
(step t163 (cl @p_115 (not @p_68)) :rule or_neg :args (0))
(step t164 (cl @p_115 @p_60) :rule or_neg :args (1))
(step t165 (cl @p_115 (not @p_114)) :rule or_neg :args (2))
(step t166 (cl @p_115 @p_115 @p_115) :rule resolution :premises (t162 t163 t164 t165))
(step t167 (cl @p_115) :rule contraction :premises (t166))
(step t168 (cl @p_113) :rule resolution :premises (t157 t161 t167))
(step t169 (cl @p_68 @p_40 @p_65) :rule or :premises (t168))
(step t170 (cl @p_40 @p_65 @p_68) :rule reordering :premises (t169))
(step t171 (cl @p_65) :rule resolution :premises (t170 t124 t118))
(step t172 (cl @p_84) :rule resolution :premises (t156 t171 t79))
(step t173 (cl @p_18) :rule resolution :premises (t3 t154 t172))
(step t174 (cl (not (! (= (! (or @p_106 @p_28 (! (not @p_27) :named @p_109)) :named @p_110) (! (or @p_106 @p_28 @p_17) :named @p_108)) :named @p_111)) (not @p_110) @p_108) :rule equiv_pos2)
(step t175 (cl (= @p_106 @p_106)) :rule refl)
(step t176 (cl (= @p_28 @p_28)) :rule refl)
(step t177 (cl (! (= @p_109 @p_17) :named @p_112)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_112 1 5))
(step t178 (cl @p_111) :rule cong :premises (t175 t176 t177))
(step t179 (cl @p_106 @p_28 @p_109) :rule equiv_pos1)
(step t180 (cl @p_110 (not @p_106)) :rule or_neg :args (0))
(step t181 (cl @p_110 @p_30) :rule or_neg :args (1))
(step t182 (cl @p_110 (not @p_109)) :rule or_neg :args (2))
(step t183 (cl @p_110 @p_110 @p_110) :rule resolution :premises (t179 t180 t181 t182))
(step t184 (cl @p_110) :rule contraction :premises (t183))
(step t185 (cl @p_108) :rule resolution :premises (t174 t178 t184))
(step t186 (cl @p_106 @p_28 @p_17) :rule or :premises (t185))
(step t187 (cl @p_28 @p_17 @p_106) :rule reordering :premises (t186))
(step t188 (cl @p_32 @p_30) :rule or_neg :args (0))
(step t189 (cl @p_30) :rule resolution :premises (t188 t153))
(step t190 (cl @p_17) :rule resolution :premises (t187 t189 t18))
(step t191 (cl) :rule resolution :premises (t1 t173 t190 t50))
