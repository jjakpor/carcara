unsat
(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (forallR_alpha (next_alpha v0_alpha) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))))))))))))))
(define-fun @quantifiers_skolemize_4 () alpha (choice ((x alpha)) (not (models (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) x) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))))))))))
(define-fun @quantifiers_skolemize_5 () alpha (choice ((x alpha)) (not (models (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) x) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))))))))))))
(assume a0 (forall ((env env) (v var_alpha) (x alpha)) (= (evalV_alpha (push_alpha env v x) v) x)))
(assume a1 (forall ((env env) (v var_alpha) (w var_alpha) (x alpha)) (=> (not (= v w)) (= (evalV_alpha (push_alpha env w x) v) (evalV_alpha env v)))))
(assume a2 (forall ((env env) (v var_alpha)) (= (eval_alpha env (inj_alpha v)) (evalV_alpha env v))))
(assume a3 (forall ((env env)) (= (eval_alpha env aR) a)))
(assume a4 (forall ((env env)) (= (eval_alpha env bR) b)))
(assume a5 (forall ((env env)) (= (eval_alpha env cR) c)))
(assume a6 (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))))
(assume a7 (forall ((env env) (t0 term_alpha)) (= (models env (pR t0)) (p (eval_alpha env t0)))))
(assume a8 (forall ((env env) (t0 term_alpha)) (= (models env (qR t0)) (q (eval_alpha env t0)))))
(assume a9 (forall ((env env) (t0 term_alpha)) (= (models env (rR t0)) (r (eval_alpha env t0)))))
(assume a10 (forall ((env env)) (= (models env falseR) false)))
(assume a11 (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))))
(assume a12 (forall ((env env) (phi form) (psi form)) (= (models env (orR phi psi)) (or (models env phi) (models env psi)))))
(assume a13 (forall ((env env) (phi form) (v var_alpha)) (= (models env (forallR_alpha v phi)) (forall ((x alpha)) (models (push_alpha env v x) phi)))))
(assume a14 (! (not (! (models empty (forallR_alpha v0_alpha (! (forallR_alpha (! (next_alpha v0_alpha) :named @p_1) (! (forallR_alpha (! (next_alpha @p_1) :named @p_2) (! (orR (! (notR (! (orR (! (notR (! (orR (! (notR (! (notR (! (orR (! (notR (pR (inj_alpha v0_alpha))) :named @p_6) (! (notR (qR (inj_alpha @p_1))) :named @p_4)) :named @p_10)) :named @p_11)) :named @p_12) (! (rR (inj_alpha @p_2)) :named @p_3)) :named @p_13)) :named @p_14) (! (notR (! (orR (! (notR (pR (inj_alpha v0_alpha))) :named @p_6) (! (orR @p_4 @p_3) :named @p_5)) :named @p_7)) :named @p_8)) :named @p_18)) :named @p_19) (! (notR (! (orR (! (notR @p_14) :named @p_15) (! (notR @p_8) :named @p_9)) :named @p_16)) :named @p_17)) :named @p_20)) :named @p_21)) :named @p_22))) :named @p_23)) :named @p_24))
(step t0 (cl (! (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (! (= (! (models (! (push_alpha (! (push_alpha (! (push_alpha empty v0_alpha @quantifiers_skolemize_3) :named @p_25) @p_1 @quantifiers_skolemize_4) :named @p_26) @p_2 @quantifiers_skolemize_5) :named @p_27) @p_9) :named @p_30) (! (not (! (models @p_27 @p_8) :named @p_28)) :named @p_29)) :named @p_31)) :named @p_157) (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))))
(step t1.t0 (cl (or (! (not (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) :named @p_36) @p_31)) :rule forall_inst :args (@p_27 @p_8))
(step t1.t1 (cl @p_36 @p_31) :rule or :premises (t1.t0))
(step t1.t2 (cl @p_31) :rule resolution :premises (t1.t1 t1.a0))
(step t1 (cl @p_36 @p_31) :rule subproof :discharge (t1.a0))
(step t2 (cl @p_157 @p_31) :rule resolution :premises (t0 t1))
(step t3 (cl @p_157 (! (not @p_31) :named @p_32)) :rule implies_neg2)
(step t4 (cl @p_157 @p_157) :rule resolution :premises (t2 t3))
(step t5 (cl @p_157) :rule contraction :premises (t4))
(step t6 (cl @p_36 @p_31) :rule implies :premises (t5))
(step t7 (cl @p_32 (! (not @p_30) :named @p_156) @p_29) :rule equiv_pos2)
(step t8 (cl @p_156 @p_29 @p_32) :rule reordering :premises (t7))
(step t9 (cl (! (not (! (or (! (models @p_27 @p_15) :named @p_138) @p_30) :named @p_139)) :named @p_155) @p_138 @p_30) :rule or_pos)
(step t10 (cl @p_138 @p_30 @p_155) :rule reordering :premises (t9))
(step t11 (cl (! (not (! (= @p_138 (! (not (! (models @p_27 @p_14) :named @p_66)) :named @p_111)) :named @p_153)) :named @p_154) (! (not @p_138) :named @p_152) @p_111) :rule equiv_pos2)
(step t12 (cl @p_152 @p_111 @p_154) :rule reordering :premises (t11))
(step t13 (cl (! (not (! (or (! (models @p_27 @p_6) :named @p_38) (! (models @p_27 @p_4) :named @p_45)) :named @p_50)) :named @p_51) @p_38 @p_45) :rule or_pos)
(step t14 (cl @p_38 @p_45 @p_51) :rule reordering :premises (t13))
(step t15 (cl (! (not (! (= (! (models @p_27 @p_10) :named @p_52) @p_50) :named @p_53)) :named @p_127) (! (not @p_52) :named @p_54) @p_50) :rule equiv_pos2)
(step t16 (cl @p_54 @p_50 @p_127) :rule reordering :premises (t15))
(step t17 (cl (or (! (not (forall ((env env) (phi form) (psi form)) (= (models env (orR phi psi)) (or (models env phi) (models env psi))))) :named @p_41) @p_53)) :rule forall_inst :args (@p_27 @p_6 @p_4))
(step t18 (cl @p_41 @p_53) :rule or :premises (t17))
(step t19 (cl @p_53) :rule resolution :premises (t18 a12))
(step t20 (cl (! (or @p_45 (! (models @p_27 @p_3) :named @p_44)) :named @p_46) (! (not @p_45) :named @p_49)) :rule or_neg :args (0))
(step t21 (cl (not (! (= (! (or (! (not (! (= (! (models @p_27 @p_11) :named @p_55) @p_54) :named @p_56)) :named @p_121) @p_55 (! (not @p_54) :named @p_123)) :named @p_124) (! (or @p_121 @p_55 @p_52) :named @p_122)) :named @p_125)) (not @p_124) @p_122) :rule equiv_pos2)
(step t22 (cl (= @p_121 @p_121)) :rule refl)
(step t23 (cl (= @p_55 @p_55)) :rule refl)
(step t24 (cl (! (= @p_123 @p_52) :named @p_126)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_126 1 5))
(step t25 (cl @p_125) :rule cong :premises (t22 t23 t24))
(step t26 (cl @p_121 @p_55 @p_123) :rule equiv_pos1)
(step t27 (cl @p_124 (not @p_121)) :rule or_neg :args (0))
(step t28 (cl @p_124 (! (not @p_55) :named @p_57)) :rule or_neg :args (1))
(step t29 (cl @p_124 (not @p_123)) :rule or_neg :args (2))
(step t30 (cl @p_124 @p_124 @p_124) :rule resolution :premises (t26 t27 t28 t29))
(step t31 (cl @p_124) :rule contraction :premises (t30))
(step t32 (cl @p_122) :rule resolution :premises (t21 t25 t31))
(step t33 (cl @p_121 @p_55 @p_52) :rule or :premises (t32))
(step t34 (cl @p_55 @p_52 @p_121) :rule reordering :premises (t33))
(step t35 (cl (or @p_36 @p_56)) :rule forall_inst :args (@p_27 @p_10))
(step t36 (cl @p_36 @p_56) :rule or :premises (t35))
(step t37 (cl @p_56) :rule resolution :premises (t36 a11))
(step t38 (cl (! (not (! (= (! (models @p_27 @p_5) :named @p_37) @p_46) :named @p_47)) :named @p_118) @p_37 (! (not @p_46) :named @p_48)) :rule equiv_pos1)
(step t39 (cl @p_37 @p_48 @p_118) :rule reordering :premises (t38))
(step t40 (cl (or @p_41 @p_47)) :rule forall_inst :args (@p_27 @p_4 @p_3))
(step t41 (cl @p_41 @p_47) :rule or :premises (t40))
(step t42 (cl @p_47) :rule resolution :premises (t41 a12))
(step t43 (cl (! (not (! (= (! (models @p_27 @p_12) :named @p_58) @p_57) :named @p_59)) :named @p_120) (! (not @p_58) :named @p_60) @p_57) :rule equiv_pos2)
(step t44 (cl @p_60 @p_57 @p_120) :rule reordering :premises (t43))
(step t45 (cl (or @p_36 @p_59)) :rule forall_inst :args (@p_27 @p_11))
(step t46 (cl @p_36 @p_59) :rule or :premises (t45))
(step t47 (cl @p_59) :rule resolution :premises (t46 a11))
(step t48 (cl (! (or @p_38 @p_37) :named @p_39) (! (not @p_37) :named @p_43)) :rule or_neg :args (1))
(step t49 (cl @p_39 (! (not @p_38) :named @p_119)) :rule or_neg :args (0))
(step t50 (cl (! (not (! (or @p_58 @p_44) :named @p_61)) :named @p_62) @p_58 @p_44) :rule or_pos)
(step t51 (cl @p_44 @p_58 @p_62) :rule reordering :premises (t50))
(step t52 (cl (! (not (! (= @p_28 (! (not (! (models @p_27 @p_7) :named @p_33)) :named @p_34)) :named @p_35)) :named @p_114) @p_29 @p_34) :rule equiv_pos2)
(step t53 (cl @p_29 @p_34 @p_114) :rule reordering :premises (t52))
(step t54 (cl (or @p_36 @p_35)) :rule forall_inst :args (@p_27 @p_7))
(step t55 (cl @p_36 @p_35) :rule or :premises (t54))
(step t56 (cl @p_35) :rule resolution :premises (t55 a11))
(step t57 (cl (! (not (! (or @p_66 @p_28) :named @p_68)) :named @p_106) @p_66 @p_28) :rule or_pos)
(step t58 (cl @p_66 @p_28 @p_106) :rule reordering :premises (t57))
(step t59 (cl (! (not (! (= (! (models @p_27 @p_18) :named @p_69) @p_68) :named @p_70)) :named @p_105) (! (not @p_69) :named @p_71) @p_68) :rule equiv_pos2)
(step t60 (cl @p_71 @p_68 @p_105) :rule reordering :premises (t59))
(step t61 (cl (not (! (= (! (or (! (not (! (= (! (models @p_27 @p_19) :named @p_72) @p_71) :named @p_73)) :named @p_99) @p_72 (! (not @p_71) :named @p_101)) :named @p_102) (! (or @p_99 @p_72 @p_69) :named @p_100)) :named @p_103)) (not @p_102) @p_100) :rule equiv_pos2)
(step t62 (cl (= @p_99 @p_99)) :rule refl)
(step t63 (cl (= @p_72 @p_72)) :rule refl)
(step t64 (cl (! (= @p_101 @p_69) :named @p_104)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_104 1 5))
(step t65 (cl @p_103) :rule cong :premises (t62 t63 t64))
(step t66 (cl @p_99 @p_72 @p_101) :rule equiv_pos1)
(step t67 (cl @p_102 (not @p_99)) :rule or_neg :args (0))
(step t68 (cl @p_102 (! (not @p_72) :named @p_74)) :rule or_neg :args (1))
(step t69 (cl @p_102 (not @p_101)) :rule or_neg :args (2))
(step t70 (cl @p_102 @p_102 @p_102) :rule resolution :premises (t66 t67 t68 t69))
(step t71 (cl @p_102) :rule contraction :premises (t70))
(step t72 (cl @p_100) :rule resolution :premises (t61 t65 t71))
(step t73 (cl @p_99 @p_72 @p_69) :rule or :premises (t72))
(step t74 (cl @p_72 @p_69 @p_99) :rule reordering :premises (t73))
(step t75 (cl (! (or @p_72 (! (models @p_27 @p_17) :named @p_75)) :named @p_76) @p_74) :rule or_neg :args (0))
(step t76 (cl (! (not (! (= (! (models @p_27 @p_20) :named @p_78) @p_76) :named @p_79)) :named @p_98) @p_78 (! (not @p_76) :named @p_77)) :rule equiv_pos1)
(step t77 (cl @p_78 @p_77 @p_98) :rule reordering :premises (t76))
(step t78 (cl (not (! (= (! (not (forall ((x alpha)) (models (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) x) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))))))))))) :named @p_81) (! (not @p_78) :named @p_80)) :named @p_97)) (not @p_81) @p_80) :rule equiv_pos2)
(anchor :step t79 :args ((:= (x alpha) @quantifiers_skolemize_5)))
(step t79.t0 (cl (= (models (push_alpha @p_26 @p_2 x) @p_20) @p_78)) :rule refl)
(step t79 (cl (= (forall ((x alpha)) (models (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) x) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))))))) @p_78)) :rule sko_forall)
(step t80 (cl @p_97) :rule cong :premises (t79))
(step t81 (cl (! (not (! (= (! (models @p_26 @p_21) :named @p_82) (forall ((x alpha)) (models (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) x) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))))))))))) :named @p_83)) :named @p_96) @p_82 @p_81) :rule equiv_pos1)
(step t82 (cl @p_82 @p_81 @p_96) :rule reordering :premises (t81))
(step t83 (cl (not (! (= (! (not (forall ((x alpha)) (models (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) x) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))))))))) :named @p_86) (! (not @p_82) :named @p_85)) :named @p_95)) (not @p_86) @p_85) :rule equiv_pos2)
(anchor :step t84 :args ((:= (x alpha) @quantifiers_skolemize_4)))
(step t84.t0 (cl (= (models (push_alpha @p_25 @p_1 x) @p_21) @p_82)) :rule refl)
(step t84 (cl (= (forall ((x alpha)) (models (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) x) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))))))))))) @p_82)) :rule sko_forall)
(step t85 (cl @p_95) :rule cong :premises (t84))
(step t86 (cl (! (not (! (= (! (models @p_25 @p_22) :named @p_87) (forall ((x alpha)) (models (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) x) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))))))))) :named @p_88)) :named @p_94) @p_87 @p_86) :rule equiv_pos1)
(step t87 (cl @p_87 @p_86 @p_94) :rule reordering :premises (t86))
(step t88 (cl (not (! (= (! (not (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (forallR_alpha (next_alpha v0_alpha) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))))))))))))) :named @p_90) (! (not @p_87) :named @p_89)) :named @p_93)) (not @p_90) @p_89) :rule equiv_pos2)
(anchor :step t89 :args ((:= (x alpha) @quantifiers_skolemize_3)))
(step t89.t0 (cl (= (models (push_alpha empty v0_alpha x) @p_22) @p_87)) :rule refl)
(step t89 (cl (= (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (forallR_alpha (next_alpha v0_alpha) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))))))))) @p_87)) :rule sko_forall)
(step t90 (cl @p_93) :rule cong :premises (t89))
(step t91 (cl (! (not (! (= @p_23 (forall ((x alpha)) (models (push_alpha empty v0_alpha x) (forallR_alpha (next_alpha v0_alpha) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (orR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))) (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))))) (notR (orR (notR (notR (orR (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (notR (qR (inj_alpha (next_alpha v0_alpha))))))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha))))))) (notR (notR (orR (notR (pR (inj_alpha v0_alpha))) (orR (notR (qR (inj_alpha (next_alpha v0_alpha)))) (rR (inj_alpha (next_alpha (next_alpha v0_alpha)))))))))))))))) :named @p_91)) :named @p_92) @p_23 @p_90) :rule equiv_pos1)
(step t92 (cl @p_23 @p_90 @p_92) :rule reordering :premises (t91))
(step t93 (cl (or (! (not (forall ((env env) (phi form) (v var_alpha)) (= (models env (forallR_alpha v phi)) (forall ((x alpha)) (models (push_alpha env v x) phi))))) :named @p_84) @p_91)) :rule forall_inst :args (empty @p_22 v0_alpha))
(step t94 (cl @p_84 @p_91) :rule or :premises (t93))
(step t95 (cl @p_91) :rule resolution :premises (t94 a13))
(step t96 (cl @p_90) :rule resolution :premises (t92 a14 t95))
(step t97 (cl @p_89) :rule resolution :premises (t88 t90 t96))
(step t98 (cl (or @p_84 @p_88)) :rule forall_inst :args (@p_25 @p_21 @p_1))
(step t99 (cl @p_84 @p_88) :rule or :premises (t98))
(step t100 (cl @p_88) :rule resolution :premises (t99 a13))
(step t101 (cl @p_86) :rule resolution :premises (t87 t97 t100))
(step t102 (cl @p_85) :rule resolution :premises (t83 t85 t101))
(step t103 (cl (or @p_84 @p_83)) :rule forall_inst :args (@p_26 @p_20 @p_2))
(step t104 (cl @p_84 @p_83) :rule or :premises (t103))
(step t105 (cl @p_83) :rule resolution :premises (t104 a13))
(step t106 (cl @p_81) :rule resolution :premises (t82 t102 t105))
(step t107 (cl @p_80) :rule resolution :premises (t78 t80 t106))
(step t108 (cl (or @p_41 @p_79)) :rule forall_inst :args (@p_27 @p_19 @p_17))
(step t109 (cl @p_41 @p_79) :rule or :premises (t108))
(step t110 (cl @p_79) :rule resolution :premises (t109 a12))
(step t111 (cl @p_77) :rule resolution :premises (t77 t107 t110))
(step t112 (cl @p_74) :rule resolution :premises (t75 t111))
(step t113 (cl (or @p_36 @p_73)) :rule forall_inst :args (@p_27 @p_18))
(step t114 (cl @p_36 @p_73) :rule or :premises (t113))
(step t115 (cl @p_73) :rule resolution :premises (t114 a11))
(step t116 (cl @p_69) :rule resolution :premises (t74 t112 t115))
(step t117 (cl (or @p_41 @p_70)) :rule forall_inst :args (@p_27 @p_14 @p_8))
(step t118 (cl @p_41 @p_70) :rule or :premises (t117))
(step t119 (cl @p_70) :rule resolution :premises (t118 a12))
(step t120 (cl @p_68) :rule resolution :premises (t60 t116 t119))
(step t121 (cl (! (not (! (= @p_33 @p_39) :named @p_40)) :named @p_116) @p_33 (! (not @p_39) :named @p_42)) :rule equiv_pos1)
(step t122 (cl @p_33 @p_42 @p_116) :rule reordering :premises (t121))
(step t123 (cl (or @p_41 @p_40)) :rule forall_inst :args (@p_27 @p_6 @p_5))
(step t124 (cl @p_41 @p_40) :rule or :premises (t123))
(step t125 (cl @p_40) :rule resolution :premises (t124 a12))
(step t126 (cl (! (not (! (= @p_66 (! (not (! (models @p_27 @p_13) :named @p_63)) :named @p_65)) :named @p_67)) :named @p_107) @p_111 @p_65) :rule equiv_pos2)
(step t127 (cl @p_111 @p_65 @p_107) :rule reordering :premises (t126))
(step t128 (cl (or @p_36 @p_67)) :rule forall_inst :args (@p_27 @p_13))
(step t129 (cl @p_36 @p_67) :rule or :premises (t128))
(step t130 (cl @p_67) :rule resolution :premises (t129 a11))
(step t131 (cl (! (not (! (= @p_63 @p_61) :named @p_64)) :named @p_115) @p_63 @p_62) :rule equiv_pos1)
(step t132 (cl @p_63 @p_62 @p_115) :rule reordering :premises (t131))
(step t133 (cl (or @p_41 @p_64)) :rule forall_inst :args (@p_27 @p_12 @p_3))
(step t134 (cl @p_41 @p_64) :rule or :premises (t133))
(step t135 (cl @p_64) :rule resolution :premises (t134 a12))
(step t136 (cl @p_61 (! (not @p_44) :named @p_117)) :rule or_neg :args (1))
(step t137 (cl @p_117 @p_61) :rule reordering :premises (t136))
(step t138 (cl @p_46 @p_117) :rule or_neg :args (1))
(step t139 (cl @p_117 @p_46) :rule reordering :premises (t138))
(step t140 (cl @p_117) :rule resolution :premises (t53 t56 t58 t120 t122 t125 t127 t130 t48 t132 t135 t39 t42 t137 t139))
(step t141 (cl @p_115 @p_65 @p_61) :rule equiv_pos2)
(step t142 (cl @p_65 @p_61 @p_115) :rule reordering :premises (t141))
(step t143 (cl (not (! (= (! (or @p_107 @p_66 (! (not @p_65) :named @p_109)) :named @p_110) (! (or @p_107 @p_66 @p_63) :named @p_108)) :named @p_112)) (not @p_110) @p_108) :rule equiv_pos2)
(step t144 (cl (= @p_107 @p_107)) :rule refl)
(step t145 (cl (= @p_66 @p_66)) :rule refl)
(step t146 (cl (! (= @p_109 @p_63) :named @p_113)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_113 1 5))
(step t147 (cl @p_112) :rule cong :premises (t144 t145 t146))
(step t148 (cl @p_107 @p_66 @p_109) :rule equiv_pos1)
(step t149 (cl @p_110 (not @p_107)) :rule or_neg :args (0))
(step t150 (cl @p_110 @p_111) :rule or_neg :args (1))
(step t151 (cl @p_110 (not @p_109)) :rule or_neg :args (2))
(step t152 (cl @p_110 @p_110 @p_110) :rule resolution :premises (t148 t149 t150 t151))
(step t153 (cl @p_110) :rule contraction :premises (t152))
(step t154 (cl @p_108) :rule resolution :premises (t143 t147 t153))
(step t155 (cl @p_107 @p_66 @p_63) :rule or :premises (t154))
(step t156 (cl @p_66 @p_63 @p_107) :rule reordering :premises (t155))
(step t157 (cl @p_66) :rule resolution :premises (t14 t16 t19 t20 t34 t37 t39 t42 t44 t47 t48 t49 t51 t140 t122 t125 t142 t135 t53 t56 t156 t130 t58 t120))
(step t158 (cl (or @p_36 @p_153)) :rule forall_inst :args (@p_27 @p_14))
(step t159 (cl @p_36 @p_153) :rule or :premises (t158))
(step t160 (cl @p_153) :rule resolution :premises (t159 a11))
(step t161 (cl @p_152) :rule resolution :premises (t12 t157 t160))
(step t162 (cl (! (not (! (= (! (models @p_27 @p_16) :named @p_140) @p_139) :named @p_141)) :named @p_151) (! (not @p_140) :named @p_142) @p_139) :rule equiv_pos2)
(step t163 (cl @p_142 @p_139 @p_151) :rule reordering :premises (t162))
(step t164 (cl (not (! (= (! (or (! (not (! (= @p_75 @p_142) :named @p_143)) :named @p_145) @p_75 (! (not @p_142) :named @p_147)) :named @p_148) (! (or @p_145 @p_75 @p_140) :named @p_146)) :named @p_149)) (not @p_148) @p_146) :rule equiv_pos2)
(step t165 (cl (= @p_145 @p_145)) :rule refl)
(step t166 (cl (= @p_75 @p_75)) :rule refl)
(step t167 (cl (! (= @p_147 @p_140) :named @p_150)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_150 1 5))
(step t168 (cl @p_149) :rule cong :premises (t165 t166 t167))
(step t169 (cl @p_145 @p_75 @p_147) :rule equiv_pos1)
(step t170 (cl @p_148 (not @p_145)) :rule or_neg :args (0))
(step t171 (cl @p_148 (! (not @p_75) :named @p_144)) :rule or_neg :args (1))
(step t172 (cl @p_148 (not @p_147)) :rule or_neg :args (2))
(step t173 (cl @p_148 @p_148 @p_148) :rule resolution :premises (t169 t170 t171 t172))
(step t174 (cl @p_148) :rule contraction :premises (t173))
(step t175 (cl @p_146) :rule resolution :premises (t164 t168 t174))
(step t176 (cl @p_145 @p_75 @p_140) :rule or :premises (t175))
(step t177 (cl @p_75 @p_140 @p_145) :rule reordering :premises (t176))
(step t178 (cl @p_76 @p_144) :rule or_neg :args (1))
(step t179 (cl @p_144) :rule resolution :premises (t178 t111))
(step t180 (cl (or @p_36 @p_143)) :rule forall_inst :args (@p_27 @p_16))
(step t181 (cl @p_36 @p_143) :rule or :premises (t180))
(step t182 (cl @p_143) :rule resolution :premises (t181 a11))
(step t183 (cl @p_140) :rule resolution :premises (t177 t179 t182))
(step t184 (cl (or @p_41 @p_141)) :rule forall_inst :args (@p_27 @p_15 @p_9))
(step t185 (cl @p_41 @p_141) :rule or :premises (t184))
(step t186 (cl @p_141) :rule resolution :premises (t185 a12))
(step t187 (cl @p_139) :rule resolution :premises (t163 t183 t186))
(step t188 (cl @p_30) :rule resolution :premises (t10 t161 t187))
(step t189 (cl (not (! (= (! (or @p_114 @p_28 (! (not @p_34) :named @p_134)) :named @p_135) (! (or @p_114 @p_28 @p_33) :named @p_133)) :named @p_136)) (not @p_135) @p_133) :rule equiv_pos2)
(step t190 (cl (= @p_114 @p_114)) :rule refl)
(step t191 (cl (= @p_28 @p_28)) :rule refl)
(step t192 (cl (! (= @p_134 @p_33) :named @p_137)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_137 1 5))
(step t193 (cl @p_136) :rule cong :premises (t190 t191 t192))
(step t194 (cl @p_114 @p_28 @p_134) :rule equiv_pos1)
(step t195 (cl @p_135 (not @p_114)) :rule or_neg :args (0))
(step t196 (cl @p_135 @p_29) :rule or_neg :args (1))
(step t197 (cl @p_135 (not @p_134)) :rule or_neg :args (2))
(step t198 (cl @p_135 @p_135 @p_135) :rule resolution :premises (t194 t195 t196 t197))
(step t199 (cl @p_135) :rule contraction :premises (t198))
(step t200 (cl @p_133) :rule resolution :premises (t189 t193 t199))
(step t201 (cl @p_114 @p_28 @p_33) :rule or :premises (t200))
(step t202 (cl @p_28 @p_33 @p_114) :rule reordering :premises (t201))
(step t203 (cl @p_116 @p_34 @p_39) :rule equiv_pos2)
(step t204 (cl @p_34 @p_39 @p_116) :rule reordering :premises (t203))
(step t205 (cl @p_42 @p_38 @p_37) :rule or_pos)
(step t206 (cl @p_38 @p_37 @p_42) :rule reordering :premises (t205))
(step t207 (cl @p_50 @p_119) :rule or_neg :args (0))
(step t208 (cl @p_119 @p_50) :rule reordering :premises (t207))
(step t209 (cl @p_127 @p_52 @p_51) :rule equiv_pos1)
(step t210 (cl @p_52 @p_51 @p_127) :rule reordering :premises (t209))
(step t211 (cl @p_121 @p_57 @p_54) :rule equiv_pos2)
(step t212 (cl @p_57 @p_54 @p_121) :rule reordering :premises (t211))
(step t213 (cl (not (! (= (! (or @p_120 @p_58 (! (not @p_57) :named @p_129)) :named @p_130) (! (or @p_120 @p_58 @p_55) :named @p_128)) :named @p_131)) (not @p_130) @p_128) :rule equiv_pos2)
(step t214 (cl (= @p_120 @p_120)) :rule refl)
(step t215 (cl (= @p_58 @p_58)) :rule refl)
(step t216 (cl (! (= @p_129 @p_55) :named @p_132)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_132 1 5))
(step t217 (cl @p_131) :rule cong :premises (t214 t215 t216))
(step t218 (cl @p_120 @p_58 @p_129) :rule equiv_pos1)
(step t219 (cl @p_130 (not @p_120)) :rule or_neg :args (0))
(step t220 (cl @p_130 @p_60) :rule or_neg :args (1))
(step t221 (cl @p_130 (not @p_129)) :rule or_neg :args (2))
(step t222 (cl @p_130 @p_130 @p_130) :rule resolution :premises (t218 t219 t220 t221))
(step t223 (cl @p_130) :rule contraction :premises (t222))
(step t224 (cl @p_128) :rule resolution :premises (t213 t217 t223))
(step t225 (cl @p_120 @p_58 @p_55) :rule or :premises (t224))
(step t226 (cl @p_58 @p_55 @p_120) :rule reordering :premises (t225))
(step t227 (cl @p_61 @p_60) :rule or_neg :args (0))
(step t228 (cl @p_65) :rule resolution :premises (t127 t157 t130))
(step t229 (cl @p_62) :rule resolution :premises (t132 t228 t135))
(step t230 (cl @p_60) :rule resolution :premises (t227 t229))
(step t231 (cl @p_55) :rule resolution :premises (t226 t230 t47))
(step t232 (cl @p_54) :rule resolution :premises (t212 t231 t37))
(step t233 (cl @p_51) :rule resolution :premises (t210 t232 t19))
(step t234 (cl @p_119) :rule resolution :premises (t208 t233))
(step t235 (cl @p_118 @p_43 @p_46) :rule equiv_pos2)
(step t236 (cl @p_43 @p_46 @p_118) :rule reordering :premises (t235))
(step t237 (cl @p_48 @p_45 @p_44) :rule or_pos)
(step t238 (cl @p_44 @p_45 @p_48) :rule reordering :premises (t237))
(step t239 (cl @p_50 @p_49) :rule or_neg :args (1))
(step t240 (cl @p_49 @p_50) :rule reordering :premises (t239))
(step t241 (cl @p_49) :rule resolution :premises (t240 t233))
(step t242 (cl @p_48) :rule resolution :premises (t238 t140 t241))
(step t243 (cl @p_43) :rule resolution :premises (t236 t242 t42))
(step t244 (cl @p_42) :rule resolution :premises (t206 t234 t243))
(step t245 (cl @p_34) :rule resolution :premises (t204 t244 t125))
(step t246 (cl @p_28) :rule resolution :premises (t202 t245 t56))
(step t247 (cl @p_32) :rule resolution :premises (t8 t188 t246))
(step t248 (cl) :rule resolution :premises (t6 t247 a11))
