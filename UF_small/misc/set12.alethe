unsat
(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume a0 (forall ((?x Elem) (?s1 Set) (?s2 Set)) (=> (and (member ?x ?s1) (subset ?s1 ?s2)) (member ?x ?s2))))
(assume a1 (forall ((?s1 Set) (?s2 Set)) (=> (not (subset ?s1 ?s2)) (exists ((?x Elem)) (and (member ?x ?s1) (not (member ?x ?s2)))))))
(assume a2 (forall ((?s1 Set) (?s2 Set)) (=> (forall ((?x Elem)) (=> (member ?x ?s1) (member ?x ?s2))) (subset ?s1 ?s2))))
(assume a3 (forall ((?s1 Set) (?s2 Set)) (= (seteq ?s1 ?s2) (= ?s1 ?s2))))
(assume a4 (forall ((?s1 Set) (?s2 Set)) (= (seteq ?s1 ?s2) (and (subset ?s1 ?s2) (subset ?s2 ?s1)))))
(assume a5 (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (member ?x (union ?s1 ?s2)) (or (member ?x ?s1) (member ?x ?s2)))))
(assume a6 (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (member ?x (intersection ?s1 ?s2)) (and (member ?x ?s1) (member ?x ?s2)))))
(assume a7 (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (member ?x (difference ?s1 ?s2)) (and (member ?x ?s1) (not (member ?x ?s2))))))
(assume a8 (! (not (! (seteq (! (intersection a (! (intersection b c) :named @p_3)) :named @p_4) (! (intersection (! (intersection a b) :named @p_1) c) :named @p_2)) :named @p_5)) :named @p_6))
(step t0 (cl (! (not (! (= (! (member @quantifiers_skolemize_4 @p_3) :named @p_7) (! (and (! (member @quantifiers_skolemize_4 b) :named @p_10) (! (member @quantifiers_skolemize_4 c) :named @p_15)) :named @p_112)) :named @p_115)) :named @p_117) @p_7 (! (not @p_112) :named @p_116)) :rule equiv_pos1)
(step t1 (cl @p_7 @p_116 @p_117) :rule reordering :premises (t0))
(step t2 (cl (or (! (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (member ?x (intersection ?s1 ?s2)) (and (member ?x ?s1) (member ?x ?s2))))) :named @p_14) @p_115)) :rule forall_inst :args (@quantifiers_skolemize_4 b c))
(step t3 (cl @p_14 @p_115) :rule or :premises (t2))
(step t4 (cl @p_115) :rule resolution :premises (t3 a6))
(step t5 (cl @p_112 (! (not @p_10) :named @p_114) (! (not @p_15) :named @p_113)) :rule and_neg)
(step t6 (cl @p_113 @p_114 @p_112) :rule reordering :premises (t5))
(step t7 (cl (! (not (! (and (! (member @quantifiers_skolemize_4 @p_1) :named @p_12) @p_15) :named @p_16)) :named @p_103) @p_15) :rule and_pos :args (1))
(step t8 (cl @p_15 @p_103) :rule reordering :premises (t7))
(step t9 (cl (! (not (! (= (! (member @quantifiers_skolemize_4 @p_2) :named @p_17) @p_16) :named @p_18)) :named @p_102) (! (not @p_17) :named @p_20) @p_16) :rule equiv_pos2)
(step t10 (cl @p_20 @p_16 @p_102) :rule reordering :premises (t9))
(step t11 (cl (not (! (= (! (or (! (or @p_20 (! (member @quantifiers_skolemize_4 @p_4) :named @p_19)) :named @p_21) (! (not @p_20) :named @p_98)) :named @p_99) (! (or @p_21 @p_17) :named @p_97)) :named @p_100)) (not @p_99) @p_97) :rule equiv_pos2)
(step t12 (cl (= @p_21 @p_21)) :rule refl)
(step t13 (cl (! (= @p_98 @p_17) :named @p_101)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_101 1 5))
(step t14 (cl @p_100) :rule cong :premises (t12 t13))
(step t15 (cl @p_21 @p_98) :rule or_neg :args (0))
(step t16 (cl @p_99 (! (not @p_21) :named @p_22)) :rule or_neg :args (0))
(step t17 (cl @p_99 (not @p_98)) :rule or_neg :args (1))
(step t18 (cl @p_99 @p_99) :rule resolution :premises (t15 t16 t17))
(step t19 (cl @p_99) :rule contraction :premises (t18))
(step t20 (cl @p_97) :rule resolution :premises (t11 t14 t19))
(step t21 (cl @p_21 @p_17) :rule or :premises (t20))
(step t22 (cl @p_17 @p_21) :rule reordering :premises (t21))
(step t23 (cl (not (! (= (! (or (! (not (! (not (forall ((?x Elem)) (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))) :named @p_23)) :named @p_90) @p_22) :named @p_91) (! (or (forall ((?x Elem)) (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c))))) @p_22) :named @p_89)) :named @p_95)) (not @p_91) @p_89) :rule equiv_pos2)
(step t24 (cl (! (= @p_90 (forall ((?x Elem)) (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))) :named @p_96)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_96 1 5))
(step t25 (cl (= @p_22 @p_22)) :rule refl)
(step t26 (cl @p_95) :rule cong :premises (t24 t25))
(step t27 (cl (! (=> @p_23 @p_22) :named @p_93) @p_23) :rule implies_neg1)
(anchor :step t28)
(assume t28.a0 @p_23)
(step t28.t0 (cl (not (! (= @p_23 @p_22) :named @p_94)) @p_90 @p_22) :rule equiv_pos2)
(anchor :step t28.t1 :args ((:= (?x Elem) @quantifiers_skolemize_4)))
(step t28.t1.t0 (cl (= (or (not (! (member ?x @p_2) :named @p_78)) (! (member ?x @p_4) :named @p_79)) @p_21)) :rule refl)
(step t28.t1 (cl (= (forall ((?x Elem)) (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c))))) @p_21)) :rule sko_forall)
(step t28.t2 (cl @p_94) :rule cong :premises (t28.t1))
(step t28.t3 (cl @p_22) :rule resolution :premises (t28.t0 t28.t2 t28.a0))
(step t28 (cl @p_90 @p_22) :rule subproof :discharge (t28.a0))
(step t29 (cl @p_93 @p_22) :rule resolution :premises (t27 t28))
(step t30 (cl @p_93 (! (not @p_22) :named @p_92)) :rule implies_neg2)
(step t31 (cl @p_93 @p_93) :rule resolution :premises (t29 t30))
(step t32 (cl @p_93) :rule contraction :premises (t31))
(step t33 (cl @p_90 @p_22) :rule implies :premises (t32))
(step t34 (cl @p_91 (not @p_90)) :rule or_neg :args (0))
(step t35 (cl @p_91 @p_92) :rule or_neg :args (1))
(step t36 (cl @p_91 @p_91) :rule resolution :premises (t33 t34 t35))
(step t37 (cl @p_91) :rule contraction :premises (t36))
(step t38 (cl @p_89) :rule resolution :premises (t23 t26 t37))
(step t39 (cl (forall ((?x Elem)) (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c))))) @p_22) :rule or :premises (t38))
(step t40 (cl (! (not (! (or (! (subset @p_2 @p_4) :named @p_24) @p_23) :named @p_25)) :named @p_88) @p_24 @p_23) :rule or_pos)
(step t41 (cl @p_24 @p_23 @p_88) :rule reordering :premises (t40))
(step t42 (cl (! (and (! (subset @p_4 @p_2) :named @p_35) @p_24) :named @p_83) (not @p_35) (! (not @p_24) :named @p_34)) :rule and_neg)
(step t43 (cl (! (not (! (= @p_5 @p_83) :named @p_85)) :named @p_87) @p_5 (! (not @p_83) :named @p_84)) :rule equiv_pos1)
(step t44 (cl @p_5 @p_84 @p_87) :rule reordering :premises (t43))
(step t45 (cl (or (! (not (forall ((?s1 Set) (?s2 Set)) (= (seteq ?s1 ?s2) (and (subset ?s1 ?s2) (subset ?s2 ?s1))))) :named @p_86) @p_85)) :rule forall_inst :args (@p_4 @p_2))
(step t46 (cl @p_86 @p_85) :rule or :premises (t45))
(step t47 (cl @p_85) :rule resolution :premises (t46 a4))
(step t48 (cl @p_84) :rule resolution :premises (t44 a8 t47))
(step t49 (cl (! (not (! (or @p_35 (! (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) :named @p_36)) :named @p_37)) :named @p_82) @p_35 @p_36) :rule or_pos)
(step t50 (cl @p_35 @p_36 @p_82) :rule reordering :premises (t49))
(step t51 (cl (not (! (= (! (or (! (not @p_36) :named @p_73) (! (not (! (or (! (not (! (member @quantifiers_skolemize_3 @p_4) :named @p_39)) :named @p_40) (! (member @quantifiers_skolemize_3 @p_2) :named @p_38)) :named @p_41)) :named @p_45)) :named @p_74) (! (or (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))) @p_45) :named @p_72)) :named @p_80)) (not @p_74) @p_72) :rule equiv_pos2)
(step t52 (cl (! (= @p_73 (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) :named @p_81)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_81 1 5))
(step t53 (cl (= @p_45 @p_45)) :rule refl)
(step t54 (cl @p_80) :rule cong :premises (t52 t53))
(step t55 (cl (! (=> @p_36 @p_45) :named @p_76) @p_36) :rule implies_neg1)
(anchor :step t56)
(assume t56.a0 @p_36)
(step t56.t0 (cl (not (! (= @p_36 @p_45) :named @p_77)) @p_73 @p_45) :rule equiv_pos2)
(anchor :step t56.t1 :args ((:= (?x Elem) @quantifiers_skolemize_3)))
(step t56.t1.t0 (cl (= (or (not @p_79) @p_78) @p_41)) :rule refl)
(step t56.t1 (cl (= (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))) @p_41)) :rule sko_forall)
(step t56.t2 (cl @p_77) :rule cong :premises (t56.t1))
(step t56.t3 (cl @p_45) :rule resolution :premises (t56.t0 t56.t2 t56.a0))
(step t56 (cl @p_73 @p_45) :rule subproof :discharge (t56.a0))
(step t57 (cl @p_76 @p_45) :rule resolution :premises (t55 t56))
(step t58 (cl @p_76 (! (not @p_45) :named @p_75)) :rule implies_neg2)
(step t59 (cl @p_76 @p_76) :rule resolution :premises (t57 t58))
(step t60 (cl @p_76) :rule contraction :premises (t59))
(step t61 (cl @p_73 @p_45) :rule implies :premises (t60))
(step t62 (cl @p_74 (not @p_73)) :rule or_neg :args (0))
(step t63 (cl @p_74 @p_75) :rule or_neg :args (1))
(step t64 (cl @p_74 @p_74) :rule resolution :premises (t61 t62 t63))
(step t65 (cl @p_74) :rule contraction :premises (t64))
(step t66 (cl @p_72) :rule resolution :premises (t51 t54 t65))
(step t67 (cl (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))) @p_45) :rule or :premises (t66))
(step t68 (cl (! (not (! (= (! (member @quantifiers_skolemize_3 @p_1) :named @p_54) (! (and (! (member @quantifiers_skolemize_3 a) :named @p_49) (! (member @quantifiers_skolemize_3 b) :named @p_60)) :named @p_67)) :named @p_69)) :named @p_71) @p_54 (! (not @p_67) :named @p_70)) :rule equiv_pos1)
(step t69 (cl @p_54 @p_70 @p_71) :rule reordering :premises (t68))
(step t70 (cl (or @p_14 @p_69)) :rule forall_inst :args (@quantifiers_skolemize_3 a b))
(step t71 (cl @p_14 @p_69) :rule or :premises (t70))
(step t72 (cl @p_69) :rule resolution :premises (t71 a6))
(step t73 (cl (! (and @p_54 (! (member @quantifiers_skolemize_3 c) :named @p_53)) :named @p_55) (not @p_54) (not @p_53)) :rule and_neg)
(step t74 (cl @p_67 (! (not @p_49) :named @p_66) (! (not @p_60) :named @p_68)) :rule and_neg)
(step t75 (cl @p_66 @p_67 @p_68) :rule reordering :premises (t74))
(step t76 (cl (! (not (! (and @p_60 @p_53) :named @p_61)) :named @p_65) @p_53) :rule and_pos :args (1))
(step t77 (cl @p_53 @p_65) :rule reordering :premises (t76))
(step t78 (cl @p_65 @p_60) :rule and_pos :args (0))
(step t79 (cl @p_60 @p_65) :rule reordering :premises (t78))
(step t80 (cl (! (not (! (= (! (member @quantifiers_skolemize_3 @p_3) :named @p_48) @p_61) :named @p_62)) :named @p_64) (! (not @p_48) :named @p_63) @p_61) :rule equiv_pos2)
(step t81 (cl @p_63 @p_61 @p_64) :rule reordering :premises (t80))
(step t82 (cl (or @p_14 @p_62)) :rule forall_inst :args (@quantifiers_skolemize_3 b c))
(step t83 (cl @p_14 @p_62) :rule or :premises (t82))
(step t84 (cl @p_62) :rule resolution :premises (t83 a6))
(step t85 (cl (! (not (! (and @p_49 @p_48) :named @p_50)) :named @p_59) @p_48) :rule and_pos :args (1))
(step t86 (cl @p_48 @p_59) :rule reordering :premises (t85))
(step t87 (cl @p_59 @p_49) :rule and_pos :args (0))
(step t88 (cl @p_49 @p_59) :rule reordering :premises (t87))
(step t89 (cl (! (not (! (= @p_38 @p_55) :named @p_56)) :named @p_58) @p_38 (! (not @p_55) :named @p_57)) :rule equiv_pos1)
(step t90 (cl @p_38 @p_57 @p_58) :rule reordering :premises (t89))
(step t91 (cl (or @p_14 @p_56)) :rule forall_inst :args (@quantifiers_skolemize_3 @p_1 c))
(step t92 (cl @p_14 @p_56) :rule or :premises (t91))
(step t93 (cl @p_56) :rule resolution :premises (t92 a6))
(step t94 (cl (! (not (! (= @p_39 @p_50) :named @p_51)) :named @p_52) @p_40 @p_50) :rule equiv_pos2)
(step t95 (cl @p_40 @p_50 @p_52) :rule reordering :premises (t94))
(step t96 (cl (or @p_14 @p_51)) :rule forall_inst :args (@quantifiers_skolemize_3 a @p_3))
(step t97 (cl @p_14 @p_51) :rule or :premises (t96))
(step t98 (cl @p_51) :rule resolution :premises (t97 a6))
(step t99 (cl @p_41 (not @p_38)) :rule or_neg :args (1))
(step t100 (cl (not (! (= (! (or @p_41 (! (not @p_40) :named @p_43)) :named @p_44) (! (or @p_41 @p_39) :named @p_42)) :named @p_46)) (not @p_44) @p_42) :rule equiv_pos2)
(step t101 (cl (= @p_41 @p_41)) :rule refl)
(step t102 (cl (! (= @p_43 @p_39) :named @p_47)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_47 1 5))
(step t103 (cl @p_46) :rule cong :premises (t101 t102))
(step t104 (cl @p_41 @p_43) :rule or_neg :args (0))
(step t105 (cl @p_44 @p_45) :rule or_neg :args (0))
(step t106 (cl @p_44 (not @p_43)) :rule or_neg :args (1))
(step t107 (cl @p_44 @p_44) :rule resolution :premises (t104 t105 t106))
(step t108 (cl @p_44) :rule contraction :premises (t107))
(step t109 (cl @p_42) :rule resolution :premises (t100 t103 t108))
(step t110 (cl @p_41 @p_39) :rule or :premises (t109))
(step t111 (cl @p_39 @p_41) :rule reordering :premises (t110))
(step t112 (cl @p_41) :rule resolution :premises (t69 t72 t73 t75 t77 t79 t81 t84 t86 t88 t90 t93 t95 t98 t99 t111))
(step t113 (cl (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) :rule resolution :premises (t67 t112))
(step t114 (cl (or (! (not (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) :named @p_33) @p_37)) :rule forall_inst :args (@p_4 @p_2))
(step t115 (cl @p_33 @p_37) :rule or :premises (t114))
(step t116 (cl (not (! (= (forall ((?s1 Set) (?s2 Set)) (=> (not (subset ?s1 ?s2)) (exists ((?x Elem)) (and (member ?x ?s1) (not (member ?x ?s2)))))) (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) :named @p_26)) (not (forall ((?s1 Set) (?s2 Set)) (=> (not (subset ?s1 ?s2)) (exists ((?x Elem)) (and (member ?x ?s1) (not (member ?x ?s2))))))) (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) :rule equiv_pos2)
(anchor :step t117 :args ((?s1 Set) (?s2 Set) (:= (?s1 Set) ?s1) (:= (?s2 Set) ?s2)))
(step t117.t0 (cl (= (! (not (subset ?s1 ?s2)) :named @p_29) @p_29)) :rule refl)
(step t117.t1 (cl (! (= (exists ((?x Elem)) (and (member ?x ?s1) (not (member ?x ?s2)))) (! (not (forall ((?x Elem)) (not (and (member ?x ?s1) (not (member ?x ?s2)))))) :named @p_30)) :named @p_32)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_32 13 6))
(step t117.t2 (cl (! (= (forall ((?x Elem)) (not (and (member ?x ?s1) (not (member ?x ?s2))))) (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2)))) :named @p_31)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_31 13 6))
(step t117.t3 (cl (= @p_30 (! (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2)))) :named @p_28))) :rule cong :premises (t117.t2))
(step t117.t4 (cl (= (exists ((?x Elem)) (and (member ?x ?s1) (not (member ?x ?s2)))) @p_28)) :rule trans :premises (t117.t1 t117.t3))
(step t117.t5 (cl (= (=> @p_29 (exists ((?x Elem)) (and (member ?x ?s1) (not (member ?x ?s2))))) (=> @p_29 @p_28))) :rule cong :premises (t117.t0 t117.t4))
(step t117 (cl (= (forall ((?s1 Set) (?s2 Set)) (=> (not (subset ?s1 ?s2)) (exists ((?x Elem)) (and (member ?x ?s1) (not (member ?x ?s2)))))) (forall ((?s1 Set) (?s2 Set)) (=> (not (subset ?s1 ?s2)) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2)))))))) :rule bind)
(step t118 (cl (! (= (forall ((?s1 Set) (?s2 Set)) (=> (not (subset ?s1 ?s2)) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2)))))) (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) :named @p_27)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_27 13 6))
(step t119 (cl @p_26) :rule trans :premises (t117 t118))
(step t120 (cl (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) :rule resolution :premises (t116 t119 a1))
(step t121 (cl @p_37) :rule resolution :premises (t115 t120))
(step t122 (cl @p_35) :rule resolution :premises (t50 t113 t121))
(step t123 (cl @p_34) :rule resolution :premises (t42 t48 t122))
(step t124 (cl (or @p_33 @p_25)) :rule forall_inst :args (@p_2 @p_4))
(step t125 (cl @p_33 @p_25) :rule or :premises (t124))
(step t126 (cl @p_25) :rule resolution :premises (t125 t120))
(step t127 (cl @p_23) :rule resolution :premises (t41 t123 t126))
(step t128 (cl @p_22) :rule resolution :premises (t39 t127))
(step t129 (cl @p_17) :rule resolution :premises (t22 t128))
(step t130 (cl (or @p_14 @p_18)) :rule forall_inst :args (@quantifiers_skolemize_4 @p_1 c))
(step t131 (cl @p_14 @p_18) :rule or :premises (t130))
(step t132 (cl @p_18) :rule resolution :premises (t131 a6))
(step t133 (cl @p_16) :rule resolution :premises (t10 t129 t132))
(step t134 (cl @p_15) :rule resolution :premises (t8 t133))
(step t135 (cl (! (not (! (and (! (member @quantifiers_skolemize_4 a) :named @p_9) @p_10) :named @p_11)) :named @p_106) @p_10) :rule and_pos :args (1))
(step t136 (cl @p_10 @p_106) :rule reordering :premises (t135))
(step t137 (cl (! (not (! (= @p_12 @p_11) :named @p_13)) :named @p_105) (! (not @p_12) :named @p_104) @p_11) :rule equiv_pos2)
(step t138 (cl @p_104 @p_11 @p_105) :rule reordering :premises (t137))
(step t139 (cl @p_103 @p_12) :rule and_pos :args (0))
(step t140 (cl @p_12 @p_103) :rule reordering :premises (t139))
(step t141 (cl @p_12) :rule resolution :premises (t140 t133))
(step t142 (cl (or @p_14 @p_13)) :rule forall_inst :args (@quantifiers_skolemize_4 a b))
(step t143 (cl @p_14 @p_13) :rule or :premises (t142))
(step t144 (cl @p_13) :rule resolution :premises (t143 a6))
(step t145 (cl @p_11) :rule resolution :premises (t138 t141 t144))
(step t146 (cl @p_10) :rule resolution :premises (t136 t145))
(step t147 (cl @p_112) :rule resolution :premises (t6 t134 t146))
(step t148 (cl (! (and @p_9 @p_7) :named @p_107) (not @p_9) (! (not @p_7) :named @p_8)) :rule and_neg)
(step t149 (cl (! (not (! (= @p_19 @p_107) :named @p_109)) :named @p_111) @p_19 (! (not @p_107) :named @p_108)) :rule equiv_pos1)
(step t150 (cl @p_19 @p_108 @p_111) :rule reordering :premises (t149))
(step t151 (cl @p_21 (! (not @p_19) :named @p_110)) :rule or_neg :args (1))
(step t152 (cl @p_110) :rule resolution :premises (t151 t128))
(step t153 (cl (or @p_14 @p_109)) :rule forall_inst :args (@quantifiers_skolemize_4 a @p_3))
(step t154 (cl @p_14 @p_109) :rule or :premises (t153))
(step t155 (cl @p_109) :rule resolution :premises (t154 a6))
(step t156 (cl @p_108) :rule resolution :premises (t150 t152 t155))
(step t157 (cl @p_106 @p_9) :rule and_pos :args (0))
(step t158 (cl @p_9 @p_106) :rule reordering :premises (t157))
(step t159 (cl @p_9) :rule resolution :premises (t158 t145))
(step t160 (cl @p_8) :rule resolution :premises (t148 t156 t159))
(step t161 (cl) :rule resolution :premises (t1 t4 t147 t160))
