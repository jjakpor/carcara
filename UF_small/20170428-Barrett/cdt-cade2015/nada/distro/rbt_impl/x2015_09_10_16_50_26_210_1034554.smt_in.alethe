unsat
(assume a0 (forall ((?v0 A$) (?v1 A$)) (= (fun_app$ (uua$ ?v0) ?v1) (fun_app$ (fun_app$a less$ ?v1) ?v0))))
(assume a1 (forall ((?v0 A_set$) (?v1 A$)) (= (fun_app$ (uu$ ?v0) ?v1) (fun_app$b (member$ ?v1) ?v0))))
(assume a2 (forall ((?v0 A_b_option_fun$) (?v1 A$)) (= (fun_app$ (uuc$ ?v0) ?v1) (not (= (fun_app$c ?v0 ?v1) none$)))))
(assume a3 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$a (uub$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$a ?v0 ?v2) ?v1))))
(assume a4 (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$) (?v2 A$)) (= (fun_app$ (fun_app$d (uud$ ?v0) ?v1) ?v2) (or (fun_app$ ?v0 ?v2) (fun_app$ ?v1 ?v2)))))
(assume a5 (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$) (?v2 A$)) (= (fun_app$ (fun_app$d (uue$ ?v0) ?v1) ?v2) (and (fun_app$ ?v0 ?v2) (fun_app$ ?v1 ?v2)))))
(assume a6 (forall ((?v0 A_set$) (?v1 A_a_bool_fun_fun$) (?v2 A$) (?v3 A$)) (= (fun_app$ (fun_app$a (fun_app$e (uuf$ ?v0) ?v1) ?v2) ?v3) (and (fun_app$b (member$ ?v3) ?v0) (fun_app$ (fun_app$a ?v1 ?v3) ?v2)))))
(assume a7 (forall ((?v0 A$)) (= (fun_app$c uug$ ?v0) none$)))
(assume a8 (! (not (! (fun_app$f (rbt_greater$ less$ k$) t2$) :named @p_1)) :named @p_2))
(assume a9 (forall ((?v0 A$) (?v1 A$)) (= (not (fun_app$ (fun_app$a less$ ?v0) ?v1)) (or (fun_app$ (fun_app$a less$ ?v1) ?v0) (= ?v0 ?v1)))))
(assume a10 (forall ((?v0 A$) (?v1 A$)) (= (not (= ?v0 ?v1)) (or (fun_app$ (fun_app$a less$ ?v0) ?v1) (fun_app$ (fun_app$a less$ ?v1) ?v0)))))
(assume a11 (forall ((?v0 A$) (?v1 A$)) (=> (and (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) false) (and (=> (= ?v0 ?v1) false) (=> (fun_app$ (fun_app$a less$ ?v1) ?v0) false))) false)))
(assume a12 (forall ((?v0 A$) (?v1 A$)) (=> (and (fun_app$ (fun_app$a less$ ?v0) ?v1) (=> (not false) (fun_app$ (fun_app$a less$ ?v1) ?v0))) false)))
(assume a13 (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (=> (and (fun_app$ (fun_app$a less$ ?v0) ?v1) (fun_app$ (fun_app$a less$ ?v1) ?v2)) (fun_app$ (fun_app$a less$ ?v0) ?v2))))
(assume a14 (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (=> (and (fun_app$ (fun_app$a less$ ?v0) ?v1) (fun_app$ (fun_app$a less$ ?v2) ?v0)) (fun_app$ (fun_app$a less$ ?v2) ?v1))))
(assume a15 (forall ((?v0 A$) (?v1 A$)) (=> (and (fun_app$ (fun_app$a less$ ?v0) ?v1) (fun_app$ (fun_app$a less$ ?v1) ?v0)) false)))
(assume a16 (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (=> (and (fun_app$ (fun_app$a less$ ?v0) ?v1) (= ?v1 ?v2)) (fun_app$ (fun_app$a less$ ?v0) ?v2))))
(assume a17 (forall ((?v0 A$) (?v1 A$)) (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) (= (= ?v1 ?v0) false))))
(assume a18 (forall ((?v0 A$) (?v1 A$)) (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) (= (= ?v0 ?v1) false))))
(assume a19 (forall ((?v0 A$) (?v1 A$) (?v2 Bool)) (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) (= (=> (fun_app$ (fun_app$a less$ ?v1) ?v0) ?v2) true))))
(assume a20 (forall ((?v0 A$) (?v1 A$)) (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) (= (not (fun_app$ (fun_app$a less$ ?v1) ?v0)) true))))
(assume a21 (forall ((?v0 A$) (?v1 A$)) (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) (not (fun_app$ (fun_app$a less$ ?v1) ?v0)))))
(assume a22 (forall ((?v0 A$) (?v1 A$)) (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) (not (= ?v0 ?v1)))))
(assume a23 (forall ((?v0 A$) (?v1 A$)) (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) (not (= ?v1 ?v0)))))
(assume a24 (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (=> (and (= ?v0 ?v1) (fun_app$ (fun_app$a less$ ?v1) ?v2)) (fun_app$ (fun_app$a less$ ?v0) ?v2))))
(assume a25 (forall ((?v0 A$) (?v1 A$)) (=> (not (fun_app$ (fun_app$a less$ ?v0) ?v1)) (= (not (fun_app$ (fun_app$a less$ ?v1) ?v0)) (= ?v1 ?v0)))))
(assume a26 (forall ((?v0 A$) (?v1 A$)) (=> (and (not (= ?v0 ?v1)) (and (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) false) (=> (fun_app$ (fun_app$a less$ ?v1) ?v0) false))) false)))
(assume a27 (forall ((?v0 A$) (?v1 A$)) (or (fun_app$ (fun_app$a less$ ?v0) ?v1) (or (= ?v0 ?v1) (fun_app$ (fun_app$a less$ ?v1) ?v0)))))
(assume a28 (forall ((?v0 A$)) (not (fun_app$ (fun_app$a less$ ?v0) ?v0))))
(assume a29 (forall ((?v0 A$) (?v1 A$) (?v2 A_b_rbt$)) (=> (and (fun_app$ (fun_app$a less$ ?v0) ?v1) (fun_app$f (rbt_greater$ less$ ?v1) ?v2)) (fun_app$f (rbt_greater$ less$ ?v0) ?v2))))
(assume a30 (! (fun_app$f (! (rbt_sorted$ less$) :named @p_3) (branch$ c$ t1$ k$ v$ t2$)) :named @p_4))
(assume a31 (forall ((?v0 A$) (?v1 Color$) (?v2 A_b_rbt$) (?v3 A$) (?v4 B$) (?v5 A_b_rbt$)) (= (fun_app$f (rbt_greater$ less$ ?v0) (branch$ ?v1 ?v2 ?v3 ?v4 ?v5)) (and (fun_app$ (fun_app$a less$ ?v0) ?v3) (and (fun_app$f (rbt_greater$ less$ ?v0) ?v2) (fun_app$f (rbt_greater$ less$ ?v0) ?v5))))))
(assume a32 (forall ((?v0 A$) (?v1 A_b_rbt$) (?v2 A$)) (=> (and (fun_app$f (rbt_less$ less$ ?v0) ?v1) (fun_app$ (fun_app$a less$ ?v0) ?v2)) (fun_app$f (rbt_less$ less$ ?v2) ?v1))))
(assume a33 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 Color$) (?v3 A_b_rbt$) (?v4 A$) (?v5 B$) (?v6 A_b_rbt$)) (= (fun_app$f (rbt_greater$ ?v0 ?v1) (branch$ ?v2 ?v3 ?v4 ?v5 ?v6)) (and (fun_app$ (fun_app$a ?v0 ?v1) ?v4) (and (fun_app$f (rbt_greater$ ?v0 ?v1) ?v3) (fun_app$f (rbt_greater$ ?v0 ?v1) ?v6))))))
(assume a34 (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (and (fun_app$f (rbt_less$ less$ ?v2) ?v1) (and (fun_app$f (rbt_greater$ less$ ?v2) ?v4) (and (fun_app$f (rbt_sorted$ less$) ?v1) (fun_app$f (rbt_sorted$ less$) ?v4)))))))
(assume a35 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) ?v1) (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v1) ?v2)) (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) ?v2))))
(assume a36 (forall ((?v0 A_list$) (?v1 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) ?v1) (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v1) ?v0)) (= ?v0 ?v1))))
(assume a37 (forall ((?v0 A_list$)) (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) ?v0)))
(assume a38 (forall ((?v0 A_list$) (?v1 A_list$)) (or (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) ?v1) (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v1) ?v0))))
(assume a39 (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$) (?v5 Color$) (?v6 A_b_rbt$) (?v7 A$) (?v8 B$) (?v9 A_b_rbt$)) (= (= (branch$ ?v0 ?v1 ?v2 ?v3 ?v4) (branch$ ?v5 ?v6 ?v7 ?v8 ?v9)) (and (= ?v0 ?v5) (and (= ?v1 ?v6) (and (= ?v2 ?v7) (and (= ?v3 ?v8) (= ?v4 ?v9))))))))
(assume a40 (= (fun_app$f @p_3 empty$) true))
(assume a41 (forall ((?v0 A$)) (= (fun_app$f (rbt_greater$ less$ ?v0) empty$) true)))
(assume a42 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (fun_app$g (fun_app$h (lexordp$ less$) ?v1) ?v2)) (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v2))))
(assume a43 (forall ((?v0 A_list$)) (not (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v0))))
(assume a44 (forall ((?v0 A_list$) (?v1 A_list$)) (or (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (or (= ?v0 ?v1) (fun_app$g (fun_app$h (lexordp$ less$) ?v1) ?v0)))))
(assume a45 (forall ((?v0 A_list$)) (=> (forall ((?v1 A$)) (not (fun_app$ (fun_app$a less$ ?v1) ?v1))) (not (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v0)))))
(assume a46 (forall ((?v0 A_list$) (?v1 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (fun_app$g (fun_app$h (lexordp$ less$) ?v1) ?v0)) false)))
(assume a47 (forall ((?v0 A_list$) (?v1 A_list$)) (=> (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) ?v1))))
(assume a48 (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$)) (=> (forall ((?v2 A$)) (= (fun_app$ ?v0 ?v2) (fun_app$ ?v1 ?v2))) (= (collect$ ?v0) (collect$ ?v1)))))
(assume a49 (forall ((?v0 A_set$)) (= (collect$ (uu$ ?v0)) ?v0)))
(assume a50 (forall ((?v0 A$) (?v1 A_bool_fun$)) (= (fun_app$b (member$ ?v0) (collect$ ?v1)) (fun_app$ ?v1 ?v0))))
(assume a51 (forall ((?v0 A_list$) (?v1 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) ?v1) (or (= ?v0 ?v1) (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1)))))
(assume a52 (forall ((?v0 A_list$) (?v1 A_list$)) (= (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (and (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) ?v1) (not (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v1) ?v0))))))
(assume a53 (forall ((?v0 A$) (?v1 Color$) (?v2 A_b_rbt$) (?v3 A$) (?v4 B$) (?v5 A_b_rbt$)) (= (fun_app$f (rbt_less$ less$ ?v0) (branch$ ?v1 ?v2 ?v3 ?v4 ?v5)) (and (fun_app$ (fun_app$a less$ ?v3) ?v0) (and (fun_app$f (rbt_less$ less$ ?v0) ?v2) (fun_app$f (rbt_less$ less$ ?v0) ?v5))))))
(assume a54 (forall ((?v0 A$)) (= (fun_app$f (rbt_less$ less$ ?v0) empty$) true)))
(assume a55 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 Color$) (?v3 A_b_rbt$) (?v4 A$) (?v5 B$) (?v6 A_b_rbt$)) (= (fun_app$f (rbt_less$ ?v0 ?v1) (branch$ ?v2 ?v3 ?v4 ?v5 ?v6)) (and (fun_app$ (fun_app$a ?v0 ?v4) ?v1) (and (fun_app$f (rbt_less$ ?v0 ?v1) ?v3) (fun_app$f (rbt_less$ ?v0 ?v1) ?v6))))))
(assume a56 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (= (fun_app$f (rbt_less$ ?v0 ?v1) empty$) true)))
(assume a57 (forall ((?v0 A_a_bool_fun_fun$)) (= (fun_app$f (rbt_sorted$ ?v0) empty$) true)))
(assume a58 (forall ((?v0 A_b_rbt$)) (=> (and (=> (= ?v0 empty$) false) (forall ((?v1 Color$) (?v2 A_b_rbt$) (?v3 A$) (?v4 B$) (?v5 A_b_rbt$)) (=> (= ?v0 (branch$ ?v1 ?v2 ?v3 ?v4 ?v5)) false))) false)))
(assume a59 (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (not (= empty$ (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)))))
(assume a60 (forall ((?v0 A_a_bool_fun_fun$) (?v1 Color$) (?v2 A_b_rbt$) (?v3 A$) (?v4 B$) (?v5 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ ?v0) (branch$ ?v1 ?v2 ?v3 ?v4 ?v5)) (and (fun_app$f (rbt_less$ ?v0 ?v3) ?v2) (and (fun_app$f (rbt_greater$ ?v0 ?v3) ?v5) (and (fun_app$f (rbt_sorted$ ?v0) ?v2) (fun_app$f (rbt_sorted$ ?v0) ?v5)))))))
(assume a61 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (= (fun_app$f (rbt_greater$ ?v0 ?v1) empty$) true)))
(assume a62 (forall ((?v0 A_list$)) (fun_app$g (fun_app$h (lexordp_eq$ less$) nil$) ?v0)))
(assume a63 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$)) (=> (fun_app$g (fun_app$h (lexordp$ ?v0) ?v1) ?v2) (fun_app$g (fun_app$h (lexordp_eq$ ?v0) ?v1) ?v2))))
(assume a64 (forall ((?v0 A$) (?v1 A$) (?v2 A_list$) (?v3 A_list$)) (=> (and (not (fun_app$ (fun_app$a less$ ?v0) ?v1)) (and (not (fun_app$ (fun_app$a less$ ?v1) ?v0)) (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v2) ?v3))) (fun_app$g (fun_app$h (lexordp_eq$ less$) (cons$ ?v0 ?v2)) (cons$ ?v1 ?v3)))))
(assume a65 (forall ((?v0 A$) (?v1 A$) (?v2 A_list$) (?v3 A_list$)) (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) (fun_app$g (fun_app$h (lexordp$ less$) (cons$ ?v0 ?v2)) (cons$ ?v1 ?v3)))))
(assume a66 (forall ((?v0 A$) (?v1 A$) (?v2 A_list$) (?v3 A_list$)) (=> (and (not (fun_app$ (fun_app$a less$ ?v0) ?v1)) (and (not (fun_app$ (fun_app$a less$ ?v1) ?v0)) (fun_app$g (fun_app$h (lexordp$ less$) ?v2) ?v3))) (fun_app$g (fun_app$h (lexordp$ less$) (cons$ ?v0 ?v2)) (cons$ ?v1 ?v3)))))
(assume a67 (forall ((?v0 A$) (?v1 A$) (?v2 A_list$) (?v3 A_list$)) (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) (fun_app$g (fun_app$h (lexordp_eq$ less$) (cons$ ?v0 ?v2)) (cons$ ?v1 ?v3)))))
(assume a68 (forall ((?v0 A_list$) (?v1 A_list_list$) (?v2 A_list$) (?v3 A_list_list$)) (= (= (cons$a ?v0 ?v1) (cons$a ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a69 (forall ((?v0 A$) (?v1 A_list$) (?v2 A$) (?v3 A_list$)) (= (= (cons$ ?v0 ?v1) (cons$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a70 (forall ((?v0 A_list$) (?v1 A_list$)) (= (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (or (exists ((?v2 A$) (?v3 A_list$)) (and (= ?v0 nil$) (= ?v1 (cons$ ?v2 ?v3)))) (or (exists ((?v2 A$) (?v3 A$) (?v4 A_list$) (?v5 A_list$)) (and (= ?v0 (cons$ ?v2 ?v4)) (and (= ?v1 (cons$ ?v3 ?v5)) (fun_app$ (fun_app$a less$ ?v2) ?v3)))) (exists ((?v2 A$) (?v3 A$) (?v4 A_list$) (?v5 A_list$)) (and (= ?v0 (cons$ ?v2 ?v4)) (and (= ?v1 (cons$ ?v3 ?v5)) (and (not (fun_app$ (fun_app$a less$ ?v2) ?v3)) (and (not (fun_app$ (fun_app$a less$ ?v3) ?v2)) (fun_app$g (fun_app$h (lexordp$ less$) ?v4) ?v5)))))))))))
(assume a71 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list_a_list_bool_fun_fun$)) (=> (and (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (and (forall ((?v3 A$) (?v4 A_list$)) (fun_app$g (fun_app$h ?v2 nil$) (cons$ ?v3 ?v4))) (and (forall ((?v3 A$) (?v4 A_list$) (?v5 A$) (?v6 A_list$)) (=> (fun_app$ (fun_app$a less$ ?v3) ?v5) (fun_app$g (fun_app$h ?v2 (cons$ ?v3 ?v4)) (cons$ ?v5 ?v6)))) (forall ((?v3 A$) (?v4 A_list$) (?v5 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp$ less$) ?v4) ?v5) (fun_app$g (fun_app$h ?v2 ?v4) ?v5)) (fun_app$g (fun_app$h ?v2 (cons$ ?v3 ?v4)) (cons$ ?v3 ?v5))))))) (fun_app$g (fun_app$h ?v2 ?v0) ?v1))))
(assume a72 (forall ((?v0 A_list$) (?v1 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (and (forall ((?v2 A$) (?v3 A_list$)) (=> (and (= ?v0 nil$) (= ?v1 (cons$ ?v2 ?v3))) false)) (and (forall ((?v2 A$) (?v3 A_list$) (?v4 A$) (?v5 A_list$)) (=> (and (= ?v0 (cons$ ?v2 ?v3)) (and (= ?v1 (cons$ ?v4 ?v5)) (fun_app$ (fun_app$a less$ ?v2) ?v4))) false)) (forall ((?v2 A$) (?v3 A_list$) (?v4 A_list$)) (=> (and (= ?v0 (cons$ ?v2 ?v3)) (and (= ?v1 (cons$ ?v2 ?v4)) (fun_app$g (fun_app$h (lexordp$ less$) ?v3) ?v4))) false))))) false)))
(assume a73 (forall ((?v0 A_list$) (?v1 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (and (forall ((?v2 A$) (?v3 A_list$)) (=> (and (= ?v0 nil$) (= ?v1 (cons$ ?v2 ?v3))) false)) (and (forall ((?v2 A$) (?v3 A$) (?v4 A_list$) (?v5 A_list$)) (=> (and (= ?v0 (cons$ ?v2 ?v4)) (and (= ?v1 (cons$ ?v3 ?v5)) (fun_app$ (fun_app$a less$ ?v2) ?v3))) false)) (forall ((?v2 A$) (?v3 A$) (?v4 A_list$) (?v5 A_list$)) (=> (and (= ?v0 (cons$ ?v2 ?v4)) (and (= ?v1 (cons$ ?v3 ?v5)) (and (not (fun_app$ (fun_app$a less$ ?v2) ?v3)) (and (not (fun_app$ (fun_app$a less$ ?v3) ?v2)) (fun_app$g (fun_app$h (lexordp$ less$) ?v4) ?v5))))) false))))) false)))
(assume a74 (forall ((?v0 A$) (?v1 A_list$)) (fun_app$g (fun_app$h (lexordp$ less$) nil$) (cons$ ?v0 ?v1))))
(assume a75 (forall ((?v0 A_list$) (?v1 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) ?v1) (or (exists ((?v2 A_list$)) (and (= ?v0 nil$) (= ?v1 ?v2))) (or (exists ((?v2 A$) (?v3 A$) (?v4 A_list$) (?v5 A_list$)) (and (= ?v0 (cons$ ?v2 ?v4)) (and (= ?v1 (cons$ ?v3 ?v5)) (fun_app$ (fun_app$a less$ ?v2) ?v3)))) (exists ((?v2 A$) (?v3 A$) (?v4 A_list$) (?v5 A_list$)) (and (= ?v0 (cons$ ?v2 ?v4)) (and (= ?v1 (cons$ ?v3 ?v5)) (and (not (fun_app$ (fun_app$a less$ ?v2) ?v3)) (and (not (fun_app$ (fun_app$a less$ ?v3) ?v2)) (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v4) ?v5)))))))))))
(assume a76 (forall ((?v0 A_list$) (?v1 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) ?v1) (and (forall ((?v2 A_list$)) (=> (and (= ?v0 nil$) (= ?v1 ?v2)) false)) (and (forall ((?v2 A$) (?v3 A$) (?v4 A_list$) (?v5 A_list$)) (=> (and (= ?v0 (cons$ ?v2 ?v4)) (and (= ?v1 (cons$ ?v3 ?v5)) (fun_app$ (fun_app$a less$ ?v2) ?v3))) false)) (forall ((?v2 A$) (?v3 A$) (?v4 A_list$) (?v5 A_list$)) (=> (and (= ?v0 (cons$ ?v2 ?v4)) (and (= ?v1 (cons$ ?v3 ?v5)) (and (not (fun_app$ (fun_app$a less$ ?v2) ?v3)) (and (not (fun_app$ (fun_app$a less$ ?v3) ?v2)) (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v4) ?v5))))) false))))) false)))
(assume a77 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list_list$) (?v3 A_list$) (?v4 A_list_list$)) (= (fun_app$i (fun_app$j (lexordp$a ?v0) (cons$a ?v1 ?v2)) (cons$a ?v3 ?v4)) (or (fun_app$g (fun_app$h ?v0 ?v1) ?v3) (and (not (fun_app$g (fun_app$h ?v0 ?v3) ?v1)) (fun_app$i (fun_app$j (lexordp$a ?v0) ?v2) ?v4))))))
(assume a78 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_list$) (?v3 A$) (?v4 A_list$)) (= (fun_app$g (fun_app$h (lexordp$ ?v0) (cons$ ?v1 ?v2)) (cons$ ?v3 ?v4)) (or (fun_app$ (fun_app$a ?v0 ?v1) ?v3) (and (not (fun_app$ (fun_app$a ?v0 ?v3) ?v1)) (fun_app$g (fun_app$h (lexordp$ ?v0) ?v2) ?v4))))))
(assume a79 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list_list$)) (= (fun_app$i (fun_app$j (lexordp$a ?v0) ?v1) nil$a) false)))
(assume a80 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod_list$)) (= (fun_app$l (fun_app$k (lexordp$b ?v0) ?v1) nil$b) false)))
(assume a81 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$)) (= (fun_app$g (fun_app$h (lexordp$ ?v0) ?v1) nil$) false)))
(assume a82 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list_list$)) (= (fun_app$i (fun_app$j (lexordp$a ?v0) nil$a) ?v1) (not (= ?v1 nil$a)))))
(assume a83 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod_list$)) (= (fun_app$l (fun_app$k (lexordp$b ?v0) nil$b) ?v1) (not (= ?v1 nil$b)))))
(assume a84 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$)) (= (fun_app$g (fun_app$h (lexordp$ ?v0) nil$) ?v1) (not (= ?v1 nil$)))))
(assume a85 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list_list$) (?v3 A_list$) (?v4 A_list_list$)) (= (fun_app$i (fun_app$j (lexordp_eq$a ?v0) (cons$a ?v1 ?v2)) (cons$a ?v3 ?v4)) (or (fun_app$g (fun_app$h ?v0 ?v1) ?v3) (and (not (fun_app$g (fun_app$h ?v0 ?v3) ?v1)) (fun_app$i (fun_app$j (lexordp_eq$a ?v0) ?v2) ?v4))))))
(assume a86 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_list$) (?v3 A$) (?v4 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ ?v0) (cons$ ?v1 ?v2)) (cons$ ?v3 ?v4)) (or (fun_app$ (fun_app$a ?v0 ?v1) ?v3) (and (not (fun_app$ (fun_app$a ?v0 ?v3) ?v1)) (fun_app$g (fun_app$h (lexordp_eq$ ?v0) ?v2) ?v4))))))
(assume a87 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list_list$)) (= (fun_app$i (fun_app$j (lexordp_eq$a ?v0) nil$a) ?v1) true)))
(assume a88 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod_list$)) (= (fun_app$l (fun_app$k (lexordp_eq$b ?v0) nil$b) ?v1) true)))
(assume a89 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ ?v0) nil$) ?v1) true)))
(assume a90 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list_list$)) (= (fun_app$i (fun_app$j (lexordp_eq$a ?v0) ?v1) nil$a) (= ?v1 nil$a))))
(assume a91 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod_list$)) (= (fun_app$l (fun_app$k (lexordp_eq$b ?v0) ?v1) nil$b) (= ?v1 nil$b))))
(assume a92 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ ?v0) ?v1) nil$) (= ?v1 nil$))))
(assume a93 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod$) (?v2 A_b_prod_list$)) (= (fun_app$l (fun_app$k (lexordp_eq$b ?v0) (cons$b ?v1 ?v2)) nil$b) false)))
(assume a94 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list_list$)) (= (fun_app$i (fun_app$j (lexordp_eq$a ?v0) (cons$a ?v1 ?v2)) nil$a) false)))
(assume a95 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ ?v0) (cons$ ?v1 ?v2)) nil$) false)))
(assume a96 (forall ((?v0 A$) (?v1 A_list$) (?v2 A$) (?v3 A_list$)) (= (fun_app$g (fun_app$h (lexordp$ less$) (cons$ ?v0 ?v1)) (cons$ ?v2 ?v3)) (or (fun_app$ (fun_app$a less$ ?v0) ?v2) (and (not (fun_app$ (fun_app$a less$ ?v2) ?v0)) (fun_app$g (fun_app$h (lexordp$ less$) ?v1) ?v3))))))
(assume a97 (forall ((?v0 A$) (?v1 A_list$) (?v2 A$) (?v3 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ less$) (cons$ ?v0 ?v1)) (cons$ ?v2 ?v3)) (or (fun_app$ (fun_app$a less$ ?v0) ?v2) (and (not (fun_app$ (fun_app$a less$ ?v2) ?v0)) (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v1) ?v3))))))
(assume a98 (forall ((?v0 A_list$)) (= (fun_app$g (fun_app$h (lexordp$ less$) nil$) ?v0) (not (= ?v0 nil$)))))
(assume a99 (forall ((?v0 A_list$)) (= (fun_app$g (fun_app$h (lexordp$ less$) ?v0) nil$) false)))
(assume a100 (forall ((?v0 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ less$) ?v0) nil$) (= ?v0 nil$))))
(assume a101 (forall ((?v0 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ less$) nil$) ?v0) true)))
(assume a102 (forall ((?v0 A$) (?v1 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ less$) (cons$ ?v0 ?v1)) nil$) false)))
(assume a103 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod_list$) (?v2 A_b_prod_list$)) (= (fun_app$l (fun_app$k (lexordp$b ?v0) ?v1) ?v2) (or (exists ((?v3 A_b_prod$) (?v4 A_b_prod_list$)) (and (= ?v1 nil$b) (= ?v2 (cons$b ?v3 ?v4)))) (or (exists ((?v3 A_b_prod$) (?v4 A_b_prod$) (?v5 A_b_prod_list$) (?v6 A_b_prod_list$)) (and (= ?v1 (cons$b ?v3 ?v5)) (and (= ?v2 (cons$b ?v4 ?v6)) (fun_app$m (fun_app$n ?v0 ?v3) ?v4)))) (exists ((?v3 A_b_prod$) (?v4 A_b_prod$) (?v5 A_b_prod_list$) (?v6 A_b_prod_list$)) (and (= ?v1 (cons$b ?v3 ?v5)) (and (= ?v2 (cons$b ?v4 ?v6)) (and (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (and (not (fun_app$m (fun_app$n ?v0 ?v4) ?v3)) (fun_app$l (fun_app$k (lexordp$b ?v0) ?v5) ?v6)))))))))))
(assume a104 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list_list$) (?v2 A_list_list$)) (= (fun_app$i (fun_app$j (lexordp$a ?v0) ?v1) ?v2) (or (exists ((?v3 A_list$) (?v4 A_list_list$)) (and (= ?v1 nil$a) (= ?v2 (cons$a ?v3 ?v4)))) (or (exists ((?v3 A_list$) (?v4 A_list$) (?v5 A_list_list$) (?v6 A_list_list$)) (and (= ?v1 (cons$a ?v3 ?v5)) (and (= ?v2 (cons$a ?v4 ?v6)) (fun_app$g (fun_app$h ?v0 ?v3) ?v4)))) (exists ((?v3 A_list$) (?v4 A_list$) (?v5 A_list_list$) (?v6 A_list_list$)) (and (= ?v1 (cons$a ?v3 ?v5)) (and (= ?v2 (cons$a ?v4 ?v6)) (and (not (fun_app$g (fun_app$h ?v0 ?v3) ?v4)) (and (not (fun_app$g (fun_app$h ?v0 ?v4) ?v3)) (fun_app$i (fun_app$j (lexordp$a ?v0) ?v5) ?v6)))))))))))
(assume a105 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$)) (= (fun_app$g (fun_app$h (lexordp$ ?v0) ?v1) ?v2) (or (exists ((?v3 A$) (?v4 A_list$)) (and (= ?v1 nil$) (= ?v2 (cons$ ?v3 ?v4)))) (or (exists ((?v3 A$) (?v4 A$) (?v5 A_list$) (?v6 A_list$)) (and (= ?v1 (cons$ ?v3 ?v5)) (and (= ?v2 (cons$ ?v4 ?v6)) (fun_app$ (fun_app$a ?v0 ?v3) ?v4)))) (exists ((?v3 A$) (?v4 A$) (?v5 A_list$) (?v6 A_list$)) (and (= ?v1 (cons$ ?v3 ?v5)) (and (= ?v2 (cons$ ?v4 ?v6)) (and (not (fun_app$ (fun_app$a ?v0 ?v3) ?v4)) (and (not (fun_app$ (fun_app$a ?v0 ?v4) ?v3)) (fun_app$g (fun_app$h (lexordp$ ?v0) ?v5) ?v6)))))))))))
(assume a106 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod_list$) (?v2 A_b_prod_list$)) (= (fun_app$l (fun_app$k (lexordp_eq$b ?v0) ?v1) ?v2) (or (exists ((?v3 A_b_prod_list$)) (and (= ?v1 nil$b) (= ?v2 ?v3))) (or (exists ((?v3 A_b_prod$) (?v4 A_b_prod$) (?v5 A_b_prod_list$) (?v6 A_b_prod_list$)) (and (= ?v1 (cons$b ?v3 ?v5)) (and (= ?v2 (cons$b ?v4 ?v6)) (fun_app$m (fun_app$n ?v0 ?v3) ?v4)))) (exists ((?v3 A_b_prod$) (?v4 A_b_prod$) (?v5 A_b_prod_list$) (?v6 A_b_prod_list$)) (and (= ?v1 (cons$b ?v3 ?v5)) (and (= ?v2 (cons$b ?v4 ?v6)) (and (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (and (not (fun_app$m (fun_app$n ?v0 ?v4) ?v3)) (fun_app$l (fun_app$k (lexordp_eq$b ?v0) ?v5) ?v6)))))))))))
(assume a107 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list_list$) (?v2 A_list_list$)) (= (fun_app$i (fun_app$j (lexordp_eq$a ?v0) ?v1) ?v2) (or (exists ((?v3 A_list_list$)) (and (= ?v1 nil$a) (= ?v2 ?v3))) (or (exists ((?v3 A_list$) (?v4 A_list$) (?v5 A_list_list$) (?v6 A_list_list$)) (and (= ?v1 (cons$a ?v3 ?v5)) (and (= ?v2 (cons$a ?v4 ?v6)) (fun_app$g (fun_app$h ?v0 ?v3) ?v4)))) (exists ((?v3 A_list$) (?v4 A_list$) (?v5 A_list_list$) (?v6 A_list_list$)) (and (= ?v1 (cons$a ?v3 ?v5)) (and (= ?v2 (cons$a ?v4 ?v6)) (and (not (fun_app$g (fun_app$h ?v0 ?v3) ?v4)) (and (not (fun_app$g (fun_app$h ?v0 ?v4) ?v3)) (fun_app$i (fun_app$j (lexordp_eq$a ?v0) ?v5) ?v6)))))))))))
(assume a108 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$)) (= (fun_app$g (fun_app$h (lexordp_eq$ ?v0) ?v1) ?v2) (or (exists ((?v3 A_list$)) (and (= ?v1 nil$) (= ?v2 ?v3))) (or (exists ((?v3 A$) (?v4 A$) (?v5 A_list$) (?v6 A_list$)) (and (= ?v1 (cons$ ?v3 ?v5)) (and (= ?v2 (cons$ ?v4 ?v6)) (fun_app$ (fun_app$a ?v0 ?v3) ?v4)))) (exists ((?v3 A$) (?v4 A$) (?v5 A_list$) (?v6 A_list$)) (and (= ?v1 (cons$ ?v3 ?v5)) (and (= ?v2 (cons$ ?v4 ?v6)) (and (not (fun_app$ (fun_app$a ?v0 ?v3) ?v4)) (and (not (fun_app$ (fun_app$a ?v0 ?v4) ?v3)) (fun_app$g (fun_app$h (lexordp_eq$ ?v0) ?v5) ?v6)))))))))))
(assume a109 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod_list$) (?v2 A_b_prod_list$)) (=> (and (fun_app$l (fun_app$k (lexordp$b ?v0) ?v1) ?v2) (and (forall ((?v3 A_b_prod$) (?v4 A_b_prod_list$)) (=> (and (= ?v1 nil$b) (= ?v2 (cons$b ?v3 ?v4))) false)) (and (forall ((?v3 A_b_prod$) (?v4 A_b_prod$) (?v5 A_b_prod_list$) (?v6 A_b_prod_list$)) (=> (and (= ?v1 (cons$b ?v3 ?v5)) (and (= ?v2 (cons$b ?v4 ?v6)) (fun_app$m (fun_app$n ?v0 ?v3) ?v4))) false)) (forall ((?v3 A_b_prod$) (?v4 A_b_prod$) (?v5 A_b_prod_list$) (?v6 A_b_prod_list$)) (=> (and (= ?v1 (cons$b ?v3 ?v5)) (and (= ?v2 (cons$b ?v4 ?v6)) (and (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (and (not (fun_app$m (fun_app$n ?v0 ?v4) ?v3)) (fun_app$l (fun_app$k (lexordp$b ?v0) ?v5) ?v6))))) false))))) false)))
(assume a110 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list_list$) (?v2 A_list_list$)) (=> (and (fun_app$i (fun_app$j (lexordp$a ?v0) ?v1) ?v2) (and (forall ((?v3 A_list$) (?v4 A_list_list$)) (=> (and (= ?v1 nil$a) (= ?v2 (cons$a ?v3 ?v4))) false)) (and (forall ((?v3 A_list$) (?v4 A_list$) (?v5 A_list_list$) (?v6 A_list_list$)) (=> (and (= ?v1 (cons$a ?v3 ?v5)) (and (= ?v2 (cons$a ?v4 ?v6)) (fun_app$g (fun_app$h ?v0 ?v3) ?v4))) false)) (forall ((?v3 A_list$) (?v4 A_list$) (?v5 A_list_list$) (?v6 A_list_list$)) (=> (and (= ?v1 (cons$a ?v3 ?v5)) (and (= ?v2 (cons$a ?v4 ?v6)) (and (not (fun_app$g (fun_app$h ?v0 ?v3) ?v4)) (and (not (fun_app$g (fun_app$h ?v0 ?v4) ?v3)) (fun_app$i (fun_app$j (lexordp$a ?v0) ?v5) ?v6))))) false))))) false)))
(assume a111 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp$ ?v0) ?v1) ?v2) (and (forall ((?v3 A$) (?v4 A_list$)) (=> (and (= ?v1 nil$) (= ?v2 (cons$ ?v3 ?v4))) false)) (and (forall ((?v3 A$) (?v4 A$) (?v5 A_list$) (?v6 A_list$)) (=> (and (= ?v1 (cons$ ?v3 ?v5)) (and (= ?v2 (cons$ ?v4 ?v6)) (fun_app$ (fun_app$a ?v0 ?v3) ?v4))) false)) (forall ((?v3 A$) (?v4 A$) (?v5 A_list$) (?v6 A_list$)) (=> (and (= ?v1 (cons$ ?v3 ?v5)) (and (= ?v2 (cons$ ?v4 ?v6)) (and (not (fun_app$ (fun_app$a ?v0 ?v3) ?v4)) (and (not (fun_app$ (fun_app$a ?v0 ?v4) ?v3)) (fun_app$g (fun_app$h (lexordp$ ?v0) ?v5) ?v6))))) false))))) false)))
(assume a112 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod_list$) (?v2 A_b_prod_list$)) (=> (and (fun_app$l (fun_app$k (lexordp_eq$b ?v0) ?v1) ?v2) (and (forall ((?v3 A_b_prod_list$)) (=> (and (= ?v1 nil$b) (= ?v2 ?v3)) false)) (and (forall ((?v3 A_b_prod$) (?v4 A_b_prod$) (?v5 A_b_prod_list$) (?v6 A_b_prod_list$)) (=> (and (= ?v1 (cons$b ?v3 ?v5)) (and (= ?v2 (cons$b ?v4 ?v6)) (fun_app$m (fun_app$n ?v0 ?v3) ?v4))) false)) (forall ((?v3 A_b_prod$) (?v4 A_b_prod$) (?v5 A_b_prod_list$) (?v6 A_b_prod_list$)) (=> (and (= ?v1 (cons$b ?v3 ?v5)) (and (= ?v2 (cons$b ?v4 ?v6)) (and (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (and (not (fun_app$m (fun_app$n ?v0 ?v4) ?v3)) (fun_app$l (fun_app$k (lexordp_eq$b ?v0) ?v5) ?v6))))) false))))) false)))
(assume a113 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list_list$) (?v2 A_list_list$)) (=> (and (fun_app$i (fun_app$j (lexordp_eq$a ?v0) ?v1) ?v2) (and (forall ((?v3 A_list_list$)) (=> (and (= ?v1 nil$a) (= ?v2 ?v3)) false)) (and (forall ((?v3 A_list$) (?v4 A_list$) (?v5 A_list_list$) (?v6 A_list_list$)) (=> (and (= ?v1 (cons$a ?v3 ?v5)) (and (= ?v2 (cons$a ?v4 ?v6)) (fun_app$g (fun_app$h ?v0 ?v3) ?v4))) false)) (forall ((?v3 A_list$) (?v4 A_list$) (?v5 A_list_list$) (?v6 A_list_list$)) (=> (and (= ?v1 (cons$a ?v3 ?v5)) (and (= ?v2 (cons$a ?v4 ?v6)) (and (not (fun_app$g (fun_app$h ?v0 ?v3) ?v4)) (and (not (fun_app$g (fun_app$h ?v0 ?v4) ?v3)) (fun_app$i (fun_app$j (lexordp_eq$a ?v0) ?v5) ?v6))))) false))))) false)))
(assume a114 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp_eq$ ?v0) ?v1) ?v2) (and (forall ((?v3 A_list$)) (=> (and (= ?v1 nil$) (= ?v2 ?v3)) false)) (and (forall ((?v3 A$) (?v4 A$) (?v5 A_list$) (?v6 A_list$)) (=> (and (= ?v1 (cons$ ?v3 ?v5)) (and (= ?v2 (cons$ ?v4 ?v6)) (fun_app$ (fun_app$a ?v0 ?v3) ?v4))) false)) (forall ((?v3 A$) (?v4 A$) (?v5 A_list$) (?v6 A_list$)) (=> (and (= ?v1 (cons$ ?v3 ?v5)) (and (= ?v2 (cons$ ?v4 ?v6)) (and (not (fun_app$ (fun_app$a ?v0 ?v3) ?v4)) (and (not (fun_app$ (fun_app$a ?v0 ?v4) ?v3)) (fun_app$g (fun_app$h (lexordp_eq$ ?v0) ?v5) ?v6))))) false))))) false)))
(assume a115 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod$) (?v2 A_b_prod_list$)) (fun_app$l (fun_app$k (lexordp$b ?v0) nil$b) (cons$b ?v1 ?v2))))
(assume a116 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list_list$)) (fun_app$i (fun_app$j (lexordp$a ?v0) nil$a) (cons$a ?v1 ?v2))))
(assume a117 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_list$)) (fun_app$g (fun_app$h (lexordp$ ?v0) nil$) (cons$ ?v1 ?v2))))
(assume a118 (forall ((?v0 A_b_prod$) (?v1 A_b_prod_list$)) (not (= nil$b (cons$b ?v0 ?v1)))))
(assume a119 (forall ((?v0 A_list$) (?v1 A_list_list$)) (not (= nil$a (cons$a ?v0 ?v1)))))
(assume a120 (forall ((?v0 A$) (?v1 A_list$)) (not (= nil$ (cons$ ?v0 ?v1)))))
(assume a121 (forall ((?v0 A_list$) (?v1 A_list_list$)) (not (= (cons$a ?v0 ?v1) ?v1))))
(assume a122 (forall ((?v0 A$) (?v1 A_list$)) (not (= (cons$ ?v0 ?v1) ?v1))))
(assume a123 (forall ((?v0 A_b_prod_list_a_b_prod_list_bool_fun_fun$) (?v1 A_b_prod_list$) (?v2 A_b_prod_list$)) (=> (and (fun_app$l (fun_app$k ?v0 nil$b) nil$b) (and (forall ((?v3 A_b_prod$) (?v4 A_b_prod_list$)) (fun_app$l (fun_app$k ?v0 (cons$b ?v3 ?v4)) nil$b)) (and (forall ((?v3 A_b_prod$) (?v4 A_b_prod_list$)) (fun_app$l (fun_app$k ?v0 nil$b) (cons$b ?v3 ?v4))) (forall ((?v3 A_b_prod$) (?v4 A_b_prod_list$) (?v5 A_b_prod$) (?v6 A_b_prod_list$)) (=> (fun_app$l (fun_app$k ?v0 ?v4) ?v6) (fun_app$l (fun_app$k ?v0 (cons$b ?v3 ?v4)) (cons$b ?v5 ?v6))))))) (fun_app$l (fun_app$k ?v0 ?v1) ?v2))))
(assume a124 (forall ((?v0 A_b_prod_list_a_list_bool_fun_fun$) (?v1 A_b_prod_list$) (?v2 A_list$)) (=> (and (fun_app$g (fun_app$o ?v0 nil$b) nil$) (and (forall ((?v3 A_b_prod$) (?v4 A_b_prod_list$)) (fun_app$g (fun_app$o ?v0 (cons$b ?v3 ?v4)) nil$)) (and (forall ((?v3 A$) (?v4 A_list$)) (fun_app$g (fun_app$o ?v0 nil$b) (cons$ ?v3 ?v4))) (forall ((?v3 A_b_prod$) (?v4 A_b_prod_list$) (?v5 A$) (?v6 A_list$)) (=> (fun_app$g (fun_app$o ?v0 ?v4) ?v6) (fun_app$g (fun_app$o ?v0 (cons$b ?v3 ?v4)) (cons$ ?v5 ?v6))))))) (fun_app$g (fun_app$o ?v0 ?v1) ?v2))))
(assume a125 (forall ((?v0 A_b_prod_list_a_list_list_bool_fun_fun$) (?v1 A_b_prod_list$) (?v2 A_list_list$)) (=> (and (fun_app$i (fun_app$p ?v0 nil$b) nil$a) (and (forall ((?v3 A_b_prod$) (?v4 A_b_prod_list$)) (fun_app$i (fun_app$p ?v0 (cons$b ?v3 ?v4)) nil$a)) (and (forall ((?v3 A_list$) (?v4 A_list_list$)) (fun_app$i (fun_app$p ?v0 nil$b) (cons$a ?v3 ?v4))) (forall ((?v3 A_b_prod$) (?v4 A_b_prod_list$) (?v5 A_list$) (?v6 A_list_list$)) (=> (fun_app$i (fun_app$p ?v0 ?v4) ?v6) (fun_app$i (fun_app$p ?v0 (cons$b ?v3 ?v4)) (cons$a ?v5 ?v6))))))) (fun_app$i (fun_app$p ?v0 ?v1) ?v2))))
(assume a126 (forall ((?v0 A_list_a_b_prod_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_b_prod_list$)) (=> (and (fun_app$l (fun_app$q ?v0 nil$) nil$b) (and (forall ((?v3 A$) (?v4 A_list$)) (fun_app$l (fun_app$q ?v0 (cons$ ?v3 ?v4)) nil$b)) (and (forall ((?v3 A_b_prod$) (?v4 A_b_prod_list$)) (fun_app$l (fun_app$q ?v0 nil$) (cons$b ?v3 ?v4))) (forall ((?v3 A$) (?v4 A_list$) (?v5 A_b_prod$) (?v6 A_b_prod_list$)) (=> (fun_app$l (fun_app$q ?v0 ?v4) ?v6) (fun_app$l (fun_app$q ?v0 (cons$ ?v3 ?v4)) (cons$b ?v5 ?v6))))))) (fun_app$l (fun_app$q ?v0 ?v1) ?v2))))
(assume a127 (forall ((?v0 A_list_a_list_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list_list$)) (=> (and (fun_app$i (fun_app$r ?v0 nil$) nil$a) (and (forall ((?v3 A$) (?v4 A_list$)) (fun_app$i (fun_app$r ?v0 (cons$ ?v3 ?v4)) nil$a)) (and (forall ((?v3 A_list$) (?v4 A_list_list$)) (fun_app$i (fun_app$r ?v0 nil$) (cons$a ?v3 ?v4))) (forall ((?v3 A$) (?v4 A_list$) (?v5 A_list$) (?v6 A_list_list$)) (=> (fun_app$i (fun_app$r ?v0 ?v4) ?v6) (fun_app$i (fun_app$r ?v0 (cons$ ?v3 ?v4)) (cons$a ?v5 ?v6))))))) (fun_app$i (fun_app$r ?v0 ?v1) ?v2))))
(assume a128 (forall ((?v0 A_list_list_a_b_prod_list_bool_fun_fun$) (?v1 A_list_list$) (?v2 A_b_prod_list$)) (=> (and (fun_app$l (fun_app$s ?v0 nil$a) nil$b) (and (forall ((?v3 A_list$) (?v4 A_list_list$)) (fun_app$l (fun_app$s ?v0 (cons$a ?v3 ?v4)) nil$b)) (and (forall ((?v3 A_b_prod$) (?v4 A_b_prod_list$)) (fun_app$l (fun_app$s ?v0 nil$a) (cons$b ?v3 ?v4))) (forall ((?v3 A_list$) (?v4 A_list_list$) (?v5 A_b_prod$) (?v6 A_b_prod_list$)) (=> (fun_app$l (fun_app$s ?v0 ?v4) ?v6) (fun_app$l (fun_app$s ?v0 (cons$a ?v3 ?v4)) (cons$b ?v5 ?v6))))))) (fun_app$l (fun_app$s ?v0 ?v1) ?v2))))
(assume a129 (forall ((?v0 A_list_list_a_list_bool_fun_fun$) (?v1 A_list_list$) (?v2 A_list$)) (=> (and (fun_app$g (fun_app$t ?v0 nil$a) nil$) (and (forall ((?v3 A_list$) (?v4 A_list_list$)) (fun_app$g (fun_app$t ?v0 (cons$a ?v3 ?v4)) nil$)) (and (forall ((?v3 A$) (?v4 A_list$)) (fun_app$g (fun_app$t ?v0 nil$a) (cons$ ?v3 ?v4))) (forall ((?v3 A_list$) (?v4 A_list_list$) (?v5 A$) (?v6 A_list$)) (=> (fun_app$g (fun_app$t ?v0 ?v4) ?v6) (fun_app$g (fun_app$t ?v0 (cons$a ?v3 ?v4)) (cons$ ?v5 ?v6))))))) (fun_app$g (fun_app$t ?v0 ?v1) ?v2))))
(assume a130 (forall ((?v0 A_list_list_a_list_list_bool_fun_fun$) (?v1 A_list_list$) (?v2 A_list_list$)) (=> (and (fun_app$i (fun_app$j ?v0 nil$a) nil$a) (and (forall ((?v3 A_list$) (?v4 A_list_list$)) (fun_app$i (fun_app$j ?v0 (cons$a ?v3 ?v4)) nil$a)) (and (forall ((?v3 A_list$) (?v4 A_list_list$)) (fun_app$i (fun_app$j ?v0 nil$a) (cons$a ?v3 ?v4))) (forall ((?v3 A_list$) (?v4 A_list_list$) (?v5 A_list$) (?v6 A_list_list$)) (=> (fun_app$i (fun_app$j ?v0 ?v4) ?v6) (fun_app$i (fun_app$j ?v0 (cons$a ?v3 ?v4)) (cons$a ?v5 ?v6))))))) (fun_app$i (fun_app$j ?v0 ?v1) ?v2))))
(assume a131 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$)) (=> (and (fun_app$g (fun_app$h ?v0 nil$) nil$) (and (forall ((?v3 A$) (?v4 A_list$)) (fun_app$g (fun_app$h ?v0 (cons$ ?v3 ?v4)) nil$)) (and (forall ((?v3 A$) (?v4 A_list$)) (fun_app$g (fun_app$h ?v0 nil$) (cons$ ?v3 ?v4))) (forall ((?v3 A$) (?v4 A_list$) (?v5 A$) (?v6 A_list$)) (=> (fun_app$g (fun_app$h ?v0 ?v4) ?v6) (fun_app$g (fun_app$h ?v0 (cons$ ?v3 ?v4)) (cons$ ?v5 ?v6))))))) (fun_app$g (fun_app$h ?v0 ?v1) ?v2))))
(assume a132 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_list_bool_fun$)) (=> (and (not (= ?v0 nil$b)) (and (forall ((?v2 A_b_prod$)) (fun_app$l ?v1 (cons$b ?v2 nil$b))) (forall ((?v2 A_b_prod$) (?v3 A_b_prod_list$)) (=> (and (not (= ?v3 nil$b)) (fun_app$l ?v1 ?v3)) (fun_app$l ?v1 (cons$b ?v2 ?v3)))))) (fun_app$l ?v1 ?v0))))
(assume a133 (forall ((?v0 A_list_list$) (?v1 A_list_list_bool_fun$)) (=> (and (not (= ?v0 nil$a)) (and (forall ((?v2 A_list$)) (fun_app$i ?v1 (cons$a ?v2 nil$a))) (forall ((?v2 A_list$) (?v3 A_list_list$)) (=> (and (not (= ?v3 nil$a)) (fun_app$i ?v1 ?v3)) (fun_app$i ?v1 (cons$a ?v2 ?v3)))))) (fun_app$i ?v1 ?v0))))
(assume a134 (forall ((?v0 A_list$) (?v1 A_list_bool_fun$)) (=> (and (not (= ?v0 nil$)) (and (forall ((?v2 A$)) (fun_app$g ?v1 (cons$ ?v2 nil$))) (forall ((?v2 A$) (?v3 A_list$)) (=> (and (not (= ?v3 nil$)) (fun_app$g ?v1 ?v3)) (fun_app$g ?v1 (cons$ ?v2 ?v3)))))) (fun_app$g ?v1 ?v0))))
(assume a135 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod$) (?v2 A_b_prod_list$)) (=> (= ?v0 (cons$b ?v1 ?v2)) (not (= ?v0 nil$b)))))
(assume a136 (forall ((?v0 A_list_list$) (?v1 A_list$) (?v2 A_list_list$)) (=> (= ?v0 (cons$a ?v1 ?v2)) (not (= ?v0 nil$a)))))
(assume a137 (forall ((?v0 A_list$) (?v1 A$) (?v2 A_list$)) (=> (= ?v0 (cons$ ?v1 ?v2)) (not (= ?v0 nil$)))))
(assume a138 (forall ((?v0 A_b_prod_list$)) (=> (and (=> (= ?v0 nil$b) false) (forall ((?v1 A_b_prod$) (?v2 A_b_prod_list$)) (=> (= ?v0 (cons$b ?v1 ?v2)) false))) false)))
(assume a139 (forall ((?v0 A_list_list$)) (=> (and (=> (= ?v0 nil$a) false) (forall ((?v1 A_list$) (?v2 A_list_list$)) (=> (= ?v0 (cons$a ?v1 ?v2)) false))) false)))
(assume a140 (forall ((?v0 A_list$)) (=> (and (=> (= ?v0 nil$) false) (forall ((?v1 A$) (?v2 A_list$)) (=> (= ?v0 (cons$ ?v1 ?v2)) false))) false)))
(assume a141 (forall ((?v0 A_b_prod_list_list$)) (=> (and (=> (= ?v0 nil$c) false) (and (forall ((?v1 A_b_prod_list_list$)) (=> (= ?v0 (cons$c nil$b ?v1)) false)) (forall ((?v1 A_b_prod$) (?v2 A_b_prod_list$) (?v3 A_b_prod_list_list$)) (=> (= ?v0 (cons$c (cons$b ?v1 ?v2) ?v3)) false)))) false)))
(assume a142 (forall ((?v0 A_list_list_list$)) (=> (and (=> (= ?v0 nil$d) false) (and (forall ((?v1 A_list_list_list$)) (=> (= ?v0 (cons$d nil$a ?v1)) false)) (forall ((?v1 A_list$) (?v2 A_list_list$) (?v3 A_list_list_list$)) (=> (= ?v0 (cons$d (cons$a ?v1 ?v2) ?v3)) false)))) false)))
(assume a143 (forall ((?v0 A_list_list$)) (=> (and (=> (= ?v0 nil$a) false) (and (forall ((?v1 A_list_list$)) (=> (= ?v0 (cons$a nil$ ?v1)) false)) (forall ((?v1 A$) (?v2 A_list$) (?v3 A_list_list$)) (=> (= ?v0 (cons$a (cons$ ?v1 ?v2) ?v3)) false)))) false)))
(assume a144 (forall ((?v0 A_b_prod_list$)) (=> (and (=> (= ?v0 nil$b) false) (and (forall ((?v1 A_b_prod$)) (=> (= ?v0 (cons$b ?v1 nil$b)) false)) (forall ((?v1 A_b_prod$) (?v2 A_b_prod$) (?v3 A_b_prod_list$)) (=> (= ?v0 (cons$b ?v1 (cons$b ?v2 ?v3))) false)))) false)))
(assume a145 (forall ((?v0 A_list_list$)) (=> (and (=> (= ?v0 nil$a) false) (and (forall ((?v1 A_list$)) (=> (= ?v0 (cons$a ?v1 nil$a)) false)) (forall ((?v1 A_list$) (?v2 A_list$) (?v3 A_list_list$)) (=> (= ?v0 (cons$a ?v1 (cons$a ?v2 ?v3))) false)))) false)))
(assume a146 (forall ((?v0 A_list$)) (=> (and (=> (= ?v0 nil$) false) (and (forall ((?v1 A$)) (=> (= ?v0 (cons$ ?v1 nil$)) false)) (forall ((?v1 A$) (?v2 A$) (?v3 A_list$)) (=> (= ?v0 (cons$ ?v1 (cons$ ?v2 ?v3))) false)))) false)))
(assume a147 (forall ((?v0 A_list_list$)) (=> (and (=> (= ?v0 nil$a) false) (=> (not (= ?v0 nil$a)) false)) false)))
(assume a148 (forall ((?v0 A_b_prod_list$)) (=> (and (=> (= ?v0 nil$b) false) (=> (not (= ?v0 nil$b)) false)) false)))
(assume a149 (forall ((?v0 A_list$)) (=> (and (=> (= ?v0 nil$) false) (=> (not (= ?v0 nil$)) false)) false)))
(assume a150 (forall ((?v0 A_b_prod_list$)) (= (not (= ?v0 nil$b)) (exists ((?v1 A_b_prod$) (?v2 A_b_prod_list$)) (= ?v0 (cons$b ?v1 ?v2))))))
(assume a151 (forall ((?v0 A_list_list$)) (= (not (= ?v0 nil$a)) (exists ((?v1 A_list$) (?v2 A_list_list$)) (= ?v0 (cons$a ?v1 ?v2))))))
(assume a152 (forall ((?v0 A_list$)) (= (not (= ?v0 nil$)) (exists ((?v1 A$) (?v2 A_list$)) (= ?v0 (cons$ ?v1 ?v2))))))
(assume a153 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list_list$) (?v4 A_list_list$)) (=> (fun_app$g (fun_app$h ?v0 ?v1) ?v2) (fun_app$i (fun_app$j (lexordp$a ?v0) (cons$a ?v1 ?v3)) (cons$a ?v2 ?v4)))))
(assume a154 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 A_list$) (?v4 A_list$)) (=> (fun_app$ (fun_app$a ?v0 ?v1) ?v2) (fun_app$g (fun_app$h (lexordp$ ?v0) (cons$ ?v1 ?v3)) (cons$ ?v2 ?v4)))))
(assume a155 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list_list$) (?v4 A_list_list$)) (=> (and (not (fun_app$g (fun_app$h ?v0 ?v1) ?v2)) (and (not (fun_app$g (fun_app$h ?v0 ?v2) ?v1)) (fun_app$i (fun_app$j (lexordp$a ?v0) ?v3) ?v4))) (fun_app$i (fun_app$j (lexordp$a ?v0) (cons$a ?v1 ?v3)) (cons$a ?v2 ?v4)))))
(assume a156 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 A_list$) (?v4 A_list$)) (=> (and (not (fun_app$ (fun_app$a ?v0 ?v1) ?v2)) (and (not (fun_app$ (fun_app$a ?v0 ?v2) ?v1)) (fun_app$g (fun_app$h (lexordp$ ?v0) ?v3) ?v4))) (fun_app$g (fun_app$h (lexordp$ ?v0) (cons$ ?v1 ?v3)) (cons$ ?v2 ?v4)))))
(assume a157 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list_list$) (?v4 A_list_list$)) (=> (fun_app$g (fun_app$h ?v0 ?v1) ?v2) (fun_app$i (fun_app$j (lexordp_eq$a ?v0) (cons$a ?v1 ?v3)) (cons$a ?v2 ?v4)))))
(assume a158 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 A_list$) (?v4 A_list$)) (=> (fun_app$ (fun_app$a ?v0 ?v1) ?v2) (fun_app$g (fun_app$h (lexordp_eq$ ?v0) (cons$ ?v1 ?v3)) (cons$ ?v2 ?v4)))))
(assume a159 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list_list$) (?v4 A_list_list$)) (=> (and (not (fun_app$g (fun_app$h ?v0 ?v1) ?v2)) (and (not (fun_app$g (fun_app$h ?v0 ?v2) ?v1)) (fun_app$i (fun_app$j (lexordp_eq$a ?v0) ?v3) ?v4))) (fun_app$i (fun_app$j (lexordp_eq$a ?v0) (cons$a ?v1 ?v3)) (cons$a ?v2 ?v4)))))
(assume a160 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 A_list$) (?v4 A_list$)) (=> (and (not (fun_app$ (fun_app$a ?v0 ?v1) ?v2)) (and (not (fun_app$ (fun_app$a ?v0 ?v2) ?v1)) (fun_app$g (fun_app$h (lexordp_eq$ ?v0) ?v3) ?v4))) (fun_app$g (fun_app$h (lexordp_eq$ ?v0) (cons$ ?v1 ?v3)) (cons$ ?v2 ?v4)))))
(assume a161 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list_list$)) (fun_app$i (fun_app$j (lexordp_eq$a ?v0) nil$a) ?v1)))
(assume a162 (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$) (?v1 A_b_prod_list$)) (fun_app$l (fun_app$k (lexordp_eq$b ?v0) nil$b) ?v1)))
(assume a163 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$)) (fun_app$g (fun_app$h (lexordp_eq$ ?v0) nil$) ?v1)))
(assume a164 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$)) (=> (forall ((?v2 A$)) (not (fun_app$ (fun_app$a ?v0 ?v2) ?v2))) (not (fun_app$g (fun_app$h (lexordp$ ?v0) ?v1) ?v1)))))
(assume a165 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$)) (fun_app$g (fun_app$h (lexordp_eq$ ?v0) ?v1) ?v1)))
(assume a166 (forall ((?v0 A$)) (= (greaterThan$ less$ ?v0) (collect$ (fun_app$a less$ ?v0)))))
(assume a167 (forall ((?v0 A$)) (= (lessThan$ less$ ?v0) (collect$ (uua$ ?v0)))))
(assume a168 (forall ((?v0 A_list$) (?v1 A_list$)) (=> (not (= ?v0 nil$)) (fun_app$g (fun_app$h (lexordp$ less$) ?v1) (fun_app$u (append$ ?v1) ?v0)))))
(assume a169 (forall ((?v0 A_list$) (?v1 A_list$)) (= (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (or (exists ((?v2 A$) (?v3 A_list$)) (= ?v1 (fun_app$u (append$ ?v0) (cons$ ?v2 ?v3)))) (exists ((?v2 A_list$) (?v3 A$) (?v4 A$) (?v5 A_list$) (?v6 A_list$)) (and (fun_app$ (fun_app$a less$ ?v3) ?v4) (and (= ?v0 (fun_app$u (append$ ?v2) (cons$ ?v3 ?v5))) (= ?v1 (fun_app$u (append$ ?v2) (cons$ ?v4 ?v6))))))))))
(assume a170 (forall ((?v0 A$) (?v1 A$) (?v2 A_list$) (?v3 A_list$) (?v4 A_list$)) (=> (fun_app$ (fun_app$a less$ ?v0) ?v1) (fun_app$g (fun_app$h (lexordp$ less$) (fun_app$u (append$ ?v2) (cons$ ?v0 ?v3))) (fun_app$u (append$ ?v2) (cons$ ?v1 ?v4))))))
(assume a171 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp$ less$) (fun_app$u (append$ ?v0) ?v1)) (fun_app$u (append$ ?v0) ?v2)) (forall ((?v3 A$)) (not (fun_app$ (fun_app$a less$ ?v3) ?v3)))) (fun_app$g (fun_app$h (lexordp$ less$) ?v1) ?v2))))
(assume a172 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list$)) (=> (fun_app$g (fun_app$h (lexordp$ less$) ?v0) ?v1) (fun_app$g (fun_app$h (lexordp$ less$) (fun_app$u (append$ ?v2) ?v0)) (fun_app$u (append$ ?v2) ?v1)))))
(assume a173 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list$)) (= (fun_app$u (append$ (fun_app$u (append$ ?v0) ?v1)) ?v2) (fun_app$u (append$ ?v0) (fun_app$u (append$ ?v1) ?v2)))))
(assume a174 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list$)) (= (= (fun_app$u (append$ ?v0) ?v1) (fun_app$u (append$ ?v2) ?v1)) (= ?v0 ?v2))))
(assume a175 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list$)) (= (= (fun_app$u (append$ ?v0) ?v1) (fun_app$u (append$ ?v0) ?v2)) (= ?v1 ?v2))))
(assume a176 (forall ((?v0 A_list_list$) (?v1 A_list_list$)) (= (= (fun_app$v (append$a ?v0) ?v1) ?v1) (= ?v0 nil$a))))
(assume a177 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_list$)) (= (= (fun_app$w (append$b ?v0) ?v1) ?v1) (= ?v0 nil$b))))
(assume a178 (forall ((?v0 A_list$) (?v1 A_list$)) (= (= (fun_app$u (append$ ?v0) ?v1) ?v1) (= ?v0 nil$))))
(assume a179 (forall ((?v0 A_list_list$) (?v1 A_list_list$)) (= (= (fun_app$v (append$a ?v0) ?v1) ?v0) (= ?v1 nil$a))))
(assume a180 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_list$)) (= (= (fun_app$w (append$b ?v0) ?v1) ?v0) (= ?v1 nil$b))))
(assume a181 (forall ((?v0 A_list$) (?v1 A_list$)) (= (= (fun_app$u (append$ ?v0) ?v1) ?v0) (= ?v1 nil$))))
(assume a182 (forall ((?v0 A_list_list$) (?v1 A_list_list$)) (= (= ?v0 (fun_app$v (append$a ?v1) ?v0)) (= ?v1 nil$a))))
(assume a183 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_list$)) (= (= ?v0 (fun_app$w (append$b ?v1) ?v0)) (= ?v1 nil$b))))
(assume a184 (forall ((?v0 A_list$) (?v1 A_list$)) (= (= ?v0 (fun_app$u (append$ ?v1) ?v0)) (= ?v1 nil$))))
(assume a185 (forall ((?v0 A_list_list$) (?v1 A_list_list$)) (= (= ?v0 (fun_app$v (append$a ?v0) ?v1)) (= ?v1 nil$a))))
(assume a186 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_list$)) (= (= ?v0 (fun_app$w (append$b ?v0) ?v1)) (= ?v1 nil$b))))
(assume a187 (forall ((?v0 A_list$) (?v1 A_list$)) (= (= ?v0 (fun_app$u (append$ ?v0) ?v1)) (= ?v1 nil$))))
(assume a188 (forall ((?v0 A_list_list$) (?v1 A_list_list$)) (= (= nil$a (fun_app$v (append$a ?v0) ?v1)) (and (= ?v0 nil$a) (= ?v1 nil$a)))))
(assume a189 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_list$)) (= (= nil$b (fun_app$w (append$b ?v0) ?v1)) (and (= ?v0 nil$b) (= ?v1 nil$b)))))
(assume a190 (forall ((?v0 A_list$) (?v1 A_list$)) (= (= nil$ (fun_app$u (append$ ?v0) ?v1)) (and (= ?v0 nil$) (= ?v1 nil$)))))
(assume a191 (forall ((?v0 A_list_list$) (?v1 A_list_list$)) (= (= (fun_app$v (append$a ?v0) ?v1) nil$a) (and (= ?v0 nil$a) (= ?v1 nil$a)))))
(assume a192 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_list$)) (= (= (fun_app$w (append$b ?v0) ?v1) nil$b) (and (= ?v0 nil$b) (= ?v1 nil$b)))))
(assume a193 (forall ((?v0 A_list$) (?v1 A_list$)) (= (= (fun_app$u (append$ ?v0) ?v1) nil$) (and (= ?v0 nil$) (= ?v1 nil$)))))
(assume a194 (forall ((?v0 A_list_list$)) (= (fun_app$v (append$a ?v0) nil$a) ?v0)))
(assume a195 (forall ((?v0 A_b_prod_list$)) (= (fun_app$w (append$b ?v0) nil$b) ?v0)))
(assume a196 (forall ((?v0 A_list$)) (= (fun_app$u (append$ ?v0) nil$) ?v0)))
(assume a197 (forall ((?v0 A$) (?v1 A$)) (= (fun_app$b (member$ ?v0) (lessThan$ less$ ?v1)) (fun_app$ (fun_app$a less$ ?v0) ?v1))))
(assume a198 (forall ((?v0 A$) (?v1 A$)) (= (fun_app$b (member$ ?v0) (greaterThan$ less$ ?v1)) (fun_app$ (fun_app$a less$ ?v1) ?v0))))
(assume a199 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod$) (?v2 A_b_prod_list$) (?v3 A_b_prod$)) (= (= (fun_app$w (append$b ?v0) (cons$b ?v1 nil$b)) (fun_app$w (append$b ?v2) (cons$b ?v3 nil$b))) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a200 (forall ((?v0 A_list_list$) (?v1 A_list$) (?v2 A_list_list$) (?v3 A_list$)) (= (= (fun_app$v (append$a ?v0) (cons$a ?v1 nil$a)) (fun_app$v (append$a ?v2) (cons$a ?v3 nil$a))) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a201 (forall ((?v0 A_list$) (?v1 A$) (?v2 A_list$) (?v3 A$)) (= (= (fun_app$u (append$ ?v0) (cons$ ?v1 nil$)) (fun_app$u (append$ ?v2) (cons$ ?v3 nil$))) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a202 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list$) (?v4 A_list$)) (=> (and (= (fun_app$u (append$ ?v0) ?v1) ?v2) (= ?v3 (fun_app$u (append$ ?v1) ?v4))) (= (fun_app$u (append$ ?v0) ?v3) (fun_app$u (append$ ?v2) ?v4)))))
(assume a203 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list$)) (= (= (fun_app$u (append$ ?v0) ?v1) (fun_app$u (append$ ?v2) ?v3)) (exists ((?v4 A_list$)) (or (and (= ?v0 (fun_app$u (append$ ?v2) ?v4)) (= (fun_app$u (append$ ?v4) ?v1) ?v3)) (and (= (fun_app$u (append$ ?v0) ?v4) ?v2) (= ?v1 (fun_app$u (append$ ?v4) ?v3))))))))
(assume a204 (forall ((?v0 A_list$) (?v1 A_list_list$) (?v2 A_list_list$)) (= (fun_app$v (append$a (cons$a ?v0 ?v1)) ?v2) (cons$a ?v0 (fun_app$v (append$a ?v1) ?v2)))))
(assume a205 (forall ((?v0 A$) (?v1 A_list$) (?v2 A_list$)) (= (fun_app$u (append$ (cons$ ?v0 ?v1)) ?v2) (cons$ ?v0 (fun_app$u (append$ ?v1) ?v2)))))
(assume a206 (forall ((?v0 A_list$) (?v1 A_list_list$) (?v2 A_list_list$) (?v3 A_list_list$) (?v4 A_list_list$)) (=> (and (= (cons$a ?v0 ?v1) ?v2) (= ?v3 (fun_app$v (append$a ?v1) ?v4))) (= (cons$a ?v0 ?v3) (fun_app$v (append$a ?v2) ?v4)))))
(assume a207 (forall ((?v0 A$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list$) (?v4 A_list$)) (=> (and (= (cons$ ?v0 ?v1) ?v2) (= ?v3 (fun_app$u (append$ ?v1) ?v4))) (= (cons$ ?v0 ?v3) (fun_app$u (append$ ?v2) ?v4)))))
(assume a208 (forall ((?v0 A_list_list$)) (= (fun_app$v (append$a nil$a) ?v0) ?v0)))
(assume a209 (forall ((?v0 A_b_prod_list$)) (= (fun_app$w (append$b nil$b) ?v0) ?v0)))
(assume a210 (forall ((?v0 A_list$)) (= (fun_app$u (append$ nil$) ?v0) ?v0)))
(assume a211 (forall ((?v0 A_list_list$) (?v1 A_list_list$)) (=> (= ?v0 ?v1) (= ?v0 (fun_app$v (append$a nil$a) ?v1)))))
(assume a212 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_list$)) (=> (= ?v0 ?v1) (= ?v0 (fun_app$w (append$b nil$b) ?v1)))))
(assume a213 (forall ((?v0 A_list$) (?v1 A_list$)) (=> (= ?v0 ?v1) (= ?v0 (fun_app$u (append$ nil$) ?v1)))))
(assume a214 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list$)) (=> (fun_app$g (fun_app$h (lexordp$ ?v0) ?v1) ?v2) (fun_app$g (fun_app$h (lexordp$ ?v0) (fun_app$u (append$ ?v3) ?v1)) (fun_app$u (append$ ?v3) ?v2)))))
(assume a215 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list$)) (=> (and (fun_app$g (fun_app$h (lexordp$ ?v0) (fun_app$u (append$ ?v1) ?v2)) (fun_app$u (append$ ?v1) ?v3)) (forall ((?v4 A$)) (not (fun_app$ (fun_app$a ?v0 ?v4) ?v4)))) (fun_app$g (fun_app$h (lexordp$ ?v0) ?v2) ?v3))))
(assume a216 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_list$) (?v2 A_b_prod$) (?v3 A_b_prod_list$)) (= (= (fun_app$w (append$b ?v0) ?v1) (cons$b ?v2 ?v3)) (or (and (= ?v0 nil$b) (= ?v1 (cons$b ?v2 ?v3))) (exists ((?v4 A_b_prod_list$)) (and (= ?v0 (cons$b ?v2 ?v4)) (= (fun_app$w (append$b ?v4) ?v1) ?v3)))))))
(assume a217 (forall ((?v0 A_list_list$) (?v1 A_list_list$) (?v2 A_list$) (?v3 A_list_list$)) (= (= (fun_app$v (append$a ?v0) ?v1) (cons$a ?v2 ?v3)) (or (and (= ?v0 nil$a) (= ?v1 (cons$a ?v2 ?v3))) (exists ((?v4 A_list_list$)) (and (= ?v0 (cons$a ?v2 ?v4)) (= (fun_app$v (append$a ?v4) ?v1) ?v3)))))))
(assume a218 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A$) (?v3 A_list$)) (= (= (fun_app$u (append$ ?v0) ?v1) (cons$ ?v2 ?v3)) (or (and (= ?v0 nil$) (= ?v1 (cons$ ?v2 ?v3))) (exists ((?v4 A_list$)) (and (= ?v0 (cons$ ?v2 ?v4)) (= (fun_app$u (append$ ?v4) ?v1) ?v3)))))))
(assume a219 (forall ((?v0 A_b_prod$) (?v1 A_b_prod_list$) (?v2 A_b_prod_list$) (?v3 A_b_prod_list$)) (= (= (cons$b ?v0 ?v1) (fun_app$w (append$b ?v2) ?v3)) (or (and (= ?v2 nil$b) (= (cons$b ?v0 ?v1) ?v3)) (exists ((?v4 A_b_prod_list$)) (and (= (cons$b ?v0 ?v4) ?v2) (= ?v1 (fun_app$w (append$b ?v4) ?v3))))))))
(assume a220 (forall ((?v0 A_list$) (?v1 A_list_list$) (?v2 A_list_list$) (?v3 A_list_list$)) (= (= (cons$a ?v0 ?v1) (fun_app$v (append$a ?v2) ?v3)) (or (and (= ?v2 nil$a) (= (cons$a ?v0 ?v1) ?v3)) (exists ((?v4 A_list_list$)) (and (= (cons$a ?v0 ?v4) ?v2) (= ?v1 (fun_app$v (append$a ?v4) ?v3))))))))
(assume a221 (forall ((?v0 A$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list$)) (= (= (cons$ ?v0 ?v1) (fun_app$u (append$ ?v2) ?v3)) (or (and (= ?v2 nil$) (= (cons$ ?v0 ?v1) ?v3)) (exists ((?v4 A_list$)) (and (= (cons$ ?v0 ?v4) ?v2) (= ?v1 (fun_app$u (append$ ?v4) ?v3))))))))
(assume a222 (forall ((?v0 A_b_prod_list$)) (=> (and (=> (= ?v0 nil$b) false) (forall ((?v1 A_b_prod_list$) (?v2 A_b_prod$)) (=> (= ?v0 (fun_app$w (append$b ?v1) (cons$b ?v2 nil$b))) false))) false)))
(assume a223 (forall ((?v0 A_list_list$)) (=> (and (=> (= ?v0 nil$a) false) (forall ((?v1 A_list_list$) (?v2 A_list$)) (=> (= ?v0 (fun_app$v (append$a ?v1) (cons$a ?v2 nil$a))) false))) false)))
(assume a224 (forall ((?v0 A_list$)) (=> (and (=> (= ?v0 nil$) false) (forall ((?v1 A_list$) (?v2 A$)) (=> (= ?v0 (fun_app$u (append$ ?v1) (cons$ ?v2 nil$))) false))) false)))
(assume a225 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_list_bool_fun$)) (=> (and (not (= ?v0 nil$b)) (and (forall ((?v2 A_b_prod$)) (fun_app$l ?v1 (cons$b ?v2 nil$b))) (forall ((?v2 A_b_prod$) (?v3 A_b_prod_list$)) (=> (and (not (= ?v3 nil$b)) (fun_app$l ?v1 ?v3)) (fun_app$l ?v1 (fun_app$w (append$b ?v3) (cons$b ?v2 nil$b))))))) (fun_app$l ?v1 ?v0))))
(assume a226 (forall ((?v0 A_list_list$) (?v1 A_list_list_bool_fun$)) (=> (and (not (= ?v0 nil$a)) (and (forall ((?v2 A_list$)) (fun_app$i ?v1 (cons$a ?v2 nil$a))) (forall ((?v2 A_list$) (?v3 A_list_list$)) (=> (and (not (= ?v3 nil$a)) (fun_app$i ?v1 ?v3)) (fun_app$i ?v1 (fun_app$v (append$a ?v3) (cons$a ?v2 nil$a))))))) (fun_app$i ?v1 ?v0))))
(assume a227 (forall ((?v0 A_list$) (?v1 A_list_bool_fun$)) (=> (and (not (= ?v0 nil$)) (and (forall ((?v2 A$)) (fun_app$g ?v1 (cons$ ?v2 nil$))) (forall ((?v2 A$) (?v3 A_list$)) (=> (and (not (= ?v3 nil$)) (fun_app$g ?v1 ?v3)) (fun_app$g ?v1 (fun_app$u (append$ ?v3) (cons$ ?v2 nil$))))))) (fun_app$g ?v1 ?v0))))
(assume a228 (forall ((?v0 A_b_prod_list_bool_fun$) (?v1 A_b_prod_list$)) (=> (and (fun_app$l ?v0 nil$b) (forall ((?v2 A_b_prod$) (?v3 A_b_prod_list$)) (=> (fun_app$l ?v0 ?v3) (fun_app$l ?v0 (fun_app$w (append$b ?v3) (cons$b ?v2 nil$b)))))) (fun_app$l ?v0 ?v1))))
(assume a229 (forall ((?v0 A_list_list_bool_fun$) (?v1 A_list_list$)) (=> (and (fun_app$i ?v0 nil$a) (forall ((?v2 A_list$) (?v3 A_list_list$)) (=> (fun_app$i ?v0 ?v3) (fun_app$i ?v0 (fun_app$v (append$a ?v3) (cons$a ?v2 nil$a)))))) (fun_app$i ?v0 ?v1))))
(assume a230 (forall ((?v0 A_list_bool_fun$) (?v1 A_list$)) (=> (and (fun_app$g ?v0 nil$) (forall ((?v2 A$) (?v3 A_list$)) (=> (fun_app$g ?v0 ?v3) (fun_app$g ?v0 (fun_app$u (append$ ?v3) (cons$ ?v2 nil$)))))) (fun_app$g ?v0 ?v1))))
(assume a231 (forall ((?v0 A_list_a_list_bool_fun_fun$) (?v1 A_list$) (?v2 A_list$) (?v3 A_list_list$) (?v4 A_list_list$) (?v5 A_list_list$)) (=> (fun_app$g (fun_app$h ?v0 ?v1) ?v2) (fun_app$i (fun_app$j (lexordp$a ?v0) (fun_app$v (append$a ?v3) (cons$a ?v1 ?v4))) (fun_app$v (append$a ?v3) (cons$a ?v2 ?v5))))))
(assume a232 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 A_list$) (?v4 A_list$) (?v5 A_list$)) (=> (fun_app$ (fun_app$a ?v0 ?v1) ?v2) (fun_app$g (fun_app$h (lexordp$ ?v0) (fun_app$u (append$ ?v3) (cons$ ?v1 ?v4))) (fun_app$u (append$ ?v3) (cons$ ?v2 ?v5))))))
(assume a233 (forall ((?v0 A_list_list$) (?v1 A_list_a_list_bool_fun_fun$) (?v2 A_list_list$)) (=> (not (= ?v0 nil$a)) (fun_app$i (fun_app$j (lexordp$a ?v1) ?v2) (fun_app$v (append$a ?v2) ?v0)))))
(assume a234 (forall ((?v0 A_b_prod_list$) (?v1 A_b_prod_a_b_prod_bool_fun_fun$) (?v2 A_b_prod_list$)) (=> (not (= ?v0 nil$b)) (fun_app$l (fun_app$k (lexordp$b ?v1) ?v2) (fun_app$w (append$b ?v2) ?v0)))))
(assume a235 (forall ((?v0 A_list$) (?v1 A_a_bool_fun_fun$) (?v2 A_list$)) (=> (not (= ?v0 nil$)) (fun_app$g (fun_app$h (lexordp$ ?v1) ?v2) (fun_app$u (append$ ?v2) ?v0)))))
(assume a236 (forall ((?v0 A_list$) (?v1 A_list_list$) (?v2 A_list_a_list_fun$)) (= (bind$ (cons$a ?v0 ?v1) ?v2) (fun_app$u (append$ (fun_app$u ?v2 ?v0)) (bind$ ?v1 ?v2)))))
(assume a237 (forall ((?v0 A$) (?v1 A_list$) (?v2 A_a_list_fun$)) (= (bind$a (cons$ ?v0 ?v1) ?v2) (fun_app$u (append$ (fun_app$x ?v2 ?v0)) (bind$a ?v1 ?v2)))))
(assume a238 (= (sublists$ nil$a) (! (cons$d nil$a nil$d) :named @p_5)))
(assume a239 (= (sublists$a nil$b) (! (cons$c nil$b nil$c) :named @p_6)))
(assume a240 (= (sublists$b nil$) (! (cons$a nil$ nil$a) :named @p_7)))
(assume a241 (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (keys$ (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (fun_app$u (append$ (keys$ ?v1)) (cons$ ?v2 (keys$ ?v4))))))
(assume a242 (= (product_lists$ nil$d) @p_5))
(assume a243 (= (product_lists$a nil$c) @p_6))
(assume a244 (= (product_lists$b nil$a) @p_7))
(assume a245 (forall ((?v0 A_a_list_list_fun$)) (= (bind$b nil$ ?v0) nil$a)))
(assume a246 (forall ((?v0 A_a_b_prod_list_fun$)) (= (bind$c nil$ ?v0) nil$b)))
(assume a247 (forall ((?v0 A_list_a_list_fun$)) (= (bind$ nil$a ?v0) nil$)))
(assume a248 (forall ((?v0 A_list_a_list_list_fun$)) (= (bind$d nil$a ?v0) nil$a)))
(assume a249 (forall ((?v0 A_list_a_b_prod_list_fun$)) (= (bind$e nil$a ?v0) nil$b)))
(assume a250 (forall ((?v0 A_b_prod_a_list_fun$)) (= (bind$f nil$b ?v0) nil$)))
(assume a251 (forall ((?v0 A_b_prod_a_list_list_fun$)) (= (bind$g nil$b ?v0) nil$a)))
(assume a252 (forall ((?v0 A_b_prod_a_b_prod_list_fun$)) (= (bind$h nil$b ?v0) nil$b)))
(assume a253 (forall ((?v0 A_a_list_fun$)) (= (bind$a nil$ ?v0) nil$)))
(assume a254 (= (keys$ empty$) nil$))
(assume a255 (forall ((?v0 A_b_rbt$)) (=> (not (= ?v0 empty$)) (not (= (keys$ ?v0) nil$)))))
(assume a256 (forall ((?v0 A$) (?v1 A_b_rbt$)) (= (fun_app$f (rbt_greater$ less$ ?v0) ?v1) (forall ((?v2 A$)) (=> (fun_app$b (member$ ?v2) (set$ (keys$ ?v1))) (fun_app$ (fun_app$a less$ ?v0) ?v2))))))
(assume a257 (forall ((?v0 A$) (?v1 A_b_rbt$)) (= (fun_app$f (rbt_less$ less$ ?v0) ?v1) (forall ((?v2 A$)) (=> (fun_app$b (member$ ?v2) (set$ (keys$ ?v1))) (fun_app$ (fun_app$a less$ ?v2) ?v0))))))
(assume a258 (forall ((?v0 A_b_rbt$)) (=> (fun_app$f (rbt_sorted$ less$) ?v0) (distinct$ (keys$ ?v0)))))
(assume a259 (forall ((?v0 A_list_list$)) (= (not (distinct$a ?v0)) (exists ((?v1 A_list_list$) (?v2 A_list$) (?v3 A_list_list$)) (and (member$a ?v2 (set$a ?v1)) (and (distinct$a ?v1) (= ?v0 (fun_app$v (append$a ?v1) (cons$a ?v2 ?v3)))))))))
(assume a260 (forall ((?v0 A_list$)) (= (not (distinct$ ?v0)) (exists ((?v1 A_list$) (?v2 A$) (?v3 A_list$)) (and (fun_app$b (member$ ?v2) (set$ ?v1)) (and (distinct$ ?v1) (= ?v0 (fun_app$u (append$ ?v1) (cons$ ?v2 ?v3)))))))))
(assume a261 (forall ((?v0 A_list$) (?v1 A_list_list$)) (member$a ?v0 (set$a (cons$a ?v0 ?v1)))))
(assume a262 (forall ((?v0 A$) (?v1 A_list$)) (fun_app$b (member$ ?v0) (set$ (cons$ ?v0 ?v1)))))
(assume a263 (forall ((?v0 A_list$) (?v1 A_list_list$) (?v2 A_list$)) (=> (member$a ?v0 (set$a ?v1)) (member$a ?v0 (set$a (cons$a ?v2 ?v1))))))
(assume a264 (forall ((?v0 A$) (?v1 A_list$) (?v2 A$)) (=> (fun_app$b (member$ ?v0) (set$ ?v1)) (fun_app$b (member$ ?v0) (set$ (cons$ ?v2 ?v1))))))
(assume a265 (forall ((?v0 A_list$) (?v1 A_list_list$)) (=> (and (member$a ?v0 (set$a ?v1)) (and (forall ((?v2 A_list_list$)) (=> (= ?v1 (cons$a ?v0 ?v2)) false)) (forall ((?v2 A_list$) (?v3 A_list_list$)) (=> (and (= ?v1 (cons$a ?v2 ?v3)) (member$a ?v0 (set$a ?v3))) false)))) false)))
(assume a266 (forall ((?v0 A$) (?v1 A_list$)) (=> (and (fun_app$b (member$ ?v0) (set$ ?v1)) (and (forall ((?v2 A_list$)) (=> (= ?v1 (cons$ ?v0 ?v2)) false)) (forall ((?v2 A$) (?v3 A_list$)) (=> (and (= ?v1 (cons$ ?v2 ?v3)) (fun_app$b (member$ ?v0) (set$ ?v3))) false)))) false)))
(assume a267 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list_list$)) (=> (member$a ?v0 (set$a (cons$a ?v1 ?v2))) (or (= ?v0 ?v1) (member$a ?v0 (set$a ?v2))))))
(assume a268 (forall ((?v0 A$) (?v1 A$) (?v2 A_list$)) (=> (fun_app$b (member$ ?v0) (set$ (cons$ ?v1 ?v2))) (or (= ?v0 ?v1) (fun_app$b (member$ ?v0) (set$ ?v2))))))
(assume a269 (= (distinct$a nil$a) true))
(assume a270 (= (distinct$b nil$b) true))
(assume a271 (= (distinct$ nil$) true))
(assume a272 (forall ((?v0 A_list$) (?v1 A_list$) (?v2 A_list_list$)) (= (distinct$a (cons$a ?v0 (cons$a ?v1 ?v2))) (and (not (= ?v0 ?v1)) (and (distinct$a (cons$a ?v0 ?v2)) (distinct$a (cons$a ?v1 ?v2)))))))
(assume a273 (forall ((?v0 A$) (?v1 A$) (?v2 A_list$)) (= (distinct$ (cons$ ?v0 (cons$ ?v1 ?v2))) (and (not (= ?v0 ?v1)) (and (distinct$ (cons$ ?v0 ?v2)) (distinct$ (cons$ ?v1 ?v2)))))))
(assume a274 (forall ((?v0 A_list$) (?v1 A_list_list$)) (= (distinct$a (cons$a ?v0 ?v1)) (and (not (member$a ?v0 (set$a ?v1))) (distinct$a ?v1)))))
(assume a275 (forall ((?v0 A$) (?v1 A_list$)) (= (distinct$ (cons$ ?v0 ?v1)) (and (not (fun_app$b (member$ ?v0) (set$ ?v1))) (distinct$ ?v1)))))
(assume a276 (forall ((?v0 A_b_prod$)) (distinct$b (cons$b ?v0 nil$b))))
(assume a277 (forall ((?v0 A_list$)) (distinct$a (cons$a ?v0 nil$a))))
(assume a278 (forall ((?v0 A$)) (distinct$ (cons$ ?v0 nil$))))
(assume a279 (forall ((?v0 A_list$) (?v1 A_list_list$)) (=> (member$a ?v0 (set$a ?v1)) (exists ((?v2 A_list_list$) (?v3 A_list_list$)) (= ?v1 (fun_app$v (append$a ?v2) (cons$a ?v0 ?v3)))))))
(assume a280 (forall ((?v0 A$) (?v1 A_list$)) (=> (fun_app$b (member$ ?v0) (set$ ?v1)) (exists ((?v2 A_list$) (?v3 A_list$)) (= ?v1 (fun_app$u (append$ ?v2) (cons$ ?v0 ?v3)))))))
(assume a281 (forall ((?v0 A_list$) (?v1 A_list_list$)) (=> (member$a ?v0 (set$a ?v1)) (exists ((?v2 A_list_list$) (?v3 A_list_list$)) (and (= ?v1 (fun_app$v (append$a ?v2) (cons$a ?v0 ?v3))) (not (member$a ?v0 (set$a ?v3))))))))
(assume a282 (forall ((?v0 A$) (?v1 A_list$)) (=> (fun_app$b (member$ ?v0) (set$ ?v1)) (exists ((?v2 A_list$) (?v3 A_list$)) (and (= ?v1 (fun_app$u (append$ ?v2) (cons$ ?v0 ?v3))) (not (fun_app$b (member$ ?v0) (set$ ?v3))))))))
(assume a283 (forall ((?v0 A_list$) (?v1 A_list_list$)) (=> (member$a ?v0 (set$a ?v1)) (exists ((?v2 A_list_list$) (?v3 A_list_list$)) (and (= ?v1 (fun_app$v (append$a ?v2) (cons$a ?v0 ?v3))) (not (member$a ?v0 (set$a ?v2))))))))
(assume a284 (forall ((?v0 A$) (?v1 A_list$)) (=> (fun_app$b (member$ ?v0) (set$ ?v1)) (exists ((?v2 A_list$) (?v3 A_list$)) (and (= ?v1 (fun_app$u (append$ ?v2) (cons$ ?v0 ?v3))) (not (fun_app$b (member$ ?v0) (set$ ?v2))))))))
(assume a285 (forall ((?v0 A_list_list$) (?v1 A_list_bool_fun$)) (=> (exists ((?v2 A_list$)) (and (member$a ?v2 (set$a ?v0)) (fun_app$g ?v1 ?v2))) (exists ((?v2 A_list_list$) (?v3 A_list$) (?v4 A_list_list$)) (and (= ?v0 (fun_app$v (append$a ?v2) (cons$a ?v3 ?v4))) (fun_app$g ?v1 ?v3))))))
(assume a286 (forall ((?v0 A_list$) (?v1 A_bool_fun$)) (=> (exists ((?v2 A$)) (and (fun_app$b (member$ ?v2) (set$ ?v0)) (fun_app$ ?v1 ?v2))) (exists ((?v2 A_list$) (?v3 A$) (?v4 A_list$)) (and (= ?v0 (fun_app$u (append$ ?v2) (cons$ ?v3 ?v4))) (fun_app$ ?v1 ?v3))))))
(assume a287 (forall ((?v0 A_list_list$) (?v1 A_list_bool_fun$)) (=> (exists ((?v2 A_list$)) (and (member$a ?v2 (set$a ?v0)) (fun_app$g ?v1 ?v2))) (exists ((?v2 A_list_list$) (?v3 A_list$) (?v4 A_list_list$)) (and (= ?v0 (fun_app$v (append$a ?v2) (cons$a ?v3 ?v4))) (and (fun_app$g ?v1 ?v3) (forall ((?v5 A_list$)) (=> (member$a ?v5 (set$a ?v4)) (not (fun_app$g ?v1 ?v5))))))))))
(assume a288 (forall ((?v0 A_list$) (?v1 A_bool_fun$)) (=> (exists ((?v2 A$)) (and (fun_app$b (member$ ?v2) (set$ ?v0)) (fun_app$ ?v1 ?v2))) (exists ((?v2 A_list$) (?v3 A$) (?v4 A_list$)) (and (= ?v0 (fun_app$u (append$ ?v2) (cons$ ?v3 ?v4))) (and (fun_app$ ?v1 ?v3) (forall ((?v5 A$)) (=> (fun_app$b (member$ ?v5) (set$ ?v4)) (not (fun_app$ ?v1 ?v5))))))))))
(assume a289 (forall ((?v0 A_list_list$) (?v1 A_list_bool_fun$)) (=> (exists ((?v2 A_list$)) (and (member$a ?v2 (set$a ?v0)) (fun_app$g ?v1 ?v2))) (exists ((?v2 A_list_list$) (?v3 A_list$) (?v4 A_list_list$)) (and (= ?v0 (fun_app$v (append$a ?v2) (cons$a ?v3 ?v4))) (and (fun_app$g ?v1 ?v3) (forall ((?v5 A_list$)) (=> (member$a ?v5 (set$a ?v2)) (not (fun_app$g ?v1 ?v5))))))))))
(assume a290 (forall ((?v0 A_list$) (?v1 A_bool_fun$)) (=> (exists ((?v2 A$)) (and (fun_app$b (member$ ?v2) (set$ ?v0)) (fun_app$ ?v1 ?v2))) (exists ((?v2 A_list$) (?v3 A$) (?v4 A_list$)) (and (= ?v0 (fun_app$u (append$ ?v2) (cons$ ?v3 ?v4))) (and (fun_app$ ?v1 ?v3) (forall ((?v5 A$)) (=> (fun_app$b (member$ ?v5) (set$ ?v2)) (not (fun_app$ ?v1 ?v5))))))))))
(assume a291 (forall ((?v0 A_list_list$) (?v1 A_list_bool_fun$)) (=> (and (exists ((?v2 A_list$)) (and (member$a ?v2 (set$a ?v0)) (fun_app$g ?v1 ?v2))) (forall ((?v2 A_list_list$) (?v3 A_list$) (?v4 A_list_list$)) (=> (and (= ?v0 (fun_app$v (append$a ?v2) (cons$a ?v3 ?v4))) (fun_app$g ?v1 ?v3)) false))) false)))
(assume a292 (forall ((?v0 A_list$) (?v1 A_bool_fun$)) (=> (and (exists ((?v2 A$)) (and (fun_app$b (member$ ?v2) (set$ ?v0)) (fun_app$ ?v1 ?v2))) (forall ((?v2 A_list$) (?v3 A$) (?v4 A_list$)) (=> (and (= ?v0 (fun_app$u (append$ ?v2) (cons$ ?v3 ?v4))) (fun_app$ ?v1 ?v3)) false))) false)))
(assume a293 (forall ((?v0 A_list_list$) (?v1 A_list_bool_fun$)) (=> (and (exists ((?v2 A_list$)) (and (member$a ?v2 (set$a ?v0)) (fun_app$g ?v1 ?v2))) (forall ((?v2 A_list_list$) (?v3 A_list$) (?v4 A_list_list$)) (=> (and (= ?v0 (fun_app$v (append$a ?v2) (cons$a ?v3 ?v4))) (and (fun_app$g ?v1 ?v3) (forall ((?v5 A_list$)) (=> (member$a ?v5 (set$a ?v4)) (not (fun_app$g ?v1 ?v5)))))) false))) false)))
(assume a294 (forall ((?v0 A_list$) (?v1 A_bool_fun$)) (=> (and (exists ((?v2 A$)) (and (fun_app$b (member$ ?v2) (set$ ?v0)) (fun_app$ ?v1 ?v2))) (forall ((?v2 A_list$) (?v3 A$) (?v4 A_list$)) (=> (and (= ?v0 (fun_app$u (append$ ?v2) (cons$ ?v3 ?v4))) (and (fun_app$ ?v1 ?v3) (forall ((?v5 A$)) (=> (fun_app$b (member$ ?v5) (set$ ?v4)) (not (fun_app$ ?v1 ?v5)))))) false))) false)))
(assume a295 (forall ((?v0 A_list_list$) (?v1 A_list_bool_fun$)) (=> (and (exists ((?v2 A_list$)) (and (member$a ?v2 (set$a ?v0)) (fun_app$g ?v1 ?v2))) (forall ((?v2 A_list_list$) (?v3 A_list$) (?v4 A_list_list$)) (=> (and (= ?v0 (fun_app$v (append$a ?v2) (cons$a ?v3 ?v4))) (and (fun_app$g ?v1 ?v3) (forall ((?v5 A_list$)) (=> (member$a ?v5 (set$a ?v2)) (not (fun_app$g ?v1 ?v5)))))) false))) false)))
(assume a296 (forall ((?v0 A_list$) (?v1 A_bool_fun$)) (=> (and (exists ((?v2 A$)) (and (fun_app$b (member$ ?v2) (set$ ?v0)) (fun_app$ ?v1 ?v2))) (forall ((?v2 A_list$) (?v3 A$) (?v4 A_list$)) (=> (and (= ?v0 (fun_app$u (append$ ?v2) (cons$ ?v3 ?v4))) (and (fun_app$ ?v1 ?v3) (forall ((?v5 A$)) (=> (fun_app$b (member$ ?v5) (set$ ?v2)) (not (fun_app$ ?v1 ?v5)))))) false))) false)))
(assume a297 (forall ((?v0 A_list$) (?v1 A_list_list$)) (= (member$a ?v0 (set$a ?v1)) (exists ((?v2 A_list_list$) (?v3 A_list_list$)) (= ?v1 (fun_app$v (append$a ?v2) (cons$a ?v0 ?v3)))))))
(assume a298 (forall ((?v0 A$) (?v1 A_list$)) (= (fun_app$b (member$ ?v0) (set$ ?v1)) (exists ((?v2 A_list$) (?v3 A_list$)) (= ?v1 (fun_app$u (append$ ?v2) (cons$ ?v0 ?v3)))))))
(assume a299 (forall ((?v0 A_list$) (?v1 A_list_list$)) (= (member$a ?v0 (set$a ?v1)) (exists ((?v2 A_list_list$) (?v3 A_list_list$)) (and (= ?v1 (fun_app$v (append$a ?v2) (cons$a ?v0 ?v3))) (not (member$a ?v0 (set$a ?v3))))))))
(assume a300 (forall ((?v0 A$) (?v1 A_list$)) (= (fun_app$b (member$ ?v0) (set$ ?v1)) (exists ((?v2 A_list$) (?v3 A_list$)) (and (= ?v1 (fun_app$u (append$ ?v2) (cons$ ?v0 ?v3))) (not (fun_app$b (member$ ?v0) (set$ ?v3))))))))
(assume a301 (forall ((?v0 A_list$) (?v1 A_list_list$)) (= (member$a ?v0 (set$a ?v1)) (exists ((?v2 A_list_list$) (?v3 A_list_list$)) (and (= ?v1 (fun_app$v (append$a ?v2) (cons$a ?v0 ?v3))) (not (member$a ?v0 (set$a ?v2))))))))
(assume a302 (forall ((?v0 A$) (?v1 A_list$)) (= (fun_app$b (member$ ?v0) (set$ ?v1)) (exists ((?v2 A_list$) (?v3 A_list$)) (and (= ?v1 (fun_app$u (append$ ?v2) (cons$ ?v0 ?v3))) (not (fun_app$b (member$ ?v0) (set$ ?v2))))))))
(assume a303 (forall ((?v0 A_list_list$) (?v1 A_list_bool_fun$)) (= (exists ((?v2 A_list$)) (and (member$a ?v2 (set$a ?v0)) (fun_app$g ?v1 ?v2))) (exists ((?v2 A_list_list$) (?v3 A_list$) (?v4 A_list_list$)) (and (= ?v0 (fun_app$v (append$a ?v2) (cons$a ?v3 ?v4))) (and (fun_app$g ?v1 ?v3) (forall ((?v5 A_list$)) (=> (member$a ?v5 (set$a ?v4)) (not (fun_app$g ?v1 ?v5))))))))))
(assume a304 (forall ((?v0 A_list$) (?v1 A_bool_fun$)) (= (exists ((?v2 A$)) (and (fun_app$b (member$ ?v2) (set$ ?v0)) (fun_app$ ?v1 ?v2))) (exists ((?v2 A_list$) (?v3 A$) (?v4 A_list$)) (and (= ?v0 (fun_app$u (append$ ?v2) (cons$ ?v3 ?v4))) (and (fun_app$ ?v1 ?v3) (forall ((?v5 A$)) (=> (fun_app$b (member$ ?v5) (set$ ?v4)) (not (fun_app$ ?v1 ?v5))))))))))
(assume a305 (forall ((?v0 A_list_list$) (?v1 A_list_bool_fun$)) (= (exists ((?v2 A_list$)) (and (member$a ?v2 (set$a ?v0)) (fun_app$g ?v1 ?v2))) (exists ((?v2 A_list_list$) (?v3 A_list$) (?v4 A_list_list$)) (and (= ?v0 (fun_app$v (append$a ?v2) (cons$a ?v3 ?v4))) (and (fun_app$g ?v1 ?v3) (forall ((?v5 A_list$)) (=> (member$a ?v5 (set$a ?v2)) (not (fun_app$g ?v1 ?v5))))))))))
(assume a306 (forall ((?v0 A_list$) (?v1 A_bool_fun$)) (= (exists ((?v2 A$)) (and (fun_app$b (member$ ?v2) (set$ ?v0)) (fun_app$ ?v1 ?v2))) (exists ((?v2 A_list$) (?v3 A$) (?v4 A_list$)) (and (= ?v0 (fun_app$u (append$ ?v2) (cons$ ?v3 ?v4))) (and (fun_app$ ?v1 ?v3) (forall ((?v5 A$)) (=> (fun_app$b (member$ ?v5) (set$ ?v2)) (not (fun_app$ ?v1 ?v5))))))))))
(assume a307 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_b_rbt$)) (= (fun_app$f (rbt_greater$ ?v0 ?v1) ?v2) (forall ((?v3 A$)) (=> (fun_app$b (member$ ?v3) (set$ (keys$ ?v2))) (fun_app$ (fun_app$a ?v0 ?v1) ?v3))))))
(assume a308 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_b_rbt$)) (= (fun_app$f (rbt_less$ ?v0 ?v1) ?v2) (forall ((?v3 A$)) (=> (fun_app$b (member$ ?v3) (set$ (keys$ ?v2))) (fun_app$ (fun_app$a ?v0 ?v3) ?v1))))))
(assume a309 (forall ((?v0 A_b_prod_list$)) (=> (not (distinct$b ?v0)) (exists ((?v1 A_b_prod_list$) (?v2 A_b_prod_list$) (?v3 A_b_prod_list$) (?v4 A_b_prod$)) (= ?v0 (fun_app$w (append$b ?v1) (fun_app$w (append$b (cons$b ?v4 nil$b)) (fun_app$w (append$b ?v2) (fun_app$w (append$b (cons$b ?v4 nil$b)) ?v3)))))))))
(assume a310 (forall ((?v0 A_list_list$)) (=> (not (distinct$a ?v0)) (exists ((?v1 A_list_list$) (?v2 A_list_list$) (?v3 A_list_list$) (?v4 A_list$)) (= ?v0 (fun_app$v (append$a ?v1) (fun_app$v (append$a (cons$a ?v4 nil$a)) (fun_app$v (append$a ?v2) (fun_app$v (append$a (cons$a ?v4 nil$a)) ?v3)))))))))
(assume a311 (forall ((?v0 A_list$)) (=> (not (distinct$ ?v0)) (exists ((?v1 A_list$) (?v2 A_list$) (?v3 A_list$) (?v4 A$)) (= ?v0 (fun_app$u (append$ ?v1) (fun_app$u (append$ (cons$ ?v4 nil$)) (fun_app$u (append$ ?v2) (fun_app$u (append$ (cons$ ?v4 nil$)) ?v3)))))))))
(assume a312 (forall ((?v0 A$)) (= (the_elem$ (set$ (cons$ ?v0 nil$))) ?v0)))
(assume a313 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (= (greaterThan$ ?v0 ?v1) (collect$ (fun_app$a ?v0 ?v1)))))
(assume a314 (forall ((?v0 A$) (?v1 A_a_bool_fun_fun$) (?v2 A$)) (= (fun_app$b (member$ ?v0) (lessThan$ ?v1 ?v2)) (fun_app$ (fun_app$a ?v1 ?v0) ?v2))))
(assume a315 (forall ((?v0 A$) (?v1 A_a_bool_fun_fun$) (?v2 A$)) (= (fun_app$b (member$ ?v0) (greaterThan$ ?v1 ?v2)) (fun_app$ (fun_app$a ?v1 ?v2) ?v0))))
(assume a316 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (= (lessThan$ ?v0 ?v1) (collect$ (fun_app$a (uub$ ?v0) ?v1)))))
(assume a317 (forall ((?v0 A$)) (=> (fun_app$b (member$ ?v0) (dom$ (fun_app$y (rbt_lookup$ less$) t1$))) (fun_app$ (fun_app$a less$ ?v0) k$))))
(assume a318 (forall ((?v0 A_a_list_fun$) (?v1 A$) (?v2 A_list$)) (= (fun_app$u (maps$ ?v0) (cons$ ?v1 ?v2)) (fun_app$u (append$ (fun_app$x ?v0 ?v1)) (fun_app$u (maps$ ?v0) ?v2)))))
(assume a319 (forall ((?v0 A_b_rbt$)) (=> (fun_app$f (rbt_sorted$ less$) ?v0) (= (dom$ (fun_app$y (rbt_lookup$ less$) ?v0)) (set$ (keys$ ?v0))))))
(assume a320 (forall ((?v0 A_a_list_fun$)) (= (fun_app$u (maps$ ?v0) nil$) nil$)))
(assume a321 (=> (! (fun_app$f @p_3 t2$) :named @p_9) (= (map_of$ (entries$ t2$)) (fun_app$y (! (rbt_lookup$ less$) :named @p_8) t2$))))
(assume a322 (=> (! (fun_app$f @p_3 t1$) :named @p_10) (= (map_of$ (entries$ t1$)) (fun_app$y @p_8 t1$))))
(assume a323 (= (entries$ empty$) nil$b))
(assume a324 (forall ((?v0 A$)) (= (fun_app$c (fun_app$y (rbt_lookup$ less$) empty$) ?v0) none$)))
(assume a325 (forall ((?v0 A$) (?v1 A_b_rbt$)) (=> (fun_app$f (rbt_greater$ less$ ?v0) ?v1) (= (fun_app$c (fun_app$y (rbt_lookup$ less$) ?v1) ?v0) none$))))
(assume a326 (forall ((?v0 A$) (?v1 A_b_rbt$)) (=> (fun_app$f (rbt_less$ less$ ?v0) ?v1) (= (fun_app$c (fun_app$y (rbt_lookup$ less$) ?v1) ?v0) none$))))
(assume a327 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (= (fun_app$c (fun_app$y (rbt_lookup$ ?v0) empty$) ?v1) none$)))
(assume a328 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_b_rbt$)) (=> (fun_app$f (rbt_greater$ ?v0 ?v1) ?v2) (= (fun_app$c (fun_app$y (rbt_lookup$ ?v0) ?v2) ?v1) none$))))
(assume a329 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_b_rbt$)) (=> (fun_app$f (rbt_less$ ?v0 ?v1) ?v2) (= (fun_app$c (fun_app$y (rbt_lookup$ ?v0) ?v2) ?v1) none$))))
(assume a330 (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$) (?v5 A$)) (= (fun_app$c (fun_app$y (rbt_lookup$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) ?v5) (ite (fun_app$ (fun_app$a less$ ?v5) ?v2) (fun_app$c (fun_app$y (rbt_lookup$ less$) ?v1) ?v5) (ite (fun_app$ (fun_app$a less$ ?v2) ?v5) (fun_app$c (fun_app$y (rbt_lookup$ less$) ?v4) ?v5) (some$ ?v3))))))
(assume a331 (forall ((?v0 A_b_option_fun$)) (= (dom$ ?v0) (collect$ (uuc$ ?v0)))))
(assume a332 (forall ((?v0 A_a_bool_fun_fun$) (?v1 Color$) (?v2 A_b_rbt$) (?v3 A$) (?v4 B$) (?v5 A_b_rbt$) (?v6 A$)) (= (fun_app$c (fun_app$y (rbt_lookup$ ?v0) (branch$ ?v1 ?v2 ?v3 ?v4 ?v5)) ?v6) (ite (fun_app$ (fun_app$a ?v0 ?v6) ?v3) (fun_app$c (fun_app$y (rbt_lookup$ ?v0) ?v2) ?v6) (ite (fun_app$ (fun_app$a ?v0 ?v3) ?v6) (fun_app$c (fun_app$y (rbt_lookup$ ?v0) ?v5) ?v6) (some$ ?v4))))))
(assume a333 (forall ((?v0 A_b_rbt$)) (finite$ (dom$ (fun_app$y (rbt_lookup$ less$) ?v0)))))
(assume a334 (forall ((?v0 A$) (?v1 A_list$)) (=> (not (fun_app$b (member$ ?v0) (set$ ?v1))) (= (fun_app$u (insert$ ?v0) ?v1) (cons$ ?v0 ?v1)))))
(assume a335 (forall ((?v0 A_list$)) (finite$ (set$ ?v0))))
(assume a336 (forall ((?v0 A$) (?v1 A_list$)) (=> (fun_app$b (member$ ?v0) (set$ ?v1)) (= (fun_app$u (insert$ ?v0) ?v1) ?v1))))
(assume a337 (forall ((?v0 A$)) (= (fun_app$u (insert$ ?v0) nil$) (cons$ ?v0 nil$))))
(assume a338 (forall ((?v0 A_set$)) (=> (finite$ ?v0) (exists ((?v1 A_list$)) (= (set$ ?v1) ?v0)))))
(assume a339 (forall ((?v0 A_set$)) (=> (finite$ ?v0) (exists ((?v1 A_list$)) (and (= (set$ ?v1) ?v0) (distinct$ ?v1))))))
(assume a340 (forall ((?v0 A$) (?v1 A_list$)) (= (fun_app$u (insert$ ?v0) ?v1) (ite (fun_app$b (member$ ?v0) (set$ ?v1)) ?v1 (cons$ ?v0 ?v1)))))
(assume a341 (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$)) (= (finite$ (collect$ (fun_app$d (uud$ ?v0) ?v1))) (and (finite$ (collect$ ?v0)) (finite$ (collect$ ?v1))))))
(assume a342 (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$)) (=> (or (finite$ (collect$ ?v0)) (finite$ (collect$ ?v1))) (finite$ (collect$ (fun_app$d (uue$ ?v0) ?v1))))))
(assume a343 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_a_bool_fun_fun$)) (=> (and (not (finite$ ?v0)) (and (finite$ ?v1) (forall ((?v3 A$)) (=> (fun_app$b (member$ ?v3) ?v0) (exists ((?v4 A$)) (and (fun_app$b (member$ ?v4) ?v1) (fun_app$ (fun_app$a ?v2 ?v3) ?v4))))))) (exists ((?v3 A$)) (and (fun_app$b (member$ ?v3) ?v1) (not (finite$ (collect$ (fun_app$a (fun_app$e (uuf$ ?v0) ?v2) ?v3)))))))))
(assume a344 (forall ((?v0 A_bool_fun$)) (=> (not (finite$ (collect$ ?v0))) (exists ((?v1 A$)) (fun_app$ ?v0 ?v1)))))
(assume a345 (forall ((?v0 A_set$)) (=> (and (not (= ?v0 bot$)) (forall ((?v1 A$)) (=> (fun_app$b (member$ ?v1) ?v0) (exists ((?v2 A$)) (and (fun_app$b (member$ ?v2) ?v0) (fun_app$ (fun_app$a less$ ?v1) ?v2)))))) (not (finite$ ?v0)))))
(assume a346 (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (=> (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (= (dom$ (fun_app$y (rbt_lookup$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4))) (insert$a ?v2 (sup$ (dom$ (fun_app$y (rbt_lookup$ less$) ?v1)) (dom$ (fun_app$y (rbt_lookup$ less$) ?v4))))))))
(assume a347 (forall ((?v0 A_set$) (?v1 A_set_bool_fun$)) (=> (and (finite$ ?v0) (and (fun_app$b ?v1 bot$) (forall ((?v2 A$) (?v3 A_set$)) (=> (and (finite$ ?v3) (and (forall ((?v4 A$)) (=> (fun_app$b (member$ ?v4) ?v3) (fun_app$ (fun_app$a less$ ?v4) ?v2))) (fun_app$b ?v1 ?v3))) (fun_app$b ?v1 (insert$a ?v2 ?v3)))))) (fun_app$b ?v1 ?v0))))
(assume a348 (forall ((?v0 A_set$) (?v1 A_set_bool_fun$)) (=> (and (finite$ ?v0) (and (fun_app$b ?v1 bot$) (forall ((?v2 A$) (?v3 A_set$)) (=> (and (finite$ ?v3) (and (forall ((?v4 A$)) (=> (fun_app$b (member$ ?v4) ?v3) (fun_app$ (fun_app$a less$ ?v2) ?v4))) (fun_app$b ?v1 ?v3))) (fun_app$b ?v1 (insert$a ?v2 ?v3)))))) (fun_app$b ?v1 ?v0))))
(assume a349 (forall ((?v0 A_list$)) (= (= (set$ ?v0) bot$) (= ?v0 nil$))))
(assume a350 (forall ((?v0 A_list$)) (= (= bot$ (set$ ?v0)) (= ?v0 nil$))))
(assume a351 (forall ((?v0 A$) (?v1 A_list$)) (= (set$ (cons$ ?v0 ?v1)) (insert$a ?v0 (set$ ?v1)))))
(assume a352 (forall ((?v0 A_list$) (?v1 A_list$)) (= (set$ (fun_app$u (append$ ?v0) ?v1)) (sup$ (set$ ?v0) (set$ ?v1)))))
(assume a353 (forall ((?v0 A$) (?v1 A_list$)) (= (set$ (fun_app$u (insert$ ?v0) ?v1)) (insert$a ?v0 (set$ ?v1)))))
(assume a354 (= (dom$ uug$) bot$))
(assume a355 (= bot$ (set$ nil$)))
(step t0 (cl (! (not (! (= @p_4 (! (and (fun_app$f (rbt_less$ less$ k$) t1$) @p_1 @p_10 @p_9) :named @p_11)) :named @p_13)) :named @p_25) (! (not @p_4) :named @p_24) @p_11) :rule equiv_pos2)
(step t1 (cl @p_24 @p_11 @p_25) :rule reordering :premises (t0))
(step t2 (cl (or (! (not (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (and (fun_app$f (rbt_less$ less$ ?v2) ?v1) (fun_app$f (rbt_greater$ less$ ?v2) ?v4) (fun_app$f (rbt_sorted$ less$) ?v1) (fun_app$f (rbt_sorted$ less$) ?v4))))) :named @p_23) @p_13)) :rule forall_inst :args (c$ t1$ k$ v$ t2$))
(step t3 (cl @p_23 @p_13) :rule or :premises (t2))
(step t4 (cl (not (! (= (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (and (fun_app$f (rbt_less$ less$ ?v2) ?v1) (and (fun_app$f (rbt_greater$ less$ ?v2) ?v4) (and (fun_app$f (rbt_sorted$ less$) ?v1) (fun_app$f (rbt_sorted$ less$) ?v4)))))) (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (and (fun_app$f (rbt_less$ less$ ?v2) ?v1) (fun_app$f (rbt_greater$ less$ ?v2) ?v4) (fun_app$f (rbt_sorted$ less$) ?v1) (fun_app$f (rbt_sorted$ less$) ?v4))))) :named @p_14)) (not (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (and (fun_app$f (rbt_less$ less$ ?v2) ?v1) (and (fun_app$f (rbt_greater$ less$ ?v2) ?v4) (and (fun_app$f (rbt_sorted$ less$) ?v1) (fun_app$f (rbt_sorted$ less$) ?v4))))))) (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (and (fun_app$f (rbt_less$ less$ ?v2) ?v1) (fun_app$f (rbt_greater$ less$ ?v2) ?v4) (fun_app$f (rbt_sorted$ less$) ?v1) (fun_app$f (rbt_sorted$ less$) ?v4))))) :rule equiv_pos2)
(anchor :step t5 :args ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$) (:= (?v0 Color$) ?v0) (:= (?v1 A_b_rbt$) ?v1) (:= (?v2 A$) ?v2) (:= (?v3 B$) ?v3) (:= (?v4 A_b_rbt$) ?v4)))
(step t5.t0 (cl (= (! (fun_app$f @p_3 (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) :named @p_20) @p_20)) :rule refl)
(step t5.t1 (cl (! (= (! (and (! (fun_app$f (rbt_less$ less$ ?v2) ?v1) :named @p_18) (and (! (fun_app$f (rbt_greater$ less$ ?v2) ?v4) :named @p_17) (and (! (fun_app$f @p_3 ?v1) :named @p_16) (! (fun_app$f @p_3 ?v4) :named @p_15)))) :named @p_21) (! (and @p_18 @p_17 @p_16 @p_15) :named @p_19)) :named @p_22)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_22 1 5))
(step t5.t2 (cl (= (= @p_20 @p_21) (= @p_20 @p_19))) :rule cong :premises (t5.t0 t5.t1))
(step t5 (cl @p_14) :rule bind)
(step t6 (cl (forall ((?v0 Color$) (?v1 A_b_rbt$) (?v2 A$) (?v3 B$) (?v4 A_b_rbt$)) (= (fun_app$f (rbt_sorted$ less$) (branch$ ?v0 ?v1 ?v2 ?v3 ?v4)) (and (fun_app$f (rbt_less$ less$ ?v2) ?v1) (fun_app$f (rbt_greater$ less$ ?v2) ?v4) (fun_app$f (rbt_sorted$ less$) ?v1) (fun_app$f (rbt_sorted$ less$) ?v4))))) :rule resolution :premises (t4 t5 a34))
(step t7 (cl @p_13) :rule resolution :premises (t3 t6))
(step t8 (cl (! (not @p_11) :named @p_12) @p_1) :rule and_pos :args (1))
(step t9 (cl @p_1 @p_12) :rule reordering :premises (t8))
(step t10 (cl @p_12) :rule resolution :premises (t9 a8))
(step t11 (cl) :rule resolution :premises (t1 t7 t10 a30))
