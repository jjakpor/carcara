unsat
(assume a0 (forall ((?v0 Natural_llist$)) (= (fun_app$ uuc$ ?v0) (ltl$b ?v0))))
(assume a1 (forall ((?v0 Natural_natural_prod_llist$)) (= (fun_app$a uuf$ ?v0) (ltl$c ?v0))))
(assume a2 (forall ((?v0 A_a_prod_llist$)) (= (fun_app$b uub$ ?v0) (ltl$a ?v0))))
(assume a3 (forall ((?v0 A_llist$)) (= (fun_app$c uud$ ?v0) (ltl$ ?v0))))
(assume a4 (forall ((?v0 Natural_llist$)) (= (fun_app$d uuh$ ?v0) (lhd$b ?v0))))
(assume a5 (forall ((?v0 Natural_natural_prod_llist$)) (= (fun_app$e uue$ ?v0) (lhd$c ?v0))))
(assume a6 (forall ((?v0 A_a_prod_llist$)) (= (fun_app$f uug$ ?v0) (lhd$a ?v0))))
(assume a7 (forall ((?v0 A_llist$)) (= (fun_app$g uui$ ?v0) (lhd$ ?v0))))
(assume a8 (forall ((?v0 A_llist_set$) (?v1 A_llist$)) (= (fun_app$h (uu$ ?v0) ?v1) (member$ ?v1 ?v0))))
(assume a9 (forall ((?v0 A_llist_a_llist_prod_set$) (?v1 A_llist_a_llist_prod$)) (= (fun_app$i (uua$ ?v0) ?v1) (member$a ?v1 ?v0))))
(assume a10 (! (not (! (= (! (fun_app$h lnull$ (fun_app$c (ltake$ n$) xs$)) :named @p_4) (! (or (! (fun_app$h lnull$ xs$) :named @p_2) (! (= n$ zero$) :named @p_1)) :named @p_3)) :named @p_5)) :named @p_6))
(assume a11 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$)) (= (not (fun_app$j lnull$a (fun_app$b (ltake$a ?v0) ?v1))) (and (not (= ?v0 zero$)) (not (fun_app$j lnull$a ?v1))))))
(assume a12 (forall ((?v0 Enat$) (?v1 Natural_llist$)) (= (not (fun_app$k lnull$b (ltake$b ?v0 ?v1))) (and (not (= ?v0 zero$)) (not (fun_app$k lnull$b ?v1))))))
(assume a13 (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 zero$)) (not (fun_app$h lnull$ ?v1))))))
(assume a14 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$)) (= (fun_app$j lnull$a (fun_app$b (ltake$a ?v0) ?v1)) (or (= ?v0 zero$) (fun_app$j lnull$a ?v1)))))
(assume a15 (forall ((?v0 Enat$) (?v1 Natural_llist$)) (= (fun_app$k lnull$b (ltake$b ?v0 ?v1)) (or (= ?v0 zero$) (fun_app$k lnull$b ?v1)))))
(assume a16 (forall ((?v0 Enat$) (?v1 A_llist$)) (= (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1)) (or (= ?v0 zero$) (fun_app$h lnull$ ?v1)))))
(assume a17 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$)) (=> (and (=> (or (= ?v0 zero$) (fun_app$j lnull$a ?v1)) false) (=> (and (not (= ?v0 zero$)) (not (fun_app$j lnull$a ?v1))) false)) false)))
(assume a18 (forall ((?v0 Enat$) (?v1 Natural_llist$)) (=> (and (=> (or (= ?v0 zero$) (fun_app$k lnull$b ?v1)) false) (=> (and (not (= ?v0 zero$)) (not (fun_app$k lnull$b ?v1))) false)) false)))
(assume a19 (forall ((?v0 Enat$) (?v1 A_llist$)) (=> (and (=> (or (= ?v0 zero$) (fun_app$h lnull$ ?v1)) false) (=> (and (not (= ?v0 zero$)) (not (fun_app$h lnull$ ?v1))) false)) false)))
(assume a20 (forall ((?v0 A_llist$) (?v1 A_a_prod_llist$)) (=> (and (=> (or (fun_app$h lnull$ ?v0) (fun_app$j lnull$a ?v1)) false) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$j lnull$a ?v1))) false)) false)))
(assume a21 (forall ((?v0 A_llist$) (?v1 Natural_llist$)) (=> (and (=> (or (fun_app$h lnull$ ?v0) (fun_app$k lnull$b ?v1)) false) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$k lnull$b ?v1))) false)) false)))
(assume a22 (forall ((?v0 A_a_prod_llist$) (?v1 A_llist$)) (=> (and (=> (or (fun_app$j lnull$a ?v0) (fun_app$h lnull$ ?v1)) false) (=> (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$h lnull$ ?v1))) false)) false)))
(assume a23 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (=> (and (=> (or (fun_app$j lnull$a ?v0) (fun_app$j lnull$a ?v1)) false) (=> (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$j lnull$a ?v1))) false)) false)))
(assume a24 (forall ((?v0 A_a_prod_llist$) (?v1 Natural_llist$)) (=> (and (=> (or (fun_app$j lnull$a ?v0) (fun_app$k lnull$b ?v1)) false) (=> (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$k lnull$b ?v1))) false)) false)))
(assume a25 (forall ((?v0 Natural_llist$) (?v1 A_llist$)) (=> (and (=> (or (fun_app$k lnull$b ?v0) (fun_app$h lnull$ ?v1)) false) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$h lnull$ ?v1))) false)) false)))
(assume a26 (forall ((?v0 Natural_llist$) (?v1 A_a_prod_llist$)) (=> (and (=> (or (fun_app$k lnull$b ?v0) (fun_app$j lnull$a ?v1)) false) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$j lnull$a ?v1))) false)) false)))
(assume a27 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (=> (and (=> (or (fun_app$k lnull$b ?v0) (fun_app$k lnull$b ?v1)) false) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$k lnull$b ?v1))) false)) false)))
(assume a28 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (=> (or (fun_app$h lnull$ ?v0) (fun_app$h lnull$ ?v1)) false) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$h lnull$ ?v1))) false)) false)))
(assume a29 (forall ((?v0 A_a_prod_llist_set$)) (=> (and (=> (forall ((?v1 A_a_prod_llist$)) (=> (member$b ?v1 ?v0) (fun_app$j lnull$a ?v1))) false) (=> (not (forall ((?v1 A_a_prod_llist$)) (=> (member$b ?v1 ?v0) (fun_app$j lnull$a ?v1)))) false)) false)))
(assume a30 (forall ((?v0 Natural_llist_set$)) (=> (and (=> (forall ((?v1 Natural_llist$)) (=> (member$c ?v1 ?v0) (fun_app$k lnull$b ?v1))) false) (=> (not (forall ((?v1 Natural_llist$)) (=> (member$c ?v1 ?v0) (fun_app$k lnull$b ?v1)))) false)) false)))
(assume a31 (forall ((?v0 A_llist_set$)) (=> (and (=> (forall ((?v1 A_llist$)) (=> (member$ ?v1 ?v0) (fun_app$h lnull$ ?v1))) false) (=> (not (forall ((?v1 A_llist$)) (=> (member$ ?v1 ?v0) (fun_app$h lnull$ ?v1)))) false)) false)))
(assume a32 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (=> (and (=> (and (fun_app$j lnull$a ?v0) (fun_app$j lnull$a ?v1)) false) (=> (or (not (fun_app$j lnull$a ?v0)) (not (fun_app$j lnull$a ?v1))) false)) false)))
(assume a33 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (=> (and (=> (and (fun_app$k lnull$b ?v0) (fun_app$k lnull$b ?v1)) false) (=> (or (not (fun_app$k lnull$b ?v0)) (not (fun_app$k lnull$b ?v1))) false)) false)))
(assume a34 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (=> (and (fun_app$h lnull$ ?v0) (fun_app$h lnull$ ?v1)) false) (=> (or (not (fun_app$h lnull$ ?v0)) (not (fun_app$h lnull$ ?v1))) false)) false)))
(assume a35 (forall ((?v0 A_a_prod_llist$)) (=> (and (=> (fun_app$j lnull$a ?v0) false) (=> (not (fun_app$j lnull$a ?v0)) false)) false)))
(assume a36 (forall ((?v0 Natural_llist$)) (=> (and (=> (fun_app$k lnull$b ?v0) false) (=> (not (fun_app$k lnull$b ?v0)) false)) false)))
(assume a37 (forall ((?v0 A_llist$)) (=> (and (=> (fun_app$h lnull$ ?v0) false) (=> (not (fun_app$h lnull$ ?v0)) false)) false)))
(assume a38 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$)) (=> (or (= ?v0 zero$) (fun_app$j lnull$a ?v1)) (fun_app$j lnull$a (fun_app$b (ltake$a ?v0) ?v1)))))
(assume a39 (forall ((?v0 Enat$) (?v1 Natural_llist$)) (=> (or (= ?v0 zero$) (fun_app$k lnull$b ?v1)) (fun_app$k lnull$b (ltake$b ?v0 ?v1)))))
(assume a40 (forall ((?v0 Enat$) (?v1 A_llist$)) (=> (or (= ?v0 zero$) (fun_app$h lnull$ ?v1)) (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1)))))
(assume a41 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$)) (=> (and (not (= ?v0 zero$)) (not (fun_app$j lnull$a ?v1))) (not (fun_app$j lnull$a (fun_app$b (ltake$a ?v0) ?v1))))))
(assume a42 (forall ((?v0 Enat$) (?v1 Natural_llist$)) (=> (and (not (= ?v0 zero$)) (not (fun_app$k lnull$b ?v1))) (not (fun_app$k lnull$b (ltake$b ?v0 ?v1))))))
(assume a43 (forall ((?v0 Enat$) (?v1 A_llist$)) (=> (and (not (= ?v0 zero$)) (not (fun_app$h lnull$ ?v1))) (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))))))
(assume a44 (forall ((?v0 Enat$)) (=> (and (=> (= ?v0 zero$) false) (=> (not (= ?v0 zero$)) false)) false)))
(assume a45 (forall ((?v0 A_a_prod_llist$)) (= (= (fun_app$l llength$ ?v0) zero$) (fun_app$j lnull$a ?v0))))
(assume a46 (forall ((?v0 Natural_llist$)) (= (= (fun_app$m llength$a ?v0) zero$) (fun_app$k lnull$b ?v0))))
(assume a47 (forall ((?v0 A_llist$)) (= (= (fun_app$n llength$b ?v0) zero$) (fun_app$h lnull$ ?v0))))
(assume a48 (forall ((?v0 A_a_prod_llist$)) (=> (fun_app$j lnull$a ?v0) (= (fun_app$l llength$ ?v0) zero$))))
(assume a49 (forall ((?v0 Natural_llist$)) (=> (fun_app$k lnull$b ?v0) (= (fun_app$m llength$a ?v0) zero$))))
(assume a50 (forall ((?v0 A_llist$)) (=> (fun_app$h lnull$ ?v0) (= (fun_app$n llength$b ?v0) zero$))))
(assume a51 (forall ((?v0 Enat$) (?v1 Natural_natural_prod_llist$)) (=> (or (= ?v0 zero$) (fun_app$o lnull$c ?v1)) (= (fun_app$a (ltake$c ?v0) ?v1) lNil$c))))
(assume a52 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$)) (=> (or (= ?v0 zero$) (fun_app$j lnull$a ?v1)) (= (fun_app$b (ltake$a ?v0) ?v1) lNil$a))))
(assume a53 (forall ((?v0 Enat$) (?v1 Natural_llist$)) (=> (or (= ?v0 zero$) (fun_app$k lnull$b ?v1)) (= (ltake$b ?v0 ?v1) lNil$b))))
(assume a54 (forall ((?v0 Enat$) (?v1 A_llist$)) (=> (or (= ?v0 zero$) (fun_app$h lnull$ ?v1)) (= (fun_app$c (ltake$ ?v0) ?v1) lNil$))))
(assume a55 (forall ((?v0 Enat$) (?v1 Natural_natural_prod_llist$)) (=> (and (not (= ?v0 zero$)) (not (fun_app$o lnull$c ?v1))) (= (lhd$c (fun_app$a (ltake$c ?v0) ?v1)) (lhd$c ?v1)))))
(assume a56 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$)) (=> (and (not (= ?v0 zero$)) (not (fun_app$j lnull$a ?v1))) (= (lhd$a (fun_app$b (ltake$a ?v0) ?v1)) (lhd$a ?v1)))))
(assume a57 (forall ((?v0 Enat$) (?v1 Natural_llist$)) (=> (and (not (= ?v0 zero$)) (not (fun_app$k lnull$b ?v1))) (= (lhd$b (ltake$b ?v0 ?v1)) (lhd$b ?v1)))))
(assume a58 (forall ((?v0 Enat$) (?v1 A_llist$)) (=> (and (not (= ?v0 zero$)) (not (fun_app$h lnull$ ?v1))) (= (lhd$ (fun_app$c (ltake$ ?v0) ?v1)) (lhd$ ?v1)))))
(assume a59 (forall ((?v0 Enat$)) (= (= zero$ ?v0) (= ?v0 zero$))))
(assume a60 (forall ((?v0 Nat$)) (= (= zero$a ?v0) (= ?v0 zero$a))))
(assume a61 (forall ((?v0 Natural$)) (= (= zero$b ?v0) (= ?v0 zero$b))))
(assume a62 (forall ((?v0 A_llist$) (?v1 A_a_prod_llist$)) (= (not (lnull$d (lzip$ ?v0 ?v1))) (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$j lnull$a ?v1))))))
(assume a63 (forall ((?v0 A_llist$) (?v1 Natural_llist$)) (= (not (lnull$e (lzip$a ?v0 ?v1))) (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$k lnull$b ?v1))))))
(assume a64 (forall ((?v0 A_a_prod_llist$) (?v1 A_llist$)) (= (not (lnull$f (lzip$b ?v0 ?v1))) (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$h lnull$ ?v1))))))
(assume a65 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (= (not (lnull$g (lzip$c ?v0 ?v1))) (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$j lnull$a ?v1))))))
(assume a66 (forall ((?v0 A_a_prod_llist$) (?v1 Natural_llist$)) (= (not (lnull$h (lzip$d ?v0 ?v1))) (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$k lnull$b ?v1))))))
(assume a67 (forall ((?v0 Natural_llist$) (?v1 A_llist$)) (= (not (lnull$i (lzip$e ?v0 ?v1))) (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$h lnull$ ?v1))))))
(assume a68 (forall ((?v0 Natural_llist$) (?v1 A_a_prod_llist$)) (= (not (lnull$j (lzip$f ?v0 ?v1))) (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$j lnull$a ?v1))))))
(assume a69 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (= (not (fun_app$o lnull$c (lzip$g ?v0 ?v1))) (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$k lnull$b ?v1))))))
(assume a70 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (not (fun_app$j lnull$a (lzip$h ?v0 ?v1))) (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$h lnull$ ?v1))))))
(assume a71 (forall ((?v0 A_llist$) (?v1 A_a_prod_llist$)) (= (lnull$d (lzip$ ?v0 ?v1)) (or (fun_app$h lnull$ ?v0) (fun_app$j lnull$a ?v1)))))
(assume a72 (forall ((?v0 A_llist$) (?v1 Natural_llist$)) (= (lnull$e (lzip$a ?v0 ?v1)) (or (fun_app$h lnull$ ?v0) (fun_app$k lnull$b ?v1)))))
(assume a73 (forall ((?v0 A_a_prod_llist$) (?v1 A_llist$)) (= (lnull$f (lzip$b ?v0 ?v1)) (or (fun_app$j lnull$a ?v0) (fun_app$h lnull$ ?v1)))))
(assume a74 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (= (lnull$g (lzip$c ?v0 ?v1)) (or (fun_app$j lnull$a ?v0) (fun_app$j lnull$a ?v1)))))
(assume a75 (forall ((?v0 A_a_prod_llist$) (?v1 Natural_llist$)) (= (lnull$h (lzip$d ?v0 ?v1)) (or (fun_app$j lnull$a ?v0) (fun_app$k lnull$b ?v1)))))
(assume a76 (forall ((?v0 Natural_llist$) (?v1 A_llist$)) (= (lnull$i (lzip$e ?v0 ?v1)) (or (fun_app$k lnull$b ?v0) (fun_app$h lnull$ ?v1)))))
(assume a77 (forall ((?v0 Natural_llist$) (?v1 A_a_prod_llist$)) (= (lnull$j (lzip$f ?v0 ?v1)) (or (fun_app$k lnull$b ?v0) (fun_app$j lnull$a ?v1)))))
(assume a78 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (= (fun_app$o lnull$c (lzip$g ?v0 ?v1)) (or (fun_app$k lnull$b ?v0) (fun_app$k lnull$b ?v1)))))
(assume a79 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (fun_app$j lnull$a (lzip$h ?v0 ?v1)) (or (fun_app$h lnull$ ?v0) (fun_app$h lnull$ ?v1)))))
(assume a80 (forall ((?v0 A_a_prod_llist$)) (= (fun_app$b (ltake$a zero$) ?v0) lNil$a)))
(assume a81 (forall ((?v0 Natural_natural_prod_llist$)) (= (fun_app$a (ltake$c zero$) ?v0) lNil$c)))
(assume a82 (forall ((?v0 A_llist$)) (= (fun_app$c (ltake$ zero$) ?v0) lNil$)))
(assume a83 (forall ((?v0 A_a_prod_a_a_prod_fun$) (?v1 A_a_prod$)) (not (fun_app$j lnull$a (iterates$ ?v0 ?v1)))))
(assume a84 (forall ((?v0 Natural_natural_fun$) (?v1 Natural$)) (not (fun_app$k lnull$b (iterates$a ?v0 ?v1)))))
(assume a85 (forall ((?v0 A_a_fun$) (?v1 A$)) (not (fun_app$h lnull$ (iterates$b ?v0 ?v1)))))
(assume a86 (forall ((?v0 Enat$)) (= (fun_app$b (ltake$a ?v0) lNil$a) lNil$a)))
(assume a87 (forall ((?v0 Enat$)) (= (fun_app$a (ltake$c ?v0) lNil$c) lNil$c)))
(assume a88 (forall ((?v0 Enat$)) (= (fun_app$c (ltake$ ?v0) lNil$) lNil$)))
(assume a89 (! (= (! (fun_app$n llength$b lNil$) :named @p_7) zero$) :named @p_8))
(assume a90 (= (fun_app$l llength$ lNil$a) zero$))
(assume a91 (= (llength$c lNil$c) zero$))
(assume a92 (forall ((?v0 A_a_fun$) (?v1 A$)) (= (lhd$ (iterates$b ?v0 ?v1)) ?v1)))
(assume a93 (forall ((?v0 A_a_prod_a_a_prod_fun$) (?v1 A_a_prod$)) (= (lhd$a (iterates$ ?v0 ?v1)) ?v1)))
(assume a94 (forall ((?v0 Natural_natural_prod_natural_natural_prod_fun$) (?v1 Natural_natural_prod$)) (= (lhd$c (iterates$c ?v0 ?v1)) ?v1)))
(assume a95 (forall ((?v0 Natural_natural_fun$) (?v1 Natural$)) (= (lhd$b (iterates$a ?v0 ?v1)) ?v1)))
(assume a96 (forall ((?v0 A_llist$) (?v1 A_a_prod_llist$)) (=> (or (fun_app$h lnull$ ?v0) (fun_app$j lnull$a ?v1)) (= (lzip$ ?v0 ?v1) lNil$d))))
(assume a97 (forall ((?v0 A_llist$) (?v1 Natural_llist$)) (=> (or (fun_app$h lnull$ ?v0) (fun_app$k lnull$b ?v1)) (= (lzip$a ?v0 ?v1) lNil$e))))
(assume a98 (forall ((?v0 A_a_prod_llist$) (?v1 A_llist$)) (=> (or (fun_app$j lnull$a ?v0) (fun_app$h lnull$ ?v1)) (= (lzip$b ?v0 ?v1) lNil$f))))
(assume a99 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (=> (or (fun_app$j lnull$a ?v0) (fun_app$j lnull$a ?v1)) (= (lzip$c ?v0 ?v1) lNil$g))))
(assume a100 (forall ((?v0 A_a_prod_llist$) (?v1 Natural_llist$)) (=> (or (fun_app$j lnull$a ?v0) (fun_app$k lnull$b ?v1)) (= (lzip$d ?v0 ?v1) lNil$h))))
(assume a101 (forall ((?v0 Natural_llist$) (?v1 A_llist$)) (=> (or (fun_app$k lnull$b ?v0) (fun_app$h lnull$ ?v1)) (= (lzip$e ?v0 ?v1) lNil$i))))
(assume a102 (forall ((?v0 Natural_llist$) (?v1 A_a_prod_llist$)) (=> (or (fun_app$k lnull$b ?v0) (fun_app$j lnull$a ?v1)) (= (lzip$f ?v0 ?v1) lNil$j))))
(assume a103 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (=> (or (fun_app$k lnull$b ?v0) (fun_app$k lnull$b ?v1)) (= (lzip$g ?v0 ?v1) lNil$c))))
(assume a104 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (or (fun_app$h lnull$ ?v0) (fun_app$h lnull$ ?v1)) (= (lzip$h ?v0 ?v1) lNil$a))))
(assume a105 (forall ((?v0 Natural_natural_prod_llist$) (?v1 Natural_natural_prod_bool_fun$)) (=> (and (=> (or (fun_app$o lnull$c ?v0) (not (fun_app$p ?v1 (lhd$c ?v0)))) false) (=> (and (not (fun_app$o lnull$c ?v0)) (fun_app$p ?v1 (lhd$c ?v0))) false)) false)))
(assume a106 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_bool_fun$)) (=> (and (=> (or (fun_app$j lnull$a ?v0) (not (fun_app$q ?v1 (lhd$a ?v0)))) false) (=> (and (not (fun_app$j lnull$a ?v0)) (fun_app$q ?v1 (lhd$a ?v0))) false)) false)))
(assume a107 (forall ((?v0 Natural_llist$) (?v1 Natural_bool_fun$)) (=> (and (=> (or (fun_app$k lnull$b ?v0) (not (fun_app$r ?v1 (lhd$b ?v0)))) false) (=> (and (not (fun_app$k lnull$b ?v0)) (fun_app$r ?v1 (lhd$b ?v0))) false)) false)))
(assume a108 (forall ((?v0 A_llist$) (?v1 A_bool_fun$)) (=> (and (=> (or (fun_app$h lnull$ ?v0) (not (fun_app$s ?v1 (lhd$ ?v0)))) false) (=> (and (not (fun_app$h lnull$ ?v0)) (fun_app$s ?v1 (lhd$ ?v0))) false)) false)))
(assume a109 (fun_app$o lnull$c lNil$c))
(assume a110 (fun_app$j lnull$a lNil$a))
(assume a111 (fun_app$k lnull$b lNil$b))
(assume a112 (fun_app$h lnull$ lNil$))
(assume a113 (forall ((?v0 Natural_natural_prod_llist$)) (=> (fun_app$o lnull$c ?v0) (= ?v0 lNil$c))))
(assume a114 (forall ((?v0 A_a_prod_llist$)) (=> (fun_app$j lnull$a ?v0) (= ?v0 lNil$a))))
(assume a115 (forall ((?v0 Natural_llist$)) (=> (fun_app$k lnull$b ?v0) (= ?v0 lNil$b))))
(assume a116 (forall ((?v0 A_llist$)) (=> (fun_app$h lnull$ ?v0) (= ?v0 lNil$))))
(assume a117 (forall ((?v0 Natural_natural_prod_llist$)) (=> (= ?v0 lNil$c) (fun_app$o lnull$c ?v0))))
(assume a118 (forall ((?v0 A_a_prod_llist$)) (=> (= ?v0 lNil$a) (fun_app$j lnull$a ?v0))))
(assume a119 (forall ((?v0 Natural_llist$)) (=> (= ?v0 lNil$b) (fun_app$k lnull$b ?v0))))
(assume a120 (forall ((?v0 A_llist$)) (=> (= ?v0 lNil$) (fun_app$h lnull$ ?v0))))
(assume a121 (forall ((?v0 Natural_natural_prod_llist$)) (= (fun_app$o lnull$c ?v0) (= ?v0 lNil$c))))
(assume a122 (forall ((?v0 A_a_prod_llist$)) (= (fun_app$j lnull$a ?v0) (= ?v0 lNil$a))))
(assume a123 (forall ((?v0 Natural_llist$)) (= (fun_app$k lnull$b ?v0) (= ?v0 lNil$b))))
(assume a124 (forall ((?v0 A_llist$)) (= (fun_app$h lnull$ ?v0) (= ?v0 lNil$))))
(assume a125 (forall ((?v0 A_llist$) (?v1 A_a_prod_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$j lnull$a ?v1))) (not (lnull$d (lzip$ ?v0 ?v1))))))
(assume a126 (forall ((?v0 A_llist$) (?v1 Natural_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$k lnull$b ?v1))) (not (lnull$e (lzip$a ?v0 ?v1))))))
(assume a127 (forall ((?v0 A_a_prod_llist$) (?v1 A_llist$)) (=> (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$h lnull$ ?v1))) (not (lnull$f (lzip$b ?v0 ?v1))))))
(assume a128 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (=> (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$j lnull$a ?v1))) (not (lnull$g (lzip$c ?v0 ?v1))))))
(assume a129 (forall ((?v0 A_a_prod_llist$) (?v1 Natural_llist$)) (=> (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$k lnull$b ?v1))) (not (lnull$h (lzip$d ?v0 ?v1))))))
(assume a130 (forall ((?v0 Natural_llist$) (?v1 A_llist$)) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$h lnull$ ?v1))) (not (lnull$i (lzip$e ?v0 ?v1))))))
(assume a131 (forall ((?v0 Natural_llist$) (?v1 A_a_prod_llist$)) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$j lnull$a ?v1))) (not (lnull$j (lzip$f ?v0 ?v1))))))
(assume a132 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$k lnull$b ?v1))) (not (fun_app$o lnull$c (lzip$g ?v0 ?v1))))))
(assume a133 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$h lnull$ ?v1))) (not (fun_app$j lnull$a (lzip$h ?v0 ?v1))))))
(assume a134 (forall ((?v0 A_llist$) (?v1 A_a_prod_llist$)) (=> (or (fun_app$h lnull$ ?v0) (fun_app$j lnull$a ?v1)) (lnull$d (lzip$ ?v0 ?v1)))))
(assume a135 (forall ((?v0 A_llist$) (?v1 Natural_llist$)) (=> (or (fun_app$h lnull$ ?v0) (fun_app$k lnull$b ?v1)) (lnull$e (lzip$a ?v0 ?v1)))))
(assume a136 (forall ((?v0 A_a_prod_llist$) (?v1 A_llist$)) (=> (or (fun_app$j lnull$a ?v0) (fun_app$h lnull$ ?v1)) (lnull$f (lzip$b ?v0 ?v1)))))
(assume a137 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (=> (or (fun_app$j lnull$a ?v0) (fun_app$j lnull$a ?v1)) (lnull$g (lzip$c ?v0 ?v1)))))
(assume a138 (forall ((?v0 A_a_prod_llist$) (?v1 Natural_llist$)) (=> (or (fun_app$j lnull$a ?v0) (fun_app$k lnull$b ?v1)) (lnull$h (lzip$d ?v0 ?v1)))))
(assume a139 (forall ((?v0 Natural_llist$) (?v1 A_llist$)) (=> (or (fun_app$k lnull$b ?v0) (fun_app$h lnull$ ?v1)) (lnull$i (lzip$e ?v0 ?v1)))))
(assume a140 (forall ((?v0 Natural_llist$) (?v1 A_a_prod_llist$)) (=> (or (fun_app$k lnull$b ?v0) (fun_app$j lnull$a ?v1)) (lnull$j (lzip$f ?v0 ?v1)))))
(assume a141 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (=> (or (fun_app$k lnull$b ?v0) (fun_app$k lnull$b ?v1)) (fun_app$o lnull$c (lzip$g ?v0 ?v1)))))
(assume a142 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (or (fun_app$h lnull$ ?v0) (fun_app$h lnull$ ?v1)) (fun_app$j lnull$a (lzip$h ?v0 ?v1)))))
(assume a143 (forall ((?v0 Natural_natural_prod_llist$) (?v1 Natural_natural_prod_bool_fun$)) (=> (or (fun_app$o lnull$c ?v0) (not (fun_app$p ?v1 (lhd$c ?v0)))) (= (ltakeWhile$ ?v1 ?v0) lNil$c))))
(assume a144 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_bool_fun$)) (=> (or (fun_app$j lnull$a ?v0) (not (fun_app$q ?v1 (lhd$a ?v0)))) (= (ltakeWhile$a ?v1 ?v0) lNil$a))))
(assume a145 (forall ((?v0 Natural_llist$) (?v1 Natural_bool_fun$)) (=> (or (fun_app$k lnull$b ?v0) (not (fun_app$r ?v1 (lhd$b ?v0)))) (= (ltakeWhile$b ?v1 ?v0) lNil$b))))
(assume a146 (forall ((?v0 A_llist$) (?v1 A_bool_fun$)) (=> (or (fun_app$h lnull$ ?v0) (not (fun_app$s ?v1 (lhd$ ?v0)))) (= (ltakeWhile$c ?v1 ?v0) lNil$))))
(assume a147 (forall ((?v0 Natural_natural_prod_bool_fun$) (?v1 Natural_natural_prod_llist$)) (= (fun_app$o lnull$c (ltakeWhile$ ?v0 ?v1)) (or (fun_app$o lnull$c ?v1) (not (fun_app$p ?v0 (lhd$c ?v1)))))))
(assume a148 (forall ((?v0 A_a_prod_bool_fun$) (?v1 A_a_prod_llist$)) (= (fun_app$j lnull$a (ltakeWhile$a ?v0 ?v1)) (or (fun_app$j lnull$a ?v1) (not (fun_app$q ?v0 (lhd$a ?v1)))))))
(assume a149 (forall ((?v0 Natural_bool_fun$) (?v1 Natural_llist$)) (= (fun_app$k lnull$b (ltakeWhile$b ?v0 ?v1)) (or (fun_app$k lnull$b ?v1) (not (fun_app$r ?v0 (lhd$b ?v1)))))))
(assume a150 (forall ((?v0 A_bool_fun$) (?v1 A_llist$)) (= (fun_app$h lnull$ (ltakeWhile$c ?v0 ?v1)) (or (fun_app$h lnull$ ?v1) (not (fun_app$s ?v0 (lhd$ ?v1)))))))
(assume a151 (forall ((?v0 Natural_natural_prod_bool_fun$) (?v1 Natural_natural_prod_llist$)) (= (not (fun_app$o lnull$c (ltakeWhile$ ?v0 ?v1))) (and (not (fun_app$o lnull$c ?v1)) (fun_app$p ?v0 (lhd$c ?v1))))))
(assume a152 (forall ((?v0 A_a_prod_bool_fun$) (?v1 A_a_prod_llist$)) (= (not (fun_app$j lnull$a (ltakeWhile$a ?v0 ?v1))) (and (not (fun_app$j lnull$a ?v1)) (fun_app$q ?v0 (lhd$a ?v1))))))
(assume a153 (forall ((?v0 Natural_bool_fun$) (?v1 Natural_llist$)) (= (not (fun_app$k lnull$b (ltakeWhile$b ?v0 ?v1))) (and (not (fun_app$k lnull$b ?v1)) (fun_app$r ?v0 (lhd$b ?v1))))))
(assume a154 (forall ((?v0 A_bool_fun$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (ltakeWhile$c ?v0 ?v1))) (and (not (fun_app$h lnull$ ?v1)) (fun_app$s ?v0 (lhd$ ?v1))))))
(assume a155 (= (the_enat$ zero$) zero$a))
(assume a156 (forall ((?v0 Natural_natural_prod_llist$) (?v1 Natural_natural_prod_bool_fun$)) (=> (and (not (fun_app$o lnull$c ?v0)) (fun_app$p ?v1 (lhd$c ?v0))) (not (fun_app$o lnull$c (ltakeWhile$ ?v1 ?v0))))))
(assume a157 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_bool_fun$)) (=> (and (not (fun_app$j lnull$a ?v0)) (fun_app$q ?v1 (lhd$a ?v0))) (not (fun_app$j lnull$a (ltakeWhile$a ?v1 ?v0))))))
(assume a158 (forall ((?v0 Natural_llist$) (?v1 Natural_bool_fun$)) (=> (and (not (fun_app$k lnull$b ?v0)) (fun_app$r ?v1 (lhd$b ?v0))) (not (fun_app$k lnull$b (ltakeWhile$b ?v1 ?v0))))))
(assume a159 (forall ((?v0 A_llist$) (?v1 A_bool_fun$)) (=> (and (not (fun_app$h lnull$ ?v0)) (fun_app$s ?v1 (lhd$ ?v0))) (not (fun_app$h lnull$ (ltakeWhile$c ?v1 ?v0))))))
(assume a160 (forall ((?v0 Natural_natural_prod_llist$) (?v1 Natural_natural_prod_bool_fun$)) (=> (and (not (fun_app$o lnull$c ?v0)) (fun_app$p ?v1 (lhd$c ?v0))) (= (lhd$c (ltakeWhile$ ?v1 ?v0)) (lhd$c ?v0)))))
(assume a161 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_bool_fun$)) (=> (and (not (fun_app$j lnull$a ?v0)) (fun_app$q ?v1 (lhd$a ?v0))) (= (lhd$a (ltakeWhile$a ?v1 ?v0)) (lhd$a ?v0)))))
(assume a162 (forall ((?v0 Natural_llist$) (?v1 Natural_bool_fun$)) (=> (and (not (fun_app$k lnull$b ?v0)) (fun_app$r ?v1 (lhd$b ?v0))) (= (lhd$b (ltakeWhile$b ?v1 ?v0)) (lhd$b ?v0)))))
(assume a163 (forall ((?v0 A_llist$) (?v1 A_bool_fun$)) (=> (and (not (fun_app$h lnull$ ?v0)) (fun_app$s ?v1 (lhd$ ?v0))) (= (lhd$ (ltakeWhile$c ?v1 ?v0)) (lhd$ ?v0)))))
(assume a164 (forall ((?v0 Natural_natural_prod_llist$) (?v1 Natural_natural_prod_bool_fun$)) (=> (or (fun_app$o lnull$c ?v0) (not (fun_app$p ?v1 (lhd$c ?v0)))) (fun_app$o lnull$c (ltakeWhile$ ?v1 ?v0)))))
(assume a165 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_bool_fun$)) (=> (or (fun_app$j lnull$a ?v0) (not (fun_app$q ?v1 (lhd$a ?v0)))) (fun_app$j lnull$a (ltakeWhile$a ?v1 ?v0)))))
(assume a166 (forall ((?v0 Natural_llist$) (?v1 Natural_bool_fun$)) (=> (or (fun_app$k lnull$b ?v0) (not (fun_app$r ?v1 (lhd$b ?v0)))) (fun_app$k lnull$b (ltakeWhile$b ?v1 ?v0)))))
(assume a167 (forall ((?v0 A_llist$) (?v1 A_bool_fun$)) (=> (or (fun_app$h lnull$ ?v0) (not (fun_app$s ?v1 (lhd$ ?v0)))) (fun_app$h lnull$ (ltakeWhile$c ?v1 ?v0)))))
(assume a168 (forall ((?v0 A_llist_set$)) (= (collect$ (uu$ ?v0)) ?v0)))
(assume a169 (forall ((?v0 A_llist_a_llist_prod_set$)) (= (collect$a (uua$ ?v0)) ?v0)))
(assume a170 (forall ((?v0 A_llist$) (?v1 A_llist_bool_fun$)) (= (member$ ?v0 (collect$ ?v1)) (fun_app$h ?v1 ?v0))))
(assume a171 (forall ((?v0 A_llist_a_llist_prod$) (?v1 A_llist_a_llist_prod_bool_fun$)) (= (member$a ?v0 (collect$a ?v1)) (fun_app$i ?v1 ?v0))))
(assume a172 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$k lnull$b ?v1))) (= (lhd$c (lzip$g ?v0 ?v1)) (pair$a (lhd$b ?v0) (lhd$b ?v1))))))
(assume a173 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$h lnull$ ?v1))) (= (lhd$a (lzip$h ?v0 ?v1)) (pair$ (lhd$ ?v0) (lhd$ ?v1))))))
(assume a174 (forall ((?v0 Nat_llist$) (?v1 Nat_llist$)) (=> (and (not (lnull$k ?v0)) (not (lnull$k ?v1))) (= (lhd$l (lzip$i ?v0 ?v1)) (pair$j (lhd$k ?v0) (lhd$k ?v1))))))
(assume a175 (forall ((?v0 A_llist$) (?v1 Natural_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$k lnull$b ?v1))) (= (lhd$e (lzip$a ?v0 ?v1)) (pair$c (lhd$ ?v0) (lhd$b ?v1))))))
(assume a176 (forall ((?v0 Natural_llist$) (?v1 A_llist$)) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$h lnull$ ?v1))) (= (lhd$i (lzip$e ?v0 ?v1)) (pair$g (lhd$b ?v0) (lhd$ ?v1))))))
(assume a177 (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (=> (and (not (lnull$l ?v0)) (not (lnull$l ?v1))) (= (lhd$n (lzip$j ?v0 ?v1)) (pair$i (lhd$m ?v0) (lhd$m ?v1))))))
(assume a178 (forall ((?v0 Natural_natural_prod_llist$) (?v1 A_llist$)) (=> (and (not (fun_app$o lnull$c ?v0)) (not (fun_app$h lnull$ ?v1))) (= (lhd$o (lzip$k ?v0 ?v1)) (pair$k (lhd$c ?v0) (lhd$ ?v1))))))
(assume a179 (forall ((?v0 Natural_natural_prod_llist$) (?v1 Natural_llist$)) (=> (and (not (fun_app$o lnull$c ?v0)) (not (fun_app$k lnull$b ?v1))) (= (lhd$p (lzip$l ?v0 ?v1)) (pair$l (lhd$c ?v0) (lhd$b ?v1))))))
(assume a180 (forall ((?v0 A_llist$) (?v1 Natural_natural_prod_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$o lnull$c ?v1))) (= (lhd$q (lzip$m ?v0 ?v1)) (pair$m (lhd$ ?v0) (lhd$c ?v1))))))
(assume a181 (forall ((?v0 A_llist$) (?v1 A_a_prod_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$j lnull$a ?v1))) (= (lhd$d (lzip$ ?v0 ?v1)) (pair$b (lhd$ ?v0) (lhd$a ?v1))))))
(assume a182 (forall ((?v0 A$)) (= (fun_app$h (lmember$ ?v0) lNil$) false)))
(assume a183 (forall ((?v0 A_a_prod$)) (= (fun_app$j (lmember$a ?v0) lNil$a) false)))
(assume a184 (forall ((?v0 Natural_natural_prod$)) (= (fun_app$o (lmember$b ?v0) lNil$c) false)))
(assume a185 (forall ((?v0 A$) (?v1 A$) (?v2 A$) (?v3 A$)) (= (= (pair$ ?v0 ?v1) (pair$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a186 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$) (?v3 Nat$)) (= (= (pair$j ?v0 ?v1) (pair$j ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a187 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$) (?v3 A_llist$)) (= (= (pair$i ?v0 ?v1) (pair$i ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a188 (forall ((?v0 Natural$) (?v1 Natural$) (?v2 Natural$) (?v3 Natural$)) (= (= (pair$a ?v0 ?v1) (pair$a ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a189 (= llength$b (gen_llength$ zero$a)))
(assume a190 (forall ((?v0 Nat$) (?v1 Nat$)) (= (divides_aux$ (pair$j ?v0 ?v1)) (= ?v1 zero$a))))
(assume a191 (forall ((?v0 Natural_natural_prod_llist$) (?v1 Natural_natural_prod_bool_fun$)) (=> (and (not (fun_app$o lnull$c ?v0)) (fun_app$p ?v1 (lhd$c ?v0))) (= (ltl$c (ltakeWhile$ ?v1 ?v0)) (ltakeWhile$ ?v1 (ltl$c ?v0))))))
(assume a192 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_bool_fun$)) (=> (and (not (fun_app$j lnull$a ?v0)) (fun_app$q ?v1 (lhd$a ?v0))) (= (ltl$a (ltakeWhile$a ?v1 ?v0)) (ltakeWhile$a ?v1 (ltl$a ?v0))))))
(assume a193 (forall ((?v0 Natural_llist$) (?v1 Natural_bool_fun$)) (=> (and (not (fun_app$k lnull$b ?v0)) (fun_app$r ?v1 (lhd$b ?v0))) (= (ltl$b (ltakeWhile$b ?v1 ?v0)) (ltakeWhile$b ?v1 (ltl$b ?v0))))))
(assume a194 (forall ((?v0 A_llist$) (?v1 A_bool_fun$)) (=> (and (not (fun_app$h lnull$ ?v0)) (fun_app$s ?v1 (lhd$ ?v0))) (= (ltl$ (ltakeWhile$c ?v1 ?v0)) (ltakeWhile$c ?v1 (ltl$ ?v0))))))
(assume a195 (= zero$a zero$a))
(assume a196 (forall ((?v0 Nat$)) (=> (and (=> (= ?v0 zero$a) false) (=> (not (= ?v0 zero$a)) false)) false)))
(assume a197 (forall ((?v0 A_a_prod$)) (exists ((?v1 A$) (?v2 A$)) (= ?v0 (pair$ ?v1 ?v2)))))
(assume a198 (forall ((?v0 Nat_nat_prod$)) (exists ((?v1 Nat$) (?v2 Nat$)) (= ?v0 (pair$j ?v1 ?v2)))))
(assume a199 (forall ((?v0 A_llist_a_llist_prod$)) (exists ((?v1 A_llist$) (?v2 A_llist$)) (= ?v0 (pair$i ?v1 ?v2)))))
(assume a200 (forall ((?v0 Natural_natural_prod$)) (exists ((?v1 Natural$) (?v2 Natural$)) (= ?v0 (pair$a ?v1 ?v2)))))
(assume a201 (forall ((?v0 A_llist$) (?v1 A_a_prod_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$j lnull$a ?v1))) (= (ltl$d (lzip$ ?v0 ?v1)) (lzip$ (ltl$ ?v0) (ltl$a ?v1))))))
(assume a202 (forall ((?v0 A_llist$) (?v1 Natural_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$k lnull$b ?v1))) (= (ltl$e (lzip$a ?v0 ?v1)) (lzip$a (ltl$ ?v0) (ltl$b ?v1))))))
(assume a203 (forall ((?v0 A_a_prod_llist$) (?v1 A_llist$)) (=> (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$h lnull$ ?v1))) (= (ltl$f (lzip$b ?v0 ?v1)) (lzip$b (ltl$a ?v0) (ltl$ ?v1))))))
(assume a204 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (=> (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$j lnull$a ?v1))) (= (ltl$g (lzip$c ?v0 ?v1)) (lzip$c (ltl$a ?v0) (ltl$a ?v1))))))
(assume a205 (forall ((?v0 A_a_prod_llist$) (?v1 Natural_llist$)) (=> (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$k lnull$b ?v1))) (= (ltl$h (lzip$d ?v0 ?v1)) (lzip$d (ltl$a ?v0) (ltl$b ?v1))))))
(assume a206 (forall ((?v0 Natural_llist$) (?v1 A_llist$)) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$h lnull$ ?v1))) (= (ltl$i (lzip$e ?v0 ?v1)) (lzip$e (ltl$b ?v0) (ltl$ ?v1))))))
(assume a207 (forall ((?v0 Natural_llist$) (?v1 A_a_prod_llist$)) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$j lnull$a ?v1))) (= (ltl$j (lzip$f ?v0 ?v1)) (lzip$f (ltl$b ?v0) (ltl$a ?v1))))))
(assume a208 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$k lnull$b ?v1))) (= (ltl$c (lzip$g ?v0 ?v1)) (lzip$g (ltl$b ?v0) (ltl$b ?v1))))))
(assume a209 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$h lnull$ ?v1))) (= (ltl$a (lzip$h ?v0 ?v1)) (lzip$h (ltl$ ?v0) (ltl$ ?v1))))))
(assume a210 (forall ((?v0 A_a_prod_llist$)) (=> (fun_app$j lnull$a ?v0) (fun_app$j lnull$a (ltl$a ?v0)))))
(assume a211 (forall ((?v0 Natural_llist$)) (=> (fun_app$k lnull$b ?v0) (fun_app$k lnull$b (ltl$b ?v0)))))
(assume a212 (forall ((?v0 A_llist$)) (=> (fun_app$h lnull$ ?v0) (fun_app$h lnull$ (ltl$ ?v0)))))
(assume a213 (= (ltl$b lNil$b) lNil$b))
(assume a214 (= (ltl$ lNil$) lNil$))
(assume a215 (= (ltl$a lNil$a) lNil$a))
(assume a216 (= (ltl$c lNil$c) lNil$c))
(assume a217 (forall ((?v0 A_a_fun$) (?v1 A$)) (= (ltl$ (iterates$b ?v0 ?v1)) (iterates$b ?v0 (fun_app$t ?v0 ?v1)))))
(assume a218 (forall ((?v0 A_a_prod_a_a_prod_fun$) (?v1 A_a_prod$)) (= (ltl$a (iterates$ ?v0 ?v1)) (iterates$ ?v0 (fun_app$u ?v0 ?v1)))))
(assume a219 (forall ((?v0 Natural_natural_fun$) (?v1 Natural$)) (= (ltl$b (iterates$a ?v0 ?v1)) (iterates$a ?v0 (fun_app$v ?v0 ?v1)))))
(assume a220 (forall ((?v0 Natural_natural_prod_llist_natural_natural_prod_llist_bool_fun_fun$) (?v1 Natural_natural_prod_llist$) (?v2 Natural_natural_prod_llist$)) (=> (and (fun_app$o (fun_app$w ?v0 ?v1) ?v2) (forall ((?v3 Natural_natural_prod_llist$) (?v4 Natural_natural_prod_llist$)) (=> (fun_app$o (fun_app$w ?v0 ?v3) ?v4) (and (= (fun_app$o lnull$c ?v3) (fun_app$o lnull$c ?v4)) (=> (and (not (fun_app$o lnull$c ?v3)) (not (fun_app$o lnull$c ?v4))) (and (= (lhd$c ?v3) (lhd$c ?v4)) (fun_app$o (fun_app$w ?v0 (ltl$c ?v3)) (ltl$c ?v4)))))))) (= ?v1 ?v2))))
(assume a221 (forall ((?v0 A_a_prod_llist_a_a_prod_llist_bool_fun_fun$) (?v1 A_a_prod_llist$) (?v2 A_a_prod_llist$)) (=> (and (fun_app$j (fun_app$x ?v0 ?v1) ?v2) (forall ((?v3 A_a_prod_llist$) (?v4 A_a_prod_llist$)) (=> (fun_app$j (fun_app$x ?v0 ?v3) ?v4) (and (= (fun_app$j lnull$a ?v3) (fun_app$j lnull$a ?v4)) (=> (and (not (fun_app$j lnull$a ?v3)) (not (fun_app$j lnull$a ?v4))) (and (= (lhd$a ?v3) (lhd$a ?v4)) (fun_app$j (fun_app$x ?v0 (ltl$a ?v3)) (ltl$a ?v4)))))))) (= ?v1 ?v2))))
(assume a222 (forall ((?v0 Natural_llist_natural_llist_bool_fun_fun$) (?v1 Natural_llist$) (?v2 Natural_llist$)) (=> (and (fun_app$k (fun_app$y ?v0 ?v1) ?v2) (forall ((?v3 Natural_llist$) (?v4 Natural_llist$)) (=> (fun_app$k (fun_app$y ?v0 ?v3) ?v4) (and (= (fun_app$k lnull$b ?v3) (fun_app$k lnull$b ?v4)) (=> (and (not (fun_app$k lnull$b ?v3)) (not (fun_app$k lnull$b ?v4))) (and (= (lhd$b ?v3) (lhd$b ?v4)) (fun_app$k (fun_app$y ?v0 (ltl$b ?v3)) (ltl$b ?v4)))))))) (= ?v1 ?v2))))
(assume a223 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$h (fun_app$z ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$h (fun_app$z ?v0 ?v3) ?v4) (and (= (fun_app$h lnull$ ?v3) (fun_app$h lnull$ ?v4)) (=> (and (not (fun_app$h lnull$ ?v3)) (not (fun_app$h lnull$ ?v4))) (and (= (lhd$ ?v3) (lhd$ ?v4)) (fun_app$h (fun_app$z ?v0 (ltl$ ?v3)) (ltl$ ?v4)))))))) (= ?v1 ?v2))))
(assume a224 (forall ((?v0 Natural_natural_prod_llist_natural_natural_prod_llist_bool_fun_fun$) (?v1 Natural_natural_prod_llist$) (?v2 Natural_natural_prod_llist$)) (=> (and (fun_app$o (fun_app$w ?v0 ?v1) ?v2) (forall ((?v3 Natural_natural_prod_llist$) (?v4 Natural_natural_prod_llist$)) (=> (fun_app$o (fun_app$w ?v0 ?v3) ?v4) (and (= (fun_app$o lnull$c ?v3) (fun_app$o lnull$c ?v4)) (=> (and (not (fun_app$o lnull$c ?v3)) (not (fun_app$o lnull$c ?v4))) (and (= (lhd$c ?v3) (lhd$c ?v4)) (or (fun_app$o (fun_app$w ?v0 (ltl$c ?v3)) (ltl$c ?v4)) (= (ltl$c ?v3) (ltl$c ?v4))))))))) (= ?v1 ?v2))))
(assume a225 (forall ((?v0 A_a_prod_llist_a_a_prod_llist_bool_fun_fun$) (?v1 A_a_prod_llist$) (?v2 A_a_prod_llist$)) (=> (and (fun_app$j (fun_app$x ?v0 ?v1) ?v2) (forall ((?v3 A_a_prod_llist$) (?v4 A_a_prod_llist$)) (=> (fun_app$j (fun_app$x ?v0 ?v3) ?v4) (and (= (fun_app$j lnull$a ?v3) (fun_app$j lnull$a ?v4)) (=> (and (not (fun_app$j lnull$a ?v3)) (not (fun_app$j lnull$a ?v4))) (and (= (lhd$a ?v3) (lhd$a ?v4)) (or (fun_app$j (fun_app$x ?v0 (ltl$a ?v3)) (ltl$a ?v4)) (= (ltl$a ?v3) (ltl$a ?v4))))))))) (= ?v1 ?v2))))
(assume a226 (forall ((?v0 Natural_llist_natural_llist_bool_fun_fun$) (?v1 Natural_llist$) (?v2 Natural_llist$)) (=> (and (fun_app$k (fun_app$y ?v0 ?v1) ?v2) (forall ((?v3 Natural_llist$) (?v4 Natural_llist$)) (=> (fun_app$k (fun_app$y ?v0 ?v3) ?v4) (and (= (fun_app$k lnull$b ?v3) (fun_app$k lnull$b ?v4)) (=> (and (not (fun_app$k lnull$b ?v3)) (not (fun_app$k lnull$b ?v4))) (and (= (lhd$b ?v3) (lhd$b ?v4)) (or (fun_app$k (fun_app$y ?v0 (ltl$b ?v3)) (ltl$b ?v4)) (= (ltl$b ?v3) (ltl$b ?v4))))))))) (= ?v1 ?v2))))
(assume a227 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$h (fun_app$z ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$h (fun_app$z ?v0 ?v3) ?v4) (and (= (fun_app$h lnull$ ?v3) (fun_app$h lnull$ ?v4)) (=> (and (not (fun_app$h lnull$ ?v3)) (not (fun_app$h lnull$ ?v4))) (and (= (lhd$ ?v3) (lhd$ ?v4)) (or (fun_app$h (fun_app$z ?v0 (ltl$ ?v3)) (ltl$ ?v4)) (= (ltl$ ?v3) (ltl$ ?v4))))))))) (= ?v1 ?v2))))
(assume a228 (forall ((?v0 Natural_natural_prod_llist$) (?v1 Natural_natural_prod_llist$)) (=> (and (= (fun_app$o lnull$c ?v0) (fun_app$o lnull$c ?v1)) (=> (and (not (fun_app$o lnull$c ?v0)) (not (fun_app$o lnull$c ?v1))) (and (= (lhd$c ?v0) (lhd$c ?v1)) (= (ltl$c ?v0) (ltl$c ?v1))))) (= ?v0 ?v1))))
(assume a229 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (=> (and (= (fun_app$j lnull$a ?v0) (fun_app$j lnull$a ?v1)) (=> (and (not (fun_app$j lnull$a ?v0)) (not (fun_app$j lnull$a ?v1))) (and (= (lhd$a ?v0) (lhd$a ?v1)) (= (ltl$a ?v0) (ltl$a ?v1))))) (= ?v0 ?v1))))
(assume a230 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (=> (and (= (fun_app$k lnull$b ?v0) (fun_app$k lnull$b ?v1)) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$k lnull$b ?v1))) (and (= (lhd$b ?v0) (lhd$b ?v1)) (= (ltl$b ?v0) (ltl$b ?v1))))) (= ?v0 ?v1))))
(assume a231 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (= (fun_app$h lnull$ ?v0) (fun_app$h lnull$ ?v1)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$h lnull$ ?v1))) (and (= (lhd$ ?v0) (lhd$ ?v1)) (= (ltl$ ?v0) (ltl$ ?v1))))) (= ?v0 ?v1))))
(assume a232 (forall ((?v0 A_a_prod$)) (=> (forall ((?v1 A$) (?v2 A$)) (=> (= ?v0 (pair$ ?v1 ?v2)) false)) false)))
(assume a233 (forall ((?v0 Nat_nat_prod$)) (=> (forall ((?v1 Nat$) (?v2 Nat$)) (=> (= ?v0 (pair$j ?v1 ?v2)) false)) false)))
(assume a234 (forall ((?v0 A_llist_a_llist_prod$)) (=> (forall ((?v1 A_llist$) (?v2 A_llist$)) (=> (= ?v0 (pair$i ?v1 ?v2)) false)) false)))
(assume a235 (forall ((?v0 Natural_natural_prod$)) (=> (forall ((?v1 Natural$) (?v2 Natural$)) (=> (= ?v0 (pair$a ?v1 ?v2)) false)) false)))
(assume a236 (forall ((?v0 A_a_prod_bool_fun$) (?v1 A_a_prod$)) (=> (forall ((?v2 A$) (?v3 A$)) (fun_app$q ?v0 (pair$ ?v2 ?v3))) (fun_app$q ?v0 ?v1))))
(assume a237 (forall ((?v0 Nat_nat_prod_bool_fun$) (?v1 Nat_nat_prod$)) (=> (forall ((?v2 Nat$) (?v3 Nat$)) (fun_app$aa ?v0 (pair$j ?v2 ?v3))) (fun_app$aa ?v0 ?v1))))
(assume a238 (forall ((?v0 A_llist_a_llist_prod_bool_fun$) (?v1 A_llist_a_llist_prod$)) (=> (forall ((?v2 A_llist$) (?v3 A_llist$)) (fun_app$i ?v0 (pair$i ?v2 ?v3))) (fun_app$i ?v0 ?v1))))
(assume a239 (forall ((?v0 Natural_natural_prod_bool_fun$) (?v1 Natural_natural_prod$)) (=> (forall ((?v2 Natural$) (?v3 Natural$)) (fun_app$p ?v0 (pair$a ?v2 ?v3))) (fun_app$p ?v0 ?v1))))
(assume a240 (forall ((?v0 A$) (?v1 A$) (?v2 A$) (?v3 A$)) (=> (and (= (pair$ ?v0 ?v1) (pair$ ?v2 ?v3)) (=> (and (= ?v0 ?v2) (= ?v1 ?v3)) false)) false)))
(assume a241 (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$) (?v3 Nat$)) (=> (and (= (pair$j ?v0 ?v1) (pair$j ?v2 ?v3)) (=> (and (= ?v0 ?v2) (= ?v1 ?v3)) false)) false)))
(assume a242 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$) (?v3 A_llist$)) (=> (and (= (pair$i ?v0 ?v1) (pair$i ?v2 ?v3)) (=> (and (= ?v0 ?v2) (= ?v1 ?v3)) false)) false)))
(assume a243 (forall ((?v0 Natural$) (?v1 Natural$) (?v2 Natural$) (?v3 Natural$)) (=> (and (= (pair$a ?v0 ?v1) (pair$a ?v2 ?v3)) (=> (and (= ?v0 ?v2) (= ?v1 ?v3)) false)) false)))
(assume a244 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (= (lzip$g ?v0 ?v1) (ite (or (fun_app$k lnull$b ?v0) (fun_app$k lnull$b ?v1)) lNil$c (lCons$c (pair$a (lhd$b ?v0) (lhd$b ?v1)) (lzip$g (ltl$b ?v0) (ltl$b ?v1)))))))
(assume a245 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (lzip$h ?v0 ?v1) (ite (or (fun_app$h lnull$ ?v0) (fun_app$h lnull$ ?v1)) lNil$a (lCons$a (pair$ (lhd$ ?v0) (lhd$ ?v1)) (lzip$h (ltl$ ?v0) (ltl$ ?v1)))))))
(assume a246 (forall ((?v0 Nat_llist$) (?v1 Nat_llist$)) (= (lzip$i ?v0 ?v1) (ite (or (lnull$k ?v0) (lnull$k ?v1)) lNil$l (lCons$l (pair$j (lhd$k ?v0) (lhd$k ?v1)) (lzip$i (ltl$k ?v0) (ltl$k ?v1)))))))
(assume a247 (forall ((?v0 A_llist$) (?v1 Natural_llist$)) (= (lzip$a ?v0 ?v1) (ite (or (fun_app$h lnull$ ?v0) (fun_app$k lnull$b ?v1)) lNil$e (lCons$e (pair$c (lhd$ ?v0) (lhd$b ?v1)) (lzip$a (ltl$ ?v0) (ltl$b ?v1)))))))
(assume a248 (forall ((?v0 Natural_llist$) (?v1 A_llist$)) (= (lzip$e ?v0 ?v1) (ite (or (fun_app$k lnull$b ?v0) (fun_app$h lnull$ ?v1)) lNil$i (lCons$i (pair$g (lhd$b ?v0) (lhd$ ?v1)) (lzip$e (ltl$b ?v0) (ltl$ ?v1)))))))
(assume a249 (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (= (lzip$j ?v0 ?v1) (ite (or (lnull$l ?v0) (lnull$l ?v1)) lNil$n (lCons$n (pair$i (lhd$m ?v0) (lhd$m ?v1)) (lzip$j (ltl$m ?v0) (ltl$m ?v1)))))))
(assume a250 (forall ((?v0 Natural_natural_prod_llist$) (?v1 A_llist$)) (= (lzip$k ?v0 ?v1) (ite (or (fun_app$o lnull$c ?v0) (fun_app$h lnull$ ?v1)) lNil$o (lCons$o (pair$k (lhd$c ?v0) (lhd$ ?v1)) (lzip$k (ltl$c ?v0) (ltl$ ?v1)))))))
(assume a251 (forall ((?v0 Natural_natural_prod_llist$) (?v1 Natural_llist$)) (= (lzip$l ?v0 ?v1) (ite (or (fun_app$o lnull$c ?v0) (fun_app$k lnull$b ?v1)) lNil$p (lCons$p (pair$l (lhd$c ?v0) (lhd$b ?v1)) (lzip$l (ltl$c ?v0) (ltl$b ?v1)))))))
(assume a252 (forall ((?v0 A_llist$) (?v1 Natural_natural_prod_llist$)) (= (lzip$m ?v0 ?v1) (ite (or (fun_app$h lnull$ ?v0) (fun_app$o lnull$c ?v1)) lNil$q (lCons$q (pair$m (lhd$ ?v0) (lhd$c ?v1)) (lzip$m (ltl$ ?v0) (ltl$c ?v1)))))))
(assume a253 (forall ((?v0 A_llist$) (?v1 A_a_prod_llist$)) (= (lzip$ ?v0 ?v1) (ite (or (fun_app$h lnull$ ?v0) (fun_app$j lnull$a ?v1)) lNil$d (lCons$d (pair$b (lhd$ ?v0) (lhd$a ?v1)) (lzip$ (ltl$ ?v0) (ltl$a ?v1)))))))
(assume a254 (= (size_natural$ zero$b) zero$a))
(assume a255 (= llength$ (enat_unfold$ lnull$a uub$)))
(assume a256 (= llength$a (enat_unfold$a lnull$b uuc$)))
(assume a257 (! (= llength$b (! (enat_unfold$b lnull$ uud$) :named @p_9)) :named @p_10))
(assume a258 (forall ((?v0 Natural_natural_prod_llist$)) (= (unfold_llist$ lnull$c uue$ uuf$ ?v0) ?v0)))
(assume a259 (forall ((?v0 A_a_prod_llist$)) (= (unfold_llist$a lnull$a uug$ uub$ ?v0) ?v0)))
(assume a260 (forall ((?v0 Natural_llist$)) (= (unfold_llist$b lnull$b uuh$ uuc$ ?v0) ?v0)))
(assume a261 (forall ((?v0 A_llist$)) (= (unfold_llist$c lnull$ uui$ uud$ ?v0) ?v0)))
(assume a262 (forall ((?v0 A_a_prod_bool_fun$) (?v1 A_a_prod_llist$)) (= (ltakeWhile$a ?v0 ?v1) (ite (or (fun_app$j lnull$a ?v1) (not (fun_app$q ?v0 (lhd$a ?v1)))) lNil$a (lCons$a (lhd$a ?v1) (ltakeWhile$a ?v0 (ltl$a ?v1)))))))
(assume a263 (forall ((?v0 Natural_bool_fun$) (?v1 Natural_llist$)) (= (ltakeWhile$b ?v0 ?v1) (ite (or (fun_app$k lnull$b ?v1) (not (fun_app$r ?v0 (lhd$b ?v1)))) lNil$b (lCons$b (lhd$b ?v1) (ltakeWhile$b ?v0 (ltl$b ?v1)))))))
(assume a264 (forall ((?v0 A_bool_fun$) (?v1 A_llist$)) (= (ltakeWhile$c ?v0 ?v1) (ite (or (fun_app$h lnull$ ?v1) (not (fun_app$s ?v0 (lhd$ ?v1)))) lNil$ (lCons$ (lhd$ ?v1) (ltakeWhile$c ?v0 (ltl$ ?v1)))))))
(assume a265 (forall ((?v0 Natural_llist$) (?v1 Natural_llist$)) (=> (and (not (fun_app$k lnull$b ?v0)) (not (fun_app$k lnull$b ?v1))) (= (lzip$g ?v0 ?v1) (lCons$c (pair$a (lhd$b ?v0) (lhd$b ?v1)) (lzip$g (ltl$b ?v0) (ltl$b ?v1)))))))
(assume a266 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (not (fun_app$h lnull$ ?v0)) (not (fun_app$h lnull$ ?v1))) (= (lzip$h ?v0 ?v1) (lCons$a (pair$ (lhd$ ?v0) (lhd$ ?v1)) (lzip$h (ltl$ ?v0) (ltl$ ?v1)))))))
(assume a267 (forall ((?v0 A_llist$)) (=> (not (fun_app$h lnull$ ?v0)) (= (lCons$ (lhd$ ?v0) (ltl$ ?v0)) ?v0))))
(assume a268 (forall ((?v0 A_llist$)) (= (not (fun_app$h lnull$ ?v0)) (exists ((?v1 A$) (?v2 A_llist$)) (= ?v0 (lCons$ ?v1 ?v2))))))
(assume a269 (forall ((?v0 A_llist$) (?v1 A$) (?v2 A_llist$)) (=> (= ?v0 (lCons$ ?v1 ?v2)) (not (fun_app$h lnull$ ?v0)))))
(assume a270 (forall ((?v0 A$) (?v1 A_llist$)) (not (fun_app$h lnull$ (lCons$ ?v0 ?v1)))))
(assume a271 (forall ((?v0 A_llist$) (?v1 A_bool_fun$)) (=> (and (not (fun_app$h lnull$ ?v0)) (fun_app$s ?v1 (lhd$ ?v0))) (= (ltakeWhile$c ?v1 ?v0) (lCons$ (lhd$ ?v0) (ltakeWhile$c ?v1 (ltl$ ?v0)))))))
(assume a272 (forall ((?v0 Enat$) (?v1 A_llist$)) (= (fun_app$c (ltake$ ?v0) ?v1) (ite (or (= ?v0 zero$) (fun_app$h lnull$ ?v1)) lNil$ (lCons$ (lhd$ ?v1) (fun_app$c (ltake$ (epred$ ?v0)) (ltl$ ?v1)))))))
(assume a273 (= (size$ zero$b) zero$a))
(assume a274 (forall ((?v0 Enat$) (?v1 A_llist$)) (=> (and (not (= ?v0 zero$)) (not (fun_app$h lnull$ ?v1))) (= (fun_app$c (ltake$ ?v0) ?v1) (lCons$ (lhd$ ?v1) (fun_app$c (ltake$ (epred$ ?v0)) (ltl$ ?v1)))))))
(assume a275 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$ab (fun_app$ac ?v0 ?v1) ?v2) (forall ((?v3 Enat$) (?v4 Enat$)) (=> (fun_app$ab (fun_app$ac ?v0 ?v3) ?v4) (and (= (= ?v3 zero$) (= ?v4 zero$)) (=> (and (not (= ?v3 zero$)) (not (= ?v4 zero$))) (or (fun_app$ab (fun_app$ac ?v0 (epred$ ?v3)) (epred$ ?v4)) (= (epred$ ?v3) (epred$ ?v4)))))))) (= ?v1 ?v2))))
(assume a276 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$ab (fun_app$ac ?v0 ?v1) ?v2) (and (forall ((?v3 Enat$) (?v4 Enat$)) (=> (fun_app$ab (fun_app$ac ?v0 ?v3) ?v4) (= (= ?v3 zero$) (= ?v4 zero$)))) (forall ((?v3 Enat$) (?v4 Enat$)) (=> (and (fun_app$ab (fun_app$ac ?v0 ?v3) ?v4) (and (not (= ?v3 zero$)) (not (= ?v4 zero$)))) (or (fun_app$ab (fun_app$ac ?v0 (epred$ ?v3)) (epred$ ?v4)) (= (epred$ ?v3) (epred$ ?v4))))))) (= ?v1 ?v2))))
(assume a277 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (not (= ?v0 zero$)) (not (= ?v1 zero$))) (= (= (epred$ ?v0) (epred$ ?v1)) (= ?v0 ?v1)))))
(assume a278 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (= (= ?v0 zero$) (= ?v1 zero$)) (=> (and (not (= ?v0 zero$)) (not (= ?v1 zero$))) (= (epred$ ?v0) (epred$ ?v1)))) (= ?v0 ?v1))))
(assume a279 (= (epred$ zero$) zero$))
(assume a280 (forall ((?v0 Enat$) (?v1 A_llist$)) (=> (and (not (= ?v0 zero$)) (not (fun_app$h lnull$ ?v1))) (= (ltl$ (fun_app$c (ltake$ ?v0) ?v1)) (fun_app$c (ltake$ (epred$ ?v0)) (ltl$ ?v1))))))
(assume a281 (forall ((?v0 Natural$) (?v1 Natural$)) (= (= (suc$ ?v0) (suc$ ?v1)) (= ?v0 ?v1))))
(assume a282 (forall ((?v0 Natural$)) (=> (and (=> (= ?v0 zero$b) false) (forall ((?v1 Natural$)) (=> (= ?v0 (suc$ ?v1)) false))) false)))
(assume a283 (forall ((?v0 Natural$)) (not (= zero$b (suc$ ?v0)))))
(assume a284 (forall ((?v0 Natural$)) (not (= (suc$ ?v0) zero$b))))
(assume a285 (forall ((?v0 Natural_natural_prod$)) (=> (and (forall ((?v1 Natural$)) (=> (= ?v0 (pair$a zero$b ?v1)) false)) (forall ((?v1 Natural$) (?v2 Natural$)) (=> (= ?v0 (pair$a (suc$ ?v1) ?v2)) false))) false)))
(assume a286 (forall ((?v0 Typerep$) (?v1 Typerep$)) (=> (not (= (size$a ?v0) (size$a ?v1))) (not (= ?v0 ?v1)))))
(assume a287 (forall ((?v0 Literal$) (?v1 Literal$)) (=> (not (= (size$b ?v0) (size$b ?v1))) (not (= ?v0 ?v1)))))
(assume a288 (forall ((?v0 Nibble$) (?v1 Nibble$)) (=> (not (= (size$c ?v0) (size$c ?v1))) (not (= ?v0 ?v1)))))
(assume a289 (forall ((?v0 Char$) (?v1 Char$)) (=> (not (= (size$d ?v0) (size$d ?v1))) (not (= ?v0 ?v1)))))
(assume a290 (forall ((?v0 Bool) (?v1 Bool)) (=> (not (= (fun_app$ad size$e ?v0) (fun_app$ad size$e ?v1))) (not (= ?v0 ?v1)))))
(assume a291 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$h (fun_app$z (llist_all2$ ?v0) ?v1) ?v2) (and (= (fun_app$h lnull$ ?v1) (fun_app$h lnull$ ?v2)) (=> (and (not (fun_app$h lnull$ ?v1)) (not (fun_app$h lnull$ ?v2))) (and (fun_app$s (fun_app$ae ?v0 (lhd$ ?v1)) (lhd$ ?v2)) (fun_app$h (fun_app$z (llist_all2$ ?v0) (ltl$ ?v1)) (ltl$ ?v2))))))))
(assume a292 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (?v3 A_a_bool_fun_fun$)) (=> (and (fun_app$h (fun_app$z ?v0 ?v1) ?v2) (forall ((?v4 A_llist$) (?v5 A_llist$)) (=> (fun_app$h (fun_app$z ?v0 ?v4) ?v5) (and (= (fun_app$h lnull$ ?v4) (fun_app$h lnull$ ?v5)) (=> (and (not (fun_app$h lnull$ ?v4)) (not (fun_app$h lnull$ ?v5))) (and (fun_app$s (fun_app$ae ?v3 (lhd$ ?v4)) (lhd$ ?v5)) (fun_app$h (fun_app$z ?v0 (ltl$ ?v4)) (ltl$ ?v5)))))))) (fun_app$h (fun_app$z (llist_all2$ ?v3) ?v1) ?v2))))
(assume a293 (forall ((?v0 Char$)) (= (size$d ?v0) zero$a)))
(assume a294 (forall ((?v0 Nibble$)) (= (size$c ?v0) zero$a)))
(assume a295 (= (fun_app$ad size$e false) zero$a))
(assume a296 (= (fun_app$ad size$e true) zero$a))
(assume a297 (forall ((?v0 Literal$)) (= (size$b ?v0) zero$a)))
(assume a298 (forall ((?v0 Bool)) (= (fun_app$ad size$e ?v0) zero$a)))
(assume a299 (forall ((?v0 Char$)) (= (size_char$ ?v0) zero$a)))
(assume a300 (= (size$c nibbleA$) zero$a))
(assume a301 (= (fun_app$ad size_bool$ false) zero$a))
(assume a302 (= (fun_app$ad size_bool$ true) zero$a))
(assume a303 (= (size$c nibbleB$) zero$a))
(assume a304 (= size_bool$ (! (rec_bool$ zero$a zero$a) :named @p_11)))
(assume a305 (= (size$c nibble8$) zero$a))
(assume a306 (forall ((?v0 Nat$) (?v1 Nat$)) (= (fun_app$ad (rec_bool$ ?v0 ?v1) true) ?v0)))
(assume a307 (forall ((?v0 Nat$) (?v1 Nat$)) (= (fun_app$ad (rec_bool$ ?v0 ?v1) false) ?v1)))
(assume a308 (= size$e @p_11))
(assume a309 (= (size$c nibble0$) zero$a))
(assume a310 (= (size$c nibbleD$) zero$a))
(assume a311 (= (size$c nibbleC$) zero$a))
(assume a312 (= (size$c nibble1$) zero$a))
(assume a313 (= (size$c nibbleF$) zero$a))
(assume a314 (= (size$c nibble3$) zero$a))
(assume a315 (= (nibble_of_nat$ zero$a) nibble0$))
(assume a316 (= (size_nibble$ nibbleA$) zero$a))
(assume a317 (= (size$c nibble9$) zero$a))
(assume a318 (forall ((?v0 Nibble$)) (= (size_nibble$ ?v0) zero$a)))
(assume a319 (= (size_nibble$ nibble9$) zero$a))
(assume a320 (= (size_nibble$ nibble3$) zero$a))
(assume a321 (= (size_nibble$ nibbleF$) zero$a))
(assume a322 (= (size_nibble$ nibble1$) zero$a))
(assume a323 (= (size_nibble$ nibbleC$) zero$a))
(assume a324 (= (size_nibble$ nibbleD$) zero$a))
(assume a325 (= (size_nibble$ nibble0$) zero$a))
(assume a326 (= (size_nibble$ nibble8$) zero$a))
(assume a327 (= (size_nibble$ nibbleB$) zero$a))
(assume a328 (forall ((?v0 Nibble$) (?v1 Nibble$)) (= (size$d (char$ ?v0 ?v1)) zero$a)))
(assume a329 (= (size$c nibble2$) zero$a))
(assume a330 (= (size_nibble$ nibble2$) zero$a))
(assume a331 (forall ((?v0 Nibble$) (?v1 Nibble$)) (= (size_char$ (char$ ?v0 ?v1)) zero$a)))
(assume a332 (= (size$c nibble4$) zero$a))
(assume a333 (= (size$c nibbleE$) zero$a))
(assume a334 (= (size_nibble$ nibbleE$) zero$a))
(assume a335 (= (size_nibble$ nibble4$) zero$a))
(assume a336 (forall ((?v0 Typerep$)) (not (= (size$a ?v0) zero$a))))
(assume a337 (= size$f (! (rec_unit$ zero$a) :named @p_12)))
(assume a338 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$h (fun_app$z ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$h (fun_app$z ?v0 ?v3) ?v4) (and (=> (fun_app$h lnull$ ?v4) (fun_app$h lnull$ ?v3)) (=> (and (not (fun_app$h lnull$ ?v3)) (not (fun_app$h lnull$ ?v4))) (and (= (lhd$ ?v3) (lhd$ ?v4)) (or (fun_app$h (fun_app$z ?v0 (ltl$ ?v3)) (ltl$ ?v4)) (fun_app$h (lprefix$ (ltl$ ?v3)) (ltl$ ?v4))))))))) (fun_app$h (lprefix$ ?v1) ?v2))))
(assume a339 (forall ((?v0 A_llist$)) (= (fun_app$h (lprefix$ ?v0) lNil$) (fun_app$h lnull$ ?v0))))
(assume a340 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist_a_llist_prod_set$)) (=> (and (member$a (pair$i ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (member$a (pair$i ?v3 ?v4) ?v2) (or (fun_app$h lnull$ ?v3) (exists ((?v5 A$) (?v6 A_llist$) (?v7 A_llist$)) (and (= ?v3 (lCons$ ?v5 ?v6)) (and (= ?v4 (lCons$ ?v5 ?v7)) (or (member$a (pair$i ?v6 ?v7) ?v2) (fun_app$h (lprefix$ ?v6) ?v7))))))))) (fun_app$h (lprefix$ ?v0) ?v1))))
(assume a341 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (fun_app$h (lprefix$ ?v0) ?v1) (not (fun_app$h lnull$ ?v0))) (not (fun_app$h lnull$ ?v1)))))
(assume a342 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (fun_app$h (lprefix$ ?v0) ?v1) (fun_app$h lnull$ ?v1)) (fun_app$h lnull$ ?v0))))
(assume a343 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (fun_app$h lnull$ ?v0) (= (fun_app$h (lprefix$ ?v1) ?v0) (fun_app$h lnull$ ?v1)))))
(assume a344 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (fun_app$h lnull$ ?v0) (fun_app$h (lprefix$ ?v0) ?v1))))
(assume a345 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (fun_app$h (lprefix$ ?v0) ?v1) (not (fun_app$h lnull$ ?v0))) (= (lhd$ ?v0) (lhd$ ?v1)))))
(assume a346 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (=> (not (fun_app$h lnull$ ?v0)) (and (not (fun_app$h lnull$ ?v1)) (and (= (lhd$ ?v0) (lhd$ ?v1)) (fun_app$h (lprefix$ (ltl$ ?v0)) (ltl$ ?v1))))) (fun_app$h (lprefix$ ?v0) ?v1))))
(assume a347 (= size_unit$ @p_12))
(assume a348 (= (fun_app$af size_unit$ unity$) zero$a))
(assume a349 (= (fun_app$af size$f unity$) zero$a))
(assume a350 (forall ((?v0 Nat$)) (= (fun_app$af (rec_unit$ ?v0) unity$) ?v0)))
(assume a351 (forall ((?v0 Unit$)) (=> (=> (= ?v0 unity$) false) false)))
(assume a352 (= default$ unity$))
(step t0 (cl (! (not (! (or @p_2 (! (= n$ (! (fun_app$n @p_9 lNil$) :named @p_13)) :named @p_14)) :named @p_15)) :named @p_17) @p_2 @p_14) :rule or_pos)
(step t1 (cl @p_2 @p_14 @p_17) :rule reordering :premises (t0))
(step t2 (cl (! (not (! (and (! (not @p_14) :named @p_22) (! (not @p_2) :named @p_21)) :named @p_23)) :named @p_47) @p_21) :rule and_pos :args (1))
(step t3 (cl @p_21 @p_47) :rule reordering :premises (t2))
(step t4 (cl (not (! (= (! (or (! (not (! (= (! (not @p_4) :named @p_16) @p_23) :named @p_24)) :named @p_48) (! (not @p_16) :named @p_57) @p_23) :named @p_58) (! (or @p_48 @p_4 @p_23) :named @p_56)) :named @p_59)) (not @p_58) @p_56) :rule equiv_pos2)
(step t5 (cl (= @p_48 @p_48)) :rule refl)
(step t6 (cl (! (= @p_57 @p_4) :named @p_60)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_60 1 5))
(step t7 (cl (= @p_23 @p_23)) :rule refl)
(step t8 (cl @p_59) :rule cong :premises (t5 t6 t7))
(step t9 (cl @p_48 @p_57 @p_23) :rule equiv_pos2)
(step t10 (cl @p_58 (not @p_48)) :rule or_neg :args (0))
(step t11 (cl @p_58 (not @p_57)) :rule or_neg :args (1))
(step t12 (cl @p_58 @p_47) :rule or_neg :args (2))
(step t13 (cl @p_58 @p_58 @p_58) :rule resolution :premises (t9 t10 t11 t12))
(step t14 (cl @p_58) :rule contraction :premises (t13))
(step t15 (cl @p_56) :rule resolution :premises (t4 t8 t14))
(step t16 (cl @p_48 @p_4 @p_23) :rule or :premises (t15))
(step t17 (cl @p_4 @p_23 @p_48) :rule reordering :premises (t16))
(step t18 (cl (not (! (= (! (or @p_23 (! (not @p_22) :named @p_51) (! (not @p_21) :named @p_50)) :named @p_52) (! (or @p_23 @p_14 @p_2) :named @p_49)) :named @p_53)) (not @p_52) @p_49) :rule equiv_pos2)
(step t19 (cl (! (= @p_51 @p_14) :named @p_55)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_55 1 5))
(step t20 (cl (! (= @p_50 @p_2) :named @p_54)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_54 1 5))
(step t21 (cl @p_53) :rule cong :premises (t7 t19 t20))
(step t22 (cl @p_23 @p_51 @p_50) :rule and_neg)
(step t23 (cl @p_52 @p_47) :rule or_neg :args (0))
(step t24 (cl @p_52 (not @p_51)) :rule or_neg :args (1))
(step t25 (cl @p_52 (not @p_50)) :rule or_neg :args (2))
(step t26 (cl @p_52 @p_52 @p_52) :rule resolution :premises (t22 t23 t24 t25))
(step t27 (cl @p_52) :rule contraction :premises (t26))
(step t28 (cl @p_49) :rule resolution :premises (t18 t21 t27))
(step t29 (cl @p_23 @p_14 @p_2) :rule or :premises (t28))
(step t30 (cl @p_2 @p_14 @p_23) :rule reordering :premises (t29))
(step t31 (cl @p_15 @p_22) :rule or_neg :args (1))
(step t32 (cl @p_15 @p_21) :rule or_neg :args (0))
(step t33 (cl @p_48 @p_16 @p_47) :rule equiv_pos1)
(step t34 (cl @p_16 @p_47 @p_48) :rule reordering :premises (t33))
(step t35 (cl (or (! (not (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ ?v1)))))) :named @p_46) @p_24)) :rule forall_inst :args (n$ xs$))
(step t36 (cl @p_46 @p_24) :rule or :premises (t35))
(step t37 (cl (not (! (= (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 zero$)) (not (fun_app$h lnull$ ?v1))))) (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ ?v1)))))) :named @p_25)) (not (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 zero$)) (not (fun_app$h lnull$ ?v1)))))) (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ ?v1)))))) :rule equiv_pos2)
(anchor :step t38 :args ((?v0 Enat$) (?v1 A_llist$) (:= (?v0 Enat$) ?v0) (:= (?v1 A_llist$) ?v1)))
(step t38.t0 (cl (= (! (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) :named @p_32) @p_32)) :rule refl)
(step t38.t1 (cl (! (= (! (= ?v0 zero$) :named @p_42) (! (= zero$ ?v0) :named @p_38)) :named @p_45)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_45 2 6))
(step t38.t2 (cl (= (! (not @p_42) :named @p_43) (! (not @p_38) :named @p_39))) :rule cong :premises (t38.t1))
(step t38.t3 (cl (= (! (not (fun_app$h lnull$ ?v1)) :named @p_28) @p_28)) :rule refl)
(step t38.t4 (cl (= (! (and @p_43 @p_28) :named @p_44) (! (and @p_39 @p_28) :named @p_40))) :rule cong :premises (t38.t2 t38.t3))
(step t38.t5 (cl (= (= @p_32 @p_44) (! (= @p_32 @p_40) :named @p_41))) :rule cong :premises (t38.t0 t38.t4))
(step t38 (cl (= (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 zero$)) (not (fun_app$h lnull$ ?v1))))) (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= zero$ ?v0)) (not (fun_app$h lnull$ ?v1))))))) :rule bind)
(anchor :step t39 :args ((?v0 Enat$) (?v1 A_llist$) (:= (?v0 Enat$) ?v0) (:= (?v1 A_llist$) ?v1)))
(step t39.t0 (cl (= @p_32 @p_32)) :rule refl)
(step t39.t1 (cl (= zero$ @p_7)) :rule symm :premises (a89))
(step t39.t2 (cl (= lNil$ lNil$)) :rule refl)
(step t39.t3 (cl (= @p_7 @p_13)) :rule cong :premises (a257 t39.t2))
(step t39.t4 (cl (= zero$ @p_13)) :rule trans :premises (t39.t1 t39.t3))
(step t39.t5 (cl (! (= ?v0 ?v0) :named @p_26)) :rule refl)
(step t39.t6 (cl (= @p_38 (! (= @p_13 ?v0) :named @p_33))) :rule cong :premises (t39.t4 t39.t5))
(step t39.t7 (cl (= @p_39 (! (not @p_33) :named @p_34))) :rule cong :premises (t39.t6))
(step t39.t8 (cl (= @p_28 @p_28)) :rule refl)
(step t39.t9 (cl (= @p_40 (! (and @p_34 @p_28) :named @p_35))) :rule cong :premises (t39.t7 t39.t8))
(step t39.t10 (cl (= @p_41 (! (= @p_32 @p_35) :named @p_36))) :rule cong :premises (t39.t0 t39.t9))
(step t39 (cl (= (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= zero$ ?v0)) (not (fun_app$h lnull$ ?v1))))) (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= (fun_app$n (enat_unfold$b lnull$ uud$) lNil$) ?v0)) (not (fun_app$h lnull$ ?v1))))))) :rule bind)
(anchor :step t40 :args ((?v0 Enat$) (?v1 A_llist$) (:= (?v0 Enat$) ?v0) (:= (?v1 A_llist$) ?v1)))
(step t40.t0 (cl (= @p_32 @p_32)) :rule refl)
(step t40.t1 (cl (! (= @p_33 (! (= ?v0 @p_13) :named @p_29)) :named @p_37)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_37 2 6))
(step t40.t2 (cl (= @p_34 (! (not @p_29) :named @p_30))) :rule cong :premises (t40.t1))
(step t40.t3 (cl (= @p_28 @p_28)) :rule refl)
(step t40.t4 (cl (= @p_35 (! (and @p_30 @p_28) :named @p_31))) :rule cong :premises (t40.t2 t40.t3))
(step t40.t5 (cl (= @p_36 (= @p_32 @p_31))) :rule cong :premises (t40.t0 t40.t4))
(step t40 (cl (= (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= (fun_app$n (enat_unfold$b lnull$ uud$) lNil$) ?v0)) (not (fun_app$h lnull$ ?v1))))) (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ ?v1))))))) :rule bind)
(step t41 (cl (= (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= zero$ ?v0)) (not (fun_app$h lnull$ ?v1))))) (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ ?v1))))))) :rule trans :premises (t39 t40))
(step t42 (cl @p_25) :rule trans :premises (t38 t41))
(step t43 (cl (forall ((?v0 Enat$) (?v1 A_llist$)) (= (not (fun_app$h lnull$ (fun_app$c (ltake$ ?v0) ?v1))) (and (not (= ?v0 (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ ?v1)))))) :rule resolution :premises (t37 t42 a13))
(step t44 (cl @p_24) :rule resolution :premises (t36 t43))
(step t45 (cl (not (! (= @p_6 (! (not (! (= @p_4 @p_15) :named @p_18)) :named @p_19)) :named @p_20)) (not @p_6) @p_19) :rule equiv_pos2)
(step t46 (cl (= @p_4 @p_4)) :rule refl)
(step t47 (cl (= @p_2 @p_2)) :rule refl)
(step t48 (cl (= n$ n$)) :rule refl)
(step t49 (cl (= zero$ @p_7)) :rule symm :premises (a89))
(step t50 (cl (= lNil$ lNil$)) :rule refl)
(step t51 (cl (= @p_7 @p_13)) :rule cong :premises (a257 t50))
(step t52 (cl (= zero$ @p_13)) :rule trans :premises (t49 t51))
(step t53 (cl (= @p_1 @p_14)) :rule cong :premises (t48 t52))
(step t54 (cl (= @p_3 @p_15)) :rule cong :premises (t47 t53))
(step t55 (cl (= @p_5 @p_18)) :rule cong :premises (t46 t54))
(step t56 (cl @p_20) :rule cong :premises (t55))
(step t57 (cl @p_19) :rule resolution :premises (t45 t56 a10))
(step t58 (cl @p_16 @p_17) :rule not_equiv2 :premises (t57))
(step t59 (cl @p_16) :rule resolution :premises (t30 t31 t32 t34 t44 t58))
(step t60 (cl @p_23) :rule resolution :premises (t17 t59 t44))
(step t61 (cl @p_21) :rule resolution :premises (t3 t60))
(step t62 (cl @p_47 @p_22) :rule and_pos :args (0))
(step t63 (cl @p_22 @p_47) :rule reordering :premises (t62))
(step t64 (cl @p_22) :rule resolution :premises (t63 t60))
(step t65 (cl @p_4 @p_15) :rule not_equiv1 :premises (t57))
(step t66 (cl @p_15) :rule resolution :premises (t65 t59))
(step t67 (cl) :rule resolution :premises (t1 t61 t64 t66))
