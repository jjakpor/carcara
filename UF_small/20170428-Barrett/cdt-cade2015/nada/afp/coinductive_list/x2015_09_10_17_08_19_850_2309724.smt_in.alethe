unsat
(define-fun @quantifiers_skolemize_10 () A_llist$ (choice ((?v3 A_llist$)) (not (forall ((?v4 A_llist$)) (or (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))))))))
(define-fun @quantifiers_skolemize_11 () A_llist$ (choice ((?v4 A_llist$)) (not (or (not (fun_app$m (fun_app$n (llexord$ uu$) @quantifiers_skolemize_10) ?v4)) (= lNil$ @quantifiers_skolemize_10) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= @quantifiers_skolemize_10 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))))
(define-fun @quantifiers_skolemize_30 () A_llist$ (choice ((?v3 A_llist$)) (not (forall ((?v4 A_llist$) (?v5 A$)) (or (not (= (lCons$ ?v5 ?v3) @quantifiers_skolemize_10)) (not (= (lCons$ ?v5 ?v4) @quantifiers_skolemize_11)) (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)))))))
(define-fun @quantifiers_skolemize_31 () A_llist$ (choice ((?v4 A_llist$)) (not (forall ((?v5 A$)) (or (not (= (lCons$ ?v5 @quantifiers_skolemize_30) @quantifiers_skolemize_10)) (not (= (lCons$ ?v5 ?v4) @quantifiers_skolemize_11)) (not (fun_app$m (fun_app$n (llexord$ uu$) @quantifiers_skolemize_30) ?v4)))))))
(define-fun @quantifiers_skolemize_32 () A$ (choice ((?v5 A$)) (not (or (not (= (lCons$ ?v5 @quantifiers_skolemize_30) @quantifiers_skolemize_10)) (not (= (lCons$ ?v5 @quantifiers_skolemize_31) @quantifiers_skolemize_11)) (not (fun_app$m (fun_app$n (llexord$ uu$) @quantifiers_skolemize_30) @quantifiers_skolemize_31))))))
(define-fun @quantifiers_skolemize_36 () A$ (choice ((?v3 A$)) (not (forall ((?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= (lCons$ ?v3 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v4 ?v6) @quantifiers_skolemize_11)) (not (fun_app$bk (fun_app$bu uu$ ?v3) ?v4)))))))
(define-fun @quantifiers_skolemize_37 () A$ (choice ((?v4 A$)) (not (forall ((?v5 A_llist$) (?v6 A_llist$)) (or (not (= (lCons$ @quantifiers_skolemize_36 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v4 ?v6) @quantifiers_skolemize_11)) (not (fun_app$bk (fun_app$bu uu$ @quantifiers_skolemize_36) ?v4)))))))
(define-fun @quantifiers_skolemize_38 () A_llist$ (choice ((?v5 A_llist$)) (not (forall ((?v6 A_llist$)) (or (not (= (lCons$ @quantifiers_skolemize_36 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ @quantifiers_skolemize_37 ?v6) @quantifiers_skolemize_11)) (not (fun_app$bk (fun_app$bu uu$ @quantifiers_skolemize_36) @quantifiers_skolemize_37)))))))
(define-fun @quantifiers_skolemize_39 () A_llist$ (choice ((?v6 A_llist$)) (not (or (not (= (lCons$ @quantifiers_skolemize_36 @quantifiers_skolemize_38) @quantifiers_skolemize_10)) (not (= (lCons$ @quantifiers_skolemize_37 ?v6) @quantifiers_skolemize_11)) (not (fun_app$bk (fun_app$bu uu$ @quantifiers_skolemize_36) @quantifiers_skolemize_37))))))
(assume a0 (forall ((?v0 A_a_llist_a_llist_a_llist_fun_fun_fun$) (?v1 A_llist$)) (= (fun_app$ (uwz$ ?v0) ?v1) (fun_app$ (fun_app$a (case_llist$ lNil$) (fun_app$b (uwy$ ?v0) ?v1)) ?v1))))
(assume a1 (forall ((?v0 Enat_enat_a_llist_fun_fun$) (?v1 Enat$)) (= (fun_app$c (uwq$ ?v0) ?v1) (fun_app$c (fun_app$d (case_enat$ lNil$) (fun_app$e (uvs$ ?v0) ?v1)) ?v1))))
(assume a2 (forall ((?v0 Enat_enat_a_llist_fun_fun$) (?v1 Enat$)) (= (fun_app$c (uwp$ ?v0) ?v1) (fun_app$c (fun_app$e ?v0 ?v1) (fun_app$f eSuc$ ?v1)))))
(assume a3 (forall ((?v0 Enat_enat_enat_fun_fun$) (?v1 Enat$)) (= (fun_app$f (uwu$ ?v0) ?v1) (fun_app$f (fun_app$g ?v0 ?v1) (fun_app$f eSuc$ ?v1)))))
(assume a4 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (= (fun_app$h (uua$ ?v0) ?v1) (lCons$a ?v0 ?v1))))
(assume a5 (forall ((?v0 A$) (?v1 A_llist$)) (= (fun_app$ (uug$ ?v0) ?v1) (lCons$ ?v0 ?v1))))
(assume a6 (forall ((?v0 A_llist$) (?v1 Enat$)) (= (fun_app$c (uun$ ?v0) ?v1) (fun_app$ (ltake$ ?v1) ?v0))))
(assume a7 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$i (fun_app$j uui$ ?v0) ?v1) (fun_app$i (fun_app$j less_eq$ ?v1) ?v0))))
(assume a8 (forall ((?v0 A_set$) (?v1 A_set$)) (= (fun_app$k (fun_app$l uuh$ ?v0) ?v1) (fun_app$k (fun_app$l less_eq$a ?v1) ?v0))))
(assume a9 (forall ((?v0 Enat_set$) (?v1 Enat$)) (= (fun_app$i (uub$ ?v0) ?v1) (member$ ?v1 ?v0))))
(assume a10 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (fun_app$m (fun_app$n uue$ ?v0) ?v1) (= ?v0 ?v1))))
(assume a11 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$i (fun_app$j uuf$ ?v0) ?v1) (= ?v0 ?v1))))
(assume a12 (forall ((?v0 Enat_a_llist_fun$) (?v1 Enat$)) (= (fun_app$f (uww$ ?v0) ?v1) (fun_app$o llength$ (fun_app$c ?v0 ?v1)))))
(assume a13 (forall ((?v0 Enat_enat_fun$) (?v1 Enat$)) (= (fun_app$f (uwt$ ?v0) ?v1) (fun_app$f eSuc$ (fun_app$f ?v0 ?v1)))))
(assume a14 (forall ((?v0 A_a_llist_a_llist_a_llist_fun_fun_fun$) (?v1 A$) (?v2 A_llist$)) (= (fun_app$ (fun_app$p (uwx$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$q (fun_app$r ?v0 ?v1) ?v2) (lCons$ ?v1 ?v2)))))
(assume a15 (forall ((?v0 A_a_llist_a_llist_enat_fun_fun_fun$) (?v1 A$) (?v2 A_llist$)) (= (fun_app$o (fun_app$s (uxa$ ?v0) ?v1) ?v2) (fun_app$o (fun_app$t (fun_app$u ?v0 ?v1) ?v2) (lCons$ ?v1 ?v2)))))
(assume a16 (forall ((?v0 Enat_enat_enat_fun_fun$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$f (fun_app$g (uwv$ ?v0) ?v1) ?v2) (fun_app$f (fun_app$v (case_enat$a ?v1) (fun_app$g (uvo$ ?v0) ?v2)) ?v2))))
(assume a17 (forall ((?v0 A_bool_fun$) (?v1 A_llist$) (?v2 A_llist_a_llist_fun$)) (= (fun_app$w (fun_app$x (uxe$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$a (case_llist$ lNil$) (fun_app$y (uxd$ ?v0) ?v2)) ?v1))))
(assume a18 (forall ((?v0 A_bool_fun$) (?v1 A_llist$) (?v2 A_llist_a_llist_fun$)) (= (fun_app$w (fun_app$x (uxc$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$a (case_llist$ lNil$) (fun_app$y (uxb$ ?v0) ?v2)) ?v1))))
(assume a19 (forall ((?v0 A_llist_a_llist_enat_fun_fun$) (?v1 A_llist_a_llist_fun$) (?v2 A_llist$)) (= (fun_app$o (fun_app$z (uwh$ ?v0) ?v1) ?v2) (fun_app$o (fun_app$t ?v0 ?v2) (fun_app$ ?v1 ?v2)))))
(assume a20 (forall ((?v0 A_llist_enat_a_llist_fun_fun$) (?v1 A_llist_enat_fun$) (?v2 A_llist$)) (= (fun_app$ (fun_app$aa (uwb$ ?v0) ?v1) ?v2) (fun_app$c (fun_app$ab ?v0 ?v2) (fun_app$o ?v1 ?v2)))))
(assume a21 (forall ((?v0 A_llist_enat_enat_fun_fun$) (?v1 A_llist_enat_fun$) (?v2 A_llist$)) (= (fun_app$o (fun_app$ac (uvr$ ?v0) ?v1) ?v2) (fun_app$f (fun_app$ad ?v0 ?v2) (fun_app$o ?v1 ?v2)))))
(assume a22 (forall ((?v0 A_llist_enat_a_set_fun_fun$) (?v1 A_llist_enat_fun$) (?v2 A_llist$)) (= (fun_app$ae (fun_app$af (uvz$ ?v0) ?v1) ?v2) (fun_app$ag (fun_app$ah ?v0 ?v2) (fun_app$o ?v1 ?v2)))))
(assume a23 (forall ((?v0 A_llist_a_set_enat_fun_fun$) (?v1 A_llist_a_set_fun$) (?v2 A_llist$)) (= (fun_app$o (fun_app$ai (uvx$ ?v0) ?v1) ?v2) (fun_app$aj (fun_app$ak ?v0 ?v2) (fun_app$ae ?v1 ?v2)))))
(assume a24 (forall ((?v0 Enat_a_llist_a_llist_fun_fun$) (?v1 Enat_a_llist_fun$) (?v2 Enat$)) (= (fun_app$c (fun_app$d (uwd$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$al ?v0 ?v2) (fun_app$c ?v1 ?v2)))))
(assume a25 (forall ((?v0 Enat_a_llist_enat_fun_fun$) (?v1 Enat_a_llist_fun$) (?v2 Enat$)) (= (fun_app$f (fun_app$am (uvv$ ?v0) ?v1) ?v2) (fun_app$o (fun_app$an ?v0 ?v2) (fun_app$c ?v1 ?v2)))))
(assume a26 (forall ((?v0 Enat_a_llist_a_set_fun_fun$) (?v1 Enat_a_llist_fun$) (?v2 Enat$)) (= (fun_app$ag (fun_app$ao (uwf$ ?v0) ?v1) ?v2) (fun_app$ae (fun_app$ap ?v0 ?v2) (fun_app$c ?v1 ?v2)))))
(assume a27 (forall ((?v0 Enat_enat_a_llist_fun_fun$) (?v1 Enat_enat_fun$) (?v2 Enat$)) (= (fun_app$c (fun_app$aq (uvt$ ?v0) ?v1) ?v2) (fun_app$c (fun_app$e ?v0 ?v2) (fun_app$f ?v1 ?v2)))))
(assume a28 (forall ((?v0 Enat_enat_enat_fun_fun$) (?v1 Enat_enat_fun$) (?v2 Enat$)) (= (fun_app$f (fun_app$v (uvp$ ?v0) ?v1) ?v2) (fun_app$f (fun_app$g ?v0 ?v2) (fun_app$f ?v1 ?v2)))))
(assume a29 (forall ((?v0 A_llist_a_llist_enat_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$o (fun_app$t (uwg$ ?v0) ?v1) ?v2) (fun_app$o (fun_app$t ?v0 ?v2) ?v1))))
(assume a30 (forall ((?v0 A_llist_enat_a_llist_fun_fun$) (?v1 Enat$) (?v2 A_llist$)) (= (fun_app$ (fun_app$al (uwa$ ?v0) ?v1) ?v2) (fun_app$c (fun_app$ab ?v0 ?v2) ?v1))))
(assume a31 (forall ((?v0 A_llist_enat_enat_fun_fun$) (?v1 Enat$) (?v2 A_llist$)) (= (fun_app$o (fun_app$an (uvq$ ?v0) ?v1) ?v2) (fun_app$f (fun_app$ad ?v0 ?v2) ?v1))))
(assume a32 (forall ((?v0 A_llist_enat_a_set_fun_fun$) (?v1 Enat$) (?v2 A_llist$)) (= (fun_app$ae (fun_app$ap (uvy$ ?v0) ?v1) ?v2) (fun_app$ag (fun_app$ah ?v0 ?v2) ?v1))))
(assume a33 (forall ((?v0 A_llist_a_set_enat_fun_fun$) (?v1 A_set$) (?v2 A_llist$)) (= (fun_app$o (fun_app$ar (uvw$ ?v0) ?v1) ?v2) (fun_app$aj (fun_app$ak ?v0 ?v2) ?v1))))
(assume a34 (forall ((?v0 Enat_a_llist_a_llist_fun_fun$) (?v1 A_llist$) (?v2 Enat$)) (= (fun_app$c (fun_app$ab (uwc$ ?v0) ?v1) ?v2) (fun_app$ (fun_app$al ?v0 ?v2) ?v1))))
(assume a35 (forall ((?v0 Enat_a_llist_enat_fun_fun$) (?v1 A_llist$) (?v2 Enat$)) (= (fun_app$f (fun_app$ad (uvu$ ?v0) ?v1) ?v2) (fun_app$o (fun_app$an ?v0 ?v2) ?v1))))
(assume a36 (forall ((?v0 Enat_a_llist_a_set_fun_fun$) (?v1 A_llist$) (?v2 Enat$)) (= (fun_app$ag (fun_app$ah (uwe$ ?v0) ?v1) ?v2) (fun_app$ae (fun_app$ap ?v0 ?v2) ?v1))))
(assume a37 (forall ((?v0 Enat_enat_a_llist_fun_fun$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$c (fun_app$e (uvs$ ?v0) ?v1) ?v2) (fun_app$c (fun_app$e ?v0 ?v2) ?v1))))
(assume a38 (forall ((?v0 Enat_enat_enat_fun_fun$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$f (fun_app$g (uvo$ ?v0) ?v1) ?v2) (fun_app$f (fun_app$g ?v0 ?v2) ?v1))))
(assume a39 (forall ((?v0 A_llist_a_llist_fun_enat_a_llist_fun_fun$) (?v1 Enat$) (?v2 A_llist_a_llist_fun$)) (= (fun_app$w (fun_app$as (uwm$ ?v0) ?v1) ?v2) (fun_app$c (fun_app$at ?v0 ?v2) ?v1))))
(assume a40 (forall ((?v0 Enat_enat_fun$) (?v1 A_llist$) (?v2 Enat$)) (= (fun_app$c (fun_app$ab (uws$ ?v0) ?v1) ?v2) (fun_app$ (ltake$ (fun_app$f ?v0 ?v2)) ?v1))))
(assume a41 (forall ((?v0 Enat$) (?v1 Enat_llist$) (?v2 Enat$)) (= (fun_app$au (uud$ ?v0 ?v1) ?v2) (lCons$a ?v0 (fun_app$h (ltake$a ?v2) ?v1)))))
(assume a42 (forall ((?v0 A$) (?v1 A_llist$) (?v2 Enat$)) (= (fun_app$c (fun_app$ab (uuc$ ?v0) ?v1) ?v2) (lCons$ ?v0 (fun_app$ (ltake$ ?v2) ?v1)))))
(assume a43 (forall ((?v0 A_llist_a_llist_fun$) (?v1 A_llist_a_llist_fun$) (?v2 A_llist$)) (= (fun_app$ (fun_app$av (uut$ ?v0) ?v1) ?v2) (fun_app$ ?v0 (fun_app$ ?v1 ?v2)))))
(assume a44 (forall ((?v0 A_llist_a_llist_fun$) (?v1 Enat_a_llist_fun$) (?v2 Enat$)) (= (fun_app$c (fun_app$d (uum$ ?v0) ?v1) ?v2) (fun_app$ ?v0 (fun_app$c ?v1 ?v2)))))
(assume a45 (forall ((?v0 A_llist_a_llist_fun$) (?v1 A_llist_a_llist_fun_a_llist_fun$) (?v2 A_llist_a_llist_fun$)) (= (fun_app$w (fun_app$aw (uuu$ ?v0) ?v1) ?v2) (fun_app$ ?v0 (fun_app$w ?v1 ?v2)))))
(assume a46 (forall ((?v0 A_llist_enat_fun$) (?v1 A_llist_a_llist_fun$) (?v2 A_llist$)) (= (fun_app$o (fun_app$z (uvg$ ?v0) ?v1) ?v2) (fun_app$o ?v0 (fun_app$ ?v1 ?v2)))))
(assume a47 (forall ((?v0 A_llist_enat_fun$) (?v1 Enat_a_llist_fun$) (?v2 Enat$)) (= (fun_app$f (fun_app$am (uul$ ?v0) ?v1) ?v2) (fun_app$o ?v0 (fun_app$c ?v1 ?v2)))))
(assume a48 (forall ((?v0 A_llist_a_set_fun$) (?v1 A_llist_a_llist_fun$) (?v2 A_llist$)) (= (fun_app$ae (fun_app$ax (uvi$ ?v0) ?v1) ?v2) (fun_app$ae ?v0 (fun_app$ ?v1 ?v2)))))
(assume a49 (forall ((?v0 A_llist_a_set_fun$) (?v1 Enat_a_llist_fun$) (?v2 Enat$)) (= (fun_app$ag (fun_app$ao (uvf$ ?v0) ?v1) ?v2) (fun_app$ae ?v0 (fun_app$c ?v1 ?v2)))))
(assume a50 (forall ((?v0 Enat_a_llist_fun$) (?v1 A_llist_enat_fun$) (?v2 A_llist$)) (= (fun_app$ (fun_app$aa (uus$ ?v0) ?v1) ?v2) (fun_app$c ?v0 (fun_app$o ?v1 ?v2)))))
(assume a51 (forall ((?v0 Enat_a_llist_fun$) (?v1 Enat_enat_fun$) (?v2 Enat$)) (= (fun_app$c (fun_app$aq (uuk$ ?v0) ?v1) ?v2) (fun_app$c ?v0 (fun_app$f ?v1 ?v2)))))
(assume a52 (forall ((?v0 Enat_a_llist_fun$) (?v1 A_llist_a_llist_fun_enat_fun$) (?v2 A_llist_a_llist_fun$)) (= (fun_app$w (fun_app$ay (uur$ ?v0) ?v1) ?v2) (fun_app$c ?v0 (fun_app$az ?v1 ?v2)))))
(assume a53 (forall ((?v0 Enat_enat_fun$) (?v1 A_llist_enat_fun$) (?v2 A_llist$)) (= (fun_app$o (fun_app$ac (uvc$ ?v0) ?v1) ?v2) (fun_app$f ?v0 (fun_app$o ?v1 ?v2)))))
(assume a54 (forall ((?v0 Enat_enat_fun$) (?v1 Enat_enat_fun$) (?v2 Enat$)) (= (fun_app$f (fun_app$v (uuj$ ?v0) ?v1) ?v2) (fun_app$f ?v0 (fun_app$f ?v1 ?v2)))))
(assume a55 (forall ((?v0 Enat_a_set_fun$) (?v1 A_llist_enat_fun$) (?v2 A_llist$)) (= (fun_app$ae (fun_app$af (uve$ ?v0) ?v1) ?v2) (fun_app$ag ?v0 (fun_app$o ?v1 ?v2)))))
(assume a56 (forall ((?v0 Enat_a_set_fun$) (?v1 Enat_enat_fun$) (?v2 Enat$)) (= (fun_app$ag (fun_app$ba (uvb$ ?v0) ?v1) ?v2) (fun_app$ag ?v0 (fun_app$f ?v1 ?v2)))))
(assume a57 (forall ((?v0 A_set_a_llist_fun$) (?v1 A_llist_a_set_fun$) (?v2 A_llist$)) (= (fun_app$ (fun_app$bb (uuq$ ?v0) ?v1) ?v2) (fun_app$bc ?v0 (fun_app$ae ?v1 ?v2)))))
(assume a58 (forall ((?v0 A_set_enat_fun$) (?v1 A_llist_a_set_fun$) (?v2 A_llist$)) (= (fun_app$o (fun_app$ai (uvd$ ?v0) ?v1) ?v2) (fun_app$aj ?v0 (fun_app$ae ?v1 ?v2)))))
(assume a59 (forall ((?v0 A_set_a_set_fun$) (?v1 A_llist_a_set_fun$) (?v2 A_llist$)) (= (fun_app$ae (fun_app$bd (uvh$ ?v0) ?v1) ?v2) (fun_app$be ?v0 (fun_app$ae ?v1 ?v2)))))
(assume a60 (forall ((?v0 A_llist_a_llist_fun_a_llist_fun$) (?v1 A_llist_a_llist_a_llist_fun_fun$) (?v2 A_llist$)) (= (fun_app$ (fun_app$bf (uuw$ ?v0) ?v1) ?v2) (fun_app$w ?v0 (fun_app$q ?v1 ?v2)))))
(assume a61 (forall ((?v0 A_llist_a_llist_fun_a_llist_fun$) (?v1 Enat_a_llist_a_llist_fun_fun$) (?v2 Enat$)) (= (fun_app$c (fun_app$bg (uuv$ ?v0) ?v1) ?v2) (fun_app$w ?v0 (fun_app$al ?v1 ?v2)))))
(assume a62 (forall ((?v0 A_llist_a_llist_fun_a_llist_fun$) (?v1 A_llist_a_llist_fun_a_llist_a_llist_fun_fun$) (?v2 A_llist_a_llist_fun$)) (= (fun_app$w (fun_app$bh (uux$ ?v0) ?v1) ?v2) (fun_app$w ?v0 (fun_app$av ?v1 ?v2)))))
(assume a63 (forall ((?v0 A_a_llist_a_llist_a_llist_fun_fun_fun$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (= (fun_app$ (fun_app$p (fun_app$b (uwy$ ?v0) ?v1) ?v2) ?v3) (fun_app$ (fun_app$q (fun_app$r ?v0 ?v2) ?v3) ?v1))))
(assume a64 (forall ((?v0 Enat$) (?v1 Enat_a_llist_fun$) (?v2 A_llist$) (?v3 Enat$)) (= (fun_app$c (fun_app$ab (fun_app$bi (uvj$ ?v0) ?v1) ?v2) ?v3) (ite (fun_app$i (fun_app$j less_eq$ ?v3) ?v0) ?v2 (fun_app$c ?v1 ?v3)))))
(assume a65 (forall ((?v0 Enat$) (?v1 Enat_enat_fun$) (?v2 Enat$) (?v3 Enat$)) (= (fun_app$f (fun_app$g (fun_app$bj (uvk$ ?v0) ?v1) ?v2) ?v3) (ite (fun_app$i (fun_app$j less_eq$ ?v3) ?v0) ?v2 (fun_app$f ?v1 ?v3)))))
(assume a66 (forall ((?v0 A_bool_fun$) (?v1 A_llist_a_llist_fun$) (?v2 A$) (?v3 A_llist$)) (= (fun_app$ (fun_app$p (fun_app$y (uxd$ ?v0) ?v1) ?v2) ?v3) (ite (fun_app$bk ?v0 ?v2) (lCons$ ?v2 (fun_app$ ?v1 ?v3)) (fun_app$ ?v1 ?v3)))))
(assume a67 (forall ((?v0 A_bool_fun$) (?v1 A_llist_a_llist_fun$) (?v2 A$) (?v3 A_llist$)) (= (fun_app$ (fun_app$p (fun_app$y (uxb$ ?v0) ?v1) ?v2) ?v3) (ite (fun_app$bk ?v0 ?v2) (lCons$ ?v2 (fun_app$ ?v1 ?v3)) lNil$))))
(assume a68 (forall ((?v0 A_llist_a_llist_fun$) (?v1 A_llist_enat_a_llist_fun_fun$) (?v2 Enat$) (?v3 A_llist$)) (= (fun_app$ (fun_app$al (fun_app$bl (uwl$ ?v0) ?v1) ?v2) ?v3) (fun_app$c (fun_app$d (case_enat$ (fun_app$ ?v0 ?v3)) (fun_app$ab ?v1 ?v3)) ?v2))))
(assume a69 (forall ((?v0 A_llist_enat_fun$) (?v1 A_llist_enat_enat_fun_fun$) (?v2 Enat$) (?v3 A_llist$)) (= (fun_app$o (fun_app$an (fun_app$bm (uwj$ ?v0) ?v1) ?v2) ?v3) (fun_app$f (fun_app$v (case_enat$a (fun_app$o ?v0 ?v3)) (fun_app$ad ?v1 ?v3)) ?v2))))
(assume a70 (forall ((?v0 A_llist_a_set_fun$) (?v1 A_llist_enat_a_set_fun_fun$) (?v2 Enat$) (?v3 A_llist$)) (= (fun_app$ae (fun_app$ap (fun_app$bn (uwi$ ?v0) ?v1) ?v2) ?v3) (fun_app$ag (fun_app$bo (case_enat$b (fun_app$ae ?v0 ?v3)) (fun_app$ah ?v1 ?v3)) ?v2))))
(assume a71 (forall ((?v0 Enat_a_llist_fun$) (?v1 Enat_enat_a_llist_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (= (fun_app$c (fun_app$e (fun_app$bp (uwk$ ?v0) ?v1) ?v2) ?v3) (fun_app$c (fun_app$d (case_enat$ (fun_app$c ?v0 ?v3)) (fun_app$e ?v1 ?v3)) ?v2))))
(assume a72 (forall ((?v0 Enat_enat_fun$) (?v1 Enat_enat_enat_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (= (fun_app$f (fun_app$g (fun_app$bq (uwo$ ?v0) ?v1) ?v2) ?v3) (fun_app$f (fun_app$v (case_enat$a (fun_app$f ?v0 ?v3)) (fun_app$g ?v1 ?v3)) ?v2))))
(assume a73 (forall ((?v0 A_llist_a_llist_fun_a_llist_fun$) (?v1 A_llist_a_llist_fun_enat_a_llist_fun_fun$) (?v2 Enat$) (?v3 A_llist_a_llist_fun$)) (= (fun_app$w (fun_app$as (fun_app$br (uwn$ ?v0) ?v1) ?v2) ?v3) (fun_app$c (fun_app$d (case_enat$ (fun_app$w ?v0 ?v3)) (fun_app$at ?v1 ?v3)) ?v2))))
(assume a74 (forall ((?v0 Enat_enat_fun$) (?v1 Enat_enat_fun$) (?v2 Bool) (?v3 Enat$)) (= (fun_app$f (fun_app$bs (fun_app$bt (uwr$ ?v0) ?v1) ?v2) ?v3) (ite ?v2 (fun_app$f ?v0 ?v3) (fun_app$f ?v1 ?v3)))))
(assume a75 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (fun_app$ (uvm$ ?v0) ?v1) ?v0)))
(assume a76 (forall ((?v0 A_llist$) (?v1 Enat$)) (= (fun_app$c (uvl$ ?v0) ?v1) ?v0)))
(assume a77 (forall ((?v0 A_llist$) (?v1 A_llist_a_llist_fun$)) (= (fun_app$w (uvn$ ?v0) ?v1) ?v0)))
(assume a78 (forall ((?v0 Enat$) (?v1 A_llist$)) (= (fun_app$o (uuz$ ?v0) ?v1) ?v0)))
(assume a79 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$f (uva$ ?v0) ?v1) ?v0)))
(assume a80 (forall ((?v0 A_set$) (?v1 A_llist$)) (= (fun_app$ae (uuy$ ?v0) ?v1) ?v0)))
(assume a81 (forall ((?v0 A$) (?v1 A$)) (= (fun_app$bk (fun_app$bu uu$ ?v0) ?v1) false)))
(assume a82 (forall ((?v0 A_llist$)) (= (fun_app$ uuo$ ?v0) ?v0)))
(assume a83 (forall ((?v0 Enat$)) (= (fun_app$f uup$ ?v0) ?v0)))
(assume a84 (! (not (! (fun_app$m (! (fun_app$n lprefix$ xs$) :named @p_1) ys$) :named @p_2)) :named @p_3))
(assume a85 (forall ((?v0 A_llist$)) (fun_app$m (fun_app$n lprefix$ ?v0) ?v0)))
(assume a86 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (fun_app$m (fun_app$n lprefix$ ?v1) ?v0)) (= ?v0 ?v1))))
(assume a87 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (fun_app$m (fun_app$n lprefix$ ?v2) ?v1)) (or (fun_app$m (fun_app$n lprefix$ ?v0) ?v2) (fun_app$m (fun_app$n lprefix$ ?v2) ?v0)))))
(assume a88 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2)) (fun_app$m (fun_app$n lprefix$ ?v0) ?v2))))
(assume a89 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v1)))
(assume a90 (! (fun_app$m (fun_app$n (! (llexord$ uu$) :named @p_4) xs$) ys$) :named @p_5))
(assume a91 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_a_bool_fun_fun$)) (=> (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (fun_app$m (fun_app$n (llexord$ ?v2) ?v0) ?v1))))
(assume a92 (! (= finite_lprefix$ lprefix$) :named @p_6))
(assume a93 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (fun_app$m (lstrict_prefix$ ?v0) ?v1) (and (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (not (= ?v0 ?v1))))))
(assume a94 (transp$ lprefix$))
(assume a95 (forall ((?v0 Enat_llist$)) (= (fun_app$bv (lprefix$a lNil$a) ?v0) true)))
(assume a96 (forall ((?v0 A_llist$)) (= (fun_app$m (fun_app$n lprefix$ lNil$) ?v0) true)))
(assume a97 (forall ((?v0 Enat$) (?v1 Enat_llist$) (?v2 Enat$) (?v3 Enat_llist$)) (= (fun_app$bv (lprefix$a (lCons$a ?v0 ?v1)) (lCons$a ?v2 ?v3)) (and (= ?v0 ?v2) (fun_app$bv (lprefix$a ?v1) ?v3)))))
(assume a98 (forall ((?v0 A$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (= (fun_app$m (fun_app$n lprefix$ (lCons$ ?v0 ?v1)) (lCons$ ?v2 ?v3)) (and (= ?v0 ?v2) (fun_app$m (fun_app$n lprefix$ ?v1) ?v3)))))
(assume a99 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (ldistinct$ ?v0) (fun_app$m (fun_app$n lprefix$ ?v1) ?v0)) (ldistinct$ ?v1))))
(assume a100 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_a_bool_fun_fun$)) (=> (and (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (fun_app$m (lsorted$ ?v2) ?v1)) (fun_app$m (lsorted$ ?v2) ?v0))))
(assume a101 (forall ((?v0 Enat_llist$) (?v1 Enat_llist$)) (=> (and (fun_app$bv (lprefix$a ?v0) ?v1) (lsorted$a ?v1)) (lsorted$a ?v0))))
(assume a102 (forall ((?v0 Enat$) (?v1 A_llist$)) (fun_app$m (fun_app$n lprefix$ (fun_app$ (ltake$ ?v0) ?v1)) ?v1)))
(assume a103 (forall ((?v0 A$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (= (= (lCons$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a104 (forall ((?v0 Enat$) (?v1 Enat_llist$) (?v2 Enat$) (?v3 Enat_llist$)) (= (= (lCons$a ?v0 ?v1) (lCons$a ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))))
(assume a105 (forall ((?v0 Enat$)) (= (fun_app$ (ltake$ ?v0) lNil$) lNil$)))
(assume a106 (forall ((?v0 Enat$)) (= (fun_app$h (ltake$a ?v0) lNil$a) lNil$a)))
(assume a107 (= (! (ldistinct$ lNil$) :named @p_7) true))
(assume a108 (= (! (ldistinct$a lNil$a) :named @p_8) true))
(assume a109 (= (! (lsorted$a lNil$a) :named @p_9) true))
(assume a110 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat_llist$) (?v3 Enat$) (?v4 Enat_llist$)) (= (fun_app$bv (fun_app$bw (llexord$a ?v0) (lCons$a ?v1 ?v2)) (lCons$a ?v3 ?v4)) (or (and (= ?v1 ?v3) (fun_app$bv (fun_app$bw (llexord$a ?v0) ?v2) ?v4)) (fun_app$i (fun_app$j ?v0 ?v1) ?v3)))))
(assume a111 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_llist$) (?v3 A$) (?v4 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) (lCons$ ?v1 ?v2)) (lCons$ ?v3 ?v4)) (or (and (= ?v1 ?v3) (fun_app$m (fun_app$n (llexord$ ?v0) ?v2) ?v4)) (fun_app$bk (fun_app$bu ?v0 ?v1) ?v3)))))
(assume a112 (forall ((?v0 Enat$) (?v1 Enat_llist$) (?v2 Enat$) (?v3 Enat_llist$)) (= (fun_app$bv (lstrict_prefix$a (lCons$a ?v0 ?v1)) (lCons$a ?v2 ?v3)) (and (= ?v0 ?v2) (fun_app$bv (lstrict_prefix$a ?v1) ?v3)))))
(assume a113 (forall ((?v0 A$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (= (fun_app$m (lstrict_prefix$ (lCons$ ?v0 ?v1)) (lCons$ ?v2 ?v3)) (and (= ?v0 ?v2) (fun_app$m (lstrict_prefix$ ?v1) ?v3)))))
(assume a114 (= (fun_app$bv (lstrict_prefix$a lNil$a) lNil$a) false))
(assume a115 (= (fun_app$m (lstrict_prefix$ lNil$) lNil$) false))
(assume a116 (forall ((?v0 Enat$)) (= (lsorted$a (lCons$a ?v0 lNil$a)) true)))
(assume a117 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (= (fun_app$bv (lstrict_prefix$a lNil$a) (lCons$a ?v0 ?v1)) true)))
(assume a118 (forall ((?v0 A$) (?v1 A_llist$)) (= (fun_app$m (lstrict_prefix$ lNil$) (lCons$ ?v0 ?v1)) true)))
(assume a119 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (= (fun_app$bv (lstrict_prefix$a (lCons$a ?v0 ?v1)) lNil$a) false)))
(assume a120 (forall ((?v0 A$) (?v1 A_llist$)) (= (fun_app$m (lstrict_prefix$ (lCons$ ?v0 ?v1)) lNil$) false)))
(assume a121 (forall ((?v0 Enat_llist$)) (= (fun_app$bv (finite_lprefix$a ?v0) lNil$a) (= ?v0 lNil$a))))
(assume a122 (forall ((?v0 A_llist$)) (= (fun_app$m (fun_app$n finite_lprefix$ ?v0) lNil$) (= ?v0 lNil$))))
(assume a123 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_llist$) (?v2 Enat_llist$)) (= (fun_app$bv (fun_app$bw (llexord$a ?v0) ?v1) ?v2) (or (exists ((?v3 Enat_llist$) (?v4 Enat_llist$) (?v5 Enat$)) (and (= ?v1 (lCons$a ?v5 ?v3)) (and (= ?v2 (lCons$a ?v5 ?v4)) (fun_app$bv (fun_app$bw (llexord$a ?v0) ?v3) ?v4)))) (or (exists ((?v3 Enat$) (?v4 Enat$) (?v5 Enat_llist$) (?v6 Enat_llist$)) (and (= ?v1 (lCons$a ?v3 ?v5)) (and (= ?v2 (lCons$a ?v4 ?v6)) (fun_app$i (fun_app$j ?v0 ?v3) ?v4)))) (exists ((?v3 Enat_llist$)) (and (= ?v1 lNil$a) (= ?v2 ?v3))))))))
(assume a124 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) (or (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) (exists ((?v3 A_llist$)) (and (= ?v1 lNil$) (= ?v2 ?v3))))))))
(assume a125 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat_llist$)) (= (fun_app$bv (lsorted$b ?v0) (lCons$a ?v1 (lCons$a ?v2 ?v3))) (and (fun_app$i (fun_app$j ?v0 ?v1) ?v2) (fun_app$bv (lsorted$b ?v0) (lCons$a ?v2 ?v3))))))
(assume a126 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 A_llist$)) (= (fun_app$m (lsorted$ ?v0) (lCons$ ?v1 (lCons$ ?v2 ?v3))) (and (fun_app$bk (fun_app$bu ?v0 ?v1) ?v2) (fun_app$m (lsorted$ ?v0) (lCons$ ?v2 ?v3))))))
(assume a127 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_llist$)) (= (fun_app$bv (lsorted$b ?v0) ?v1) (or (= ?v1 lNil$a) (or (exists ((?v2 Enat$)) (= ?v1 (lCons$a ?v2 lNil$a))) (exists ((?v2 Enat$) (?v3 Enat$) (?v4 Enat_llist$)) (and (= ?v1 (lCons$a ?v2 (lCons$a ?v3 ?v4))) (and (fun_app$i (fun_app$j ?v0 ?v2) ?v3) (fun_app$bv (lsorted$b ?v0) (lCons$a ?v3 ?v4))))))))))
(assume a128 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$)) (= (fun_app$m (lsorted$ ?v0) ?v1) (or (= ?v1 lNil$) (or (exists ((?v2 A$)) (= ?v1 (lCons$ ?v2 lNil$))) (exists ((?v2 A$) (?v3 A$) (?v4 A_llist$)) (and (= ?v1 (lCons$ ?v2 (lCons$ ?v3 ?v4))) (and (fun_app$bk (fun_app$bu ?v0 ?v2) ?v3) (fun_app$m (lsorted$ ?v0) (lCons$ ?v3 ?v4))))))))))
(assume a129 (forall ((?v0 Enat_llist$) (?v1 Enat$) (?v2 Enat_llist$)) (= (fun_app$bv (finite_lprefix$a ?v0) (lCons$a ?v1 ?v2)) (or (= ?v0 lNil$a) (exists ((?v3 Enat_llist$)) (and (= ?v0 (lCons$a ?v1 ?v3)) (fun_app$bv (finite_lprefix$a ?v3) ?v2)))))))
(assume a130 (forall ((?v0 A_llist$) (?v1 A$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n finite_lprefix$ ?v0) (lCons$ ?v1 ?v2)) (or (= ?v0 lNil$) (exists ((?v3 A_llist$)) (and (= ?v0 (lCons$ ?v1 ?v3)) (fun_app$m (fun_app$n finite_lprefix$ ?v3) ?v2)))))))
(assume a131 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat_llist$) (?v3 Enat_llist$)) (= (fun_app$bv (fun_app$bw (llexord$a ?v0) (lCons$a ?v1 ?v2)) ?v3) (exists ((?v4 Enat$) (?v5 Enat_llist$)) (and (= ?v3 (lCons$a ?v4 ?v5)) (or (and (= ?v1 ?v4) (fun_app$bv (fun_app$bw (llexord$a ?v0) ?v2) ?v5)) (fun_app$i (fun_app$j ?v0 ?v1) ?v4)))))))
(assume a132 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_llist$) (?v3 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) (lCons$ ?v1 ?v2)) ?v3) (exists ((?v4 A$) (?v5 A_llist$)) (and (= ?v3 (lCons$ ?v4 ?v5)) (or (and (= ?v1 ?v4) (fun_app$m (fun_app$n (llexord$ ?v0) ?v2) ?v5)) (fun_app$bk (fun_app$bu ?v0 ?v1) ?v4)))))))
(assume a133 (forall ((?v0 A_llist$)) (= (not (= ?v0 lNil$)) (exists ((?v1 A$) (?v2 A_llist$)) (= ?v0 (lCons$ ?v1 ?v2))))))
(assume a134 (forall ((?v0 Enat_llist$)) (= (not (= ?v0 lNil$a)) (exists ((?v1 Enat$) (?v2 Enat_llist$)) (= ?v0 (lCons$a ?v1 ?v2))))))
(assume a135 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$)) (= (fun_app$bv (lsorted$b ?v0) (lCons$a ?v1 lNil$a)) true)))
(assume a136 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (= (fun_app$m (lsorted$ ?v0) (lCons$ ?v1 lNil$)) true)))
(assume a137 (forall ((?v0 Enat_enat_bool_fun_fun$)) (= (fun_app$bv (lsorted$b ?v0) lNil$a) true)))
(assume a138 (forall ((?v0 A_a_bool_fun_fun$)) (= (fun_app$m (lsorted$ ?v0) lNil$) true)))
(assume a139 (forall ((?v0 Enat_llist$)) (= (fun_app$bv (finite_lprefix$a lNil$a) ?v0) true)))
(assume a140 (forall ((?v0 A_llist$)) (= (fun_app$m (fun_app$n finite_lprefix$ lNil$) ?v0) true)))
(assume a141 (forall ((?v0 A_llist$)) (=> (and (=> (= ?v0 lNil$) false) (forall ((?v1 A$) (?v2 A_llist$)) (=> (= ?v0 (lCons$ ?v1 ?v2)) false))) false)))
(assume a142 (forall ((?v0 Enat_llist$)) (=> (and (=> (= ?v0 lNil$a) false) (forall ((?v1 Enat$) (?v2 Enat_llist$)) (=> (= ?v0 (lCons$a ?v1 ?v2)) false))) false)))
(assume a143 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_llist$) (?v2 Enat_llist$)) (=> (and (fun_app$bv (fun_app$bw (llexord$a ?v0) ?v1) ?v2) (and (forall ((?v3 Enat_llist$) (?v4 Enat_llist$) (?v5 Enat$)) (=> (and (= ?v1 (lCons$a ?v5 ?v3)) (and (= ?v2 (lCons$a ?v5 ?v4)) (fun_app$bv (fun_app$bw (llexord$a ?v0) ?v3) ?v4))) false)) (and (forall ((?v3 Enat$) (?v4 Enat$) (?v5 Enat_llist$) (?v6 Enat_llist$)) (=> (and (= ?v1 (lCons$a ?v3 ?v5)) (and (= ?v2 (lCons$a ?v4 ?v6)) (fun_app$i (fun_app$j ?v0 ?v3) ?v4))) false)) (forall ((?v3 Enat_llist$)) (=> (and (= ?v1 lNil$a) (= ?v2 ?v3)) false))))) false)))
(assume a144 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (and (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (=> (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))) false)) (and (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (=> (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))) false)) (forall ((?v3 A_llist$)) (=> (and (= ?v1 lNil$) (= ?v2 ?v3)) false))))) false)))
(assume a145 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_llist$) (?v2 Enat_llist$) (?v3 Enat$)) (=> (fun_app$bv (fun_app$bw (llexord$a ?v0) ?v1) ?v2) (fun_app$bv (fun_app$bw (llexord$a ?v0) (lCons$a ?v3 ?v1)) (lCons$a ?v3 ?v2)))))
(assume a146 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (?v3 A$)) (=> (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (fun_app$m (fun_app$n (llexord$ ?v0) (lCons$ ?v3 ?v1)) (lCons$ ?v3 ?v2)))))
(assume a147 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_llist$)) (=> (and (fun_app$bv (lsorted$b ?v0) ?v1) (and (=> (= ?v1 lNil$a) false) (and (forall ((?v2 Enat$)) (=> (= ?v1 (lCons$a ?v2 lNil$a)) false)) (forall ((?v2 Enat$) (?v3 Enat$) (?v4 Enat_llist$)) (=> (and (= ?v1 (lCons$a ?v2 (lCons$a ?v3 ?v4))) (and (fun_app$i (fun_app$j ?v0 ?v2) ?v3) (fun_app$bv (lsorted$b ?v0) (lCons$a ?v3 ?v4)))) false))))) false)))
(assume a148 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$)) (=> (and (fun_app$m (lsorted$ ?v0) ?v1) (and (=> (= ?v1 lNil$) false) (and (forall ((?v2 A$)) (=> (= ?v1 (lCons$ ?v2 lNil$)) false)) (forall ((?v2 A$) (?v3 A$) (?v4 A_llist$)) (=> (and (= ?v1 (lCons$ ?v2 (lCons$ ?v3 ?v4))) (and (fun_app$bk (fun_app$bu ?v0 ?v2) ?v3) (fun_app$m (lsorted$ ?v0) (lCons$ ?v3 ?v4)))) false))))) false)))
(assume a149 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 Enat$)) (=> (fun_app$m (lsorted$ ?v0) ?v1) (fun_app$m (lsorted$ ?v0) (fun_app$ (ltake$ ?v2) ?v1)))))
(assume a150 (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (ldistinct$ ?v0) (ldistinct$ (fun_app$ (ltake$ ?v1) ?v0)))))
(assume a151 (forall ((?v0 Enat_set$)) (= (collect$ (uub$ ?v0)) ?v0)))
(assume a152 (forall ((?v0 Enat$) (?v1 Enat_bool_fun$)) (= (member$ ?v0 (collect$ ?v1)) (fun_app$i ?v1 ?v0))))
(assume a153 (forall ((?v0 Enat_llist$) (?v1 Enat$)) (=> (lsorted$a ?v0) (lsorted$a (fun_app$h (ltake$a ?v1) ?v0)))))
(assume a154 (forall ((?v0 Enat_llist_enat_llist_bool_fun_fun$) (?v1 Enat_llist$) (?v2 Enat_llist$) (?v3 Enat_enat_bool_fun_fun$)) (=> (and (fun_app$bv (fun_app$bw ?v0 ?v1) ?v2) (forall ((?v4 Enat_llist$) (?v5 Enat_llist$)) (=> (fun_app$bv (fun_app$bw ?v0 ?v4) ?v5) (or (exists ((?v6 Enat_llist$) (?v7 Enat_llist$) (?v8 Enat$)) (and (= ?v4 (lCons$a ?v8 ?v6)) (and (= ?v5 (lCons$a ?v8 ?v7)) (or (fun_app$bv (fun_app$bw ?v0 ?v6) ?v7) (fun_app$bv (fun_app$bw (llexord$a ?v3) ?v6) ?v7))))) (or (exists ((?v6 Enat$) (?v7 Enat$) (?v8 Enat_llist$) (?v9 Enat_llist$)) (and (= ?v4 (lCons$a ?v6 ?v8)) (and (= ?v5 (lCons$a ?v7 ?v9)) (fun_app$i (fun_app$j ?v3 ?v6) ?v7)))) (exists ((?v6 Enat_llist$)) (and (= ?v4 lNil$a) (= ?v5 ?v6)))))))) (fun_app$bv (fun_app$bw (llexord$a ?v3) ?v1) ?v2))))
(assume a155 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (?v3 A_a_bool_fun_fun$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v4 A_llist$) (?v5 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v4) ?v5) (or (exists ((?v6 A_llist$) (?v7 A_llist$) (?v8 A$)) (and (= ?v4 (lCons$ ?v8 ?v6)) (and (= ?v5 (lCons$ ?v8 ?v7)) (or (fun_app$m (fun_app$n ?v0 ?v6) ?v7) (fun_app$m (fun_app$n (llexord$ ?v3) ?v6) ?v7))))) (or (exists ((?v6 A$) (?v7 A$) (?v8 A_llist$) (?v9 A_llist$)) (and (= ?v4 (lCons$ ?v6 ?v8)) (and (= ?v5 (lCons$ ?v7 ?v9)) (fun_app$bk (fun_app$bu ?v3 ?v6) ?v7)))) (exists ((?v6 A_llist$)) (and (= ?v4 lNil$) (= ?v5 ?v6)))))))) (fun_app$m (fun_app$n (llexord$ ?v3) ?v1) ?v2))))
(assume a156 (forall ((?v0 Enat_llist_bool_fun$) (?v1 Enat_llist$) (?v2 Enat_enat_bool_fun_fun$)) (=> (and (fun_app$bv ?v0 ?v1) (forall ((?v3 Enat_llist$)) (=> (fun_app$bv ?v0 ?v3) (or (= ?v3 lNil$a) (or (exists ((?v4 Enat$)) (= ?v3 (lCons$a ?v4 lNil$a))) (exists ((?v4 Enat$) (?v5 Enat$) (?v6 Enat_llist$)) (and (= ?v3 (lCons$a ?v4 (lCons$a ?v5 ?v6))) (and (fun_app$i (fun_app$j ?v2 ?v4) ?v5) (or (fun_app$bv ?v0 (lCons$a ?v5 ?v6)) (fun_app$bv (lsorted$b ?v2) (lCons$a ?v5 ?v6))))))))))) (fun_app$bv (lsorted$b ?v2) ?v1))))
(assume a157 (forall ((?v0 A_llist_bool_fun$) (?v1 A_llist$) (?v2 A_a_bool_fun_fun$)) (=> (and (fun_app$m ?v0 ?v1) (forall ((?v3 A_llist$)) (=> (fun_app$m ?v0 ?v3) (or (= ?v3 lNil$) (or (exists ((?v4 A$)) (= ?v3 (lCons$ ?v4 lNil$))) (exists ((?v4 A$) (?v5 A$) (?v6 A_llist$)) (and (= ?v3 (lCons$ ?v4 (lCons$ ?v5 ?v6))) (and (fun_app$bk (fun_app$bu ?v2 ?v4) ?v5) (or (fun_app$m ?v0 (lCons$ ?v5 ?v6)) (fun_app$m (lsorted$ ?v2) (lCons$ ?v5 ?v6))))))))))) (fun_app$m (lsorted$ ?v2) ?v1))))
(assume a158 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat_llist$)) (=> (and (fun_app$i (fun_app$j ?v0 ?v1) ?v2) (fun_app$bv (lsorted$b ?v0) (lCons$a ?v2 ?v3))) (fun_app$bv (lsorted$b ?v0) (lCons$a ?v1 (lCons$a ?v2 ?v3))))))
(assume a159 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 A_llist$)) (=> (and (fun_app$bk (fun_app$bu ?v0 ?v1) ?v2) (fun_app$m (lsorted$ ?v0) (lCons$ ?v2 ?v3))) (fun_app$m (lsorted$ ?v0) (lCons$ ?v1 (lCons$ ?v2 ?v3))))))
(assume a160 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat_llist$) (?v4 Enat_llist$)) (=> (fun_app$i (fun_app$j ?v0 ?v1) ?v2) (fun_app$bv (fun_app$bw (llexord$a ?v0) (lCons$a ?v1 ?v3)) (lCons$a ?v2 ?v4)))))
(assume a161 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$bk (fun_app$bu ?v0 ?v1) ?v2) (fun_app$m (fun_app$n (llexord$ ?v0) (lCons$ ?v1 ?v3)) (lCons$ ?v2 ?v4)))))
(assume a162 (forall ((?v0 A$) (?v1 A_llist$)) (not (= lNil$ (lCons$ ?v0 ?v1)))))
(assume a163 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (not (= lNil$a (lCons$a ?v0 ?v1)))))
(assume a164 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_llist$)) (fun_app$bv (fun_app$bw (llexord$a ?v0) lNil$a) ?v1)))
(assume a165 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$)) (fun_app$m (fun_app$n (llexord$ ?v0) lNil$) ?v1)))
(assume a166 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$)) (fun_app$bv (lsorted$b ?v0) (lCons$a ?v1 lNil$a))))
(assume a167 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (fun_app$m (lsorted$ ?v0) (lCons$ ?v1 lNil$))))
(assume a168 (forall ((?v0 Enat_enat_bool_fun_fun$)) (fun_app$bv (lsorted$b ?v0) lNil$a)))
(assume a169 (forall ((?v0 A_a_bool_fun_fun$)) (fun_app$m (lsorted$ ?v0) lNil$)))
(assume a170 @p_7)
(assume a171 @p_8)
(assume a172 (forall ((?v0 Enat$)) (lsorted$a (lCons$a ?v0 lNil$a))))
(assume a173 @p_9)
(assume a174 (forall ((?v0 A_llist_bool_fun$) (?v1 A_llist$)) (=> (forall ((?v2 A_llist$)) (=> (forall ((?v3 A_llist$)) (=> (fun_app$m (lstrict_prefix$ ?v3) ?v2) (fun_app$m ?v0 ?v3))) (fun_app$m ?v0 ?v2))) (fun_app$m ?v0 ?v1))))
(assume a175 (forall ((?v0 Enat_llist_enat_llist_bool_fun_fun$) (?v1 Enat_llist$) (?v2 Enat_llist$)) (=> (and (fun_app$bv (fun_app$bw ?v0 ?v1) ?v2) (forall ((?v3 Enat_llist$) (?v4 Enat_llist$)) (=> (fun_app$bv (fun_app$bw ?v0 ?v3) ?v4) (or (exists ((?v5 Enat_llist$)) (and (= ?v3 lNil$a) (= ?v4 ?v5))) (exists ((?v5 Enat_llist$) (?v6 Enat_llist$) (?v7 Enat$)) (and (= ?v3 (lCons$a ?v7 ?v5)) (and (= ?v4 (lCons$a ?v7 ?v6)) (or (fun_app$bv (fun_app$bw ?v0 ?v5) ?v6) (fun_app$bv (lprefix$a ?v5) ?v6))))))))) (fun_app$bv (lprefix$a ?v1) ?v2))))
(assume a176 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))))
(assume a177 (forall ((?v0 Enat_llist$) (?v1 Enat_llist$)) (=> (and (fun_app$bv (lprefix$a ?v0) ?v1) (and (forall ((?v2 Enat_llist$)) (=> (and (= ?v0 lNil$a) (= ?v1 ?v2)) false)) (forall ((?v2 Enat_llist$) (?v3 Enat_llist$) (?v4 Enat$)) (=> (and (= ?v0 (lCons$a ?v4 ?v2)) (and (= ?v1 (lCons$a ?v4 ?v3)) (fun_app$bv (lprefix$a ?v2) ?v3))) false)))) false)))
(assume a178 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (and (forall ((?v2 A_llist$)) (=> (and (= ?v0 lNil$) (= ?v1 ?v2)) false)) (forall ((?v2 A_llist$) (?v3 A_llist$) (?v4 A$)) (=> (and (= ?v0 (lCons$ ?v4 ?v2)) (and (= ?v1 (lCons$ ?v4 ?v3)) (fun_app$m (fun_app$n lprefix$ ?v2) ?v3))) false)))) false)))
(assume a179 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (= (fun_app$bv (lprefix$a (lCons$a ?v0 ?v1)) lNil$a) false)))
(assume a180 (forall ((?v0 A$) (?v1 A_llist$)) (= (fun_app$m (fun_app$n lprefix$ (lCons$ ?v0 ?v1)) lNil$) false)))
(assume a181 (forall ((?v0 Enat_llist$) (?v1 Enat_llist$)) (= (fun_app$bv (lprefix$a ?v0) ?v1) (or (exists ((?v2 Enat_llist$)) (and (= ?v0 lNil$a) (= ?v1 ?v2))) (exists ((?v2 Enat_llist$) (?v3 Enat_llist$) (?v4 Enat$)) (and (= ?v0 (lCons$a ?v4 ?v2)) (and (= ?v1 (lCons$a ?v4 ?v3)) (fun_app$bv (lprefix$a ?v2) ?v3))))))))
(assume a182 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (or (exists ((?v2 A_llist$)) (and (= ?v0 lNil$) (= ?v1 ?v2))) (exists ((?v2 A_llist$) (?v3 A_llist$) (?v4 A$)) (and (= ?v0 (lCons$ ?v4 ?v2)) (and (= ?v1 (lCons$ ?v4 ?v3)) (fun_app$m (fun_app$n lprefix$ ?v2) ?v3))))))))
(assume a183 (forall ((?v0 Enat_llist$) (?v1 Enat$) (?v2 Enat_llist$)) (= (fun_app$bv (lprefix$a ?v0) (lCons$a ?v1 ?v2)) (or (= ?v0 lNil$a) (exists ((?v3 Enat_llist$)) (and (= ?v0 (lCons$a ?v1 ?v3)) (fun_app$bv (lprefix$a ?v3) ?v2)))))))
(assume a184 (forall ((?v0 A_llist$) (?v1 A$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n lprefix$ ?v0) (lCons$ ?v1 ?v2)) (or (= ?v0 lNil$) (exists ((?v3 A_llist$)) (and (= ?v0 (lCons$ ?v1 ?v3)) (fun_app$m (fun_app$n lprefix$ ?v3) ?v2)))))))
(assume a185 (forall ((?v0 Enat_llist$) (?v1 Enat_llist$) (?v2 Enat$)) (=> (fun_app$bv (lprefix$a ?v0) ?v1) (fun_app$bv (lprefix$a (lCons$a ?v2 ?v0)) (lCons$a ?v2 ?v1)))))
(assume a186 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A$)) (=> (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (fun_app$m (fun_app$n lprefix$ (lCons$ ?v2 ?v0)) (lCons$ ?v2 ?v1)))))
(assume a187 (forall ((?v0 Enat$) (?v1 Enat_llist$) (?v2 Enat_llist$)) (= (fun_app$bv (lprefix$a (lCons$a ?v0 ?v1)) ?v2) (exists ((?v3 Enat_llist$)) (and (= ?v2 (lCons$a ?v0 ?v3)) (fun_app$bv (lprefix$a ?v1) ?v3))))))
(assume a188 (forall ((?v0 A$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n lprefix$ (lCons$ ?v0 ?v1)) ?v2) (exists ((?v3 A_llist$)) (and (= ?v2 (lCons$ ?v0 ?v3)) (fun_app$m (fun_app$n lprefix$ ?v1) ?v3))))))
(assume a189 (forall ((?v0 Enat_llist$)) (fun_app$bv (lprefix$a lNil$a) ?v0)))
(assume a190 (forall ((?v0 A_llist$)) (fun_app$m (fun_app$n lprefix$ lNil$) ?v0)))
(assume a191 (forall ((?v0 Enat$) (?v1 A$) (?v2 A_llist$)) (= (fun_app$ (ltake$ ?v0) (lCons$ ?v1 ?v2)) (fun_app$c (fun_app$d (case_enat$ lNil$) (fun_app$ab (uuc$ ?v1) ?v2)) ?v0))))
(assume a192 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_llist$)) (= (fun_app$h (ltake$a ?v0) (lCons$a ?v1 ?v2)) (case_enat$c lNil$a (uud$ ?v1 ?v2) ?v0))))
(assume a193 (forall ((?v0 A_bool_fun$) (?v1 A$) (?v2 A_llist$)) (= (fun_app$m (pred_llist$ ?v0) (lCons$ ?v1 ?v2)) (and (fun_app$bk ?v0 ?v1) (fun_app$m (pred_llist$ ?v0) ?v2)))))
(assume a194 (forall ((?v0 Enat_bool_fun$) (?v1 Enat$) (?v2 Enat_llist$)) (= (fun_app$bv (pred_llist$a ?v0) (lCons$a ?v1 ?v2)) (and (fun_app$i ?v0 ?v1) (fun_app$bv (pred_llist$a ?v0) ?v2)))))
(assume a195 (forall ((?v0 A_llist_a_llist_bool_fun_fun$)) (= (transp$ ?v0) (forall ((?v1 A_llist$) (?v2 A_llist$) (?v3 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (fun_app$m (fun_app$n ?v0 ?v2) ?v3)) (fun_app$m (fun_app$n ?v0 ?v1) ?v3))))))
(assume a196 (forall ((?v0 Enat_enat_bool_fun_fun$)) (= (transp$a ?v0) (forall ((?v1 Enat$) (?v2 Enat$) (?v3 Enat$)) (=> (and (fun_app$i (fun_app$j ?v0 ?v1) ?v2) (fun_app$i (fun_app$j ?v0 ?v2) ?v3)) (fun_app$i (fun_app$j ?v0 ?v1) ?v3))))))
(assume a197 (forall ((?v0 A_llist_a_llist_bool_fun_fun$)) (=> (forall ((?v1 A_llist$) (?v2 A_llist$) (?v3 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (fun_app$m (fun_app$n ?v0 ?v2) ?v3)) (fun_app$m (fun_app$n ?v0 ?v1) ?v3))) (transp$ ?v0))))
(assume a198 (forall ((?v0 Enat_enat_bool_fun_fun$)) (=> (forall ((?v1 Enat$) (?v2 Enat$) (?v3 Enat$)) (=> (and (fun_app$i (fun_app$j ?v0 ?v1) ?v2) (fun_app$i (fun_app$j ?v0 ?v2) ?v3)) (fun_app$i (fun_app$j ?v0 ?v1) ?v3))) (transp$a ?v0))))
(assume a199 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (?v3 A_llist$)) (=> (and (transp$ ?v0) (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (and (fun_app$m (fun_app$n ?v0 ?v2) ?v3) (=> (fun_app$m (fun_app$n ?v0 ?v1) ?v3) false)))) false)))
(assume a200 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat$)) (=> (and (transp$a ?v0) (and (fun_app$i (fun_app$j ?v0 ?v1) ?v2) (and (fun_app$i (fun_app$j ?v0 ?v2) ?v3) (=> (fun_app$i (fun_app$j ?v0 ?v1) ?v3) false)))) false)))
(assume a201 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (?v3 A_llist$)) (=> (and (transp$ ?v0) (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (fun_app$m (fun_app$n ?v0 ?v2) ?v3))) (fun_app$m (fun_app$n ?v0 ?v1) ?v3))))
(assume a202 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat$)) (=> (and (transp$a ?v0) (and (fun_app$i (fun_app$j ?v0 ?v1) ?v2) (fun_app$i (fun_app$j ?v0 ?v2) ?v3))) (fun_app$i (fun_app$j ?v0 ?v1) ?v3))))
(assume a203 (transp$ uue$))
(assume a204 (transp$a uuf$))
(assume a205 (forall ((?v0 A$)) (= (llast$ (lCons$ ?v0 lNil$)) ?v0)))
(assume a206 (forall ((?v0 Enat$)) (= (llast$a (lCons$a ?v0 lNil$a)) ?v0)))
(assume a207 (forall ((?v0 A_set_llist$)) (= (lsorted$c ?v0) (or (= ?v0 lNil$b) (or (exists ((?v1 A_set$)) (= ?v0 (lCons$b ?v1 lNil$b))) (exists ((?v1 A_set$) (?v2 A_set$) (?v3 A_set_llist$)) (and (= ?v0 (lCons$b ?v1 (lCons$b ?v2 ?v3))) (and (fun_app$k (fun_app$l less_eq$a ?v1) ?v2) (lsorted$c (lCons$b ?v2 ?v3))))))))))
(assume a208 (forall ((?v0 Enat_llist$)) (= (lsorted$a ?v0) (or (= ?v0 lNil$a) (or (exists ((?v1 Enat$)) (= ?v0 (lCons$a ?v1 lNil$a))) (exists ((?v1 Enat$) (?v2 Enat$) (?v3 Enat_llist$)) (and (= ?v0 (lCons$a ?v1 (lCons$a ?v2 ?v3))) (and (fun_app$i (fun_app$j less_eq$ ?v1) ?v2) (lsorted$a (lCons$a ?v2 ?v3))))))))))
(assume a209 (forall ((?v0 A_set_llist$)) (=> (and (lsorted$c ?v0) (and (=> (= ?v0 lNil$b) false) (and (forall ((?v1 A_set$)) (=> (= ?v0 (lCons$b ?v1 lNil$b)) false)) (forall ((?v1 A_set$) (?v2 A_set$) (?v3 A_set_llist$)) (=> (and (= ?v0 (lCons$b ?v1 (lCons$b ?v2 ?v3))) (and (fun_app$k (fun_app$l less_eq$a ?v1) ?v2) (lsorted$c (lCons$b ?v2 ?v3)))) false))))) false)))
(assume a210 (forall ((?v0 Enat_llist$)) (=> (and (lsorted$a ?v0) (and (=> (= ?v0 lNil$a) false) (and (forall ((?v1 Enat$)) (=> (= ?v0 (lCons$a ?v1 lNil$a)) false)) (forall ((?v1 Enat$) (?v2 Enat$) (?v3 Enat_llist$)) (=> (and (= ?v0 (lCons$a ?v1 (lCons$a ?v2 ?v3))) (and (fun_app$i (fun_app$j less_eq$ ?v1) ?v2) (lsorted$a (lCons$a ?v2 ?v3)))) false))))) false)))
(assume a211 (forall ((?v0 A$) (?v1 A$) (?v2 A_llist$)) (= (llast$ (lCons$ ?v0 (lCons$ ?v1 ?v2))) (llast$ (lCons$ ?v1 ?v2)))))
(assume a212 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_llist$)) (= (llast$a (lCons$a ?v0 (lCons$a ?v1 ?v2))) (llast$a (lCons$a ?v1 ?v2)))))
(assume a213 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_set_llist$)) (= (lsorted$c (lCons$b ?v0 (lCons$b ?v1 ?v2))) (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (lsorted$c (lCons$b ?v1 ?v2))))))
(assume a214 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_llist$)) (= (lsorted$a (lCons$a ?v0 (lCons$a ?v1 ?v2))) (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (lsorted$a (lCons$a ?v1 ?v2))))))
(assume a215 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$)) (=> (and (forall ((?v3 Enat$) (?v4 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v3) ?v4) (fun_app$i (fun_app$j ?v0 ?v3) ?v4))) (=> (fun_app$i (fun_app$j ?v0 ?v1) ?v2) (fun_app$i (fun_app$j ?v0 ?v2) ?v1))) (fun_app$i (fun_app$j ?v0 ?v2) ?v1))))
(assume a216 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_llist$) (?v3 Enat$)) (=> (and (= (fun_app$ (ltake$ ?v0) ?v1) (fun_app$ (ltake$ ?v0) ?v2)) (fun_app$i (fun_app$j less_eq$ ?v3) ?v0)) (= (fun_app$ (ltake$ ?v3) ?v1) (fun_app$ (ltake$ ?v3) ?v2)))))
(assume a217 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_set_llist$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (lsorted$c (lCons$b ?v1 ?v2))) (lsorted$c (lCons$b ?v0 (lCons$b ?v1 ?v2))))))
(assume a218 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_llist$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (lsorted$a (lCons$a ?v1 ?v2))) (lsorted$a (lCons$a ?v0 (lCons$a ?v1 ?v2))))))
(assume a219 (forall ((?v0 A_bool_fun$)) (fun_app$m (pred_llist$ ?v0) lNil$)))
(assume a220 (forall ((?v0 Enat_bool_fun$)) (fun_app$bv (pred_llist$a ?v0) lNil$a)))
(assume a221 (forall ((?v0 A_set_llist_bool_fun$) (?v1 A_set_llist$)) (=> (and (fun_app$bx ?v0 ?v1) (forall ((?v2 A_set_llist$)) (=> (fun_app$bx ?v0 ?v2) (or (= ?v2 lNil$b) (or (exists ((?v3 A_set$)) (= ?v2 (lCons$b ?v3 lNil$b))) (exists ((?v3 A_set$) (?v4 A_set$) (?v5 A_set_llist$)) (and (= ?v2 (lCons$b ?v3 (lCons$b ?v4 ?v5))) (and (fun_app$k (fun_app$l less_eq$a ?v3) ?v4) (or (fun_app$bx ?v0 (lCons$b ?v4 ?v5)) (lsorted$c (lCons$b ?v4 ?v5))))))))))) (lsorted$c ?v1))))
(assume a222 (forall ((?v0 Enat_llist_bool_fun$) (?v1 Enat_llist$)) (=> (and (fun_app$bv ?v0 ?v1) (forall ((?v2 Enat_llist$)) (=> (fun_app$bv ?v0 ?v2) (or (= ?v2 lNil$a) (or (exists ((?v3 Enat$)) (= ?v2 (lCons$a ?v3 lNil$a))) (exists ((?v3 Enat$) (?v4 Enat$) (?v5 Enat_llist$)) (and (= ?v2 (lCons$a ?v3 (lCons$a ?v4 ?v5))) (and (fun_app$i (fun_app$j less_eq$ ?v3) ?v4) (or (fun_app$bv ?v0 (lCons$a ?v4 ?v5)) (lsorted$a (lCons$a ?v4 ?v5))))))))))) (lsorted$a ?v1))))
(assume a223 (transp$b uuh$))
(assume a224 (transp$a uui$))
(assume a225 (forall ((?v0 A_set$)) (fun_app$k (fun_app$l less_eq$a ?v0) ?v0)))
(assume a226 (forall ((?v0 Enat$)) (fun_app$i (fun_app$j less_eq$ ?v0) ?v0)))
(assume a227 (transp$b less_eq$a))
(assume a228 (transp$a less_eq$))
(assume a229 (forall ((?v0 Enat_enat_fun$) (?v1 Enat$) (?v2 Enat_enat_fun$) (?v3 Enat$)) (= (fun_app$f ?v0 (fun_app$f (fun_app$v (case_enat$a ?v1) ?v2) ?v3)) (fun_app$f (fun_app$v (case_enat$a (fun_app$f ?v0 ?v1)) (fun_app$v (uuj$ ?v0) ?v2)) ?v3))))
(assume a230 (forall ((?v0 Enat_a_llist_fun$) (?v1 Enat$) (?v2 Enat_enat_fun$) (?v3 Enat$)) (= (fun_app$c ?v0 (fun_app$f (fun_app$v (case_enat$a ?v1) ?v2) ?v3)) (fun_app$c (fun_app$d (case_enat$ (fun_app$c ?v0 ?v1)) (fun_app$aq (uuk$ ?v0) ?v2)) ?v3))))
(assume a231 (forall ((?v0 A_llist_enat_fun$) (?v1 A_llist$) (?v2 Enat_a_llist_fun$) (?v3 Enat$)) (= (fun_app$o ?v0 (fun_app$c (fun_app$d (case_enat$ ?v1) ?v2) ?v3)) (fun_app$f (fun_app$v (case_enat$a (fun_app$o ?v0 ?v1)) (fun_app$am (uul$ ?v0) ?v2)) ?v3))))
(assume a232 (forall ((?v0 A_llist_a_llist_fun$) (?v1 A_llist$) (?v2 Enat_a_llist_fun$) (?v3 Enat$)) (= (fun_app$ ?v0 (fun_app$c (fun_app$d (case_enat$ ?v1) ?v2) ?v3)) (fun_app$c (fun_app$d (case_enat$ (fun_app$ ?v0 ?v1)) (fun_app$d (uum$ ?v0) ?v2)) ?v3))))
(assume a233 (forall ((?v0 A$)) (= (fun_app$m (lmember$ ?v0) lNil$) false)))
(assume a234 (forall ((?v0 Enat$)) (= (fun_app$bv (lmember$a ?v0) lNil$a) false)))
(assume a235 (forall ((?v0 A_set$) (?v1 A_set$)) (= (= ?v0 ?v1) (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (fun_app$k (fun_app$l less_eq$a ?v1) ?v0)))))
(assume a236 (forall ((?v0 Enat$) (?v1 Enat$)) (= (= ?v0 ?v1) (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (fun_app$i (fun_app$j less_eq$ ?v1) ?v0)))))
(assume a237 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (=> (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) false) (=> (fun_app$i (fun_app$j less_eq$ ?v1) ?v0) false)) false)))
(assume a238 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$)) (=> (and (forall ((?v3 Enat$) (?v4 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v3) ?v4) (fun_app$i (fun_app$j ?v0 ?v3) ?v4))) (forall ((?v3 Enat$) (?v4 Enat$)) (=> (fun_app$i (fun_app$j ?v0 ?v4) ?v3) (fun_app$i (fun_app$j ?v0 ?v3) ?v4)))) (fun_app$i (fun_app$j ?v0 ?v1) ?v2))))
(assume a239 (forall ((?v0 A_set$) (?v1 Enat_a_set_fun$) (?v2 Enat$) (?v3 Enat$)) (=> (and (= ?v0 (fun_app$ag ?v1 ?v2)) (and (fun_app$i (fun_app$j less_eq$ ?v2) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v4) ?v5) (fun_app$k (fun_app$l less_eq$a (fun_app$ag ?v1 ?v4)) (fun_app$ag ?v1 ?v5)))))) (fun_app$k (fun_app$l less_eq$a ?v0) (fun_app$ag ?v1 ?v3)))))
(assume a240 (forall ((?v0 Enat$) (?v1 A_set_enat_fun$) (?v2 A_set$) (?v3 A_set$)) (=> (and (= ?v0 (fun_app$aj ?v1 ?v2)) (and (fun_app$k (fun_app$l less_eq$a ?v2) ?v3) (forall ((?v4 A_set$) (?v5 A_set$)) (=> (fun_app$k (fun_app$l less_eq$a ?v4) ?v5) (fun_app$i (fun_app$j less_eq$ (fun_app$aj ?v1 ?v4)) (fun_app$aj ?v1 ?v5)))))) (fun_app$i (fun_app$j less_eq$ ?v0) (fun_app$aj ?v1 ?v3)))))
(assume a241 (forall ((?v0 A_set$) (?v1 A_set_a_set_fun$) (?v2 A_set$) (?v3 A_set$)) (=> (and (= ?v0 (fun_app$be ?v1 ?v2)) (and (fun_app$k (fun_app$l less_eq$a ?v2) ?v3) (forall ((?v4 A_set$) (?v5 A_set$)) (=> (fun_app$k (fun_app$l less_eq$a ?v4) ?v5) (fun_app$k (fun_app$l less_eq$a (fun_app$be ?v1 ?v4)) (fun_app$be ?v1 ?v5)))))) (fun_app$k (fun_app$l less_eq$a ?v0) (fun_app$be ?v1 ?v3)))))
(assume a242 (forall ((?v0 Enat$) (?v1 Enat_enat_fun$) (?v2 Enat$) (?v3 Enat$)) (=> (and (= ?v0 (fun_app$f ?v1 ?v2)) (and (fun_app$i (fun_app$j less_eq$ ?v2) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v4) ?v5) (fun_app$i (fun_app$j less_eq$ (fun_app$f ?v1 ?v4)) (fun_app$f ?v1 ?v5)))))) (fun_app$i (fun_app$j less_eq$ ?v0) (fun_app$f ?v1 ?v3)))))
(assume a243 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_set$)) (=> (and (= ?v0 ?v1) (fun_app$k (fun_app$l less_eq$a ?v1) ?v2)) (fun_app$k (fun_app$l less_eq$a ?v0) ?v2))))
(assume a244 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (= ?v0 ?v1) (fun_app$i (fun_app$j less_eq$ ?v1) ?v2)) (fun_app$i (fun_app$j less_eq$ ?v0) ?v2))))
(assume a245 (forall ((?v0 A_set$) (?v1 A_set$)) (=> (= ?v0 ?v1) (fun_app$k (fun_app$l less_eq$a ?v0) ?v1))))
(assume a246 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (= ?v0 ?v1) (fun_app$i (fun_app$j less_eq$ ?v0) ?v1))))
(assume a247 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_a_set_fun$) (?v3 A_set$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (and (= (fun_app$ag ?v2 ?v1) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v4) ?v5) (fun_app$k (fun_app$l less_eq$a (fun_app$ag ?v2 ?v4)) (fun_app$ag ?v2 ?v5)))))) (fun_app$k (fun_app$l less_eq$a (fun_app$ag ?v2 ?v0)) ?v3))))
(assume a248 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_set_enat_fun$) (?v3 Enat$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (and (= (fun_app$aj ?v2 ?v1) ?v3) (forall ((?v4 A_set$) (?v5 A_set$)) (=> (fun_app$k (fun_app$l less_eq$a ?v4) ?v5) (fun_app$i (fun_app$j less_eq$ (fun_app$aj ?v2 ?v4)) (fun_app$aj ?v2 ?v5)))))) (fun_app$i (fun_app$j less_eq$ (fun_app$aj ?v2 ?v0)) ?v3))))
(assume a249 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_set_a_set_fun$) (?v3 A_set$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (and (= (fun_app$be ?v2 ?v1) ?v3) (forall ((?v4 A_set$) (?v5 A_set$)) (=> (fun_app$k (fun_app$l less_eq$a ?v4) ?v5) (fun_app$k (fun_app$l less_eq$a (fun_app$be ?v2 ?v4)) (fun_app$be ?v2 ?v5)))))) (fun_app$k (fun_app$l less_eq$a (fun_app$be ?v2 ?v0)) ?v3))))
(assume a250 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_enat_fun$) (?v3 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (and (= (fun_app$f ?v2 ?v1) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v4) ?v5) (fun_app$i (fun_app$j less_eq$ (fun_app$f ?v2 ?v4)) (fun_app$f ?v2 ?v5)))))) (fun_app$i (fun_app$j less_eq$ (fun_app$f ?v2 ?v0)) ?v3))))
(assume a251 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_set$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (= ?v1 ?v2)) (fun_app$k (fun_app$l less_eq$a ?v0) ?v2))))
(assume a252 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (= ?v1 ?v2)) (fun_app$i (fun_app$j less_eq$ ?v0) ?v2))))
(assume a253 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_a_set_fun$) (?v3 A_set$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (and (fun_app$k (fun_app$l less_eq$a (fun_app$ag ?v2 ?v1)) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v4) ?v5) (fun_app$k (fun_app$l less_eq$a (fun_app$ag ?v2 ?v4)) (fun_app$ag ?v2 ?v5)))))) (fun_app$k (fun_app$l less_eq$a (fun_app$ag ?v2 ?v0)) ?v3))))
(assume a254 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_set_enat_fun$) (?v3 Enat$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (and (fun_app$i (fun_app$j less_eq$ (fun_app$aj ?v2 ?v1)) ?v3) (forall ((?v4 A_set$) (?v5 A_set$)) (=> (fun_app$k (fun_app$l less_eq$a ?v4) ?v5) (fun_app$i (fun_app$j less_eq$ (fun_app$aj ?v2 ?v4)) (fun_app$aj ?v2 ?v5)))))) (fun_app$i (fun_app$j less_eq$ (fun_app$aj ?v2 ?v0)) ?v3))))
(assume a255 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_set_a_set_fun$) (?v3 A_set$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (and (fun_app$k (fun_app$l less_eq$a (fun_app$be ?v2 ?v1)) ?v3) (forall ((?v4 A_set$) (?v5 A_set$)) (=> (fun_app$k (fun_app$l less_eq$a ?v4) ?v5) (fun_app$k (fun_app$l less_eq$a (fun_app$be ?v2 ?v4)) (fun_app$be ?v2 ?v5)))))) (fun_app$k (fun_app$l less_eq$a (fun_app$be ?v2 ?v0)) ?v3))))
(assume a256 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_enat_fun$) (?v3 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (and (fun_app$i (fun_app$j less_eq$ (fun_app$f ?v2 ?v1)) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v4) ?v5) (fun_app$i (fun_app$j less_eq$ (fun_app$f ?v2 ?v4)) (fun_app$f ?v2 ?v5)))))) (fun_app$i (fun_app$j less_eq$ (fun_app$f ?v2 ?v0)) ?v3))))
(assume a257 (forall ((?v0 Enat$) (?v1 A_set_enat_fun$) (?v2 A_set$) (?v3 A_set$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) (fun_app$aj ?v1 ?v2)) (and (fun_app$k (fun_app$l less_eq$a ?v2) ?v3) (forall ((?v4 A_set$) (?v5 A_set$)) (=> (fun_app$k (fun_app$l less_eq$a ?v4) ?v5) (fun_app$i (fun_app$j less_eq$ (fun_app$aj ?v1 ?v4)) (fun_app$aj ?v1 ?v5)))))) (fun_app$i (fun_app$j less_eq$ ?v0) (fun_app$aj ?v1 ?v3)))))
(assume a258 (forall ((?v0 A_set$) (?v1 Enat_a_set_fun$) (?v2 Enat$) (?v3 Enat$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) (fun_app$ag ?v1 ?v2)) (and (fun_app$i (fun_app$j less_eq$ ?v2) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v4) ?v5) (fun_app$k (fun_app$l less_eq$a (fun_app$ag ?v1 ?v4)) (fun_app$ag ?v1 ?v5)))))) (fun_app$k (fun_app$l less_eq$a ?v0) (fun_app$ag ?v1 ?v3)))))
(assume a259 (forall ((?v0 A_set$) (?v1 A_set_a_set_fun$) (?v2 A_set$) (?v3 A_set$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) (fun_app$be ?v1 ?v2)) (and (fun_app$k (fun_app$l less_eq$a ?v2) ?v3) (forall ((?v4 A_set$) (?v5 A_set$)) (=> (fun_app$k (fun_app$l less_eq$a ?v4) ?v5) (fun_app$k (fun_app$l less_eq$a (fun_app$be ?v1 ?v4)) (fun_app$be ?v1 ?v5)))))) (fun_app$k (fun_app$l less_eq$a ?v0) (fun_app$be ?v1 ?v3)))))
(assume a260 (forall ((?v0 Enat$) (?v1 Enat_enat_fun$) (?v2 Enat$) (?v3 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) (fun_app$f ?v1 ?v2)) (and (fun_app$i (fun_app$j less_eq$ ?v2) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v4) ?v5) (fun_app$i (fun_app$j less_eq$ (fun_app$f ?v1 ?v4)) (fun_app$f ?v1 ?v5)))))) (fun_app$i (fun_app$j less_eq$ ?v0) (fun_app$f ?v1 ?v3)))))
(assume a261 (forall ((?v0 A_set$) (?v1 A_set$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (fun_app$k (fun_app$l less_eq$a ?v1) ?v0)) (= ?v1 ?v0))))
(assume a262 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (fun_app$i (fun_app$j less_eq$ ?v1) ?v0)) (= ?v1 ?v0))))
(assume a263 (forall ((?v0 A_set$) (?v1 A_set$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (fun_app$k (fun_app$l less_eq$a ?v1) ?v0)) (= ?v0 ?v1))))
(assume a264 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (fun_app$i (fun_app$j less_eq$ ?v1) ?v0)) (= ?v0 ?v1))))
(assume a265 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_set$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (fun_app$k (fun_app$l less_eq$a ?v2) ?v0)) (fun_app$k (fun_app$l less_eq$a ?v2) ?v1))))
(assume a266 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (fun_app$i (fun_app$j less_eq$ ?v2) ?v0)) (fun_app$i (fun_app$j less_eq$ ?v2) ?v1))))
(assume a267 (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_set$)) (=> (and (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (fun_app$k (fun_app$l less_eq$a ?v1) ?v2)) (fun_app$k (fun_app$l less_eq$a ?v0) ?v2))))
(assume a268 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (fun_app$i (fun_app$j less_eq$ ?v1) ?v2)) (fun_app$i (fun_app$j less_eq$ ?v0) ?v2))))
(assume a269 (forall ((?v0 A_set$) (?v1 A_set$)) (=> (fun_app$k (fun_app$l less_eq$a ?v0) ?v1) (= (fun_app$k (fun_app$l less_eq$a ?v1) ?v0) (= ?v1 ?v0)))))
(assume a270 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (= (fun_app$i (fun_app$j less_eq$ ?v1) ?v0) (= ?v1 ?v0)))))
(assume a271 (forall ((?v0 Enat$) (?v1 Enat$)) (or (fun_app$i (fun_app$j less_eq$ ?v0) ?v1) (fun_app$i (fun_app$j less_eq$ ?v1) ?v0))))
(assume a272 (forall ((?v0 A$) (?v1 A$) (?v2 A_llist$)) (= (fun_app$m (lmember$ ?v0) (lCons$ ?v1 ?v2)) (or (= ?v0 ?v1) (fun_app$m (lmember$ ?v0) ?v2)))))
(assume a273 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_llist$)) (= (fun_app$bv (lmember$a ?v0) (lCons$a ?v1 ?v2)) (or (= ?v0 ?v1) (fun_app$bv (lmember$a ?v0) ?v2)))))
(assume a274 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 Enat$)) (= (fun_app$m (fun_app$n lprefix$ (fun_app$ (ltake$ ?v0) ?v1)) (fun_app$ (ltake$ ?v2) ?v1)) (or (fun_app$i (fun_app$j less_eq$ ?v0) ?v2) (fun_app$i (fun_app$j less_eq$ (fun_app$o llength$ ?v1)) ?v2)))))
(assume a275 (forall ((?v0 A_llist$)) (monotone$ less_eq$ lprefix$ (uun$ ?v0))))
(assume a276 (forall ((?v0 Enat_llist_bool_fun$) (?v1 Enat_llist$)) (=> (and (fun_app$bv ?v0 lNil$a) (and (forall ((?v2 Enat$) (?v3 Enat_llist$)) (=> (and (lfinite$ ?v3) (fun_app$bv ?v0 ?v3)) (fun_app$bv ?v0 (lCons$a ?v2 ?v3)))) (=> (forall ((?v2 Enat_llist$)) (=> (fun_app$bv (lstrict_prefix$a ?v2) ?v1) (fun_app$bv ?v0 ?v2))) (fun_app$bv ?v0 ?v1)))) (fun_app$bv ?v0 ?v1))))
(assume a277 (forall ((?v0 A_llist_bool_fun$) (?v1 A_llist$)) (=> (and (fun_app$m ?v0 lNil$) (and (forall ((?v2 A$) (?v3 A_llist$)) (=> (and (lfinite$a ?v3) (fun_app$m ?v0 ?v3)) (fun_app$m ?v0 (lCons$ ?v2 ?v3)))) (=> (forall ((?v2 A_llist$)) (=> (fun_app$m (lstrict_prefix$ ?v2) ?v1) (fun_app$m ?v0 ?v2))) (fun_app$m ?v0 ?v1)))) (fun_app$m ?v0 ?v1))))
(assume a278 (forall ((?v0 A_llist$)) (= (ldistinct$ ?v0) (or (= ?v0 lNil$) (exists ((?v1 A$) (?v2 A_llist$)) (and (= ?v0 (lCons$ ?v1 ?v2)) (and (not (member$a ?v1 (fun_app$ae lset$ ?v2))) (ldistinct$ ?v2))))))))
(assume a279 (forall ((?v0 Enat_llist$)) (= (ldistinct$a ?v0) (or (= ?v0 lNil$a) (exists ((?v1 Enat$) (?v2 Enat_llist$)) (and (= ?v0 (lCons$a ?v1 ?v2)) (and (not (member$ ?v1 (lset$a ?v2))) (ldistinct$a ?v2))))))))
(assume a280 (forall ((?v0 A$) (?v1 A_llist$)) (= (lfinite$a (lCons$ ?v0 ?v1)) (lfinite$a ?v1))))
(assume a281 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (= (lfinite$ (lCons$a ?v0 ?v1)) (lfinite$ ?v1))))
(assume a282 (= (! (lfinite$a lNil$) :named @p_10) true))
(assume a283 (= (! (lfinite$ lNil$a) :named @p_11) true))
(assume a284 (forall ((?v0 A$) (?v1 A_llist$)) (= (ldistinct$ (lCons$ ?v0 ?v1)) (and (not (member$a ?v0 (fun_app$ae lset$ ?v1))) (ldistinct$ ?v1)))))
(assume a285 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (= (ldistinct$a (lCons$a ?v0 ?v1)) (and (not (member$ ?v0 (lset$a ?v1))) (ldistinct$a ?v1)))))
(assume a286 (forall ((?v0 Enat_a_llist_fun$) (?v1 Enat$) (?v2 A_llist$) (?v3 Enat_a_llist_fun$) (?v4 A_llist_a_llist_bool_fun_fun$)) (=> (and (forall ((?v5 Enat$)) (= (fun_app$c ?v0 ?v5) (ite (fun_app$i (fun_app$j less_eq$ ?v5) ?v1) ?v2 (fun_app$c ?v3 ?v5)))) (and (forall ((?v5 Enat$) (?v6 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v5) ?v6) (not (fun_app$i (fun_app$j less_eq$ ?v5) ?v1))) (fun_app$m (fun_app$n ?v4 (fun_app$c ?v3 ?v5)) (fun_app$c ?v3 ?v6)))) (and (forall ((?v5 Enat$)) (=> (not (fun_app$i (fun_app$j less_eq$ ?v5) ?v1)) (fun_app$m (fun_app$n ?v4 ?v2) (fun_app$c ?v3 ?v5)))) (fun_app$m (fun_app$n ?v4 ?v2) ?v2)))) (monotone$ less_eq$ ?v4 ?v0))))
(assume a287 (forall ((?v0 Enat_enat_fun$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat_enat_fun$) (?v4 Enat_enat_bool_fun_fun$)) (=> (and (forall ((?v5 Enat$)) (= (fun_app$f ?v0 ?v5) (ite (fun_app$i (fun_app$j less_eq$ ?v5) ?v1) ?v2 (fun_app$f ?v3 ?v5)))) (and (forall ((?v5 Enat$) (?v6 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v5) ?v6) (not (fun_app$i (fun_app$j less_eq$ ?v5) ?v1))) (fun_app$i (fun_app$j ?v4 (fun_app$f ?v3 ?v5)) (fun_app$f ?v3 ?v6)))) (and (forall ((?v5 Enat$)) (=> (not (fun_app$i (fun_app$j less_eq$ ?v5) ?v1)) (fun_app$i (fun_app$j ?v4 ?v2) (fun_app$f ?v3 ?v5)))) (fun_app$i (fun_app$j ?v4 ?v2) ?v2)))) (monotone$a less_eq$ ?v4 ?v0))))
(assume a288 (forall ((?v0 A_llist_a_llist_bool_fun_fun$)) (monotone$b ?v0 ?v0 uuo$)))
(assume a289 (forall ((?v0 Enat_enat_bool_fun_fun$)) (monotone$a ?v0 ?v0 uup$)))
(assume a290 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (not (lfinite$a ?v0)) (= (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (= ?v0 ?v1)))))
(assume a291 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (lfinite$a ?v1)) (lfinite$a ?v0))))
(assume a292 (forall ((?v0 A_set_a_set_bool_fun_fun$) (?v1 A_set_a_llist_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_set_fun$)) (=> (and (monotone$c ?v0 lprefix$ ?v1) (monotone$d ?v2 ?v0 ?v3)) (monotone$b ?v2 lprefix$ (fun_app$bb (uuq$ ?v1) ?v3)))))
(assume a293 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_a_llist_fun$) (?v2 A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$) (?v3 A_llist_a_llist_fun_enat_fun$)) (=> (and (monotone$ ?v0 lprefix$ ?v1) (monotone$e ?v2 ?v0 ?v3)) (monotone$f ?v2 lprefix$ (fun_app$ay (uur$ ?v1) ?v3)))))
(assume a294 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_a_llist_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_enat_fun$)) (=> (and (monotone$ ?v0 lprefix$ ?v1) (monotone$g ?v2 ?v0 ?v3)) (monotone$b ?v2 lprefix$ (fun_app$aa (uus$ ?v1) ?v3)))))
(assume a295 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_a_llist_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_a_llist_fun$)) (=> (and (monotone$b ?v0 lprefix$ ?v1) (monotone$ ?v2 ?v0 ?v3)) (monotone$ ?v2 lprefix$ (fun_app$d (uum$ ?v1) ?v3)))))
(assume a296 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_a_llist_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_llist_fun$)) (=> (and (monotone$b ?v0 lprefix$ ?v1) (monotone$b ?v2 ?v0 ?v3)) (monotone$b ?v2 lprefix$ (fun_app$av (uut$ ?v1) ?v3)))))
(assume a297 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_a_llist_fun$) (?v2 A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$) (?v3 A_llist_a_llist_fun_a_llist_fun$)) (=> (and (monotone$b ?v0 lprefix$ ?v1) (monotone$f ?v2 ?v0 ?v3)) (monotone$f ?v2 lprefix$ (fun_app$aw (uuu$ ?v1) ?v3)))))
(assume a298 (forall ((?v0 A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$) (?v1 A_llist_a_llist_fun_a_llist_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_a_llist_a_llist_fun_fun$)) (=> (and (monotone$f ?v0 lprefix$ ?v1) (monotone$h ?v2 ?v0 ?v3)) (monotone$ ?v2 lprefix$ (fun_app$bg (uuv$ ?v1) ?v3)))))
(assume a299 (forall ((?v0 A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$) (?v1 A_llist_a_llist_fun_a_llist_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_llist_a_llist_fun_fun$)) (=> (and (monotone$f ?v0 lprefix$ ?v1) (monotone$i ?v2 ?v0 ?v3)) (monotone$b ?v2 lprefix$ (fun_app$bf (uuw$ ?v1) ?v3)))))
(assume a300 (forall ((?v0 A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$) (?v1 A_llist_a_llist_fun_a_llist_fun$) (?v2 A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$) (?v3 A_llist_a_llist_fun_a_llist_a_llist_fun_fun$)) (=> (and (monotone$f ?v0 lprefix$ ?v1) (monotone$j ?v2 ?v0 ?v3)) (monotone$f ?v2 lprefix$ (fun_app$bh (uux$ ?v1) ?v3)))))
(assume a301 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_a_llist_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_enat_fun$)) (=> (and (monotone$ ?v0 lprefix$ ?v1) (monotone$a ?v2 ?v0 ?v3)) (monotone$ ?v2 lprefix$ (fun_app$aq (uuk$ ?v1) ?v3)))))
(assume a302 (forall ((?v0 A_llist$) (?v1 A$)) (=> (lfinite$a ?v0) (lfinite$a (lCons$ ?v1 ?v0)))))
(assume a303 (forall ((?v0 Enat_llist$) (?v1 Enat$)) (=> (lfinite$ ?v0) (lfinite$ (lCons$a ?v1 ?v0)))))
(assume a304 (forall ((?v0 Enat_llist$) (?v1 Enat_llist$)) (=> (fun_app$bv (lprefix$a ?v0) ?v1) (less_eq$b (lset$a ?v0) (lset$a ?v1)))))
(assume a305 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (fun_app$k (fun_app$l less_eq$a (fun_app$ae lset$ ?v0)) (fun_app$ae lset$ ?v1)))))
(assume a306 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (= (fun_app$o llength$ ?v0) (fun_app$o llength$ ?v1))) (= ?v0 ?v1))))
(assume a307 @p_10)
(assume a308 @p_11)
(assume a309 (forall ((?v0 A$) (?v1 A_llist$)) (member$a ?v0 (fun_app$ae lset$ (lCons$ ?v0 ?v1)))))
(assume a310 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (member$ ?v0 (lset$a (lCons$a ?v0 ?v1)))))
(assume a311 (forall ((?v0 A$) (?v1 A_llist$) (?v2 A$)) (=> (member$a ?v0 (fun_app$ae lset$ ?v1)) (member$a ?v0 (fun_app$ae lset$ (lCons$ ?v2 ?v1))))))
(assume a312 (forall ((?v0 Enat$) (?v1 Enat_llist$) (?v2 Enat$)) (=> (member$ ?v0 (lset$a ?v1)) (member$ ?v0 (lset$a (lCons$a ?v2 ?v1))))))
(assume a313 (forall ((?v0 A$) (?v1 A_llist$)) (=> (and (member$a ?v0 (fun_app$ae lset$ ?v1)) (and (forall ((?v2 A_llist$)) (=> (= ?v1 (lCons$ ?v0 ?v2)) false)) (forall ((?v2 A$) (?v3 A_llist$)) (=> (and (= ?v1 (lCons$ ?v2 ?v3)) (member$a ?v0 (fun_app$ae lset$ ?v3))) false)))) false)))
(assume a314 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (=> (and (member$ ?v0 (lset$a ?v1)) (and (forall ((?v2 Enat_llist$)) (=> (= ?v1 (lCons$a ?v0 ?v2)) false)) (forall ((?v2 Enat$) (?v3 Enat_llist$)) (=> (and (= ?v1 (lCons$a ?v2 ?v3)) (member$ ?v0 (lset$a ?v3))) false)))) false)))
(assume a315 (forall ((?v0 A$) (?v1 A_llist$) (?v2 A_llist_bool_fun$)) (=> (and (member$a ?v0 (fun_app$ae lset$ ?v1)) (and (forall ((?v3 A_llist$)) (fun_app$m ?v2 (lCons$ ?v0 ?v3))) (forall ((?v3 A$) (?v4 A_llist$)) (=> (and (member$a ?v0 (fun_app$ae lset$ ?v4)) (and (not (= ?v0 ?v3)) (fun_app$m ?v2 ?v4))) (fun_app$m ?v2 (lCons$ ?v3 ?v4)))))) (fun_app$m ?v2 ?v1))))
(assume a316 (forall ((?v0 Enat$) (?v1 Enat_llist$) (?v2 Enat_llist_bool_fun$)) (=> (and (member$ ?v0 (lset$a ?v1)) (and (forall ((?v3 Enat_llist$)) (fun_app$bv ?v2 (lCons$a ?v0 ?v3))) (forall ((?v3 Enat$) (?v4 Enat_llist$)) (=> (and (member$ ?v0 (lset$a ?v4)) (and (not (= ?v0 ?v3)) (fun_app$bv ?v2 ?v4))) (fun_app$bv ?v2 (lCons$a ?v3 ?v4)))))) (fun_app$bv ?v2 ?v1))))
(assume a317 (forall ((?v0 A$) (?v1 A_llist$) (?v2 A_llist_bool_fun$)) (=> (and (member$a ?v0 (fun_app$ae lset$ ?v1)) (and (forall ((?v3 A_llist$)) (fun_app$m ?v2 (lCons$ ?v0 ?v3))) (forall ((?v3 A$) (?v4 A_llist$)) (=> (and (member$a ?v0 (fun_app$ae lset$ ?v4)) (fun_app$m ?v2 ?v4)) (fun_app$m ?v2 (lCons$ ?v3 ?v4)))))) (fun_app$m ?v2 ?v1))))
(assume a318 (forall ((?v0 Enat$) (?v1 Enat_llist$) (?v2 Enat_llist_bool_fun$)) (=> (and (member$ ?v0 (lset$a ?v1)) (and (forall ((?v3 Enat_llist$)) (fun_app$bv ?v2 (lCons$a ?v0 ?v3))) (forall ((?v3 Enat$) (?v4 Enat_llist$)) (=> (and (member$ ?v0 (lset$a ?v4)) (fun_app$bv ?v2 ?v4)) (fun_app$bv ?v2 (lCons$a ?v3 ?v4)))))) (fun_app$bv ?v2 ?v1))))
(assume a319 (forall ((?v0 A$) (?v1 A_llist$) (?v2 A_a_llist_bool_fun_fun$)) (=> (and (member$a ?v0 (fun_app$ae lset$ ?v1)) (and (forall ((?v3 A$) (?v4 A_llist$)) (fun_app$m (fun_app$by ?v2 ?v3) (lCons$ ?v3 ?v4))) (forall ((?v3 A$) (?v4 A_llist$) (?v5 A$)) (=> (and (member$a ?v5 (fun_app$ae lset$ ?v4)) (fun_app$m (fun_app$by ?v2 ?v5) ?v4)) (fun_app$m (fun_app$by ?v2 ?v5) (lCons$ ?v3 ?v4)))))) (fun_app$m (fun_app$by ?v2 ?v0) ?v1))))
(assume a320 (forall ((?v0 Enat$) (?v1 Enat_llist$) (?v2 Enat_enat_llist_bool_fun_fun$)) (=> (and (member$ ?v0 (lset$a ?v1)) (and (forall ((?v3 Enat$) (?v4 Enat_llist$)) (fun_app$bv (fun_app$bz ?v2 ?v3) (lCons$a ?v3 ?v4))) (forall ((?v3 Enat$) (?v4 Enat_llist$) (?v5 Enat$)) (=> (and (member$ ?v5 (lset$a ?v4)) (fun_app$bv (fun_app$bz ?v2 ?v5) ?v4)) (fun_app$bv (fun_app$bz ?v2 ?v5) (lCons$a ?v3 ?v4)))))) (fun_app$bv (fun_app$bz ?v2 ?v0) ?v1))))
(assume a321 (forall ((?v0 Enat$) (?v1 A_llist$)) (fun_app$k (fun_app$l less_eq$a (fun_app$ae lset$ (fun_app$ (ltake$ ?v0) ?v1))) (fun_app$ae lset$ ?v1))))
(assume a322 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (less_eq$b (lset$a (fun_app$h (ltake$a ?v0) ?v1)) (lset$a ?v1))))
(assume a323 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_set$)) (monotone$d ?v0 less_eq$a (uuy$ ?v1))))
(assume a324 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 Enat$)) (monotone$g ?v0 less_eq$ (uuz$ ?v1))))
(assume a325 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$)) (monotone$a ?v0 less_eq$ (uva$ ?v1))))
(assume a326 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_set$)) (monotone$d ?v0 uuh$ (uuy$ ?v1))))
(assume a327 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 Enat$)) (monotone$g ?v0 uui$ (uuz$ ?v1))))
(assume a328 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$)) (monotone$a ?v0 uui$ (uva$ ?v1))))
(assume a329 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_enat_fun$)) (=> (and (monotone$a ?v0 less_eq$ ?v1) (monotone$a ?v2 ?v0 ?v3)) (monotone$a ?v2 less_eq$ (fun_app$v (uuj$ ?v1) ?v3)))))
(assume a330 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_a_set_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_enat_fun$)) (=> (and (monotone$k ?v0 less_eq$a ?v1) (monotone$a ?v2 ?v0 ?v3)) (monotone$k ?v2 less_eq$a (fun_app$ba (uvb$ ?v1) ?v3)))))
(assume a331 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_enat_fun$)) (=> (and (monotone$a ?v0 less_eq$ ?v1) (monotone$g ?v2 ?v0 ?v3)) (monotone$g ?v2 less_eq$ (fun_app$ac (uvc$ ?v1) ?v3)))))
(assume a332 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_enat_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_a_llist_fun$)) (=> (and (monotone$g ?v0 less_eq$ ?v1) (monotone$ ?v2 ?v0 ?v3)) (monotone$a ?v2 less_eq$ (fun_app$am (uul$ ?v1) ?v3)))))
(assume a333 (forall ((?v0 A_set_a_set_bool_fun_fun$) (?v1 A_set_enat_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_set_fun$)) (=> (and (monotone$l ?v0 less_eq$ ?v1) (monotone$d ?v2 ?v0 ?v3)) (monotone$g ?v2 less_eq$ (fun_app$ai (uvd$ ?v1) ?v3)))))
(assume a334 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_a_set_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_enat_fun$)) (=> (and (monotone$k ?v0 less_eq$a ?v1) (monotone$g ?v2 ?v0 ?v3)) (monotone$d ?v2 less_eq$a (fun_app$af (uve$ ?v1) ?v3)))))
(assume a335 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_a_set_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_a_llist_fun$)) (=> (and (monotone$d ?v0 less_eq$a ?v1) (monotone$ ?v2 ?v0 ?v3)) (monotone$k ?v2 less_eq$a (fun_app$ao (uvf$ ?v1) ?v3)))))
(assume a336 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_enat_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_llist_fun$)) (=> (and (monotone$g ?v0 less_eq$ ?v1) (monotone$b ?v2 ?v0 ?v3)) (monotone$g ?v2 less_eq$ (fun_app$z (uvg$ ?v1) ?v3)))))
(assume a337 (forall ((?v0 A_set_a_set_bool_fun_fun$) (?v1 A_set_a_set_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_set_fun$)) (=> (and (monotone$m ?v0 less_eq$a ?v1) (monotone$d ?v2 ?v0 ?v3)) (monotone$d ?v2 less_eq$a (fun_app$bd (uvh$ ?v1) ?v3)))))
(assume a338 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_a_set_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_llist_fun$)) (=> (and (monotone$d ?v0 less_eq$a ?v1) (monotone$b ?v2 ?v0 ?v3)) (monotone$d ?v2 less_eq$a (fun_app$ax (uvi$ ?v1) ?v3)))))
(assume a339 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_enat_fun$)) (=> (and (monotone$a ?v0 uui$ ?v1) (monotone$a ?v2 ?v0 ?v3)) (monotone$a ?v2 uui$ (fun_app$v (uuj$ ?v1) ?v3)))))
(assume a340 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_a_set_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_enat_fun$)) (=> (and (monotone$k ?v0 uuh$ ?v1) (monotone$a ?v2 ?v0 ?v3)) (monotone$k ?v2 uuh$ (fun_app$ba (uvb$ ?v1) ?v3)))))
(assume a341 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_enat_fun$)) (=> (and (monotone$a ?v0 uui$ ?v1) (monotone$g ?v2 ?v0 ?v3)) (monotone$g ?v2 uui$ (fun_app$ac (uvc$ ?v1) ?v3)))))
(assume a342 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_enat_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_a_llist_fun$)) (=> (and (monotone$g ?v0 uui$ ?v1) (monotone$ ?v2 ?v0 ?v3)) (monotone$a ?v2 uui$ (fun_app$am (uul$ ?v1) ?v3)))))
(assume a343 (forall ((?v0 A_set_a_set_bool_fun_fun$) (?v1 A_set_enat_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_set_fun$)) (=> (and (monotone$l ?v0 uui$ ?v1) (monotone$d ?v2 ?v0 ?v3)) (monotone$g ?v2 uui$ (fun_app$ai (uvd$ ?v1) ?v3)))))
(assume a344 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_a_set_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_enat_fun$)) (=> (and (monotone$k ?v0 uuh$ ?v1) (monotone$g ?v2 ?v0 ?v3)) (monotone$d ?v2 uuh$ (fun_app$af (uve$ ?v1) ?v3)))))
(assume a345 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_a_set_fun$) (?v2 Enat_enat_bool_fun_fun$) (?v3 Enat_a_llist_fun$)) (=> (and (monotone$d ?v0 uuh$ ?v1) (monotone$ ?v2 ?v0 ?v3)) (monotone$k ?v2 uuh$ (fun_app$ao (uvf$ ?v1) ?v3)))))
(assume a346 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_enat_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_llist_fun$)) (=> (and (monotone$g ?v0 uui$ ?v1) (monotone$b ?v2 ?v0 ?v3)) (monotone$g ?v2 uui$ (fun_app$z (uvg$ ?v1) ?v3)))))
(assume a347 (forall ((?v0 A_set_a_set_bool_fun_fun$) (?v1 A_set_a_set_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_set_fun$)) (=> (and (monotone$m ?v0 uuh$ ?v1) (monotone$d ?v2 ?v0 ?v3)) (monotone$d ?v2 uuh$ (fun_app$bd (uvh$ ?v1) ?v3)))))
(assume a348 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_a_set_fun$) (?v2 A_llist_a_llist_bool_fun_fun$) (?v3 A_llist_a_llist_fun$)) (=> (and (monotone$d ?v0 uuh$ ?v1) (monotone$b ?v2 ?v0 ?v3)) (monotone$d ?v2 uuh$ (fun_app$ax (uvi$ ?v1) ?v3)))))
(assume a349 (forall ((?v0 Enat$) (?v1 A_llist_a_llist_bool_fun_fun$) (?v2 Enat_a_llist_fun$) (?v3 A_llist$)) (=> (and (forall ((?v4 Enat$) (?v5 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v4) ?v5) (not (fun_app$i (fun_app$j less_eq$ ?v4) ?v0))) (fun_app$m (fun_app$n ?v1 (fun_app$c ?v2 ?v4)) (fun_app$c ?v2 ?v5)))) (and (forall ((?v4 Enat$)) (=> (not (fun_app$i (fun_app$j less_eq$ ?v4) ?v0)) (fun_app$m (fun_app$n ?v1 ?v3) (fun_app$c ?v2 ?v4)))) (fun_app$m (fun_app$n ?v1 ?v3) ?v3))) (monotone$ less_eq$ ?v1 (fun_app$ab (fun_app$bi (uvj$ ?v0) ?v2) ?v3)))))
(assume a350 (forall ((?v0 Enat$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat_enat_fun$) (?v3 Enat$)) (=> (and (forall ((?v4 Enat$) (?v5 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v4) ?v5) (not (fun_app$i (fun_app$j less_eq$ ?v4) ?v0))) (fun_app$i (fun_app$j ?v1 (fun_app$f ?v2 ?v4)) (fun_app$f ?v2 ?v5)))) (and (forall ((?v4 Enat$)) (=> (not (fun_app$i (fun_app$j less_eq$ ?v4) ?v0)) (fun_app$i (fun_app$j ?v1 ?v3) (fun_app$f ?v2 ?v4)))) (fun_app$i (fun_app$j ?v1 ?v3) ?v3))) (monotone$a less_eq$ ?v1 (fun_app$g (fun_app$bj (uvk$ ?v0) ?v2) ?v3)))))
(assume a351 (forall ((?v0 Enat_a_llist_fun$) (?v1 Enat$) (?v2 A_llist$) (?v3 Enat_a_llist_fun$) (?v4 A_llist_a_llist_bool_fun_fun$)) (=> (and (forall ((?v5 Enat$)) (= (fun_app$c ?v0 ?v5) (ite (fun_app$i (fun_app$j less_eq$ ?v1) ?v5) ?v2 (fun_app$c ?v3 ?v5)))) (and (forall ((?v5 Enat$) (?v6 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v6) ?v5) (not (fun_app$i (fun_app$j less_eq$ ?v1) ?v5))) (fun_app$m (fun_app$n ?v4 (fun_app$c ?v3 ?v5)) (fun_app$c ?v3 ?v6)))) (and (forall ((?v5 Enat$)) (=> (not (fun_app$i (fun_app$j less_eq$ ?v1) ?v5)) (fun_app$m (fun_app$n ?v4 ?v2) (fun_app$c ?v3 ?v5)))) (fun_app$m (fun_app$n ?v4 ?v2) ?v2)))) (monotone$ uui$ ?v4 ?v0))))
(assume a352 (forall ((?v0 Enat_enat_fun$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat_enat_fun$) (?v4 Enat_enat_bool_fun_fun$)) (=> (and (forall ((?v5 Enat$)) (= (fun_app$f ?v0 ?v5) (ite (fun_app$i (fun_app$j less_eq$ ?v1) ?v5) ?v2 (fun_app$f ?v3 ?v5)))) (and (forall ((?v5 Enat$) (?v6 Enat$)) (=> (and (fun_app$i (fun_app$j less_eq$ ?v6) ?v5) (not (fun_app$i (fun_app$j less_eq$ ?v1) ?v5))) (fun_app$i (fun_app$j ?v4 (fun_app$f ?v3 ?v5)) (fun_app$f ?v3 ?v6)))) (and (forall ((?v5 Enat$)) (=> (not (fun_app$i (fun_app$j less_eq$ ?v1) ?v5)) (fun_app$i (fun_app$j ?v4 ?v2) (fun_app$f ?v3 ?v5)))) (fun_app$i (fun_app$j ?v4 ?v2) ?v2)))) (monotone$a uui$ ?v4 ?v0))))
(assume a353 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (fun_app$m (lstrict_prefix$ ?v0) ?v1) (lfinite$a ?v0))))
(assume a354 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 A_llist$)) (monotone$ ?v0 lprefix$ (uvl$ ?v1))))
(assume a355 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$)) (monotone$b ?v0 lprefix$ (uvm$ ?v1))))
(assume a356 (forall ((?v0 A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$) (?v1 A_llist$)) (monotone$f ?v0 lprefix$ (uvn$ ?v1))))
(assume a357 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat_enat_enat_fun_fun$) (?v3 Enat_enat_bool_fun_fun$) (?v4 Enat_enat_fun$)) (=> (and (forall ((?v5 Enat$)) (monotone$a ?v0 ?v1 (fun_app$g ?v2 ?v5))) (and (monotone$a ?v3 ?v0 ?v4) (and (forall ((?v5 Enat$)) (monotone$a ?v3 ?v1 (fun_app$g (uvo$ ?v2) ?v5))) (transp$a ?v1)))) (monotone$a ?v3 ?v1 (fun_app$v (uvp$ ?v2) ?v4)))))
(assume a358 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 A_llist_enat_enat_fun_fun$) (?v3 A_llist_a_llist_bool_fun_fun$) (?v4 A_llist_enat_fun$)) (=> (and (forall ((?v5 A_llist$)) (monotone$a ?v0 ?v1 (fun_app$ad ?v2 ?v5))) (and (monotone$g ?v3 ?v0 ?v4) (and (forall ((?v5 Enat$)) (monotone$g ?v3 ?v1 (fun_app$an (uvq$ ?v2) ?v5))) (transp$a ?v1)))) (monotone$g ?v3 ?v1 (fun_app$ac (uvr$ ?v2) ?v4)))))
(assume a359 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 A_llist_a_llist_bool_fun_fun$) (?v2 Enat_enat_a_llist_fun_fun$) (?v3 Enat_enat_bool_fun_fun$) (?v4 Enat_enat_fun$)) (=> (and (forall ((?v5 Enat$)) (monotone$ ?v0 ?v1 (fun_app$e ?v2 ?v5))) (and (monotone$a ?v3 ?v0 ?v4) (and (forall ((?v5 Enat$)) (monotone$ ?v3 ?v1 (fun_app$e (uvs$ ?v2) ?v5))) (transp$ ?v1)))) (monotone$ ?v3 ?v1 (fun_app$aq (uvt$ ?v2) ?v4)))))
(assume a360 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat_a_llist_enat_fun_fun$) (?v3 Enat_enat_bool_fun_fun$) (?v4 Enat_a_llist_fun$)) (=> (and (forall ((?v5 Enat$)) (monotone$g ?v0 ?v1 (fun_app$an ?v2 ?v5))) (and (monotone$ ?v3 ?v0 ?v4) (and (forall ((?v5 A_llist$)) (monotone$a ?v3 ?v1 (fun_app$ad (uvu$ ?v2) ?v5))) (transp$a ?v1)))) (monotone$a ?v3 ?v1 (fun_app$am (uvv$ ?v2) ?v4)))))
(assume a361 (forall ((?v0 A_set_a_set_bool_fun_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 A_llist_a_set_enat_fun_fun$) (?v3 A_llist_a_llist_bool_fun_fun$) (?v4 A_llist_a_set_fun$)) (=> (and (forall ((?v5 A_llist$)) (monotone$l ?v0 ?v1 (fun_app$ak ?v2 ?v5))) (and (monotone$d ?v3 ?v0 ?v4) (and (forall ((?v5 A_set$)) (monotone$g ?v3 ?v1 (fun_app$ar (uvw$ ?v2) ?v5))) (transp$a ?v1)))) (monotone$g ?v3 ?v1 (fun_app$ai (uvx$ ?v2) ?v4)))))
(assume a362 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 A_set_a_set_bool_fun_fun$) (?v2 A_llist_enat_a_set_fun_fun$) (?v3 A_llist_a_llist_bool_fun_fun$) (?v4 A_llist_enat_fun$)) (=> (and (forall ((?v5 A_llist$)) (monotone$k ?v0 ?v1 (fun_app$ah ?v2 ?v5))) (and (monotone$g ?v3 ?v0 ?v4) (and (forall ((?v5 Enat$)) (monotone$d ?v3 ?v1 (fun_app$ap (uvy$ ?v2) ?v5))) (transp$b ?v1)))) (monotone$d ?v3 ?v1 (fun_app$af (uvz$ ?v2) ?v4)))))
(assume a363 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 A_llist_a_llist_bool_fun_fun$) (?v2 A_llist_enat_a_llist_fun_fun$) (?v3 A_llist_a_llist_bool_fun_fun$) (?v4 A_llist_enat_fun$)) (=> (and (forall ((?v5 A_llist$)) (monotone$ ?v0 ?v1 (fun_app$ab ?v2 ?v5))) (and (monotone$g ?v3 ?v0 ?v4) (and (forall ((?v5 Enat$)) (monotone$b ?v3 ?v1 (fun_app$al (uwa$ ?v2) ?v5))) (transp$ ?v1)))) (monotone$b ?v3 ?v1 (fun_app$aa (uwb$ ?v2) ?v4)))))
(assume a364 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_a_llist_bool_fun_fun$) (?v2 Enat_a_llist_a_llist_fun_fun$) (?v3 Enat_enat_bool_fun_fun$) (?v4 Enat_a_llist_fun$)) (=> (and (forall ((?v5 Enat$)) (monotone$b ?v0 ?v1 (fun_app$al ?v2 ?v5))) (and (monotone$ ?v3 ?v0 ?v4) (and (forall ((?v5 A_llist$)) (monotone$ ?v3 ?v1 (fun_app$ab (uwc$ ?v2) ?v5))) (transp$ ?v1)))) (monotone$ ?v3 ?v1 (fun_app$d (uwd$ ?v2) ?v4)))))
(assume a365 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_set_a_set_bool_fun_fun$) (?v2 Enat_a_llist_a_set_fun_fun$) (?v3 Enat_enat_bool_fun_fun$) (?v4 Enat_a_llist_fun$)) (=> (and (forall ((?v5 Enat$)) (monotone$d ?v0 ?v1 (fun_app$ap ?v2 ?v5))) (and (monotone$ ?v3 ?v0 ?v4) (and (forall ((?v5 A_llist$)) (monotone$k ?v3 ?v1 (fun_app$ah (uwe$ ?v2) ?v5))) (transp$b ?v1)))) (monotone$k ?v3 ?v1 (fun_app$ao (uwf$ ?v2) ?v4)))))
(assume a366 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 A_llist_a_llist_enat_fun_fun$) (?v3 A_llist_a_llist_bool_fun_fun$) (?v4 A_llist_a_llist_fun$)) (=> (and (forall ((?v5 A_llist$)) (monotone$g ?v0 ?v1 (fun_app$t ?v2 ?v5))) (and (monotone$b ?v3 ?v0 ?v4) (and (forall ((?v5 A_llist$)) (monotone$g ?v3 ?v1 (fun_app$t (uwg$ ?v2) ?v5))) (transp$a ?v1)))) (monotone$g ?v3 ?v1 (fun_app$z (uwh$ ?v2) ?v4)))))
(assume a367 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_set_a_set_bool_fun_fun$) (?v2 A_llist_a_set_fun$) (?v3 A_llist_enat_a_set_fun_fun$) (?v4 Enat$)) (=> (and (monotone$d ?v0 ?v1 ?v2) (forall ((?v5 Enat$)) (monotone$d ?v0 ?v1 (fun_app$ap (uvy$ ?v3) ?v5)))) (monotone$d ?v0 ?v1 (fun_app$ap (fun_app$bn (uwi$ ?v2) ?v3) ?v4)))))
(assume a368 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 A_llist_enat_fun$) (?v3 A_llist_enat_enat_fun_fun$) (?v4 Enat$)) (=> (and (monotone$g ?v0 ?v1 ?v2) (forall ((?v5 Enat$)) (monotone$g ?v0 ?v1 (fun_app$an (uvq$ ?v3) ?v5)))) (monotone$g ?v0 ?v1 (fun_app$an (fun_app$bm (uwj$ ?v2) ?v3) ?v4)))))
(assume a369 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 A_llist_a_llist_bool_fun_fun$) (?v2 Enat_a_llist_fun$) (?v3 Enat_enat_a_llist_fun_fun$) (?v4 Enat$)) (=> (and (monotone$ ?v0 ?v1 ?v2) (forall ((?v5 Enat$)) (monotone$ ?v0 ?v1 (fun_app$e (uvs$ ?v3) ?v5)))) (monotone$ ?v0 ?v1 (fun_app$e (fun_app$bp (uwk$ ?v2) ?v3) ?v4)))))
(assume a370 (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist_a_llist_bool_fun_fun$) (?v2 A_llist_a_llist_fun$) (?v3 A_llist_enat_a_llist_fun_fun$) (?v4 Enat$)) (=> (and (monotone$b ?v0 ?v1 ?v2) (forall ((?v5 Enat$)) (monotone$b ?v0 ?v1 (fun_app$al (uwa$ ?v3) ?v5)))) (monotone$b ?v0 ?v1 (fun_app$al (fun_app$bl (uwl$ ?v2) ?v3) ?v4)))))
(assume a371 (forall ((?v0 A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$) (?v1 A_llist_a_llist_bool_fun_fun$) (?v2 A_llist_a_llist_fun_a_llist_fun$) (?v3 A_llist_a_llist_fun_enat_a_llist_fun_fun$) (?v4 Enat$)) (=> (and (monotone$f ?v0 ?v1 ?v2) (forall ((?v5 Enat$)) (monotone$f ?v0 ?v1 (fun_app$as (uwm$ ?v3) ?v5)))) (monotone$f ?v0 ?v1 (fun_app$as (fun_app$br (uwn$ ?v2) ?v3) ?v4)))))
(assume a372 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat_enat_fun$) (?v3 Enat_enat_enat_fun_fun$) (?v4 Enat$)) (=> (and (monotone$a ?v0 ?v1 ?v2) (forall ((?v5 Enat$)) (monotone$a ?v0 ?v1 (fun_app$g (uvo$ ?v3) ?v5)))) (monotone$a ?v0 ?v1 (fun_app$g (fun_app$bq (uwo$ ?v2) ?v3) ?v4)))))
(assume a373 (forall ((?v0 A$) (?v1 A_llist$)) (= (member$a ?v0 (fun_app$ae lset$ ?v1)) (fun_app$m (lmember$ ?v0) ?v1))))
(assume a374 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (= (member$ ?v0 (lset$a ?v1)) (fun_app$bv (lmember$a ?v0) ?v1))))
(assume a375 (forall ((?v0 A_llist$)) (=> (and (lfinite$a ?v0) (and (=> (= ?v0 lNil$) false) (forall ((?v1 A_llist$) (?v2 A$)) (=> (and (= ?v0 (lCons$ ?v2 ?v1)) (lfinite$a ?v1)) false)))) false)))
(assume a376 (forall ((?v0 Enat_llist$)) (=> (and (lfinite$ ?v0) (and (=> (= ?v0 lNil$a) false) (forall ((?v1 Enat_llist$) (?v2 Enat$)) (=> (and (= ?v0 (lCons$a ?v2 ?v1)) (lfinite$ ?v1)) false)))) false)))
(assume a377 (forall ((?v0 A_llist$)) (= (lfinite$a ?v0) (or (= ?v0 lNil$) (exists ((?v1 A_llist$) (?v2 A$)) (and (= ?v0 (lCons$ ?v2 ?v1)) (lfinite$a ?v1)))))))
(assume a378 (forall ((?v0 Enat_llist$)) (= (lfinite$ ?v0) (or (= ?v0 lNil$a) (exists ((?v1 Enat_llist$) (?v2 Enat$)) (and (= ?v0 (lCons$a ?v2 ?v1)) (lfinite$ ?v1)))))))
(assume a379 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (fun_app$i (fun_app$j less_eq$ (fun_app$o llength$ ?v0)) (fun_app$o llength$ ?v1)))))
(assume a380 (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ (fun_app$o llength$ ?v0)) ?v1) (= (fun_app$ (ltake$ ?v1) ?v0) ?v0))))
(assume a381 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (=> (and (not (member$ ?v0 (lset$a ?v1))) (ldistinct$a ?v1)) (ldistinct$a (lCons$a ?v0 ?v1)))))
(assume a382 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (fun_app$m (fun_app$n lprefix$ ?v0) ?v1) (ite (lfinite$a ?v0) (fun_app$m (fun_app$n finite_lprefix$ ?v0) ?v1) (= ?v0 ?v1)))))
(assume a383 (forall ((?v0 Enat$) (?v1 Enat_llist$)) (= (lsorted$a (lCons$a ?v0 ?v1)) (and (lsorted$a ?v1) (forall ((?v2 Enat$)) (=> (member$ ?v2 (lset$a ?v1)) (fun_app$i (fun_app$j less_eq$ ?v0) ?v2)))))))
(assume a384 (forall ((?v0 Enat_enat_a_llist_fun_fun$)) (=> (monotone$ less_eq$ lprefix$ (uwp$ ?v0)) (monotone$ less_eq$ lprefix$ (uwq$ ?v0)))))
(assume a385 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat_enat_fun$) (?v3 Enat_enat_fun$) (?v4 Bool)) (=> (and (monotone$a ?v0 ?v1 ?v2) (monotone$a ?v0 ?v1 ?v3)) (monotone$a ?v0 ?v1 (fun_app$bs (fun_app$bt (uwr$ ?v2) ?v3) ?v4)))))
(assume a386 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_fun$) (?v2 A_llist$)) (=> (monotone$a ?v0 less_eq$ ?v1) (monotone$ ?v0 lprefix$ (fun_app$ab (uws$ ?v1) ?v2)))))
(assume a387 (forall ((?v0 Enat$) (?v1 Enat$)) (= (= (fun_app$f eSuc$ ?v0) (fun_app$f eSuc$ ?v1)) (= ?v0 ?v1))))
(assume a388 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_fun$)) (=> (monotone$a ?v0 less_eq$ ?v1) (monotone$a ?v0 less_eq$ (uwt$ ?v1)))))
(assume a389 (monotone$a less_eq$ less_eq$ eSuc$))
(assume a390 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$i (fun_app$j less_eq$ (fun_app$f eSuc$ ?v0)) ?v1) (exists ((?v2 Enat$)) (and (= ?v1 (fun_app$f eSuc$ ?v2)) (fun_app$i (fun_app$j less_eq$ ?v0) ?v2))))))
(assume a391 (forall ((?v0 A$)) (monotone$b lprefix$ lprefix$ (uug$ ?v0))))
(assume a392 (monotone$d lprefix$ less_eq$a lset$))
(assume a393 (forall ((?v0 Enat$)) (monotone$b lprefix$ lprefix$ (ltake$ ?v0))))
(assume a394 (monotone$g lprefix$ less_eq$ llength$))
(assume a395 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_enat_fun_fun$) (?v2 Enat$)) (=> (and (monotone$a less_eq$ ?v0 (uwu$ ?v1)) (and (forall ((?v3 Enat$)) (fun_app$i (fun_app$j ?v0 ?v2) (fun_app$f (fun_app$g ?v1 ?v3) (fun_app$f eSuc$ ?v3)))) (fun_app$i (fun_app$j ?v0 ?v2) ?v2))) (monotone$a less_eq$ ?v0 (fun_app$g (uwv$ ?v1) ?v2)))))
(assume a396 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_a_llist_fun$)) (=> (monotone$ ?v0 lprefix$ ?v1) (monotone$a ?v0 less_eq$ (uww$ ?v1)))))
(assume a397 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$i (fun_app$j less_eq$ (fun_app$f eSuc$ ?v0)) (fun_app$f eSuc$ ?v1)) (fun_app$i (fun_app$j less_eq$ ?v0) ?v1))))
(assume a398 (forall ((?v0 Enat$)) (fun_app$i (fun_app$j less_eq$ ?v0) (fun_app$f eSuc$ ?v0))))
(assume a399 (forall ((?v0 A_a_llist_a_llist_a_llist_fun_fun_fun$)) (=> (forall ((?v1 A$)) (monotone$b lprefix$ lprefix$ (fun_app$p (uwx$ ?v0) ?v1))) (monotone$b lprefix$ lprefix$ (uwz$ ?v0)))))
(assume a400 (forall ((?v0 A_a_llist_a_llist_enat_fun_fun_fun$)) (=> (forall ((?v1 A$)) (monotone$g lprefix$ less_eq$ (fun_app$s (uxa$ ?v0) ?v1))) (monotone$g lprefix$ less_eq$ (fun_app$ca (case_llist$a bot$) (uxa$ ?v0))))))
(assume a401 (forall ((?v0 Enat$)) (fun_app$i (fun_app$j less_eq$ bot$) ?v0)))
(assume a402 (forall ((?v0 Enat$)) (=> (fun_app$i (fun_app$j less_eq$ ?v0) bot$) (= ?v0 bot$))))
(assume a403 (forall ((?v0 Enat$)) (= (fun_app$i (fun_app$j less_eq$ ?v0) bot$) (= ?v0 bot$))))
(assume a404 (forall ((?v0 A_bool_fun$) (?v1 A_llist$)) (monotone$f (fun_ord$ lprefix$) lprefix$ (fun_app$x (uxc$ ?v0) ?v1))))
(assume a405 (forall ((?v0 A_bool_fun$) (?v1 A_llist$)) (monotone$f (fun_ord$ lprefix$) lprefix$ (fun_app$x (uxe$ ?v0) ?v1))))
(step t0 (cl (! (=> (forall ((?v0 A$) (?v1 A$)) (not (fun_app$bk (fun_app$bu uu$ ?v0) ?v1))) (! (not (! (fun_app$bk (fun_app$bu uu$ @quantifiers_skolemize_36) @quantifiers_skolemize_37) :named @p_15)) :named @p_16)) :named @p_299) (forall ((?v0 A$) (?v1 A$)) (not (fun_app$bk (fun_app$bu uu$ ?v0) ?v1)))) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 (forall ((?v0 A$) (?v1 A$)) (not (fun_app$bk (fun_app$bu uu$ ?v0) ?v1))))
(step t1.t0 (cl (or (! (not (forall ((?v0 A$) (?v1 A$)) (not (fun_app$bk (fun_app$bu uu$ ?v0) ?v1)))) :named @p_298) @p_16)) :rule forall_inst :args (@quantifiers_skolemize_36 @quantifiers_skolemize_37))
(step t1.t1 (cl @p_298 @p_16) :rule or :premises (t1.t0))
(step t1.t2 (cl (not (! (= (forall ((?v0 A$) (?v1 A$)) (= (fun_app$bk (fun_app$bu uu$ ?v0) ?v1) false)) (forall ((?v0 A$) (?v1 A$)) (not (fun_app$bk (fun_app$bu uu$ ?v0) ?v1)))) :named @p_12)) (not (forall ((?v0 A$) (?v1 A$)) (= (fun_app$bk (fun_app$bu uu$ ?v0) ?v1) false))) (forall ((?v0 A$) (?v1 A$)) (not (fun_app$bk (fun_app$bu uu$ ?v0) ?v1)))) :rule equiv_pos2)
(anchor :step t1.t3 :args ((?v0 A$) (?v1 A$) (:= (?v0 A$) ?v0) (:= (?v1 A$) ?v1)))
(step t1.t3.t0 (cl (! (= (= (! (fun_app$bk (fun_app$bu uu$ ?v0) ?v1) :named @p_13) false) (not @p_13)) :named @p_14)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_14 1 5))
(step t1.t3 (cl @p_12) :rule bind)
(step t1.t4 (cl (forall ((?v0 A$) (?v1 A$)) (not (fun_app$bk (fun_app$bu uu$ ?v0) ?v1)))) :rule resolution :premises (t1.t2 t1.t3 a81))
(step t1.t5 (cl @p_16) :rule resolution :premises (t1.t1 t1.t4))
(step t1 (cl @p_298 @p_16) :rule subproof :discharge (t1.a0))
(step t2 (cl @p_299 @p_16) :rule resolution :premises (t0 t1))
(step t3 (cl @p_299 (! (not @p_16) :named @p_294)) :rule implies_neg2)
(step t4 (cl @p_299 @p_299) :rule resolution :premises (t2 t3))
(step t5 (cl @p_299) :rule contraction :premises (t4))
(step t6 (cl @p_298 @p_16) :rule implies :premises (t5))
(step t7 (cl (not (! (= (! (or (! (or (! (not (! (= @quantifiers_skolemize_10 (! (lCons$ @quantifiers_skolemize_36 @quantifiers_skolemize_38) :named @p_20)) :named @p_21)) :named @p_22) (! (not (! (= @quantifiers_skolemize_11 (! (lCons$ @quantifiers_skolemize_37 @quantifiers_skolemize_39) :named @p_17)) :named @p_18)) :named @p_19) @p_16) :named @p_23) @p_294) :named @p_295) (! (or @p_23 @p_15) :named @p_293)) :named @p_296)) (not @p_295) @p_293) :rule equiv_pos2)
(step t8 (cl (= @p_23 @p_23)) :rule refl)
(step t9 (cl (! (= @p_294 @p_15) :named @p_297)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_297 1 5))
(step t10 (cl @p_296) :rule cong :premises (t8 t9))
(step t11 (cl @p_23 @p_294) :rule or_neg :args (2))
(step t12 (cl @p_295 (! (not @p_23) :named @p_24)) :rule or_neg :args (0))
(step t13 (cl @p_295 (not @p_294)) :rule or_neg :args (1))
(step t14 (cl @p_295 @p_295) :rule resolution :premises (t11 t12 t13))
(step t15 (cl @p_295) :rule contraction :premises (t14))
(step t16 (cl @p_293) :rule resolution :premises (t7 t10 t15))
(step t17 (cl @p_23 @p_15) :rule or :premises (t16))
(step t18 (cl @p_15 @p_23) :rule reordering :premises (t17))
(step t19 (cl (not (! (= (! (or (! (not (! (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= (lCons$ ?v3 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v4 ?v6) @quantifiers_skolemize_11)) (not (fun_app$bk (fun_app$bu uu$ ?v3) ?v4))))) :named @p_25)) :named @p_277) @p_24) :named @p_278) (! (or (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= (lCons$ ?v3 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v4 ?v6) @quantifiers_skolemize_11)) (not (fun_app$bk (fun_app$bu uu$ ?v3) ?v4)))) @p_24) :named @p_276)) :named @p_291)) (not @p_278) @p_276) :rule equiv_pos2)
(step t20 (cl (! (= @p_277 (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= (lCons$ ?v3 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v4 ?v6) @quantifiers_skolemize_11)) (not (fun_app$bk (fun_app$bu uu$ ?v3) ?v4))))) :named @p_292)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_292 1 5))
(step t21 (cl (= @p_24 @p_24)) :rule refl)
(step t22 (cl @p_291) :rule cong :premises (t20 t21))
(step t23 (cl (not (! (= (! (=> @p_25 (! (not (! (or (! (not (! (= @p_20 @quantifiers_skolemize_10) :named @p_282)) :named @p_283) (! (not (! (= @p_17 @quantifiers_skolemize_11) :named @p_280)) :named @p_281) @p_16) :named @p_284)) :named @p_285)) :named @p_286) (! (=> @p_25 @p_24) :named @p_279)) :named @p_288)) (not @p_286) @p_279) :rule equiv_pos2)
(step t24 (cl (= @p_25 @p_25)) :rule refl)
(step t25 (cl (! (= @p_282 @p_21) :named @p_290)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_290 2 6))
(step t26 (cl (= @p_283 @p_22)) :rule cong :premises (t25))
(step t27 (cl (! (= @p_280 @p_18) :named @p_289)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_289 2 6))
(step t28 (cl (= @p_281 @p_19)) :rule cong :premises (t27))
(step t29 (cl (= @p_16 @p_16)) :rule refl)
(step t30 (cl (= @p_284 @p_23)) :rule cong :premises (t26 t28 t29))
(step t31 (cl (= @p_285 @p_24)) :rule cong :premises (t30))
(step t32 (cl @p_288) :rule cong :premises (t24 t31))
(step t33 (cl @p_286 @p_25) :rule implies_neg1)
(anchor :step t34)
(assume t34.a0 @p_25)
(step t34.t0 (cl (not (! (= @p_25 @p_285) :named @p_287)) @p_277 @p_285) :rule equiv_pos2)
(anchor :step t34.t1 :args ((:= (?v3 A$) @quantifiers_skolemize_36) (:= (?v4 A$) @quantifiers_skolemize_37) (:= (?v5 A_llist$) @quantifiers_skolemize_38) (:= (?v6 A_llist$) @quantifiers_skolemize_39)))
(step t34.t1.t0 (cl (= (! (or (! (not (! (= (! (lCons$ ?v3 ?v5) :named @p_71) @quantifiers_skolemize_10) :named @p_97)) :named @p_98) (! (not (! (= (! (lCons$ ?v4 ?v6) :named @p_69) @quantifiers_skolemize_11) :named @p_95)) :named @p_96) (! (not (fun_app$bk (fun_app$bu uu$ ?v3) ?v4)) :named @p_94)) :named @p_99) @p_284)) :rule refl)
(step t34.t1 (cl (= (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= (lCons$ ?v3 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v4 ?v6) @quantifiers_skolemize_11)) (not (fun_app$bk (fun_app$bu uu$ ?v3) ?v4)))) @p_284)) :rule sko_forall)
(step t34.t2 (cl @p_287) :rule cong :premises (t34.t1))
(step t34.t3 (cl @p_285) :rule resolution :premises (t34.t0 t34.t2 t34.a0))
(step t34 (cl @p_277 @p_285) :rule subproof :discharge (t34.a0))
(step t35 (cl @p_286 @p_285) :rule resolution :premises (t33 t34))
(step t36 (cl @p_286 (not @p_285)) :rule implies_neg2)
(step t37 (cl @p_286 @p_286) :rule resolution :premises (t35 t36))
(step t38 (cl @p_286) :rule contraction :premises (t37))
(step t39 (cl @p_279) :rule resolution :premises (t23 t32 t38))
(step t40 (cl @p_277 @p_24) :rule implies :premises (t39))
(step t41 (cl @p_278 (not @p_277)) :rule or_neg :args (0))
(step t42 (cl @p_278 (not @p_24)) :rule or_neg :args (1))
(step t43 (cl @p_278 @p_278) :rule resolution :premises (t40 t41 t42))
(step t44 (cl @p_278) :rule contraction :premises (t43))
(step t45 (cl @p_276) :rule resolution :premises (t19 t22 t44))
(step t46 (cl (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= (lCons$ ?v3 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v4 ?v6) @quantifiers_skolemize_11)) (not (fun_app$bk (fun_app$bu uu$ ?v3) ?v4)))) @p_24) :rule or :premises (t45))
(step t47 (cl (! (not (! (or (! (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= (lCons$ ?v5 ?v3) @quantifiers_skolemize_10)) (not (= (lCons$ ?v5 ?v4) @quantifiers_skolemize_11)) (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4))))) :named @p_27) @p_25 (! (= lNil$ @quantifiers_skolemize_10) :named @p_26)) :named @p_28)) :named @p_275) @p_27 @p_25 @p_26) :rule or_pos)
(step t48 (cl @p_26 @p_27 @p_25 @p_275) :rule reordering :premises (t47))
(step t49 (cl (! (or (! (not (! (fun_app$m (fun_app$n @p_4 @quantifiers_skolemize_10) @quantifiers_skolemize_11) :named @p_29)) :named @p_119) @p_26 (! (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))) :named @p_118)) :named @p_120) (! (not @p_26) :named @p_274)) :rule or_neg :args (1))
(step t50 (cl (not (! (= (! (or (! (not (! (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) :named @p_122)) :named @p_191) (! (not @p_120) :named @p_121)) :named @p_192) (! (or (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))))) @p_121) :named @p_190)) :named @p_211)) (not @p_192) @p_190) :rule equiv_pos2)
(step t51 (cl (! (= @p_191 (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) :named @p_212)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_212 1 5))
(step t52 (cl (= @p_121 @p_121)) :rule refl)
(step t53 (cl @p_211) :rule cong :premises (t51 t52))
(step t54 (cl (not (! (= (! (=> @p_122 (! (not (! (or @p_119 @p_26 (! (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= @quantifiers_skolemize_10 (lCons$ ?v7 ?v5))) (not (= @quantifiers_skolemize_11 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))) :named @p_194)) :named @p_195)) :named @p_196)) :named @p_197) (! (=> @p_122 @p_121) :named @p_193)) :named @p_199)) (not @p_197) @p_193) :rule equiv_pos2)
(step t55 (cl (= @p_122 @p_122)) :rule refl)
(step t56 (cl (= @p_119 @p_119)) :rule refl)
(step t57 (cl (= @p_26 @p_26)) :rule refl)
(anchor :step t58 :args ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$) (:= (?v5 A_llist$) ?v5) (:= (?v6 A_llist$) ?v6) (:= (?v7 A$) ?v7)))
(step t58.t0 (cl (! (= (! (= @quantifiers_skolemize_10 (! (lCons$ ?v7 ?v5) :named @p_152)) :named @p_207) (! (= @p_152 @quantifiers_skolemize_10) :named @p_203)) :named @p_210)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_210 2 6))
(step t58.t1 (cl (= (! (not @p_207) :named @p_208) (! (not @p_203) :named @p_204))) :rule cong :premises (t58.t0))
(step t58.t2 (cl (! (= (! (= @quantifiers_skolemize_11 (! (lCons$ ?v7 ?v6) :named @p_149)) :named @p_205) (! (= @p_149 @quantifiers_skolemize_11) :named @p_201)) :named @p_209)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_209 2 6))
(step t58.t3 (cl (= (! (not @p_205) :named @p_206) (! (not @p_201) :named @p_202))) :rule cong :premises (t58.t2))
(step t58.t4 (cl (= (! (and (not (fun_app$m (fun_app$n @p_4 ?v5) ?v6)) (! (not (! (fun_app$m (! (fun_app$n finite_lprefix$ ?v5) :named @p_143) ?v6) :named @p_144)) :named @p_145)) :named @p_200) @p_200)) :rule refl)
(step t58.t5 (cl (= (or @p_208 @p_206 @p_200) (or @p_204 @p_202 @p_200))) :rule cong :premises (t58.t1 t58.t3 t58.t4))
(step t58 (cl (= (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= @quantifiers_skolemize_10 (lCons$ ?v7 ?v5))) (not (= @quantifiers_skolemize_11 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))) (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))) :rule bind)
(step t59 (cl (= @p_194 @p_118)) :rule cong :premises (t58))
(step t60 (cl (= @p_195 @p_120)) :rule cong :premises (t56 t57 t59))
(step t61 (cl (= @p_196 @p_121)) :rule cong :premises (t60))
(step t62 (cl @p_199) :rule cong :premises (t55 t61))
(step t63 (cl @p_197 @p_122) :rule implies_neg1)
(anchor :step t64)
(assume t64.a0 @p_122)
(step t64.t0 (cl (not (! (= @p_122 @p_196) :named @p_198)) @p_191 @p_196) :rule equiv_pos2)
(anchor :step t64.t1 :args ((:= (?v3 A_llist$) @quantifiers_skolemize_10) (:= (?v4 A_llist$) @quantifiers_skolemize_11)))
(step t64.t1.t0 (cl (= (or (! (not (fun_app$m (fun_app$n @p_4 ?v3) ?v4)) :named @p_106) (! (= lNil$ ?v3) :named @p_138) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))) @p_195)) :rule refl)
(step t64.t1 (cl (= (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))))) @p_195)) :rule sko_forall)
(step t64.t2 (cl @p_198) :rule cong :premises (t64.t1))
(step t64.t3 (cl (! (not (! (or (! (not @p_5) :named @p_125) @p_122 (! (fun_app$m (! (fun_app$n finite_lprefix$ xs$) :named @p_123) ys$) :named @p_124)) :named @p_126)) :named @p_189) @p_125 @p_122 @p_124) :rule or_pos)
(step t64.t4 (cl @p_124 @p_125 @p_122 @p_189) :rule reordering :premises (t64.t3))
(step t64.t5 (cl (not (! (= @p_3 (! (not @p_124) :named @p_187)) :named @p_188)) (not @p_3) @p_187) :rule equiv_pos2)
(step t64.t6 (cl (= lprefix$ finite_lprefix$)) :rule symm :premises (a92))
(step t64.t7 (cl (= xs$ xs$)) :rule refl)
(step t64.t8 (cl (= @p_1 @p_123)) :rule cong :premises (t64.t6 t64.t7))
(step t64.t9 (cl (= ys$ ys$)) :rule refl)
(step t64.t10 (cl (= @p_2 @p_124)) :rule cong :premises (t64.t8 t64.t9))
(step t64.t11 (cl @p_188) :rule cong :premises (t64.t10))
(step t64.t12 (cl @p_187) :rule resolution :premises (t64.t5 t64.t11 a84))
(step t64.t13 (cl (or (! (not (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n finite_lprefix$ ?v1) ?v2)))) :named @p_186) @p_126)) :rule forall_inst :args (@p_4 xs$ ys$))
(step t64.t14 (cl @p_186 @p_126) :rule or :premises (t64.t13))
(step t64.t15 (cl (not (! (= (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))) (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n finite_lprefix$ ?v1) ?v2)))) :named @p_127)) (not (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2)))) (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n finite_lprefix$ ?v1) ?v2)))) :rule equiv_pos2)
(anchor :step t64.t16 :args ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (:= (?v0 A_llist_a_llist_bool_fun_fun$) ?v0) (:= (?v1 A_llist$) ?v1) (:= (?v2 A_llist$) ?v2)))
(step t64.t16.t0 (cl (= (! (fun_app$m (fun_app$n ?v0 ?v1) ?v2) :named @p_132) @p_132)) :rule refl)
(anchor :step t64.t16.t1 :args ((?v3 A_llist$) (?v4 A_llist$) (:= (?v3 A_llist$) ?v3) (:= (?v4 A_llist$) ?v4)))
(step t64.t16.t1.t0 (cl (= (! (fun_app$m (fun_app$n ?v0 ?v3) ?v4) :named @p_139) @p_139)) :rule refl)
(anchor :step t64.t16.t1.t1 :args ((?v5 A_llist$) (:= (?v5 A_llist$) ?v5)))
(step t64.t16.t1.t1.t0 (cl (! (= (! (= ?v3 lNil$) :named @p_184) @p_138) :named @p_185)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_185 2 6))
(step t64.t16.t1.t1.t1 (cl (= (! (= ?v4 ?v5) :named @p_183) @p_183)) :rule refl)
(step t64.t16.t1.t1.t2 (cl (= (and @p_184 @p_183) (and @p_138 @p_183))) :rule cong :premises (t64.t16.t1.t1.t0 t64.t16.t1.t1.t1))
(step t64.t16.t1.t1 (cl (= (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$)) (and (= lNil$ ?v3) (= ?v4 ?v5))))) :rule bind)
(step t64.t16.t1.t2 (cl (! (= (exists ((?v5 A_llist$)) (and (= lNil$ ?v3) (= ?v4 ?v5))) (! (not (forall ((?v5 A_llist$)) (not (and (= lNil$ ?v3) (= ?v4 ?v5))))) :named @p_170)) :named @p_182)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_182 13 6))
(step t64.t16.t1.t3 (cl (! (= (forall ((?v5 A_llist$)) (not (and (= lNil$ ?v3) (= ?v4 ?v5)))) (forall ((?v5 A_llist$)) (or (not (= lNil$ ?v3)) (not (= ?v4 ?v5))))) :named @p_181)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_181 13 6))
(step t64.t16.t1.t4 (cl (! (= (forall ((?v5 A_llist$)) (or (not (= lNil$ ?v3)) (not (= ?v4 ?v5)))) (! (or (! (not @p_138) :named @p_171) (forall ((?v5 A_llist$)) (not (= ?v4 ?v5)))) :named @p_174)) :named @p_180)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_180 13 6))
(step t64.t16.t1.t5 (cl (= @p_171 @p_171)) :rule refl)
(step t64.t16.t1.t6 (cl (! (= (forall ((?v5 A_llist$)) (not (= ?v4 ?v5))) (! (not (! (= ?v4 ?v4) :named @p_77)) :named @p_177)) :named @p_179)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_179 13 6))
(step t64.t16.t1.t7 (cl (! (= @p_77 true) :named @p_178)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_178 2 5))
(step t64.t16.t1.t8 (cl (= @p_177 (! (not true) :named @p_50))) :rule cong :premises (t64.t16.t1.t7))
(step t64.t16.t1.t9 (cl (! (= @p_50 false) :named @p_51)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_51 1 6))
(step t64.t16.t1.t10 (cl (= @p_177 false)) :rule trans :premises (t64.t16.t1.t8 t64.t16.t1.t9))
(step t64.t16.t1.t11 (cl (= (forall ((?v5 A_llist$)) (not (= ?v4 ?v5))) false)) :rule trans :premises (t64.t16.t1.t6 t64.t16.t1.t10))
(step t64.t16.t1.t12 (cl (= @p_174 (! (or @p_171 false) :named @p_175))) :rule cong :premises (t64.t16.t1.t5 t64.t16.t1.t11))
(step t64.t16.t1.t13 (cl (! (= @p_175 @p_171) :named @p_176)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_176 1 6))
(step t64.t16.t1.t14 (cl (= @p_174 @p_171)) :rule trans :premises (t64.t16.t1.t12 t64.t16.t1.t13))
(step t64.t16.t1.t15 (cl (= (forall ((?v5 A_llist$)) (or (not (= lNil$ ?v3)) (not (= ?v4 ?v5)))) @p_171)) :rule trans :premises (t64.t16.t1.t4 t64.t16.t1.t14))
(step t64.t16.t1.t16 (cl (= (forall ((?v5 A_llist$)) (not (and (= lNil$ ?v3) (= ?v4 ?v5)))) @p_171)) :rule trans :premises (t64.t16.t1.t3 t64.t16.t1.t15))
(step t64.t16.t1.t17 (cl (= @p_170 (! (not @p_171) :named @p_172))) :rule cong :premises (t64.t16.t1.t16))
(step t64.t16.t1.t18 (cl (! (= @p_172 @p_138) :named @p_173)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_173 1 6))
(step t64.t16.t1.t19 (cl (= @p_170 @p_138)) :rule trans :premises (t64.t16.t1.t17 t64.t16.t1.t18))
(step t64.t16.t1.t20 (cl (= (exists ((?v5 A_llist$)) (and (= lNil$ ?v3) (= ?v4 ?v5))) @p_138)) :rule trans :premises (t64.t16.t1.t2 t64.t16.t1.t19))
(step t64.t16.t1.t21 (cl (= (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) @p_138)) :rule trans :premises (t64.t16.t1.t1 t64.t16.t1.t20))
(anchor :step t64.t16.t1.t22 :args ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$) (:= (?v5 A_llist$) ?v5) (:= (?v6 A_llist$) ?v6) (:= (?v7 A$) ?v7)))
(step t64.t16.t1.t22.t0 (cl (! (= (and (! (= ?v3 @p_152) :named @p_153) (and (! (= ?v4 @p_149) :named @p_150) (! (or (! (fun_app$m (fun_app$n ?v0 ?v5) ?v6) :named @p_146) (! (fun_app$m (! (fun_app$n lprefix$ ?v5) :named @p_155) ?v6) :named @p_156)) :named @p_168))) (and @p_153 @p_150 @p_168)) :named @p_169)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_169 1 5))
(step t64.t16.t1.t22 (cl (= (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))) :rule bind)
(step t64.t16.t1.t23 (cl (! (= (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))) (! (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (not (and (= ?v3 (lCons$ ?v7 ?v5)) (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))) :named @p_165)) :named @p_167)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_167 13 6))
(step t64.t16.t1.t24 (cl (! (= (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (not (and (= ?v3 (lCons$ ?v7 ?v5)) (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))) (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))) :named @p_166)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_166 13 6))
(step t64.t16.t1.t25 (cl (= @p_165 (! (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))) :named @p_141))) :rule cong :premises (t64.t16.t1.t24))
(step t64.t16.t1.t26 (cl (= (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))) @p_141)) :rule trans :premises (t64.t16.t1.t23 t64.t16.t1.t25))
(step t64.t16.t1.t27 (cl (= (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))) @p_141)) :rule trans :premises (t64.t16.t1.t22 t64.t16.t1.t26))
(step t64.t16.t1.t28 (cl (= (! (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))) :named @p_164) (! (or @p_138 @p_141) :named @p_163))) :rule cong :premises (t64.t16.t1.t21 t64.t16.t1.t27))
(step t64.t16.t1.t29 (cl (= (=> @p_139 @p_164) (=> @p_139 @p_163))) :rule cong :premises (t64.t16.t1.t0 t64.t16.t1.t28))
(step t64.t16.t1 (cl (= (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))))) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))))) :rule bind)
(step t64.t16.t2 (cl (! (= (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) :named @p_162)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_162 13 6))
(step t64.t16.t3 (cl (= (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))))) (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))))))) :rule trans :premises (t64.t16.t1 t64.t16.t2))
(step t64.t16.t4 (cl (= (! (and @p_132 (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) :named @p_161) (! (and @p_132 (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) :named @p_160))) :rule cong :premises (t64.t16.t0 t64.t16.t3))
(step t64.t16.t5 (cl (= (! (fun_app$m (! (fun_app$n lprefix$ ?v1) :named @p_134) ?v2) :named @p_135) @p_135)) :rule refl)
(step t64.t16.t6 (cl (= (=> @p_161 @p_135) (=> @p_160 @p_135))) :rule cong :premises (t64.t16.t4 t64.t16.t5))
(step t64.t16 (cl (= (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))) (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))))) :rule bind)
(step t64.t17 (cl (! (= (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))) (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2)))) :named @p_159)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_159 13 6))
(step t64.t18 (cl (= (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))) (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))))) :rule trans :premises (t64.t16 t64.t17))
(anchor :step t64.t19 :args ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (:= (?v0 A_llist_a_llist_bool_fun_fun$) ?v0) (:= (?v1 A_llist$) ?v1) (:= (?v2 A_llist$) ?v2)))
(step t64.t19.t0 (cl (= (! (not @p_132) :named @p_133) @p_133)) :rule refl)
(anchor :step t64.t19.t1 :args ((?v3 A_llist$) (?v4 A_llist$) (:= (?v3 A_llist$) ?v3) (:= (?v4 A_llist$) ?v4)))
(step t64.t19.t1.t0 (cl (= (! (not @p_139) :named @p_140) @p_140)) :rule refl)
(step t64.t19.t1.t1 (cl (= @p_138 @p_138)) :rule refl)
(anchor :step t64.t19.t1.t2 :args ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$) (:= (?v5 A_llist$) ?v5) (:= (?v6 A_llist$) ?v6) (:= (?v7 A$) ?v7)))
(step t64.t19.t1.t2.t0 (cl (= (! (not @p_153) :named @p_154) @p_154)) :rule refl)
(step t64.t19.t1.t2.t1 (cl (= (! (not @p_150) :named @p_151) @p_151)) :rule refl)
(step t64.t19.t1.t2.t2 (cl (= (! (not @p_146) :named @p_147) @p_147)) :rule refl)
(step t64.t19.t1.t2.t3 (cl (! (= ?v5 ?v5) :named @p_66)) :rule refl)
(step t64.t19.t1.t2.t4 (cl (= @p_155 @p_143)) :rule cong :premises (t64.t6 t64.t19.t1.t2.t3))
(step t64.t19.t1.t2.t5 (cl (! (= ?v6 ?v6) :named @p_67)) :rule refl)
(step t64.t19.t1.t2.t6 (cl (= @p_156 @p_144)) :rule cong :premises (t64.t19.t1.t2.t4 t64.t19.t1.t2.t5))
(step t64.t19.t1.t2.t7 (cl (= (! (not @p_156) :named @p_157) @p_145)) :rule cong :premises (t64.t19.t1.t2.t6))
(step t64.t19.t1.t2.t8 (cl (= (! (and @p_147 @p_157) :named @p_158) (! (and @p_147 @p_145) :named @p_148))) :rule cong :premises (t64.t19.t1.t2.t2 t64.t19.t1.t2.t7))
(step t64.t19.t1.t2.t9 (cl (= (or @p_154 @p_151 @p_158) (or @p_154 @p_151 @p_148))) :rule cong :premises (t64.t19.t1.t2.t0 t64.t19.t1.t2.t1 t64.t19.t1.t2.t8))
(step t64.t19.t1.t2 (cl (= (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))) (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))) :rule bind)
(step t64.t19.t1.t3 (cl (= @p_141 (! (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))) :named @p_137))) :rule cong :premises (t64.t19.t1.t2))
(step t64.t19.t1.t4 (cl (= (or @p_140 @p_138 @p_141) (or @p_140 @p_138 @p_137))) :rule cong :premises (t64.t19.t1.t0 t64.t19.t1.t1 t64.t19.t1.t3))
(step t64.t19.t1 (cl (= (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))))) (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))))))) :rule bind)
(step t64.t19.t2 (cl (= (! (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) :named @p_136) (! (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) :named @p_131))) :rule cong :premises (t64.t19.t1))
(step t64.t19.t3 (cl (! (= ?v1 ?v1) :named @p_32)) :rule refl)
(step t64.t19.t4 (cl (= @p_134 (! (fun_app$n finite_lprefix$ ?v1) :named @p_129))) :rule cong :premises (t64.t6 t64.t19.t3))
(step t64.t19.t5 (cl (! (= ?v2 ?v2) :named @p_33)) :rule refl)
(step t64.t19.t6 (cl (= @p_135 (! (fun_app$m @p_129 ?v2) :named @p_130))) :rule cong :premises (t64.t19.t4 t64.t19.t5))
(step t64.t19.t7 (cl (= (or @p_133 @p_136 @p_135) (or @p_133 @p_131 @p_130))) :rule cong :premises (t64.t19.t0 t64.t19.t2 t64.t19.t6))
(step t64.t19 (cl (= (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))) (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n finite_lprefix$ ?v1) ?v2))))) :rule bind)
(step t64.t20 (cl @p_127) :rule trans :premises (t64.t18 t64.t19))
(step t64.t21 (cl (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n finite_lprefix$ ?v1) ?v2)))) :rule resolution :premises (t64.t15 t64.t20 a176))
(step t64.t22 (cl @p_126) :rule resolution :premises (t64.t14 t64.t21))
(step t64.t23 (cl @p_122) :rule resolution :premises (t64.t4 t64.t12 a90 t64.t22))
(step t64.t24 (cl @p_196) :rule resolution :premises (t64.t0 t64.t2 t64.t23))
(step t64 (cl @p_191 @p_196) :rule subproof :discharge (t64.a0))
(step t65 (cl @p_197 @p_196) :rule resolution :premises (t63 t64))
(step t66 (cl @p_197 (not @p_196)) :rule implies_neg2)
(step t67 (cl @p_197 @p_197) :rule resolution :premises (t65 t66))
(step t68 (cl @p_197) :rule contraction :premises (t67))
(step t69 (cl @p_193) :rule resolution :premises (t54 t62 t68))
(step t70 (cl @p_191 @p_121) :rule implies :premises (t69))
(step t71 (cl @p_192 (not @p_191)) :rule or_neg :args (0))
(step t72 (cl @p_192 (not @p_121)) :rule or_neg :args (1))
(step t73 (cl @p_192 @p_192) :rule resolution :premises (t70 t71 t72))
(step t74 (cl @p_192) :rule contraction :premises (t73))
(step t75 (cl @p_190) :rule resolution :premises (t50 t53 t74))
(step t76 (cl (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))))) @p_121) :rule or :premises (t75))
(step t77 (cl @p_189 @p_125 @p_122 @p_124) :rule or_pos)
(step t78 (cl @p_124 @p_125 @p_122 @p_189) :rule reordering :premises (t77))
(step t79 (cl (not @p_188) (not @p_3) @p_187) :rule equiv_pos2)
(step t80 (cl (= lprefix$ finite_lprefix$)) :rule symm :premises (a92))
(step t81 (cl (= xs$ xs$)) :rule refl)
(step t82 (cl (= @p_1 @p_123)) :rule cong :premises (t80 t81))
(step t83 (cl (= ys$ ys$)) :rule refl)
(step t84 (cl (= @p_2 @p_124)) :rule cong :premises (t82 t83))
(step t85 (cl @p_188) :rule cong :premises (t84))
(step t86 (cl @p_187) :rule resolution :premises (t79 t85 a84))
(step t87 (cl (or @p_186 @p_126)) :rule forall_inst :args (@p_4 xs$ ys$))
(step t88 (cl @p_186 @p_126) :rule or :premises (t87))
(step t89 (cl (not @p_127) (not (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2)))) (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n finite_lprefix$ ?v1) ?v2)))) :rule equiv_pos2)
(anchor :step t90 :args ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (:= (?v0 A_llist_a_llist_bool_fun_fun$) ?v0) (:= (?v1 A_llist$) ?v1) (:= (?v2 A_llist$) ?v2)))
(step t90.t0 (cl (= @p_132 @p_132)) :rule refl)
(anchor :step t90.t1 :args ((?v3 A_llist$) (?v4 A_llist$) (:= (?v3 A_llist$) ?v3) (:= (?v4 A_llist$) ?v4)))
(step t90.t1.t0 (cl (= @p_139 @p_139)) :rule refl)
(anchor :step t90.t1.t1 :args ((?v5 A_llist$) (:= (?v5 A_llist$) ?v5)))
(step t90.t1.t1.t0 (cl @p_185) :rule hole :args ("TRUST_THEORY_REWRITE" @p_185 2 6))
(step t90.t1.t1.t1 (cl (= @p_183 @p_183)) :rule refl)
(step t90.t1.t1.t2 (cl (= (and @p_184 @p_183) (and @p_138 @p_183))) :rule cong :premises (t90.t1.t1.t0 t90.t1.t1.t1))
(step t90.t1.t1 (cl (= (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$)) (and (= lNil$ ?v3) (= ?v4 ?v5))))) :rule bind)
(step t90.t1.t2 (cl @p_182) :rule hole :args ("TRUST_THEORY_REWRITE" @p_182 13 6))
(step t90.t1.t3 (cl @p_181) :rule hole :args ("TRUST_THEORY_REWRITE" @p_181 13 6))
(step t90.t1.t4 (cl @p_180) :rule hole :args ("TRUST_THEORY_REWRITE" @p_180 13 6))
(step t90.t1.t5 (cl (= @p_171 @p_171)) :rule refl)
(step t90.t1.t6 (cl @p_179) :rule hole :args ("TRUST_THEORY_REWRITE" @p_179 13 6))
(step t90.t1.t7 (cl @p_178) :rule hole :args ("TRUST_THEORY_REWRITE" @p_178 2 5))
(step t90.t1.t8 (cl (= @p_177 @p_50)) :rule cong :premises (t90.t1.t7))
(step t90.t1.t9 (cl @p_51) :rule hole :args ("TRUST_THEORY_REWRITE" @p_51 1 6))
(step t90.t1.t10 (cl (= @p_177 false)) :rule trans :premises (t90.t1.t8 t90.t1.t9))
(step t90.t1.t11 (cl (= (forall ((?v5 A_llist$)) (not (= ?v4 ?v5))) false)) :rule trans :premises (t90.t1.t6 t90.t1.t10))
(step t90.t1.t12 (cl (= @p_174 @p_175)) :rule cong :premises (t90.t1.t5 t90.t1.t11))
(step t90.t1.t13 (cl @p_176) :rule hole :args ("TRUST_THEORY_REWRITE" @p_176 1 6))
(step t90.t1.t14 (cl (= @p_174 @p_171)) :rule trans :premises (t90.t1.t12 t90.t1.t13))
(step t90.t1.t15 (cl (= (forall ((?v5 A_llist$)) (or (not (= lNil$ ?v3)) (not (= ?v4 ?v5)))) @p_171)) :rule trans :premises (t90.t1.t4 t90.t1.t14))
(step t90.t1.t16 (cl (= (forall ((?v5 A_llist$)) (not (and (= lNil$ ?v3) (= ?v4 ?v5)))) @p_171)) :rule trans :premises (t90.t1.t3 t90.t1.t15))
(step t90.t1.t17 (cl (= @p_170 @p_172)) :rule cong :premises (t90.t1.t16))
(step t90.t1.t18 (cl @p_173) :rule hole :args ("TRUST_THEORY_REWRITE" @p_173 1 6))
(step t90.t1.t19 (cl (= @p_170 @p_138)) :rule trans :premises (t90.t1.t17 t90.t1.t18))
(step t90.t1.t20 (cl (= (exists ((?v5 A_llist$)) (and (= lNil$ ?v3) (= ?v4 ?v5))) @p_138)) :rule trans :premises (t90.t1.t2 t90.t1.t19))
(step t90.t1.t21 (cl (= (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) @p_138)) :rule trans :premises (t90.t1.t1 t90.t1.t20))
(anchor :step t90.t1.t22 :args ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$) (:= (?v5 A_llist$) ?v5) (:= (?v6 A_llist$) ?v6) (:= (?v7 A$) ?v7)))
(step t90.t1.t22.t0 (cl @p_169) :rule hole :args ("TRUST_THEORY_REWRITE" @p_169 1 5))
(step t90.t1.t22 (cl (= (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))) :rule bind)
(step t90.t1.t23 (cl @p_167) :rule hole :args ("TRUST_THEORY_REWRITE" @p_167 13 6))
(step t90.t1.t24 (cl @p_166) :rule hole :args ("TRUST_THEORY_REWRITE" @p_166 13 6))
(step t90.t1.t25 (cl (= @p_165 @p_141)) :rule cong :premises (t90.t1.t24))
(step t90.t1.t26 (cl (= (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))) @p_141)) :rule trans :premises (t90.t1.t23 t90.t1.t25))
(step t90.t1.t27 (cl (= (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))) @p_141)) :rule trans :premises (t90.t1.t22 t90.t1.t26))
(step t90.t1.t28 (cl (= @p_164 @p_163)) :rule cong :premises (t90.t1.t21 t90.t1.t27))
(step t90.t1.t29 (cl (= (=> @p_139 @p_164) (=> @p_139 @p_163))) :rule cong :premises (t90.t1.t0 t90.t1.t28))
(step t90.t1 (cl (= (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))))) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))))) :rule bind)
(step t90.t2 (cl @p_162) :rule hole :args ("TRUST_THEORY_REWRITE" @p_162 13 6))
(step t90.t3 (cl (= (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))))) (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))))))) :rule trans :premises (t90.t1 t90.t2))
(step t90.t4 (cl (= @p_161 @p_160)) :rule cong :premises (t90.t0 t90.t3))
(step t90.t5 (cl (= @p_135 @p_135)) :rule refl)
(step t90.t6 (cl (= (=> @p_161 @p_135) (=> @p_160 @p_135))) :rule cong :premises (t90.t4 t90.t5))
(step t90 (cl (= (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))) (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))))) :rule bind)
(step t91 (cl @p_159) :rule hole :args ("TRUST_THEORY_REWRITE" @p_159 13 6))
(step t92 (cl (= (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (fun_app$m (fun_app$n ?v0 ?v1) ?v2) (forall ((?v3 A_llist$) (?v4 A_llist$)) (=> (fun_app$m (fun_app$n ?v0 ?v3) ?v4) (or (exists ((?v5 A_llist$)) (and (= ?v3 lNil$) (= ?v4 ?v5))) (exists ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (and (= ?v3 (lCons$ ?v7 ?v5)) (and (= ?v4 (lCons$ ?v7 ?v6)) (or (fun_app$m (fun_app$n ?v0 ?v5) ?v6) (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))) (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))))) :rule trans :premises (t90 t91))
(anchor :step t93 :args ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (:= (?v0 A_llist_a_llist_bool_fun_fun$) ?v0) (:= (?v1 A_llist$) ?v1) (:= (?v2 A_llist$) ?v2)))
(step t93.t0 (cl (= @p_133 @p_133)) :rule refl)
(anchor :step t93.t1 :args ((?v3 A_llist$) (?v4 A_llist$) (:= (?v3 A_llist$) ?v3) (:= (?v4 A_llist$) ?v4)))
(step t93.t1.t0 (cl (= @p_140 @p_140)) :rule refl)
(step t93.t1.t1 (cl (= @p_138 @p_138)) :rule refl)
(anchor :step t93.t1.t2 :args ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$) (:= (?v5 A_llist$) ?v5) (:= (?v6 A_llist$) ?v6) (:= (?v7 A$) ?v7)))
(step t93.t1.t2.t0 (cl (= @p_154 @p_154)) :rule refl)
(step t93.t1.t2.t1 (cl (= @p_151 @p_151)) :rule refl)
(step t93.t1.t2.t2 (cl (= @p_147 @p_147)) :rule refl)
(step t93.t1.t2.t3 (cl @p_66) :rule refl)
(step t93.t1.t2.t4 (cl (= @p_155 @p_143)) :rule cong :premises (t80 t93.t1.t2.t3))
(step t93.t1.t2.t5 (cl @p_67) :rule refl)
(step t93.t1.t2.t6 (cl (= @p_156 @p_144)) :rule cong :premises (t93.t1.t2.t4 t93.t1.t2.t5))
(step t93.t1.t2.t7 (cl (= @p_157 @p_145)) :rule cong :premises (t93.t1.t2.t6))
(step t93.t1.t2.t8 (cl (= @p_158 @p_148)) :rule cong :premises (t93.t1.t2.t2 t93.t1.t2.t7))
(step t93.t1.t2.t9 (cl (= (or @p_154 @p_151 @p_158) (or @p_154 @p_151 @p_148))) :rule cong :premises (t93.t1.t2.t0 t93.t1.t2.t1 t93.t1.t2.t8))
(step t93.t1.t2 (cl (= (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))) (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))) :rule bind)
(step t93.t1.t3 (cl (= @p_141 @p_137)) :rule cong :premises (t93.t1.t2))
(step t93.t1.t4 (cl (= (or @p_140 @p_138 @p_141) (or @p_140 @p_138 @p_137))) :rule cong :premises (t93.t1.t0 t93.t1.t1 t93.t1.t3))
(step t93.t1 (cl (= (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6)))))))) (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))))))) :rule bind)
(step t93.t2 (cl (= @p_136 @p_131)) :rule cong :premises (t93.t1))
(step t93.t3 (cl @p_32) :rule refl)
(step t93.t4 (cl (= @p_134 @p_129)) :rule cong :premises (t80 t93.t3))
(step t93.t5 (cl @p_33) :rule refl)
(step t93.t6 (cl (= @p_135 @p_130)) :rule cong :premises (t93.t4 t93.t5))
(step t93.t7 (cl (= (or @p_133 @p_136 @p_135) (or @p_133 @p_131 @p_130))) :rule cong :premises (t93.t0 t93.t2 t93.t6))
(step t93 (cl (= (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n lprefix$ ?v1) ?v2))) (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n finite_lprefix$ ?v1) ?v2))))) :rule bind)
(step t94 (cl @p_127) :rule trans :premises (t92 t93))
(step t95 (cl (forall ((?v0 A_llist_a_llist_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v1) ?v2)) (not (forall ((?v3 A_llist$) (?v4 A_llist$)) (or (not (fun_app$m (fun_app$n ?v0 ?v3) ?v4)) (= lNil$ ?v3) (not (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= ?v3 (lCons$ ?v7 ?v5))) (not (= ?v4 (lCons$ ?v7 ?v6))) (and (not (fun_app$m (fun_app$n ?v0 ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))))) (fun_app$m (fun_app$n finite_lprefix$ ?v1) ?v2)))) :rule resolution :premises (t89 t94 a176))
(step t96 (cl @p_126) :rule resolution :premises (t88 t95))
(step t97 (cl @p_122) :rule resolution :premises (t78 t86 a90 t96))
(step t98 (cl @p_121) :rule resolution :premises (t76 t97))
(step t99 (cl @p_274) :rule resolution :premises (t49 t98))
(step t100 (cl (not (! (= (! (or (! (not @p_27) :named @p_264) (! (not (! (or (! (not (! (= @quantifiers_skolemize_10 (! (lCons$ @quantifiers_skolemize_32 @quantifiers_skolemize_30) :named @p_224)) :named @p_225)) :named @p_226) (! (not (! (= @quantifiers_skolemize_11 (! (lCons$ @quantifiers_skolemize_32 @quantifiers_skolemize_31) :named @p_221)) :named @p_222)) :named @p_223) (! (not (! (fun_app$m (fun_app$n @p_4 @quantifiers_skolemize_30) @quantifiers_skolemize_31) :named @p_219)) :named @p_220)) :named @p_227)) :named @p_231)) :named @p_265) (! (or (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= (lCons$ ?v5 ?v3) @quantifiers_skolemize_10)) (not (= (lCons$ ?v5 ?v4) @quantifiers_skolemize_11)) (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)))) @p_231) :named @p_263)) :named @p_272)) (not @p_265) @p_263) :rule equiv_pos2)
(step t101 (cl (! (= @p_264 (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= (lCons$ ?v5 ?v3) @quantifiers_skolemize_10)) (not (= (lCons$ ?v5 ?v4) @quantifiers_skolemize_11)) (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4))))) :named @p_273)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_273 1 5))
(step t102 (cl (= @p_231 @p_231)) :rule refl)
(step t103 (cl @p_272) :rule cong :premises (t101 t102))
(step t104 (cl (not (! (= (! (=> @p_27 (! (not (! (or (! (not (! (= @p_224 @quantifiers_skolemize_10) :named @p_254)) :named @p_255) (! (not (! (= @p_221 @quantifiers_skolemize_11) :named @p_252)) :named @p_253) @p_220) :named @p_267)) :named @p_268)) :named @p_269) (! (=> @p_27 @p_231) :named @p_266)) :named @p_271)) (not @p_269) @p_266) :rule equiv_pos2)
(step t105 (cl (= @p_27 @p_27)) :rule refl)
(step t106 (cl (! (= @p_254 @p_225) :named @p_260)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_260 2 6))
(step t107 (cl (= @p_255 @p_226)) :rule cong :premises (t106))
(step t108 (cl (! (= @p_252 @p_222) :named @p_259)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_259 2 6))
(step t109 (cl (= @p_253 @p_223)) :rule cong :premises (t108))
(step t110 (cl (= @p_220 @p_220)) :rule refl)
(step t111 (cl (= @p_267 @p_227)) :rule cong :premises (t107 t109 t110))
(step t112 (cl (= @p_268 @p_231)) :rule cong :premises (t111))
(step t113 (cl @p_271) :rule cong :premises (t105 t112))
(step t114 (cl @p_269 @p_27) :rule implies_neg1)
(anchor :step t115)
(assume t115.a0 @p_27)
(step t115.t0 (cl (not (! (= @p_27 @p_268) :named @p_270)) @p_264 @p_268) :rule equiv_pos2)
(anchor :step t115.t1 :args ((:= (?v3 A_llist$) @quantifiers_skolemize_30) (:= (?v4 A_llist$) @quantifiers_skolemize_31) (:= (?v5 A$) @quantifiers_skolemize_32)))
(step t115.t1.t0 (cl (= (! (or (! (not (! (= (! (lCons$ ?v5 ?v3) :named @p_82) @quantifiers_skolemize_10) :named @p_109)) :named @p_110) (! (not (! (= (! (lCons$ ?v5 ?v4) :named @p_80) @quantifiers_skolemize_11) :named @p_107)) :named @p_108) @p_106) :named @p_111) @p_267)) :rule refl)
(step t115.t1 (cl (= (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= (lCons$ ?v5 ?v3) @quantifiers_skolemize_10)) (not (= (lCons$ ?v5 ?v4) @quantifiers_skolemize_11)) (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)))) @p_267)) :rule sko_forall)
(step t115.t2 (cl @p_270) :rule cong :premises (t115.t1))
(step t115.t3 (cl @p_268) :rule resolution :premises (t115.t0 t115.t2 t115.a0))
(step t115 (cl @p_264 @p_268) :rule subproof :discharge (t115.a0))
(step t116 (cl @p_269 @p_268) :rule resolution :premises (t114 t115))
(step t117 (cl @p_269 (not @p_268)) :rule implies_neg2)
(step t118 (cl @p_269 @p_269) :rule resolution :premises (t116 t117))
(step t119 (cl @p_269) :rule contraction :premises (t118))
(step t120 (cl @p_266) :rule resolution :premises (t104 t113 t119))
(step t121 (cl @p_264 @p_231) :rule implies :premises (t120))
(step t122 (cl @p_265 (not @p_264)) :rule or_neg :args (0))
(step t123 (cl @p_265 (not @p_231)) :rule or_neg :args (1))
(step t124 (cl @p_265 @p_265) :rule resolution :premises (t121 t122 t123))
(step t125 (cl @p_265) :rule contraction :premises (t124))
(step t126 (cl @p_263) :rule resolution :premises (t100 t103 t125))
(step t127 (cl (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= (lCons$ ?v5 ?v3) @quantifiers_skolemize_10)) (not (= (lCons$ ?v5 ?v4) @quantifiers_skolemize_11)) (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)))) @p_231) :rule or :premises (t126))
(step t128 (cl (! (not (! (and @p_220 (not (fun_app$m (fun_app$n finite_lprefix$ @quantifiers_skolemize_30) @quantifiers_skolemize_31))) :named @p_244)) :named @p_262) @p_220) :rule and_pos :args (0))
(step t129 (cl @p_220 @p_262) :rule reordering :premises (t128))
(step t130 (cl (! (not (! (or @p_226 @p_223 @p_244) :named @p_245)) :named @p_261) @p_226 @p_223 @p_244) :rule or_pos)
(step t131 (cl @p_226 @p_223 @p_244 @p_261) :rule reordering :premises (t130))
(step t132 (cl (not (! (= (! (=> (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))) (! (or @p_255 @p_253 @p_244) :named @p_256)) :named @p_257) (! (=> (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))) @p_245) :named @p_251)) :named @p_258)) (not @p_257) @p_251) :rule equiv_pos2)
(step t133 (cl (= (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))) (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))) :rule refl)
(step t134 (cl (= @p_244 @p_244)) :rule refl)
(step t135 (cl (= @p_256 @p_245)) :rule cong :premises (t107 t109 t134))
(step t136 (cl @p_258) :rule cong :premises (t133 t135))
(step t137 (cl @p_257 (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))) :rule implies_neg1)
(anchor :step t138)
(assume t138.a0 (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))))
(step t138.t0 (cl (or @p_118 @p_256)) :rule forall_inst :args (@quantifiers_skolemize_30 @quantifiers_skolemize_31 @quantifiers_skolemize_32))
(step t138.t1 (cl @p_118 @p_256) :rule or :premises (t138.t0))
(step t138.t2 (cl (not (! (= (! (or @p_120 (! (not @p_118) :named @p_247)) :named @p_248) (! (or @p_120 (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))) :named @p_246)) :named @p_249)) (not @p_248) @p_246) :rule equiv_pos2)
(step t138.t3 (cl (= @p_120 @p_120)) :rule refl)
(step t138.t4 (cl (! (= @p_247 (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))) :named @p_250)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_250 1 5))
(step t138.t5 (cl @p_249) :rule cong :premises (t138.t3 t138.t4))
(step t138.t6 (cl @p_120 @p_247) :rule or_neg :args (2))
(step t138.t7 (cl @p_248 @p_121) :rule or_neg :args (0))
(step t138.t8 (cl @p_248 (not @p_247)) :rule or_neg :args (1))
(step t138.t9 (cl @p_248 @p_248) :rule resolution :premises (t138.t6 t138.t7 t138.t8))
(step t138.t10 (cl @p_248) :rule contraction :premises (t138.t9))
(step t138.t11 (cl @p_246) :rule resolution :premises (t138.t2 t138.t5 t138.t10))
(step t138.t12 (cl @p_120 (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))) :rule or :premises (t138.t11))
(step t138.t13 (cl (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))) @p_120) :rule reordering :premises (t138.t12))
(step t138.t14 (cl (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))) :rule resolution :premises (t138.t13 t98))
(step t138.t15 (cl @p_256) :rule resolution :premises (t138.t1 t138.t14))
(step t138 (cl @p_118 @p_256) :rule subproof :discharge (t138.a0))
(step t139 (cl @p_257 @p_256) :rule resolution :premises (t137 t138))
(step t140 (cl @p_257 (not @p_256)) :rule implies_neg2)
(step t141 (cl @p_257 @p_257) :rule resolution :premises (t139 t140))
(step t142 (cl @p_257) :rule contraction :premises (t141))
(step t143 (cl @p_251) :rule resolution :premises (t132 t136 t142))
(step t144 (cl @p_118 @p_245) :rule implies :premises (t143))
(step t145 (cl (not @p_249) (not @p_248) @p_246) :rule equiv_pos2)
(step t146 (cl (= @p_120 @p_120)) :rule refl)
(step t147 (cl @p_250) :rule hole :args ("TRUST_THEORY_REWRITE" @p_250 1 5))
(step t148 (cl @p_249) :rule cong :premises (t146 t147))
(step t149 (cl @p_120 @p_247) :rule or_neg :args (2))
(step t150 (cl @p_248 @p_121) :rule or_neg :args (0))
(step t151 (cl @p_248 (not @p_247)) :rule or_neg :args (1))
(step t152 (cl @p_248 @p_248) :rule resolution :premises (t149 t150 t151))
(step t153 (cl @p_248) :rule contraction :premises (t152))
(step t154 (cl @p_246) :rule resolution :premises (t145 t148 t153))
(step t155 (cl @p_120 (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))) :rule or :premises (t154))
(step t156 (cl (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6))))) @p_120) :rule reordering :premises (t155))
(step t157 (cl (forall ((?v5 A_llist$) (?v6 A_llist$) (?v7 A$)) (or (not (= (lCons$ ?v7 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v7 ?v6) @quantifiers_skolemize_11)) (and (not (fun_app$m (fun_app$n (llexord$ uu$) ?v5) ?v6)) (not (fun_app$m (fun_app$n finite_lprefix$ ?v5) ?v6)))))) :rule resolution :premises (t156 t98))
(step t158 (cl @p_245) :rule resolution :premises (t144 t157))
(step t159 (cl (not (! (= (! (or @p_227 (! (not @p_220) :named @p_240)) :named @p_241) (! (or @p_227 @p_219) :named @p_239)) :named @p_242)) (not @p_241) @p_239) :rule equiv_pos2)
(step t160 (cl (= @p_227 @p_227)) :rule refl)
(step t161 (cl (! (= @p_240 @p_219) :named @p_243)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_243 1 5))
(step t162 (cl @p_242) :rule cong :premises (t160 t161))
(step t163 (cl @p_227 @p_240) :rule or_neg :args (2))
(step t164 (cl @p_241 @p_231) :rule or_neg :args (0))
(step t165 (cl @p_241 (not @p_240)) :rule or_neg :args (1))
(step t166 (cl @p_241 @p_241) :rule resolution :premises (t163 t164 t165))
(step t167 (cl @p_241) :rule contraction :premises (t166))
(step t168 (cl @p_239) :rule resolution :premises (t159 t162 t167))
(step t169 (cl @p_227 @p_219) :rule or :premises (t168))
(step t170 (cl @p_219 @p_227) :rule reordering :premises (t169))
(step t171 (cl (not (! (= (! (or @p_227 (! (not @p_223) :named @p_235)) :named @p_236) (! (or @p_227 @p_222) :named @p_234)) :named @p_237)) (not @p_236) @p_234) :rule equiv_pos2)
(step t172 (cl (! (= @p_235 @p_222) :named @p_238)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_238 1 5))
(step t173 (cl @p_237) :rule cong :premises (t160 t172))
(step t174 (cl @p_227 @p_235) :rule or_neg :args (1))
(step t175 (cl @p_236 @p_231) :rule or_neg :args (0))
(step t176 (cl @p_236 (not @p_235)) :rule or_neg :args (1))
(step t177 (cl @p_236 @p_236) :rule resolution :premises (t174 t175 t176))
(step t178 (cl @p_236) :rule contraction :premises (t177))
(step t179 (cl @p_234) :rule resolution :premises (t171 t173 t178))
(step t180 (cl @p_227 @p_222) :rule or :premises (t179))
(step t181 (cl @p_222 @p_227) :rule reordering :premises (t180))
(step t182 (cl (not (! (= (! (or @p_227 (! (not @p_226) :named @p_229)) :named @p_230) (! (or @p_227 @p_225) :named @p_228)) :named @p_232)) (not @p_230) @p_228) :rule equiv_pos2)
(step t183 (cl (! (= @p_229 @p_225) :named @p_233)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_233 1 5))
(step t184 (cl @p_232) :rule cong :premises (t160 t183))
(step t185 (cl @p_227 @p_229) :rule or_neg :args (0))
(step t186 (cl @p_230 @p_231) :rule or_neg :args (0))
(step t187 (cl @p_230 (not @p_229)) :rule or_neg :args (1))
(step t188 (cl @p_230 @p_230) :rule resolution :premises (t185 t186 t187))
(step t189 (cl @p_230) :rule contraction :premises (t188))
(step t190 (cl @p_228) :rule resolution :premises (t182 t184 t189))
(step t191 (cl @p_227 @p_225) :rule or :premises (t190))
(step t192 (cl @p_225 @p_227) :rule reordering :premises (t191))
(step t193 (cl @p_227) :rule resolution :premises (t129 t131 t158 t170 t181 t192))
(step t194 (cl (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= (lCons$ ?v5 ?v3) @quantifiers_skolemize_10)) (not (= (lCons$ ?v5 ?v4) @quantifiers_skolemize_11)) (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4))))) :rule resolution :premises (t127 t193))
(step t195 (cl (! (not (! (= @p_29 @p_28) :named @p_30)) :named @p_218) @p_119 @p_28) :rule equiv_pos2)
(step t196 (cl @p_119 @p_28 @p_218) :rule reordering :premises (t195))
(step t197 (cl (not (! (= (! (or @p_120 (! (not @p_119) :named @p_214)) :named @p_215) (! (or @p_120 @p_29) :named @p_213)) :named @p_216)) (not @p_215) @p_213) :rule equiv_pos2)
(step t198 (cl (! (= @p_214 @p_29) :named @p_217)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_217 1 5))
(step t199 (cl @p_216) :rule cong :premises (t146 t198))
(step t200 (cl @p_120 @p_214) :rule or_neg :args (0))
(step t201 (cl @p_215 @p_121) :rule or_neg :args (0))
(step t202 (cl @p_215 (not @p_214)) :rule or_neg :args (1))
(step t203 (cl @p_215 @p_215) :rule resolution :premises (t200 t201 t202))
(step t204 (cl @p_215) :rule contraction :premises (t203))
(step t205 (cl @p_213) :rule resolution :premises (t197 t199 t204))
(step t206 (cl @p_120 @p_29) :rule or :premises (t205))
(step t207 (cl @p_29 @p_120) :rule reordering :premises (t206))
(step t208 (cl @p_29) :rule resolution :premises (t207 t98))
(step t209 (cl (not (! (= (! (=> (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1)))) (! (= @p_29 (! (or (! (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= @quantifiers_skolemize_10 (lCons$ ?v5 ?v3))) (not (= @quantifiers_skolemize_11 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4))))) :named @p_89) (! (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= @quantifiers_skolemize_10 (lCons$ ?v3 ?v5))) (not (= @quantifiers_skolemize_11 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu uu$ ?v3) ?v4))))) :named @p_88) @p_26) :named @p_90)) :named @p_91)) :named @p_92) (! (=> (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1)))) @p_30) :named @p_87)) :named @p_93)) (not @p_92) @p_87) :rule equiv_pos2)
(step t210 (cl (= (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1)))) (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1)))))) :rule refl)
(step t211 (cl (= @p_29 @p_29)) :rule refl)
(anchor :step t212 :args ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$) (:= (?v3 A_llist$) ?v3) (:= (?v4 A_llist$) ?v4) (:= (?v5 A$) ?v5)))
(step t212.t0 (cl (! (= (! (= @quantifiers_skolemize_10 @p_82) :named @p_114) @p_109) :named @p_117)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_117 2 6))
(step t212.t1 (cl (= (! (not @p_114) :named @p_115) @p_110)) :rule cong :premises (t212.t0))
(step t212.t2 (cl (! (= (! (= @quantifiers_skolemize_11 @p_80) :named @p_112) @p_107) :named @p_116)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_116 2 6))
(step t212.t3 (cl (= (! (not @p_112) :named @p_113) @p_108)) :rule cong :premises (t212.t2))
(step t212.t4 (cl (= @p_106 @p_106)) :rule refl)
(step t212.t5 (cl (= (or @p_115 @p_113 @p_106) @p_111)) :rule cong :premises (t212.t1 t212.t3 t212.t4))
(step t212 (cl (= (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= @quantifiers_skolemize_10 (lCons$ ?v5 ?v3))) (not (= @quantifiers_skolemize_11 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)))) (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= (lCons$ ?v5 ?v3) @quantifiers_skolemize_10)) (not (= (lCons$ ?v5 ?v4) @quantifiers_skolemize_11)) (not (fun_app$m (fun_app$n (llexord$ uu$) ?v3) ?v4)))))) :rule bind)
(step t213 (cl (= @p_89 @p_27)) :rule cong :premises (t212))
(anchor :step t214 :args ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$) (:= (?v3 A$) ?v3) (:= (?v4 A$) ?v4) (:= (?v5 A_llist$) ?v5) (:= (?v6 A_llist$) ?v6)))
(step t214.t0 (cl (! (= (! (= @quantifiers_skolemize_10 @p_71) :named @p_102) @p_97) :named @p_105)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_105 2 6))
(step t214.t1 (cl (= (! (not @p_102) :named @p_103) @p_98)) :rule cong :premises (t214.t0))
(step t214.t2 (cl (! (= (! (= @quantifiers_skolemize_11 @p_69) :named @p_100) @p_95) :named @p_104)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_104 2 6))
(step t214.t3 (cl (= (! (not @p_100) :named @p_101) @p_96)) :rule cong :premises (t214.t2))
(step t214.t4 (cl (= @p_94 @p_94)) :rule refl)
(step t214.t5 (cl (= (or @p_103 @p_101 @p_94) @p_99)) :rule cong :premises (t214.t1 t214.t3 t214.t4))
(step t214 (cl (= (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= @quantifiers_skolemize_10 (lCons$ ?v3 ?v5))) (not (= @quantifiers_skolemize_11 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu uu$ ?v3) ?v4)))) (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= (lCons$ ?v3 ?v5) @quantifiers_skolemize_10)) (not (= (lCons$ ?v4 ?v6) @quantifiers_skolemize_11)) (not (fun_app$bk (fun_app$bu uu$ ?v3) ?v4)))))) :rule bind)
(step t215 (cl (= @p_88 @p_25)) :rule cong :premises (t214))
(step t216 (cl (= @p_90 @p_28)) :rule cong :premises (t213 t215 t57))
(step t217 (cl (= @p_91 @p_30)) :rule cong :premises (t211 t216))
(step t218 (cl @p_93) :rule cong :premises (t210 t217))
(step t219 (cl @p_92 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1))))) :rule implies_neg1)
(anchor :step t220)
(assume t220.a0 (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1)))))
(step t220.t0 (cl (or (! (not (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1))))) :named @p_86) @p_91)) :rule forall_inst :args (uu$ @quantifiers_skolemize_10 @quantifiers_skolemize_11))
(step t220.t1 (cl @p_86 @p_91) :rule or :premises (t220.t0))
(step t220.t2 (cl (not (! (= (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) (or (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) (exists ((?v3 A_llist$)) (and (= ?v1 lNil$) (= ?v2 ?v3))))))) (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1))))) :named @p_31)) (not (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) (or (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) (exists ((?v3 A_llist$)) (and (= ?v1 lNil$) (= ?v2 ?v3)))))))) (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1))))) :rule equiv_pos2)
(anchor :step t220.t3 :args ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (:= (?v0 A_a_bool_fun_fun$) ?v0) (:= (?v1 A_llist$) ?v1) (:= (?v2 A_llist$) ?v2)))
(step t220.t3.t0 (cl (= (! (fun_app$m (fun_app$n (! (llexord$ ?v0) :named @p_38) ?v1) ?v2) :named @p_39) @p_39)) :rule refl)
(step t220.t3.t1 (cl (! (= (! (or (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) (or (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) (exists ((?v3 A_llist$)) (and (= ?v1 lNil$) (= ?v2 ?v3))))) :named @p_40) (! (or (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) (exists ((?v3 A_llist$)) (and (= ?v1 lNil$) (= ?v2 ?v3)))) :named @p_41)) :named @p_85)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_85 1 5))
(anchor :step t220.t3.t2 :args ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$) (:= (?v3 A_llist$) ?v3) (:= (?v4 A_llist$) ?v4) (:= (?v5 A$) ?v5)))
(step t220.t3.t2.t0 (cl (! (= (and (! (= ?v1 @p_82) :named @p_83) (and (! (= ?v2 @p_80) :named @p_81) (! (fun_app$m (fun_app$n @p_38 ?v3) ?v4) :named @p_79))) (and @p_83 @p_81 @p_79)) :named @p_84)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_84 1 5))
(step t220.t3.t2 (cl (= (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) :rule bind)
(step t220.t3.t3 (cl (! (= (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))) (! (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (not (and (= ?v1 (lCons$ ?v5 ?v3)) (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) :named @p_74)) :named @p_76)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_76 13 6))
(step t220.t3.t4 (cl (! (= (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (not (and (= ?v1 (lCons$ ?v5 ?v3)) (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) :named @p_75)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_75 13 6))
(step t220.t3.t5 (cl (= @p_74 (! (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) :named @p_36))) :rule cong :premises (t220.t3.t4))
(step t220.t3.t6 (cl (= (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))) @p_36)) :rule trans :premises (t220.t3.t3 t220.t3.t5))
(step t220.t3.t7 (cl (= (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) @p_36)) :rule trans :premises (t220.t3.t2 t220.t3.t6))
(anchor :step t220.t3.t8 :args ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$) (:= (?v3 A$) ?v3) (:= (?v4 A$) ?v4) (:= (?v5 A_llist$) ?v5) (:= (?v6 A_llist$) ?v6)))
(step t220.t3.t8.t0 (cl (! (= (and (! (= ?v1 @p_71) :named @p_72) (and (! (= ?v2 @p_69) :named @p_70) (! (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4) :named @p_68))) (and @p_72 @p_70 @p_68)) :named @p_73)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_73 1 5))
(step t220.t3.t8 (cl (= (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) :rule bind)
(step t220.t3.t9 (cl (! (= (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))) (! (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (not (and (= ?v1 (lCons$ ?v3 ?v5)) (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) :named @p_61)) :named @p_63)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_63 13 6))
(step t220.t3.t10 (cl (! (= (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (not (and (= ?v1 (lCons$ ?v3 ?v5)) (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) :named @p_62)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_62 13 6))
(step t220.t3.t11 (cl (= @p_61 (! (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) :named @p_35))) :rule cong :premises (t220.t3.t10))
(step t220.t3.t12 (cl (= (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))) @p_35)) :rule trans :premises (t220.t3.t9 t220.t3.t11))
(step t220.t3.t13 (cl (= (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) @p_35)) :rule trans :premises (t220.t3.t8 t220.t3.t12))
(anchor :step t220.t3.t14 :args ((?v3 A_llist$) (:= (?v3 A_llist$) ?v3)))
(step t220.t3.t14.t0 (cl (! (= (! (= ?v1 lNil$) :named @p_59) (! (= lNil$ ?v1) :named @p_34)) :named @p_60)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_60 2 6))
(step t220.t3.t14.t1 (cl (= (! (= ?v2 ?v3) :named @p_58) @p_58)) :rule refl)
(step t220.t3.t14.t2 (cl (= (and @p_59 @p_58) (and @p_34 @p_58))) :rule cong :premises (t220.t3.t14.t0 t220.t3.t14.t1))
(step t220.t3.t14 (cl (= (exists ((?v3 A_llist$)) (and (= ?v1 lNil$) (= ?v2 ?v3))) (exists ((?v3 A_llist$)) (and (= lNil$ ?v1) (= ?v2 ?v3))))) :rule bind)
(step t220.t3.t15 (cl (! (= (exists ((?v3 A_llist$)) (and (= lNil$ ?v1) (= ?v2 ?v3))) (! (not (forall ((?v3 A_llist$)) (not (and (= lNil$ ?v1) (= ?v2 ?v3))))) :named @p_42)) :named @p_56)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_56 13 6))
(step t220.t3.t16 (cl (! (= (forall ((?v3 A_llist$)) (not (and (= lNil$ ?v1) (= ?v2 ?v3)))) (forall ((?v3 A_llist$)) (or (not (= lNil$ ?v1)) (not (= ?v2 ?v3))))) :named @p_55)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_55 13 6))
(step t220.t3.t17 (cl (! (= (forall ((?v3 A_llist$)) (or (not (= lNil$ ?v1)) (not (= ?v2 ?v3)))) (! (or (! (not @p_34) :named @p_43) (forall ((?v3 A_llist$)) (not (= ?v2 ?v3)))) :named @p_46)) :named @p_54)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_54 13 6))
(step t220.t3.t18 (cl (= @p_43 @p_43)) :rule refl)
(step t220.t3.t19 (cl (! (= (forall ((?v3 A_llist$)) (not (= ?v2 ?v3))) (! (not @p_33) :named @p_49)) :named @p_53)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_53 13 6))
(step t220.t3.t20 (cl (! (= @p_33 true) :named @p_52)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_52 2 5))
(step t220.t3.t21 (cl (= @p_49 @p_50)) :rule cong :premises (t220.t3.t20))
(step t220.t3.t22 (cl @p_51) :rule hole :args ("TRUST_THEORY_REWRITE" @p_51 1 6))
(step t220.t3.t23 (cl (= @p_49 false)) :rule trans :premises (t220.t3.t21 t220.t3.t22))
(step t220.t3.t24 (cl (= (forall ((?v3 A_llist$)) (not (= ?v2 ?v3))) false)) :rule trans :premises (t220.t3.t19 t220.t3.t23))
(step t220.t3.t25 (cl (= @p_46 (! (or @p_43 false) :named @p_47))) :rule cong :premises (t220.t3.t18 t220.t3.t24))
(step t220.t3.t26 (cl (! (= @p_47 @p_43) :named @p_48)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_48 1 6))
(step t220.t3.t27 (cl (= @p_46 @p_43)) :rule trans :premises (t220.t3.t25 t220.t3.t26))
(step t220.t3.t28 (cl (= (forall ((?v3 A_llist$)) (or (not (= lNil$ ?v1)) (not (= ?v2 ?v3)))) @p_43)) :rule trans :premises (t220.t3.t17 t220.t3.t27))
(step t220.t3.t29 (cl (= (forall ((?v3 A_llist$)) (not (and (= lNil$ ?v1) (= ?v2 ?v3)))) @p_43)) :rule trans :premises (t220.t3.t16 t220.t3.t28))
(step t220.t3.t30 (cl (= @p_42 (! (not @p_43) :named @p_44))) :rule cong :premises (t220.t3.t29))
(step t220.t3.t31 (cl (! (= @p_44 @p_34) :named @p_45)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_45 1 6))
(step t220.t3.t32 (cl (= @p_42 @p_34)) :rule trans :premises (t220.t3.t30 t220.t3.t31))
(step t220.t3.t33 (cl (= (exists ((?v3 A_llist$)) (and (= lNil$ ?v1) (= ?v2 ?v3))) @p_34)) :rule trans :premises (t220.t3.t15 t220.t3.t32))
(step t220.t3.t34 (cl (= (exists ((?v3 A_llist$)) (and (= ?v1 lNil$) (= ?v2 ?v3))) @p_34)) :rule trans :premises (t220.t3.t14 t220.t3.t33))
(step t220.t3.t35 (cl (= @p_41 (! (or @p_36 @p_35 @p_34) :named @p_37))) :rule cong :premises (t220.t3.t7 t220.t3.t13 t220.t3.t34))
(step t220.t3.t36 (cl (= @p_40 @p_37)) :rule trans :premises (t220.t3.t1 t220.t3.t35))
(step t220.t3.t37 (cl (= (= @p_39 @p_40) (= @p_39 @p_37))) :rule cong :premises (t220.t3.t0 t220.t3.t36))
(step t220.t3 (cl @p_31) :rule bind)
(step t220.t4 (cl (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1))))) :rule resolution :premises (t220.t2 t220.t3 a124))
(step t220.t5 (cl @p_91) :rule resolution :premises (t220.t1 t220.t4))
(step t220 (cl @p_86 @p_91) :rule subproof :discharge (t220.a0))
(step t221 (cl @p_92 @p_91) :rule resolution :premises (t219 t220))
(step t222 (cl @p_92 (not @p_91)) :rule implies_neg2)
(step t223 (cl @p_92 @p_92) :rule resolution :premises (t221 t222))
(step t224 (cl @p_92) :rule contraction :premises (t223))
(step t225 (cl @p_87) :rule resolution :premises (t209 t218 t224))
(step t226 (cl @p_86 @p_30) :rule implies :premises (t225))
(step t227 (cl (not @p_31) (not (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) (or (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) (exists ((?v3 A_llist$)) (and (= ?v1 lNil$) (= ?v2 ?v3)))))))) (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1))))) :rule equiv_pos2)
(anchor :step t228 :args ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$) (:= (?v0 A_a_bool_fun_fun$) ?v0) (:= (?v1 A_llist$) ?v1) (:= (?v2 A_llist$) ?v2)))
(step t228.t0 (cl (= @p_39 @p_39)) :rule refl)
(step t228.t1 (cl @p_85) :rule hole :args ("TRUST_THEORY_REWRITE" @p_85 1 5))
(anchor :step t228.t2 :args ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$) (:= (?v3 A_llist$) ?v3) (:= (?v4 A_llist$) ?v4) (:= (?v5 A$) ?v5)))
(step t228.t2.t0 (cl @p_84) :rule hole :args ("TRUST_THEORY_REWRITE" @p_84 1 5))
(step t228.t2 (cl (= (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) :rule bind)
(step t228.t3 (cl @p_76) :rule hole :args ("TRUST_THEORY_REWRITE" @p_76 13 6))
(step t228.t4 (cl @p_75) :rule hole :args ("TRUST_THEORY_REWRITE" @p_75 13 6))
(step t228.t5 (cl (= @p_74 @p_36)) :rule cong :premises (t228.t4))
(step t228.t6 (cl (= (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))) @p_36)) :rule trans :premises (t228.t3 t228.t5))
(step t228.t7 (cl (= (exists ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (and (= ?v1 (lCons$ ?v5 ?v3)) (and (= ?v2 (lCons$ ?v5 ?v4)) (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4)))) @p_36)) :rule trans :premises (t228.t2 t228.t6))
(anchor :step t228.t8 :args ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$) (:= (?v3 A$) ?v3) (:= (?v4 A$) ?v4) (:= (?v5 A_llist$) ?v5) (:= (?v6 A_llist$) ?v6)))
(step t228.t8.t0 (cl @p_73) :rule hole :args ("TRUST_THEORY_REWRITE" @p_73 1 5))
(step t228.t8 (cl (= (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) :rule bind)
(step t228.t9 (cl @p_63) :rule hole :args ("TRUST_THEORY_REWRITE" @p_63 13 6))
(step t228.t10 (cl @p_62) :rule hole :args ("TRUST_THEORY_REWRITE" @p_62 13 6))
(step t228.t11 (cl (= @p_61 @p_35)) :rule cong :premises (t228.t10))
(step t228.t12 (cl (= (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))) @p_35)) :rule trans :premises (t228.t9 t228.t11))
(step t228.t13 (cl (= (exists ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (and (= ?v1 (lCons$ ?v3 ?v5)) (and (= ?v2 (lCons$ ?v4 ?v6)) (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4)))) @p_35)) :rule trans :premises (t228.t8 t228.t12))
(anchor :step t228.t14 :args ((?v3 A_llist$) (:= (?v3 A_llist$) ?v3)))
(step t228.t14.t0 (cl @p_60) :rule hole :args ("TRUST_THEORY_REWRITE" @p_60 2 6))
(step t228.t14.t1 (cl (= @p_58 @p_58)) :rule refl)
(step t228.t14.t2 (cl (= (and @p_59 @p_58) (and @p_34 @p_58))) :rule cong :premises (t228.t14.t0 t228.t14.t1))
(step t228.t14 (cl (= (exists ((?v3 A_llist$)) (and (= ?v1 lNil$) (= ?v2 ?v3))) (exists ((?v3 A_llist$)) (and (= lNil$ ?v1) (= ?v2 ?v3))))) :rule bind)
(step t228.t15 (cl @p_56) :rule hole :args ("TRUST_THEORY_REWRITE" @p_56 13 6))
(step t228.t16 (cl @p_55) :rule hole :args ("TRUST_THEORY_REWRITE" @p_55 13 6))
(step t228.t17 (cl @p_54) :rule hole :args ("TRUST_THEORY_REWRITE" @p_54 13 6))
(step t228.t18 (cl (= @p_43 @p_43)) :rule refl)
(step t228.t19 (cl @p_53) :rule hole :args ("TRUST_THEORY_REWRITE" @p_53 13 6))
(step t228.t20 (cl @p_52) :rule hole :args ("TRUST_THEORY_REWRITE" @p_52 2 5))
(step t228.t21 (cl (= @p_49 @p_50)) :rule cong :premises (t228.t20))
(step t228.t22 (cl @p_51) :rule hole :args ("TRUST_THEORY_REWRITE" @p_51 1 6))
(step t228.t23 (cl (= @p_49 false)) :rule trans :premises (t228.t21 t228.t22))
(step t228.t24 (cl (= (forall ((?v3 A_llist$)) (not (= ?v2 ?v3))) false)) :rule trans :premises (t228.t19 t228.t23))
(step t228.t25 (cl (= @p_46 @p_47)) :rule cong :premises (t228.t18 t228.t24))
(step t228.t26 (cl @p_48) :rule hole :args ("TRUST_THEORY_REWRITE" @p_48 1 6))
(step t228.t27 (cl (= @p_46 @p_43)) :rule trans :premises (t228.t25 t228.t26))
(step t228.t28 (cl (= (forall ((?v3 A_llist$)) (or (not (= lNil$ ?v1)) (not (= ?v2 ?v3)))) @p_43)) :rule trans :premises (t228.t17 t228.t27))
(step t228.t29 (cl (= (forall ((?v3 A_llist$)) (not (and (= lNil$ ?v1) (= ?v2 ?v3)))) @p_43)) :rule trans :premises (t228.t16 t228.t28))
(step t228.t30 (cl (= @p_42 @p_44)) :rule cong :premises (t228.t29))
(step t228.t31 (cl @p_45) :rule hole :args ("TRUST_THEORY_REWRITE" @p_45 1 6))
(step t228.t32 (cl (= @p_42 @p_34)) :rule trans :premises (t228.t30 t228.t31))
(step t228.t33 (cl (= (exists ((?v3 A_llist$)) (and (= lNil$ ?v1) (= ?v2 ?v3))) @p_34)) :rule trans :premises (t228.t15 t228.t32))
(step t228.t34 (cl (= (exists ((?v3 A_llist$)) (and (= ?v1 lNil$) (= ?v2 ?v3))) @p_34)) :rule trans :premises (t228.t14 t228.t33))
(step t228.t35 (cl (= @p_41 @p_37)) :rule cong :premises (t228.t7 t228.t13 t228.t34))
(step t228.t36 (cl (= @p_40 @p_37)) :rule trans :premises (t228.t1 t228.t35))
(step t228.t37 (cl (= (= @p_39 @p_40) (= @p_39 @p_37))) :rule cong :premises (t228.t0 t228.t36))
(step t228 (cl @p_31) :rule bind)
(step t229 (cl (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$m (fun_app$n (llexord$ ?v0) ?v1) ?v2) (or (not (forall ((?v3 A_llist$) (?v4 A_llist$) (?v5 A$)) (or (not (= ?v1 (lCons$ ?v5 ?v3))) (not (= ?v2 (lCons$ ?v5 ?v4))) (not (fun_app$m (fun_app$n (llexord$ ?v0) ?v3) ?v4))))) (not (forall ((?v3 A$) (?v4 A$) (?v5 A_llist$) (?v6 A_llist$)) (or (not (= ?v1 (lCons$ ?v3 ?v5))) (not (= ?v2 (lCons$ ?v4 ?v6))) (not (fun_app$bk (fun_app$bu ?v0 ?v3) ?v4))))) (= lNil$ ?v1))))) :rule resolution :premises (t227 t228 a124))
(step t230 (cl @p_30) :rule resolution :premises (t226 t229))
(step t231 (cl @p_28) :rule resolution :premises (t196 t208 t230))
(step t232 (cl @p_25) :rule resolution :premises (t48 t99 t194 t231))
(step t233 (cl @p_24) :rule resolution :premises (t46 t232))
(step t234 (cl @p_15) :rule resolution :premises (t18 t233))
(step t235 (cl (not @p_12) (not (forall ((?v0 A$) (?v1 A$)) (= (fun_app$bk (fun_app$bu uu$ ?v0) ?v1) false))) (forall ((?v0 A$) (?v1 A$)) (not (fun_app$bk (fun_app$bu uu$ ?v0) ?v1)))) :rule equiv_pos2)
(anchor :step t236 :args ((?v0 A$) (?v1 A$) (:= (?v0 A$) ?v0) (:= (?v1 A$) ?v1)))
(step t236.t0 (cl @p_14) :rule hole :args ("TRUST_THEORY_REWRITE" @p_14 1 5))
(step t236 (cl @p_12) :rule bind)
(step t237 (cl (forall ((?v0 A$) (?v1 A$)) (not (fun_app$bk (fun_app$bu uu$ ?v0) ?v1)))) :rule resolution :premises (t235 t236 a81))
(step t238 (cl) :rule resolution :premises (t6 t234 t237))
