unsat
(assume a0 (! (not (! (= xs$ (! (ltake$ (! (llength$ us$) :named @p_1) xs$) :named @p_2)) :named @p_3)) :named @p_4))
(assume a1 (! (= (! (llength$a xs$) :named @p_5) infinity$) :named @p_6))
(assume a2 (! (= @p_1 infinity$) :named @p_7))
(assume a3 (not (! (lfinite$ us$) :named @p_8)))
(assume a4 (! (fun_app$ (! (less_eq$ @p_1) :named @p_9) @p_5) :named @p_10))
(assume a5 (= (llength$a @p_2) (llength$b (! (ltake$a @p_1 ys$) :named @p_11))))
(assume a6 (= xs$ (! (lappend$ @p_2 (! (ldrop$ @p_1 xs$) :named @p_12)) :named @p_13)))
(assume a7 (= us$ (! (lzip$ @p_2 @p_11) :named @p_14)))
(assume a8 (fun_app$ @p_9 (! (llength$b ys$) :named @p_15)))
(assume a9 (forall ((?v0 Enat$) (?v1 B_a_b_prod_prod_llist$)) (= (llength$c (ltake$b ?v0 ?v1)) (fun_app$a (min$ ?v0) (llength$c ?v1)))))
(assume a10 (forall ((?v0 Enat$) (?v1 B_b_prod_llist$)) (= (llength$d (ltake$c ?v0 ?v1)) (fun_app$a (min$ ?v0) (llength$d ?v1)))))
(assume a11 (forall ((?v0 Enat$) (?v1 B_a_prod_llist$)) (= (llength$e (ltake$d ?v0 ?v1)) (fun_app$a (min$ ?v0) (llength$e ?v1)))))
(assume a12 (forall ((?v0 Enat$) (?v1 A_a_b_prod_prod_llist$)) (= (llength$f (ltake$e ?v0 ?v1)) (fun_app$a (min$ ?v0) (llength$f ?v1)))))
(assume a13 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$)) (= (llength$g (ltake$f ?v0 ?v1)) (fun_app$a (min$ ?v0) (llength$g ?v1)))))
(assume a14 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$)) (= (llength$ (ltake$g ?v0 ?v1)) (fun_app$a (min$ ?v0) (llength$ ?v1)))))
(assume a15 (forall ((?v0 Enat$) (?v1 A_llist$)) (= (llength$a (ltake$ ?v0 ?v1)) (fun_app$a (min$ ?v0) (llength$a ?v1)))))
(assume a16 (forall ((?v0 Enat$) (?v1 B_llist$)) (= (llength$b (ltake$a ?v0 ?v1)) (fun_app$a (min$ ?v0) (llength$b ?v1)))))
(assume a17 (forall ((?v0 B_a_b_prod_prod_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$c ?v0)) ?v1) (= (ltake$b ?v1 ?v0) ?v0))))
(assume a18 (forall ((?v0 B_b_prod_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$d ?v0)) ?v1) (= (ltake$c ?v1 ?v0) ?v0))))
(assume a19 (forall ((?v0 B_a_prod_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$e ?v0)) ?v1) (= (ltake$d ?v1 ?v0) ?v0))))
(assume a20 (forall ((?v0 A_a_b_prod_prod_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$f ?v0)) ?v1) (= (ltake$e ?v1 ?v0) ?v0))))
(assume a21 (forall ((?v0 A_a_prod_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$g ?v0)) ?v1) (= (ltake$f ?v1 ?v0) ?v0))))
(assume a22 (forall ((?v0 A_b_prod_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$ ?v0)) ?v1) (= (ltake$g ?v1 ?v0) ?v0))))
(assume a23 (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) (= (ltake$ ?v1 ?v0) ?v0))))
(assume a24 (forall ((?v0 B_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$b ?v0)) ?v1) (= (ltake$a ?v1 ?v0) ?v0))))
(assume a25 (forall ((?v0 B_a_b_prod_prod_llist$)) (= (fun_app$b (llcp$ ?v0) ?v0) (llength$c ?v0))))
(assume a26 (forall ((?v0 B_b_prod_llist$)) (= (fun_app$c (llcp$a ?v0) ?v0) (llength$d ?v0))))
(assume a27 (forall ((?v0 B_a_prod_llist$)) (= (fun_app$d (llcp$b ?v0) ?v0) (llength$e ?v0))))
(assume a28 (forall ((?v0 A_a_b_prod_prod_llist$)) (= (fun_app$e (llcp$c ?v0) ?v0) (llength$f ?v0))))
(assume a29 (forall ((?v0 A_a_prod_llist$)) (= (fun_app$f (llcp$d ?v0) ?v0) (llength$g ?v0))))
(assume a30 (forall ((?v0 A_b_prod_llist$)) (= (fun_app$g (llcp$e ?v0) ?v0) (llength$ ?v0))))
(assume a31 (forall ((?v0 A_llist$)) (= (fun_app$h (llcp$f ?v0) ?v0) (llength$a ?v0))))
(assume a32 (forall ((?v0 B_llist$)) (= (fun_app$i (llcp$g ?v0) ?v0) (llength$b ?v0))))
(assume a33 (fun_app$ @p_9 (fun_app$a (min$ @p_5) @p_15)))
(assume a34 (= (! (lzip$ xs$ ys$) :named @p_17) (! (lappend$a us$ vs$) :named @p_16)))
(assume a35 (= (llength$ @p_17) (llength$ @p_16)))
(assume a36 (= @p_16 us$))
(assume a37 (= @p_15 infinity$))
(assume a38 (forall ((?v0 B_a_b_prod_prod_llist$) (?v1 B_a_b_prod_prod_llist$)) (= (lfinite$a (lappend$b ?v0 ?v1)) (and (lfinite$a ?v0) (lfinite$a ?v1)))))
(assume a39 (forall ((?v0 B_b_prod_llist$) (?v1 B_b_prod_llist$)) (= (lfinite$b (lappend$c ?v0 ?v1)) (and (lfinite$b ?v0) (lfinite$b ?v1)))))
(assume a40 (forall ((?v0 B_a_prod_llist$) (?v1 B_a_prod_llist$)) (= (lfinite$c (lappend$d ?v0 ?v1)) (and (lfinite$c ?v0) (lfinite$c ?v1)))))
(assume a41 (forall ((?v0 A_a_b_prod_prod_llist$) (?v1 A_a_b_prod_prod_llist$)) (= (lfinite$d (lappend$e ?v0 ?v1)) (and (lfinite$d ?v0) (lfinite$d ?v1)))))
(assume a42 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (= (lfinite$e (lappend$f ?v0 ?v1)) (and (lfinite$e ?v0) (lfinite$e ?v1)))))
(assume a43 (forall ((?v0 A_b_prod_a_b_prod_prod_llist$) (?v1 A_b_prod_a_b_prod_prod_llist$)) (= (lfinite$f (lappend$g ?v0 ?v1)) (and (lfinite$f ?v0) (lfinite$f ?v1)))))
(assume a44 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (lfinite$g (lappend$ ?v0 ?v1)) (and (lfinite$g ?v0) (lfinite$g ?v1)))))
(assume a45 (forall ((?v0 B_llist$) (?v1 B_llist$)) (= (lfinite$h (lappend$h ?v0 ?v1)) (and (lfinite$h ?v0) (lfinite$h ?v1)))))
(assume a46 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$)) (= (lfinite$ (lappend$a ?v0 ?v1)) (and (lfinite$ ?v0) (lfinite$ ?v1)))))
(assume a47 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_llist$)) (= (ldrop$a ?v0 (lzip$a ?v1 ?v2)) (lzip$a (ldrop$ ?v0 ?v1) (ldrop$ ?v0 ?v2)))))
(assume a48 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 B_llist$)) (= (ldrop$b ?v0 (lzip$ ?v1 ?v2)) (lzip$ (ldrop$ ?v0 ?v1) (ldrop$c ?v0 ?v2)))))
(assume a49 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 A_llist$)) (= (ldrop$d ?v0 (lzip$b ?v1 ?v2)) (lzip$b (ldrop$c ?v0 ?v1) (ldrop$ ?v0 ?v2)))))
(assume a50 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 B_llist$)) (= (ldrop$e ?v0 (lzip$c ?v1 ?v2)) (lzip$c (ldrop$c ?v0 ?v1) (ldrop$c ?v0 ?v2)))))
(assume a51 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 B_b_prod_llist$)) (= (ldrop$f ?v0 (lzip$d ?v1 ?v2)) (lzip$d (ldrop$ ?v0 ?v1) (ldrop$e ?v0 ?v2)))))
(assume a52 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 B_a_prod_llist$)) (= (ldrop$g ?v0 (lzip$e ?v1 ?v2)) (lzip$e (ldrop$ ?v0 ?v1) (ldrop$d ?v0 ?v2)))))
(assume a53 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_b_prod_llist$)) (= (ldrop$h ?v0 (lzip$f ?v1 ?v2)) (lzip$f (ldrop$ ?v0 ?v1) (ldrop$b ?v0 ?v2)))))
(assume a54 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_a_prod_llist$)) (= (ldrop$i ?v0 (lzip$g ?v1 ?v2)) (lzip$g (ldrop$ ?v0 ?v1) (ldrop$a ?v0 ?v2)))))
(assume a55 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 B_b_prod_llist$)) (= (ldrop$j ?v0 (lzip$h ?v1 ?v2)) (lzip$h (ldrop$c ?v0 ?v1) (ldrop$e ?v0 ?v2)))))
(assume a56 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 B_a_prod_llist$)) (= (ldrop$k ?v0 (lzip$i ?v1 ?v2)) (lzip$i (ldrop$c ?v0 ?v1) (ldrop$d ?v0 ?v2)))))
(assume a57 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 A_b_prod_llist$)) (= (ltake$g ?v0 (ltake$g ?v1 ?v2)) (ltake$g (fun_app$a (min$ ?v0) ?v1) ?v2))))
(assume a58 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 B_b_prod_llist$)) (= (ltake$c ?v0 (ltake$c ?v1 ?v2)) (ltake$c (fun_app$a (min$ ?v0) ?v1) ?v2))))
(assume a59 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 B_a_prod_llist$)) (= (ltake$d ?v0 (ltake$d ?v1 ?v2)) (ltake$d (fun_app$a (min$ ?v0) ?v1) ?v2))))
(assume a60 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 A_a_prod_llist$)) (= (ltake$f ?v0 (ltake$f ?v1 ?v2)) (ltake$f (fun_app$a (min$ ?v0) ?v1) ?v2))))
(assume a61 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 A_llist$)) (= (ltake$ ?v0 (ltake$ ?v1 ?v2)) (ltake$ (fun_app$a (min$ ?v0) ?v1) ?v2))))
(assume a62 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 B_llist$)) (= (ltake$a ?v0 (ltake$a ?v1 ?v2)) (ltake$a (fun_app$a (min$ ?v0) ?v1) ?v2))))
(assume a63 (forall ((?v0 Enat$) (?v1 B_b_prod_llist$)) (= (lfinite$b (ldrop$e ?v0 ?v1)) (or (lfinite$b ?v1) (= ?v0 infinity$)))))
(assume a64 (forall ((?v0 Enat$) (?v1 B_a_prod_llist$)) (= (lfinite$c (ldrop$d ?v0 ?v1)) (or (lfinite$c ?v1) (= ?v0 infinity$)))))
(assume a65 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$)) (= (lfinite$e (ldrop$a ?v0 ?v1)) (or (lfinite$e ?v1) (= ?v0 infinity$)))))
(assume a66 (forall ((?v0 Enat$) (?v1 A_b_prod_a_b_prod_prod_llist$)) (= (lfinite$f (ldrop$l ?v0 ?v1)) (or (lfinite$f ?v1) (= ?v0 infinity$)))))
(assume a67 (forall ((?v0 Enat$) (?v1 A_llist$)) (= (lfinite$g (ldrop$ ?v0 ?v1)) (or (lfinite$g ?v1) (= ?v0 infinity$)))))
(assume a68 (forall ((?v0 Enat$) (?v1 B_llist$)) (= (lfinite$h (ldrop$c ?v0 ?v1)) (or (lfinite$h ?v1) (= ?v0 infinity$)))))
(assume a69 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$)) (= (lfinite$ (ldrop$b ?v0 ?v1)) (or (lfinite$ ?v1) (= ?v0 infinity$)))))
(assume a70 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$) (?v2 Enat$) (?v3 A_b_prod_llist$)) (= (fun_app$g (llcp$e (ltake$g ?v0 ?v1)) (ltake$g ?v2 ?v3)) (fun_app$a (min$ (fun_app$a (min$ ?v0) ?v2)) (fun_app$g (llcp$e ?v1) ?v3)))))
(assume a71 (forall ((?v0 Enat$) (?v1 B_b_prod_llist$) (?v2 Enat$) (?v3 B_b_prod_llist$)) (= (fun_app$c (llcp$a (ltake$c ?v0 ?v1)) (ltake$c ?v2 ?v3)) (fun_app$a (min$ (fun_app$a (min$ ?v0) ?v2)) (fun_app$c (llcp$a ?v1) ?v3)))))
(assume a72 (forall ((?v0 Enat$) (?v1 B_a_prod_llist$) (?v2 Enat$) (?v3 B_a_prod_llist$)) (= (fun_app$d (llcp$b (ltake$d ?v0 ?v1)) (ltake$d ?v2 ?v3)) (fun_app$a (min$ (fun_app$a (min$ ?v0) ?v2)) (fun_app$d (llcp$b ?v1) ?v3)))))
(assume a73 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$) (?v2 Enat$) (?v3 A_a_prod_llist$)) (= (fun_app$f (llcp$d (ltake$f ?v0 ?v1)) (ltake$f ?v2 ?v3)) (fun_app$a (min$ (fun_app$a (min$ ?v0) ?v2)) (fun_app$f (llcp$d ?v1) ?v3)))))
(assume a74 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 Enat$) (?v3 A_llist$)) (= (fun_app$h (llcp$f (ltake$ ?v0 ?v1)) (ltake$ ?v2 ?v3)) (fun_app$a (min$ (fun_app$a (min$ ?v0) ?v2)) (fun_app$h (llcp$f ?v1) ?v3)))))
(assume a75 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 Enat$) (?v3 B_llist$)) (= (fun_app$i (llcp$g (ltake$a ?v0 ?v1)) (ltake$a ?v2 ?v3)) (fun_app$a (min$ (fun_app$a (min$ ?v0) ?v2)) (fun_app$i (llcp$g ?v1) ?v3)))))
(assume a76 (forall ((?v0 A_llist$) (?v1 B_llist$)) (= (lfinite$ (lzip$ ?v0 ?v1)) (or (lfinite$g ?v0) (lfinite$h ?v1)))))
(assume a77 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$)) (= (lfinite$f (lzip$j ?v0 ?v1)) (or (lfinite$ ?v0) (lfinite$ ?v1)))))
(assume a78 (forall ((?v0 B_llist$) (?v1 B_llist$)) (= (lfinite$b (lzip$c ?v0 ?v1)) (or (lfinite$h ?v0) (lfinite$h ?v1)))))
(assume a79 (forall ((?v0 B_llist$) (?v1 A_llist$)) (= (lfinite$c (lzip$b ?v0 ?v1)) (or (lfinite$h ?v0) (lfinite$g ?v1)))))
(assume a80 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (lfinite$e (lzip$a ?v0 ?v1)) (or (lfinite$g ?v0) (lfinite$g ?v1)))))
(assume a81 (forall ((?v0 A_b_prod_llist$) (?v1 B_llist$)) (= (lfinite$i (lzip$k ?v0 ?v1)) (or (lfinite$ ?v0) (lfinite$h ?v1)))))
(assume a82 (forall ((?v0 A_b_prod_llist$) (?v1 A_llist$)) (= (lfinite$j (lzip$l ?v0 ?v1)) (or (lfinite$ ?v0) (lfinite$g ?v1)))))
(assume a83 (forall ((?v0 B_llist$) (?v1 A_b_prod_llist$)) (= (lfinite$a (lzip$m ?v0 ?v1)) (or (lfinite$h ?v0) (lfinite$ ?v1)))))
(assume a84 (forall ((?v0 A_llist$) (?v1 A_b_prod_llist$)) (= (lfinite$d (lzip$f ?v0 ?v1)) (or (lfinite$g ?v0) (lfinite$ ?v1)))))
(assume a85 (forall ((?v0 B_llist$) (?v1 A_b_prod_a_b_prod_prod_llist$)) (= (lfinite$k (lzip$n ?v0 ?v1)) (or (lfinite$h ?v0) (lfinite$f ?v1)))))
(assume a86 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (llength$g (lzip$a ?v0 ?v1)) (fun_app$a (min$ (llength$a ?v0)) (llength$a ?v1)))))
(assume a87 (forall ((?v0 B_llist$) (?v1 A_llist$)) (= (llength$e (lzip$b ?v0 ?v1)) (fun_app$a (min$ (llength$b ?v0)) (llength$a ?v1)))))
(assume a88 (forall ((?v0 B_llist$) (?v1 B_llist$)) (= (llength$d (lzip$c ?v0 ?v1)) (fun_app$a (min$ (llength$b ?v0)) (llength$b ?v1)))))
(assume a89 (forall ((?v0 A_llist$) (?v1 B_llist$)) (= (llength$ (lzip$ ?v0 ?v1)) (fun_app$a (min$ (llength$a ?v0)) (llength$b ?v1)))))
(assume a90 (forall ((?v0 A_b_prod_llist$) (?v1 A_llist$)) (= (llength$h (lzip$l ?v0 ?v1)) (fun_app$a (min$ (llength$ ?v0)) (llength$a ?v1)))))
(assume a91 (forall ((?v0 A_b_prod_llist$) (?v1 B_llist$)) (= (llength$i (lzip$k ?v0 ?v1)) (fun_app$a (min$ (llength$ ?v0)) (llength$b ?v1)))))
(assume a92 (forall ((?v0 A_llist$) (?v1 A_b_prod_llist$)) (= (llength$f (lzip$f ?v0 ?v1)) (fun_app$a (min$ (llength$a ?v0)) (llength$ ?v1)))))
(assume a93 (forall ((?v0 B_llist$) (?v1 A_b_prod_llist$)) (= (llength$c (lzip$m ?v0 ?v1)) (fun_app$a (min$ (llength$b ?v0)) (llength$ ?v1)))))
(assume a94 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$)) (= (llength$j (lzip$j ?v0 ?v1)) (fun_app$a (min$ (llength$ ?v0)) (llength$ ?v1)))))
(assume a95 (forall ((?v0 A_llist$) (?v1 B_b_prod_llist$)) (= (llength$k (lzip$d ?v0 ?v1)) (fun_app$a (min$ (llength$a ?v0)) (llength$d ?v1)))))
(assume a96 (forall ((?v0 B_llist$) (?v1 B_llist$)) (= (fun_app$i (llcp$g ?v0) ?v1) (fun_app$i (llcp$g ?v1) ?v0))))
(assume a97 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (fun_app$h (llcp$f ?v0) ?v1) (fun_app$h (llcp$f ?v1) ?v0))))
(assume a98 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$)) (= (fun_app$g (llcp$e ?v0) ?v1) (fun_app$g (llcp$e ?v1) ?v0))))
(assume a99 (forall ((?v0 B_a_b_prod_prod_llist$) (?v1 B_a_b_prod_prod_llist$) (?v2 B_a_b_prod_prod_llist$)) (= (lappend$b (lappend$b ?v0 ?v1) ?v2) (lappend$b ?v0 (lappend$b ?v1 ?v2)))))
(assume a100 (forall ((?v0 B_b_prod_llist$) (?v1 B_b_prod_llist$) (?v2 B_b_prod_llist$)) (= (lappend$c (lappend$c ?v0 ?v1) ?v2) (lappend$c ?v0 (lappend$c ?v1 ?v2)))))
(assume a101 (forall ((?v0 B_a_prod_llist$) (?v1 B_a_prod_llist$) (?v2 B_a_prod_llist$)) (= (lappend$d (lappend$d ?v0 ?v1) ?v2) (lappend$d ?v0 (lappend$d ?v1 ?v2)))))
(assume a102 (forall ((?v0 A_a_b_prod_prod_llist$) (?v1 A_a_b_prod_prod_llist$) (?v2 A_a_b_prod_prod_llist$)) (= (lappend$e (lappend$e ?v0 ?v1) ?v2) (lappend$e ?v0 (lappend$e ?v1 ?v2)))))
(assume a103 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$) (?v2 A_a_prod_llist$)) (= (lappend$f (lappend$f ?v0 ?v1) ?v2) (lappend$f ?v0 (lappend$f ?v1 ?v2)))))
(assume a104 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$)) (= (lappend$ (lappend$ ?v0 ?v1) ?v2) (lappend$ ?v0 (lappend$ ?v1 ?v2)))))
(assume a105 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$) (?v2 A_b_prod_llist$)) (= (lappend$a (lappend$a ?v0 ?v1) ?v2) (lappend$a ?v0 (lappend$a ?v1 ?v2)))))
(assume a106 (forall ((?v0 B_llist$) (?v1 B_llist$) (?v2 B_llist$)) (= (lappend$h (lappend$h ?v0 ?v1) ?v2) (lappend$h ?v0 (lappend$h ?v1 ?v2)))))
(assume a107 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$)) (=> (and (forall ((?v3 Enat$) (?v4 Enat$)) (=> (fun_app$ (less_eq$ ?v3) ?v4) (fun_app$ (fun_app$j ?v0 ?v3) ?v4))) (=> (fun_app$ (fun_app$j ?v0 ?v1) ?v2) (fun_app$ (fun_app$j ?v0 ?v2) ?v1))) (fun_app$ (fun_app$j ?v0 ?v2) ?v1))))
(assume a108 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$) (?v3 A_llist$)) (=> (= (llength$a ?v0) (llength$a ?v1)) (= (lzip$a (lappend$ ?v0 ?v2) (lappend$ ?v1 ?v3)) (lappend$f (lzip$a ?v0 ?v1) (lzip$a ?v2 ?v3))))))
(assume a109 (forall ((?v0 A_llist$) (?v1 B_llist$) (?v2 A_llist$) (?v3 B_llist$)) (=> (= (llength$a ?v0) (llength$b ?v1)) (= (lzip$ (lappend$ ?v0 ?v2) (lappend$h ?v1 ?v3)) (lappend$a (lzip$ ?v0 ?v1) (lzip$ ?v2 ?v3))))))
(assume a110 (forall ((?v0 B_llist$) (?v1 A_llist$) (?v2 B_llist$) (?v3 A_llist$)) (=> (= (llength$b ?v0) (llength$a ?v1)) (= (lzip$b (lappend$h ?v0 ?v2) (lappend$ ?v1 ?v3)) (lappend$d (lzip$b ?v0 ?v1) (lzip$b ?v2 ?v3))))))
(assume a111 (forall ((?v0 B_llist$) (?v1 B_llist$) (?v2 B_llist$) (?v3 B_llist$)) (=> (= (llength$b ?v0) (llength$b ?v1)) (= (lzip$c (lappend$h ?v0 ?v2) (lappend$h ?v1 ?v3)) (lappend$c (lzip$c ?v0 ?v1) (lzip$c ?v2 ?v3))))))
(assume a112 (forall ((?v0 A_b_prod_llist$) (?v1 A_llist$) (?v2 A_b_prod_llist$) (?v3 A_llist$)) (=> (= (llength$ ?v0) (llength$a ?v1)) (= (lzip$l (lappend$a ?v0 ?v2) (lappend$ ?v1 ?v3)) (lappend$i (lzip$l ?v0 ?v1) (lzip$l ?v2 ?v3))))))
(assume a113 (forall ((?v0 A_b_prod_llist$) (?v1 B_llist$) (?v2 A_b_prod_llist$) (?v3 B_llist$)) (=> (= (llength$ ?v0) (llength$b ?v1)) (= (lzip$k (lappend$a ?v0 ?v2) (lappend$h ?v1 ?v3)) (lappend$j (lzip$k ?v0 ?v1) (lzip$k ?v2 ?v3))))))
(assume a114 (forall ((?v0 A_llist$) (?v1 A_b_prod_llist$) (?v2 A_llist$) (?v3 A_b_prod_llist$)) (=> (= (llength$a ?v0) (llength$ ?v1)) (= (lzip$f (lappend$ ?v0 ?v2) (lappend$a ?v1 ?v3)) (lappend$e (lzip$f ?v0 ?v1) (lzip$f ?v2 ?v3))))))
(assume a115 (forall ((?v0 B_llist$) (?v1 A_b_prod_llist$) (?v2 B_llist$) (?v3 A_b_prod_llist$)) (=> (= (llength$b ?v0) (llength$ ?v1)) (= (lzip$m (lappend$h ?v0 ?v2) (lappend$a ?v1 ?v3)) (lappend$b (lzip$m ?v0 ?v1) (lzip$m ?v2 ?v3))))))
(assume a116 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$) (?v2 A_b_prod_llist$) (?v3 A_b_prod_llist$)) (=> (= (llength$ ?v0) (llength$ ?v1)) (= (lzip$j (lappend$a ?v0 ?v2) (lappend$a ?v1 ?v3)) (lappend$g (lzip$j ?v0 ?v1) (lzip$j ?v2 ?v3))))))
(assume a117 (forall ((?v0 A_llist$) (?v1 B_b_prod_llist$) (?v2 A_llist$) (?v3 B_b_prod_llist$)) (=> (= (llength$a ?v0) (llength$d ?v1)) (= (lzip$d (lappend$ ?v0 ?v2) (lappend$c ?v1 ?v3)) (lappend$k (lzip$d ?v0 ?v1) (lzip$d ?v2 ?v3))))))
(assume a118 (forall ((?v0 B_a_b_prod_prod_llist$) (?v1 B_a_b_prod_prod_llist$)) (=> (not (lfinite$a ?v0)) (= (lappend$b ?v0 ?v1) ?v0))))
(assume a119 (forall ((?v0 B_b_prod_llist$) (?v1 B_b_prod_llist$)) (=> (not (lfinite$b ?v0)) (= (lappend$c ?v0 ?v1) ?v0))))
(assume a120 (forall ((?v0 B_a_prod_llist$) (?v1 B_a_prod_llist$)) (=> (not (lfinite$c ?v0)) (= (lappend$d ?v0 ?v1) ?v0))))
(assume a121 (forall ((?v0 A_a_b_prod_prod_llist$) (?v1 A_a_b_prod_prod_llist$)) (=> (not (lfinite$d ?v0)) (= (lappend$e ?v0 ?v1) ?v0))))
(assume a122 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (=> (not (lfinite$e ?v0)) (= (lappend$f ?v0 ?v1) ?v0))))
(assume a123 (forall ((?v0 A_b_prod_a_b_prod_prod_llist$) (?v1 A_b_prod_a_b_prod_prod_llist$)) (=> (not (lfinite$f ?v0)) (= (lappend$g ?v0 ?v1) ?v0))))
(assume a124 (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (not (lfinite$g ?v0)) (= (lappend$ ?v0 ?v1) ?v0))))
(assume a125 (forall ((?v0 B_llist$) (?v1 B_llist$)) (=> (not (lfinite$h ?v0)) (= (lappend$h ?v0 ?v1) ?v0))))
(assume a126 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$)) (=> (not (lfinite$ ?v0)) (= (lappend$a ?v0 ?v1) ?v0))))
(assume a127 (forall ((?v0 B_a_b_prod_prod_llist$) (?v1 B_a_b_prod_prod_llist$)) (fun_app$ (less_eq$ (fun_app$b (llcp$ ?v0) ?v1)) (fun_app$a (min$ (llength$c ?v0)) (llength$c ?v1)))))
(assume a128 (forall ((?v0 B_b_prod_llist$) (?v1 B_b_prod_llist$)) (fun_app$ (less_eq$ (fun_app$c (llcp$a ?v0) ?v1)) (fun_app$a (min$ (llength$d ?v0)) (llength$d ?v1)))))
(assume a129 (forall ((?v0 B_a_prod_llist$) (?v1 B_a_prod_llist$)) (fun_app$ (less_eq$ (fun_app$d (llcp$b ?v0) ?v1)) (fun_app$a (min$ (llength$e ?v0)) (llength$e ?v1)))))
(assume a130 (forall ((?v0 A_a_b_prod_prod_llist$) (?v1 A_a_b_prod_prod_llist$)) (fun_app$ (less_eq$ (fun_app$e (llcp$c ?v0) ?v1)) (fun_app$a (min$ (llength$f ?v0)) (llength$f ?v1)))))
(assume a131 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (fun_app$ (less_eq$ (fun_app$f (llcp$d ?v0) ?v1)) (fun_app$a (min$ (llength$g ?v0)) (llength$g ?v1)))))
(assume a132 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$)) (fun_app$ (less_eq$ (fun_app$g (llcp$e ?v0) ?v1)) (fun_app$a (min$ (llength$ ?v0)) (llength$ ?v1)))))
(assume a133 (forall ((?v0 A_llist$) (?v1 A_llist$)) (fun_app$ (less_eq$ (fun_app$h (llcp$f ?v0) ?v1)) (fun_app$a (min$ (llength$a ?v0)) (llength$a ?v1)))))
(assume a134 (forall ((?v0 B_llist$) (?v1 B_llist$)) (fun_app$ (less_eq$ (fun_app$i (llcp$g ?v0) ?v1)) (fun_app$a (min$ (llength$b ?v0)) (llength$b ?v1)))))
(assume a135 (forall ((?v0 A_b_prod_a_b_prod_prod_llist$) (?v1 A_b_prod_a_b_prod_prod_llist$) (?v2 A_b_prod_a_b_prod_prod_llist$) (?v3 A_b_prod_a_b_prod_prod_llist$)) (=> (= (llength$j ?v0) (llength$j ?v1)) (= (= (lappend$g ?v0 ?v2) (lappend$g ?v1 ?v3)) (and (= ?v0 ?v1) (=> (lfinite$f ?v0) (= ?v2 ?v3)))))))
(assume a136 (forall ((?v0 B_a_b_prod_prod_llist$) (?v1 B_a_b_prod_prod_llist$) (?v2 B_a_b_prod_prod_llist$) (?v3 B_a_b_prod_prod_llist$)) (=> (= (llength$c ?v0) (llength$c ?v1)) (= (= (lappend$b ?v0 ?v2) (lappend$b ?v1 ?v3)) (and (= ?v0 ?v1) (=> (lfinite$a ?v0) (= ?v2 ?v3)))))))
(assume a137 (forall ((?v0 B_b_prod_llist$) (?v1 B_b_prod_llist$) (?v2 B_b_prod_llist$) (?v3 B_b_prod_llist$)) (=> (= (llength$d ?v0) (llength$d ?v1)) (= (= (lappend$c ?v0 ?v2) (lappend$c ?v1 ?v3)) (and (= ?v0 ?v1) (=> (lfinite$b ?v0) (= ?v2 ?v3)))))))
(assume a138 (forall ((?v0 B_a_prod_llist$) (?v1 B_a_prod_llist$) (?v2 B_a_prod_llist$) (?v3 B_a_prod_llist$)) (=> (= (llength$e ?v0) (llength$e ?v1)) (= (= (lappend$d ?v0 ?v2) (lappend$d ?v1 ?v3)) (and (= ?v0 ?v1) (=> (lfinite$c ?v0) (= ?v2 ?v3)))))))
(assume a139 (forall ((?v0 A_a_b_prod_prod_llist$) (?v1 A_a_b_prod_prod_llist$) (?v2 A_a_b_prod_prod_llist$) (?v3 A_a_b_prod_prod_llist$)) (=> (= (llength$f ?v0) (llength$f ?v1)) (= (= (lappend$e ?v0 ?v2) (lappend$e ?v1 ?v3)) (and (= ?v0 ?v1) (=> (lfinite$d ?v0) (= ?v2 ?v3)))))))
(assume a140 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$) (?v2 A_a_prod_llist$) (?v3 A_a_prod_llist$)) (=> (= (llength$g ?v0) (llength$g ?v1)) (= (= (lappend$f ?v0 ?v2) (lappend$f ?v1 ?v3)) (and (= ?v0 ?v1) (=> (lfinite$e ?v0) (= ?v2 ?v3)))))))
(assume a141 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$) (?v2 A_b_prod_llist$) (?v3 A_b_prod_llist$)) (=> (= (llength$ ?v0) (llength$ ?v1)) (= (= (lappend$a ?v0 ?v2) (lappend$a ?v1 ?v3)) (and (= ?v0 ?v1) (=> (lfinite$ ?v0) (= ?v2 ?v3)))))))
(assume a142 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$) (?v3 A_llist$)) (=> (= (llength$a ?v0) (llength$a ?v1)) (= (= (lappend$ ?v0 ?v2) (lappend$ ?v1 ?v3)) (and (= ?v0 ?v1) (=> (lfinite$g ?v0) (= ?v2 ?v3)))))))
(assume a143 (forall ((?v0 B_llist$) (?v1 B_llist$) (?v2 B_llist$) (?v3 B_llist$)) (=> (= (llength$b ?v0) (llength$b ?v1)) (= (= (lappend$h ?v0 ?v2) (lappend$h ?v1 ?v3)) (and (= ?v0 ?v1) (=> (lfinite$h ?v0) (= ?v2 ?v3)))))))
(assume a144 (forall ((?v0 Enat$) (?v1 B_a_b_prod_prod_llist$)) (= (lappend$b (ltake$b ?v0 ?v1) (ldrop$m ?v0 ?v1)) ?v1)))
(assume a145 (forall ((?v0 Enat$) (?v1 B_b_prod_llist$)) (= (lappend$c (ltake$c ?v0 ?v1) (ldrop$e ?v0 ?v1)) ?v1)))
(assume a146 (forall ((?v0 Enat$) (?v1 B_a_prod_llist$)) (= (lappend$d (ltake$d ?v0 ?v1) (ldrop$d ?v0 ?v1)) ?v1)))
(assume a147 (forall ((?v0 Enat$) (?v1 A_a_b_prod_prod_llist$)) (= (lappend$e (ltake$e ?v0 ?v1) (ldrop$h ?v0 ?v1)) ?v1)))
(assume a148 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$)) (= (lappend$f (ltake$f ?v0 ?v1) (ldrop$a ?v0 ?v1)) ?v1)))
(assume a149 (forall ((?v0 Enat$) (?v1 A_llist$)) (= (lappend$ (ltake$ ?v0 ?v1) (ldrop$ ?v0 ?v1)) ?v1)))
(assume a150 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$)) (= (lappend$a (ltake$g ?v0 ?v1) (ldrop$b ?v0 ?v1)) ?v1)))
(assume a151 (forall ((?v0 Enat$) (?v1 B_llist$)) (= (lappend$h (ltake$a ?v0 ?v1) (ldrop$c ?v0 ?v1)) ?v1)))
(assume a152 (forall ((?v0 A_b_prod_llist$) (?v1 Enat$) (?v2 A_b_prod_llist$)) (= (fun_app$g (llcp$e ?v0) (ltake$g ?v1 ?v2)) (fun_app$a (min$ ?v1) (fun_app$g (llcp$e ?v0) ?v2)))))
(assume a153 (forall ((?v0 B_b_prod_llist$) (?v1 Enat$) (?v2 B_b_prod_llist$)) (= (fun_app$c (llcp$a ?v0) (ltake$c ?v1 ?v2)) (fun_app$a (min$ ?v1) (fun_app$c (llcp$a ?v0) ?v2)))))
(assume a154 (forall ((?v0 B_a_prod_llist$) (?v1 Enat$) (?v2 B_a_prod_llist$)) (= (fun_app$d (llcp$b ?v0) (ltake$d ?v1 ?v2)) (fun_app$a (min$ ?v1) (fun_app$d (llcp$b ?v0) ?v2)))))
(assume a155 (forall ((?v0 A_a_prod_llist$) (?v1 Enat$) (?v2 A_a_prod_llist$)) (= (fun_app$f (llcp$d ?v0) (ltake$f ?v1 ?v2)) (fun_app$a (min$ ?v1) (fun_app$f (llcp$d ?v0) ?v2)))))
(assume a156 (forall ((?v0 A_llist$) (?v1 Enat$) (?v2 A_llist$)) (= (fun_app$h (llcp$f ?v0) (ltake$ ?v1 ?v2)) (fun_app$a (min$ ?v1) (fun_app$h (llcp$f ?v0) ?v2)))))
(assume a157 (forall ((?v0 B_llist$) (?v1 Enat$) (?v2 B_llist$)) (= (fun_app$i (llcp$g ?v0) (ltake$a ?v1 ?v2)) (fun_app$a (min$ ?v1) (fun_app$i (llcp$g ?v0) ?v2)))))
(assume a158 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$) (?v2 A_b_prod_llist$)) (= (fun_app$g (llcp$e (ltake$g ?v0 ?v1)) ?v2) (fun_app$a (min$ ?v0) (fun_app$g (llcp$e ?v1) ?v2)))))
(assume a159 (forall ((?v0 Enat$) (?v1 B_b_prod_llist$) (?v2 B_b_prod_llist$)) (= (fun_app$c (llcp$a (ltake$c ?v0 ?v1)) ?v2) (fun_app$a (min$ ?v0) (fun_app$c (llcp$a ?v1) ?v2)))))
(assume a160 (forall ((?v0 Enat$) (?v1 B_a_prod_llist$) (?v2 B_a_prod_llist$)) (= (fun_app$d (llcp$b (ltake$d ?v0 ?v1)) ?v2) (fun_app$a (min$ ?v0) (fun_app$d (llcp$b ?v1) ?v2)))))
(assume a161 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$) (?v2 A_a_prod_llist$)) (= (fun_app$f (llcp$d (ltake$f ?v0 ?v1)) ?v2) (fun_app$a (min$ ?v0) (fun_app$f (llcp$d ?v1) ?v2)))))
(assume a162 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$h (llcp$f (ltake$ ?v0 ?v1)) ?v2) (fun_app$a (min$ ?v0) (fun_app$h (llcp$f ?v1) ?v2)))))
(assume a163 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 B_llist$)) (= (fun_app$i (llcp$g (ltake$a ?v0 ?v1)) ?v2) (fun_app$a (min$ ?v0) (fun_app$i (llcp$g ?v1) ?v2)))))
(assume a164 (forall ((?v0 A_b_prod_a_b_prod_prod_llist$)) (=> (not (lfinite$f ?v0)) (= (llength$j ?v0) infinity$))))
(assume a165 (forall ((?v0 B_a_b_prod_prod_llist$)) (=> (not (lfinite$a ?v0)) (= (llength$c ?v0) infinity$))))
(assume a166 (forall ((?v0 B_b_prod_llist$)) (=> (not (lfinite$b ?v0)) (= (llength$d ?v0) infinity$))))
(assume a167 (forall ((?v0 B_a_prod_llist$)) (=> (not (lfinite$c ?v0)) (= (llength$e ?v0) infinity$))))
(assume a168 (forall ((?v0 A_a_b_prod_prod_llist$)) (=> (not (lfinite$d ?v0)) (= (llength$f ?v0) infinity$))))
(assume a169 (forall ((?v0 A_a_prod_llist$)) (=> (not (lfinite$e ?v0)) (= (llength$g ?v0) infinity$))))
(assume a170 (forall ((?v0 A_b_prod_llist$)) (=> (not (lfinite$ ?v0)) (= (llength$ ?v0) infinity$))))
(assume a171 (forall ((?v0 A_llist$)) (=> (not (lfinite$g ?v0)) (= (llength$a ?v0) infinity$))))
(assume a172 (forall ((?v0 B_llist$)) (=> (not (lfinite$h ?v0)) (= (llength$b ?v0) infinity$))))
(assume a173 (forall ((?v0 A_b_prod_a_b_prod_prod_llist$)) (= (= (llength$j ?v0) infinity$) (not (lfinite$f ?v0)))))
(assume a174 (forall ((?v0 B_a_b_prod_prod_llist$)) (= (= (llength$c ?v0) infinity$) (not (lfinite$a ?v0)))))
(assume a175 (forall ((?v0 B_b_prod_llist$)) (= (= (llength$d ?v0) infinity$) (not (lfinite$b ?v0)))))
(assume a176 (forall ((?v0 B_a_prod_llist$)) (= (= (llength$e ?v0) infinity$) (not (lfinite$c ?v0)))))
(assume a177 (forall ((?v0 A_a_b_prod_prod_llist$)) (= (= (llength$f ?v0) infinity$) (not (lfinite$d ?v0)))))
(assume a178 (forall ((?v0 A_a_prod_llist$)) (= (= (llength$g ?v0) infinity$) (not (lfinite$e ?v0)))))
(assume a179 (forall ((?v0 A_b_prod_llist$)) (= (= (llength$ ?v0) infinity$) (not (lfinite$ ?v0)))))
(assume a180 (forall ((?v0 A_llist$)) (= (= (llength$a ?v0) infinity$) (not (lfinite$g ?v0)))))
(assume a181 (forall ((?v0 B_llist$)) (= (= (llength$b ?v0) infinity$) (not (lfinite$h ?v0)))))
(assume a182 (forall ((?v0 Enat$) (?v1 B_a_b_prod_prod_llist$) (?v2 B_a_b_prod_prod_llist$)) (=> (fun_app$ (less_eq$ ?v0) (llength$c ?v1)) (= (ltake$b ?v0 (lappend$b ?v1 ?v2)) (ltake$b ?v0 ?v1)))))
(assume a183 (forall ((?v0 Enat$) (?v1 B_b_prod_llist$) (?v2 B_b_prod_llist$)) (=> (fun_app$ (less_eq$ ?v0) (llength$d ?v1)) (= (ltake$c ?v0 (lappend$c ?v1 ?v2)) (ltake$c ?v0 ?v1)))))
(assume a184 (forall ((?v0 Enat$) (?v1 B_a_prod_llist$) (?v2 B_a_prod_llist$)) (=> (fun_app$ (less_eq$ ?v0) (llength$e ?v1)) (= (ltake$d ?v0 (lappend$d ?v1 ?v2)) (ltake$d ?v0 ?v1)))))
(assume a185 (forall ((?v0 Enat$) (?v1 A_a_b_prod_prod_llist$) (?v2 A_a_b_prod_prod_llist$)) (=> (fun_app$ (less_eq$ ?v0) (llength$f ?v1)) (= (ltake$e ?v0 (lappend$e ?v1 ?v2)) (ltake$e ?v0 ?v1)))))
(assume a186 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$) (?v2 A_a_prod_llist$)) (=> (fun_app$ (less_eq$ ?v0) (llength$g ?v1)) (= (ltake$f ?v0 (lappend$f ?v1 ?v2)) (ltake$f ?v0 ?v1)))))
(assume a187 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$) (?v2 A_b_prod_llist$)) (=> (fun_app$ (less_eq$ ?v0) (llength$ ?v1)) (= (ltake$g ?v0 (lappend$a ?v1 ?v2)) (ltake$g ?v0 ?v1)))))
(assume a188 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_llist$)) (=> (fun_app$ (less_eq$ ?v0) (llength$a ?v1)) (= (ltake$ ?v0 (lappend$ ?v1 ?v2)) (ltake$ ?v0 ?v1)))))
(assume a189 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 B_llist$)) (=> (fun_app$ (less_eq$ ?v0) (llength$b ?v1)) (= (ltake$a ?v0 (lappend$h ?v1 ?v2)) (ltake$a ?v0 ?v1)))))
(assume a190 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$) (?v2 A_b_prod_llist$) (?v3 Enat$)) (=> (and (= (ltake$g ?v0 ?v1) (ltake$g ?v0 ?v2)) (fun_app$ (less_eq$ ?v3) ?v0)) (= (ltake$g ?v3 ?v1) (ltake$g ?v3 ?v2)))))
(assume a191 (forall ((?v0 Enat$) (?v1 B_b_prod_llist$) (?v2 B_b_prod_llist$) (?v3 Enat$)) (=> (and (= (ltake$c ?v0 ?v1) (ltake$c ?v0 ?v2)) (fun_app$ (less_eq$ ?v3) ?v0)) (= (ltake$c ?v3 ?v1) (ltake$c ?v3 ?v2)))))
(assume a192 (forall ((?v0 Enat$) (?v1 B_a_prod_llist$) (?v2 B_a_prod_llist$) (?v3 Enat$)) (=> (and (= (ltake$d ?v0 ?v1) (ltake$d ?v0 ?v2)) (fun_app$ (less_eq$ ?v3) ?v0)) (= (ltake$d ?v3 ?v1) (ltake$d ?v3 ?v2)))))
(assume a193 (forall ((?v0 Enat$) (?v1 A_a_prod_llist$) (?v2 A_a_prod_llist$) (?v3 Enat$)) (=> (and (= (ltake$f ?v0 ?v1) (ltake$f ?v0 ?v2)) (fun_app$ (less_eq$ ?v3) ?v0)) (= (ltake$f ?v3 ?v1) (ltake$f ?v3 ?v2)))))
(assume a194 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_llist$) (?v3 Enat$)) (=> (and (= (ltake$ ?v0 ?v1) (ltake$ ?v0 ?v2)) (fun_app$ (less_eq$ ?v3) ?v0)) (= (ltake$ ?v3 ?v1) (ltake$ ?v3 ?v2)))))
(assume a195 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 B_llist$) (?v3 Enat$)) (=> (and (= (ltake$a ?v0 ?v1) (ltake$a ?v0 ?v2)) (fun_app$ (less_eq$ ?v3) ?v0)) (= (ltake$a ?v3 ?v1) (ltake$a ?v3 ?v2)))))
(assume a196 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_llist$)) (= (ltake$f ?v0 (lzip$a ?v1 ?v2)) (lzip$a (ltake$ ?v0 ?v1) (ltake$ ?v0 ?v2)))))
(assume a197 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 B_llist$)) (= (ltake$g ?v0 (lzip$ ?v1 ?v2)) (lzip$ (ltake$ ?v0 ?v1) (ltake$a ?v0 ?v2)))))
(assume a198 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 A_llist$)) (= (ltake$d ?v0 (lzip$b ?v1 ?v2)) (lzip$b (ltake$a ?v0 ?v1) (ltake$ ?v0 ?v2)))))
(assume a199 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 B_llist$)) (= (ltake$c ?v0 (lzip$c ?v1 ?v2)) (lzip$c (ltake$a ?v0 ?v1) (ltake$a ?v0 ?v2)))))
(assume a200 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_b_prod_llist$)) (= (ltake$e ?v0 (lzip$f ?v1 ?v2)) (lzip$f (ltake$ ?v0 ?v1) (ltake$g ?v0 ?v2)))))
(assume a201 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 B_b_prod_llist$)) (= (ltake$h ?v0 (lzip$d ?v1 ?v2)) (lzip$d (ltake$ ?v0 ?v1) (ltake$c ?v0 ?v2)))))
(assume a202 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 B_a_prod_llist$)) (= (ltake$i ?v0 (lzip$e ?v1 ?v2)) (lzip$e (ltake$ ?v0 ?v1) (ltake$d ?v0 ?v2)))))
(assume a203 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_a_prod_llist$)) (= (ltake$j ?v0 (lzip$g ?v1 ?v2)) (lzip$g (ltake$ ?v0 ?v1) (ltake$f ?v0 ?v2)))))
(assume a204 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 A_b_prod_llist$)) (= (ltake$b ?v0 (lzip$m ?v1 ?v2)) (lzip$m (ltake$a ?v0 ?v1) (ltake$g ?v0 ?v2)))))
(assume a205 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 B_b_prod_llist$)) (= (ltake$k ?v0 (lzip$h ?v1 ?v2)) (lzip$h (ltake$a ?v0 ?v1) (ltake$c ?v0 ?v2)))))
(assume a206 (= @p_16 (lappend$a @p_14 (! (lzip$ @p_12 (! (ldrop$c @p_1 ys$) :named @p_18)) :named @p_19))))
(assume a207 (=> @p_8 (= vs$ @p_19)))
(assume a208 (forall ((?v0 Enat$)) (= (fun_app$a (min$ ?v0) infinity$) ?v0)))
(assume a209 (forall ((?v0 Enat$)) (= (fun_app$a (min$ infinity$) ?v0) ?v0)))
(assume a210 (forall ((?v0 Enat$)) (= (fun_app$ (less_eq$ infinity$) ?v0) (= ?v0 infinity$))))
(assume a211 (forall ((?v0 Enat$)) (= (fun_app$ (less_eq$ ?v0) infinity$) true)))
(assume a212 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$ (less_eq$ ?v0) (fun_app$a (min$ ?v1) ?v2)) (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v0) ?v2)))))
(assume a213 (= @p_16 (lzip$ @p_13 (! (lappend$h @p_11 @p_18) :named @p_20))))
(assume a214 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$a (min$ (fun_app$a (min$ ?v0) ?v1)) ?v1) (fun_app$a (min$ ?v0) ?v1))))
(assume a215 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$a (min$ ?v0) (fun_app$a (min$ ?v0) ?v1)) (fun_app$a (min$ ?v0) ?v1))))
(assume a216 (forall ((?v0 Enat$)) (= (fun_app$a (min$ ?v0) ?v0) ?v0)))
(assume a217 (= ys$ @p_20))
(assume a218 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$a (min$ ?v0) ?v1) (fun_app$a (min$ ?v1) ?v0))))
(assume a219 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$a (min$ ?v0) (fun_app$a (min$ ?v1) ?v2)) (fun_app$a (min$ ?v1) (fun_app$a (min$ ?v0) ?v2)))))
(assume a220 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$a (min$ (fun_app$a (min$ ?v0) ?v1)) ?v2) (fun_app$a (min$ ?v0) (fun_app$a (min$ ?v1) ?v2)))))
(assume a221 (forall ((?v0 Enat$) (?v1 Enat$)) (fun_app$ (less_eq$ (fun_app$a (min$ ?v0) ?v1)) ?v0)))
(assume a222 (forall ((?v0 Enat$) (?v1 Enat$)) (fun_app$ (less_eq$ (fun_app$a (min$ ?v0) ?v1)) ?v1)))
(assume a223 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ (fun_app$a (min$ ?v0) ?v2)) ?v1))))
(assume a224 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ (fun_app$a (min$ ?v2) ?v0)) ?v1))))
(assume a225 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ ?v0) ?v1) (= (fun_app$a (min$ ?v0) ?v1) ?v0))))
(assume a226 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ ?v0) ?v1) (= (fun_app$a (min$ ?v1) ?v0) ?v0))))
(assume a227 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v0) ?v2)) (fun_app$ (less_eq$ ?v0) (fun_app$a (min$ ?v1) ?v2)))))
(assume a228 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v2) ?v3)) (fun_app$ (less_eq$ (fun_app$a (min$ ?v0) ?v2)) (fun_app$a (min$ ?v1) ?v3)))))
(assume a229 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (=> (= ?v0 (fun_app$a (min$ ?v0) ?v1)) false)) false)))
(assume a230 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) (fun_app$a (min$ ?v1) ?v2)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v0) ?v2)) false)) false)))
(assume a231 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (= ?v0 (fun_app$a (min$ ?v0) ?v1)) (fun_app$ (less_eq$ ?v0) ?v1))))
(assume a232 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$ (less_eq$ ?v0) ?v1) (= ?v0 (fun_app$a (min$ ?v0) ?v1)))))
(assume a233 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$ (less_eq$ ?v0) ?v1) (= (fun_app$a (min$ ?v0) ?v1) ?v0))))
(assume a234 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$ (less_eq$ ?v0) ?v1) (= (fun_app$a (min$ ?v1) ?v0) ?v0))))
(assume a235 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$ (less_eq$ (fun_app$a (min$ ?v0) ?v1)) ?v2) (or (fun_app$ (less_eq$ ?v0) ?v2) (fun_app$ (less_eq$ ?v1) ?v2)))))
(assume a236 (forall ((?v0 Enat$)) (fun_app$ (less_eq$ ?v0) infinity$)))
(assume a237 (forall ((?v0 Enat$)) (fun_app$ (less_eq$ ?v0) ?v0)))
(assume a238 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$a (min$ ?v0) ?v1) (ite (fun_app$ (less_eq$ ?v0) ?v1) ?v0 ?v1))))
(assume a239 (forall ((?v0 B_a_b_prod_prod_llist$) (?v1 Enat$) (?v2 B_a_b_prod_prod_llist$)) (=> (fun_app$ (less_eq$ (llength$c ?v0)) ?v1) (= (ltake$b ?v1 (lappend$b ?v0 ?v2)) (lappend$b ?v0 (ltake$b (fun_app$a (minus$ ?v1) (llength$c ?v0)) ?v2))))))
(assume a240 (forall ((?v0 B_b_prod_llist$) (?v1 Enat$) (?v2 B_b_prod_llist$)) (=> (fun_app$ (less_eq$ (llength$d ?v0)) ?v1) (= (ltake$c ?v1 (lappend$c ?v0 ?v2)) (lappend$c ?v0 (ltake$c (fun_app$a (minus$ ?v1) (llength$d ?v0)) ?v2))))))
(assume a241 (forall ((?v0 B_a_prod_llist$) (?v1 Enat$) (?v2 B_a_prod_llist$)) (=> (fun_app$ (less_eq$ (llength$e ?v0)) ?v1) (= (ltake$d ?v1 (lappend$d ?v0 ?v2)) (lappend$d ?v0 (ltake$d (fun_app$a (minus$ ?v1) (llength$e ?v0)) ?v2))))))
(assume a242 (forall ((?v0 A_a_b_prod_prod_llist$) (?v1 Enat$) (?v2 A_a_b_prod_prod_llist$)) (=> (fun_app$ (less_eq$ (llength$f ?v0)) ?v1) (= (ltake$e ?v1 (lappend$e ?v0 ?v2)) (lappend$e ?v0 (ltake$e (fun_app$a (minus$ ?v1) (llength$f ?v0)) ?v2))))))
(assume a243 (forall ((?v0 A_a_prod_llist$) (?v1 Enat$) (?v2 A_a_prod_llist$)) (=> (fun_app$ (less_eq$ (llength$g ?v0)) ?v1) (= (ltake$f ?v1 (lappend$f ?v0 ?v2)) (lappend$f ?v0 (ltake$f (fun_app$a (minus$ ?v1) (llength$g ?v0)) ?v2))))))
(assume a244 (forall ((?v0 A_b_prod_llist$) (?v1 Enat$) (?v2 A_b_prod_llist$)) (=> (fun_app$ (less_eq$ (llength$ ?v0)) ?v1) (= (ltake$g ?v1 (lappend$a ?v0 ?v2)) (lappend$a ?v0 (ltake$g (fun_app$a (minus$ ?v1) (llength$ ?v0)) ?v2))))))
(assume a245 (forall ((?v0 A_llist$) (?v1 Enat$) (?v2 A_llist$)) (=> (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) (= (ltake$ ?v1 (lappend$ ?v0 ?v2)) (lappend$ ?v0 (ltake$ (fun_app$a (minus$ ?v1) (llength$a ?v0)) ?v2))))))
(assume a246 (forall ((?v0 B_llist$) (?v1 Enat$) (?v2 B_llist$)) (=> (fun_app$ (less_eq$ (llength$b ?v0)) ?v1) (= (ltake$a ?v1 (lappend$h ?v0 ?v2)) (lappend$h ?v0 (ltake$a (fun_app$a (minus$ ?v1) (llength$b ?v0)) ?v2))))))
(assume a247 (forall ((?v0 B_a_b_prod_prod_llist$) (?v1 B_a_b_prod_prod_llist$) (?v2 B_a_b_prod_prod_llist$)) (= (fun_app$b (llcp$ (lappend$b ?v0 ?v1)) (lappend$b ?v0 ?v2)) (fun_app$a (plus$ (llength$c ?v0)) (fun_app$b (llcp$ ?v1) ?v2)))))
(assume a248 (forall ((?v0 B_b_prod_llist$) (?v1 B_b_prod_llist$) (?v2 B_b_prod_llist$)) (= (fun_app$c (llcp$a (lappend$c ?v0 ?v1)) (lappend$c ?v0 ?v2)) (fun_app$a (plus$ (llength$d ?v0)) (fun_app$c (llcp$a ?v1) ?v2)))))
(assume a249 (forall ((?v0 B_a_prod_llist$) (?v1 B_a_prod_llist$) (?v2 B_a_prod_llist$)) (= (fun_app$d (llcp$b (lappend$d ?v0 ?v1)) (lappend$d ?v0 ?v2)) (fun_app$a (plus$ (llength$e ?v0)) (fun_app$d (llcp$b ?v1) ?v2)))))
(assume a250 (forall ((?v0 A_a_b_prod_prod_llist$) (?v1 A_a_b_prod_prod_llist$) (?v2 A_a_b_prod_prod_llist$)) (= (fun_app$e (llcp$c (lappend$e ?v0 ?v1)) (lappend$e ?v0 ?v2)) (fun_app$a (plus$ (llength$f ?v0)) (fun_app$e (llcp$c ?v1) ?v2)))))
(assume a251 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$) (?v2 A_a_prod_llist$)) (= (fun_app$f (llcp$d (lappend$f ?v0 ?v1)) (lappend$f ?v0 ?v2)) (fun_app$a (plus$ (llength$g ?v0)) (fun_app$f (llcp$d ?v1) ?v2)))))
(assume a252 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$) (?v2 A_b_prod_llist$)) (= (fun_app$g (llcp$e (lappend$a ?v0 ?v1)) (lappend$a ?v0 ?v2)) (fun_app$a (plus$ (llength$ ?v0)) (fun_app$g (llcp$e ?v1) ?v2)))))
(assume a253 (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$)) (= (fun_app$h (llcp$f (lappend$ ?v0 ?v1)) (lappend$ ?v0 ?v2)) (fun_app$a (plus$ (llength$a ?v0)) (fun_app$h (llcp$f ?v1) ?v2)))))
(assume a254 (forall ((?v0 B_llist$) (?v1 B_llist$) (?v2 B_llist$)) (= (fun_app$i (llcp$g (lappend$h ?v0 ?v1)) (lappend$h ?v0 ?v2)) (fun_app$a (plus$ (llength$b ?v0)) (fun_app$i (llcp$g ?v1) ?v2)))))
(assume a255 (forall ((?v0 Enat$)) (= (fun_app$a (plus$ ?v0) infinity$) infinity$)))
(assume a256 (forall ((?v0 Enat$)) (= (fun_app$a (plus$ infinity$) ?v0) infinity$)))
(assume a257 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 B_b_prod_llist$)) (= (ldrop$e ?v0 (ldrop$e ?v1 ?v2)) (ldrop$e (fun_app$a (plus$ ?v0) ?v1) ?v2))))
(assume a258 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 B_a_prod_llist$)) (= (ldrop$d ?v0 (ldrop$d ?v1 ?v2)) (ldrop$d (fun_app$a (plus$ ?v0) ?v1) ?v2))))
(assume a259 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 A_b_prod_llist$)) (= (ldrop$b ?v0 (ldrop$b ?v1 ?v2)) (ldrop$b (fun_app$a (plus$ ?v0) ?v1) ?v2))))
(assume a260 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 A_a_prod_llist$)) (= (ldrop$a ?v0 (ldrop$a ?v1 ?v2)) (ldrop$a (fun_app$a (plus$ ?v0) ?v1) ?v2))))
(assume a261 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 A_llist$)) (= (ldrop$ ?v0 (ldrop$ ?v1 ?v2)) (ldrop$ (fun_app$a (plus$ ?v0) ?v1) ?v2))))
(assume a262 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 B_llist$)) (= (ldrop$c ?v0 (ldrop$c ?v1 ?v2)) (ldrop$c (fun_app$a (plus$ ?v0) ?v1) ?v2))))
(assume a263 (forall ((?v0 Enat$)) (= (fun_app$a (minus$ infinity$) ?v0) infinity$)))
(assume a264 (forall ((?v0 A_a_prod_llist$) (?v1 A_a_prod_llist$)) (= (llength$g (lappend$f ?v0 ?v1)) (fun_app$a (plus$ (llength$g ?v0)) (llength$g ?v1)))))
(assume a265 (forall ((?v0 A_b_prod_llist$) (?v1 A_b_prod_llist$)) (= (llength$ (lappend$a ?v0 ?v1)) (fun_app$a (plus$ (llength$ ?v0)) (llength$ ?v1)))))
(assume a266 (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (llength$a (lappend$ ?v0 ?v1)) (fun_app$a (plus$ (llength$a ?v0)) (llength$a ?v1)))))
(assume a267 (forall ((?v0 B_llist$) (?v1 B_llist$)) (= (llength$b (lappend$h ?v0 ?v1)) (fun_app$a (plus$ (llength$b ?v0)) (llength$b ?v1)))))
(assume a268 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (= (fun_app$a (plus$ ?v0) ?v1) (fun_app$a (plus$ ?v0) ?v2)) (or (= ?v0 infinity$) (= ?v1 ?v2)))))
(assume a269 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$ (less_eq$ (fun_app$a (plus$ ?v0) ?v1)) (fun_app$a (plus$ ?v0) ?v2)) (or (= ?v0 infinity$) (fun_app$ (less_eq$ ?v1) ?v2)))))
(assume a270 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 A_llist$)) (= (ldrop$ ?v0 (ltake$ ?v1 ?v2)) (ltake$ (fun_app$a (minus$ ?v1) ?v0) (ldrop$ ?v0 ?v2)))))
(assume a271 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 B_llist$)) (= (ldrop$c ?v0 (ltake$a ?v1 ?v2)) (ltake$a (fun_app$a (minus$ ?v1) ?v0) (ldrop$c ?v0 ?v2)))))
(assume a272 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 A_llist$)) (= (ltake$ ?v0 (ldrop$ ?v1 ?v2)) (ldrop$ ?v1 (ltake$ (fun_app$a (plus$ ?v0) ?v1) ?v2)))))
(assume a273 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 B_llist$)) (= (ltake$a ?v0 (ldrop$c ?v1 ?v2)) (ldrop$c ?v1 (ltake$a (fun_app$a (plus$ ?v0) ?v1) ?v2)))))
(assume a274 (forall ((?v0 Enat$) (?v1 Enat$)) (= (= ?v0 ?v1) (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v1) ?v0)))))
(assume a275 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (=> (fun_app$ (less_eq$ ?v0) ?v1) false) (=> (fun_app$ (less_eq$ ?v1) ?v0) false)) false)))
(assume a276 (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat$) (?v2 Enat$)) (=> (and (forall ((?v3 Enat$) (?v4 Enat$)) (=> (fun_app$ (less_eq$ ?v3) ?v4) (fun_app$ (fun_app$j ?v0 ?v3) ?v4))) (forall ((?v3 Enat$) (?v4 Enat$)) (=> (fun_app$ (fun_app$j ?v0 ?v4) ?v3) (fun_app$ (fun_app$j ?v0 ?v3) ?v4)))) (fun_app$ (fun_app$j ?v0 ?v1) ?v2))))
(assume a277 (forall ((?v0 Enat$) (?v1 Enat_enat_fun$) (?v2 Enat$) (?v3 Enat$)) (=> (and (= ?v0 (fun_app$a ?v1 ?v2)) (and (fun_app$ (less_eq$ ?v2) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$ (less_eq$ ?v4) ?v5) (fun_app$ (less_eq$ (fun_app$a ?v1 ?v4)) (fun_app$a ?v1 ?v5)))))) (fun_app$ (less_eq$ ?v0) (fun_app$a ?v1 ?v3)))))
(assume a278 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (= ?v0 ?v1) (fun_app$ (less_eq$ ?v1) ?v2)) (fun_app$ (less_eq$ ?v0) ?v2))))
(assume a279 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (= ?v0 ?v1) (fun_app$ (less_eq$ ?v0) ?v1))))
(assume a280 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_enat_fun$) (?v3 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (and (= (fun_app$a ?v2 ?v1) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$ (less_eq$ ?v4) ?v5) (fun_app$ (less_eq$ (fun_app$a ?v2 ?v4)) (fun_app$a ?v2 ?v5)))))) (fun_app$ (less_eq$ (fun_app$a ?v2 ?v0)) ?v3))))
(assume a281 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (= ?v1 ?v2)) (fun_app$ (less_eq$ ?v0) ?v2))))
(assume a282 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_enat_fun$) (?v3 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (and (fun_app$ (less_eq$ (fun_app$a ?v2 ?v1)) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$ (less_eq$ ?v4) ?v5) (fun_app$ (less_eq$ (fun_app$a ?v2 ?v4)) (fun_app$a ?v2 ?v5)))))) (fun_app$ (less_eq$ (fun_app$a ?v2 ?v0)) ?v3))))
(assume a283 (forall ((?v0 Enat$) (?v1 Enat_enat_fun$) (?v2 Enat$) (?v3 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) (fun_app$a ?v1 ?v2)) (and (fun_app$ (less_eq$ ?v2) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$ (less_eq$ ?v4) ?v5) (fun_app$ (less_eq$ (fun_app$a ?v1 ?v4)) (fun_app$a ?v1 ?v5)))))) (fun_app$ (less_eq$ ?v0) (fun_app$a ?v1 ?v3)))))
(assume a284 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v1) ?v0)) (= ?v1 ?v0))))
(assume a285 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v1) ?v0)) (= ?v0 ?v1))))
(assume a286 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v2) ?v0)) (fun_app$ (less_eq$ ?v2) ?v1))))
(assume a287 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v1) ?v2)) (fun_app$ (less_eq$ ?v0) ?v2))))
(assume a288 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ ?v0) ?v1) (= (fun_app$ (less_eq$ ?v1) ?v0) (= ?v1 ?v0)))))
(assume a289 (forall ((?v0 Enat$) (?v1 Enat$)) (or (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v1) ?v0))))
(assume a290 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$) (?v2 A_b_prod_llist$)) (= (ltake$g ?v0 (lappend$a ?v1 ?v2)) (lappend$a (ltake$g ?v0 ?v1) (ltake$g (fun_app$a (minus$ ?v0) (llength$ ?v1)) ?v2)))))
(assume a291 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_llist$)) (= (ltake$ ?v0 (lappend$ ?v1 ?v2)) (lappend$ (ltake$ ?v0 ?v1) (ltake$ (fun_app$a (minus$ ?v0) (llength$a ?v1)) ?v2)))))
(assume a292 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 B_llist$)) (= (ltake$a ?v0 (lappend$h ?v1 ?v2)) (lappend$h (ltake$a ?v0 ?v1) (ltake$a (fun_app$a (minus$ ?v0) (llength$b ?v1)) ?v2)))))
(assume a293 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 A_llist$)) (= (ltake$ (fun_app$a (plus$ ?v0) ?v1) ?v2) (lappend$ (ltake$ ?v0 ?v2) (ltake$ ?v1 (ldrop$ ?v0 ?v2))))))
(assume a294 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 A_b_prod_llist$)) (= (ltake$g (fun_app$a (plus$ ?v0) ?v1) ?v2) (lappend$a (ltake$g ?v0 ?v2) (ltake$g ?v1 (ldrop$b ?v0 ?v2))))))
(assume a295 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 B_llist$)) (= (ltake$a (fun_app$a (plus$ ?v0) ?v1) ?v2) (lappend$h (ltake$a ?v0 ?v2) (ltake$a ?v1 (ldrop$c ?v0 ?v2))))))
(assume a296 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat$)) (=> (and (= ?v0 ?v1) (= ?v2 ?v3)) (= (fun_app$a (plus$ ?v0) ?v2) (fun_app$a (plus$ ?v1) ?v3)))))
(assume a297 (forall ((?v0 Enat$) (?v1 Enat$)) (= (fun_app$a (plus$ ?v0) ?v1) (fun_app$a (plus$ ?v1) ?v0))))
(assume a298 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$a (plus$ ?v0) (fun_app$a (plus$ ?v1) ?v2)) (fun_app$a (plus$ ?v1) (fun_app$a (plus$ ?v0) ?v2)))))
(assume a299 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$a (plus$ (fun_app$a (plus$ ?v0) ?v1)) ?v2) (fun_app$a (plus$ ?v0) (fun_app$a (plus$ ?v1) ?v2)))))
(assume a300 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat$)) (=> (and (= ?v0 ?v1) (fun_app$ (less_eq$ ?v2) ?v3)) (fun_app$ (less_eq$ (fun_app$a (plus$ ?v0) ?v2)) (fun_app$a (plus$ ?v1) ?v3)))))
(assume a301 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (= ?v2 ?v3)) (fun_app$ (less_eq$ (fun_app$a (plus$ ?v0) ?v2)) (fun_app$a (plus$ ?v1) ?v3)))))
(assume a302 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$) (?v3 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v2) ?v3)) (fun_app$ (less_eq$ (fun_app$a (plus$ ?v0) ?v2)) (fun_app$a (plus$ ?v1) ?v3)))))
(assume a303 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ (fun_app$a (plus$ ?v0) ?v2)) (fun_app$a (plus$ ?v1) ?v2)))))
(assume a304 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ (fun_app$a (plus$ ?v2) ?v0)) (fun_app$a (plus$ ?v2) ?v1)))))
(assume a305 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (not (= ?v0 infinity$)) (= (fun_app$a (minus$ (fun_app$a (plus$ ?v0) ?v1)) ?v0) ?v1))))
(assume a306 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ ?v0) ?v2)) (= (= (fun_app$a (minus$ ?v1) ?v0) (fun_app$a (minus$ ?v2) ?v0)) (= ?v1 ?v2)))))
(assume a307 (forall ((?v0 Enat$) (?v1 Enat$)) (fun_app$ (less_eq$ ?v0) (fun_app$a (plus$ ?v1) ?v0))))
(assume a308 (forall ((?v0 Enat$) (?v1 Enat$)) (fun_app$ (less_eq$ ?v0) (fun_app$a (plus$ ?v0) ?v1))))
(assume a309 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (fun_app$ (less_eq$ ?v0) ?v1) (fun_app$ (less_eq$ (fun_app$a (minus$ ?v0) ?v2)) (fun_app$a (minus$ ?v1) ?v2)))))
(assume a310 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$)) (= (llength$ (ldrop$b ?v0 ?v1)) (ite (= ?v0 infinity$) zero$ (fun_app$a (minus$ (llength$ ?v1)) ?v0)))))
(assume a311 (forall ((?v0 Enat$) (?v1 A_llist$)) (= (llength$a (ldrop$ ?v0 ?v1)) (ite (= ?v0 infinity$) zero$ (fun_app$a (minus$ (llength$a ?v1)) ?v0)))))
(assume a312 (forall ((?v0 Enat$) (?v1 B_llist$)) (= (llength$b (ldrop$c ?v0 ?v1)) (ite (= ?v0 infinity$) zero$ (fun_app$a (minus$ (llength$b ?v1)) ?v0)))))
(assume a313 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$) (?v2 A_b_prod_llist$)) (= (ldrop$b ?v0 (lappend$a ?v1 ?v2)) (ite (fun_app$ (less$ ?v0) (llength$ ?v1)) (lappend$a (ldrop$b ?v0 ?v1) ?v2) (ldrop$b (fun_app$a (minus$ ?v0) (llength$ ?v1)) ?v2)))))
(assume a314 (forall ((?v0 Enat$) (?v1 A_llist$) (?v2 A_llist$)) (= (ldrop$ ?v0 (lappend$ ?v1 ?v2)) (ite (fun_app$ (less$ ?v0) (llength$a ?v1)) (lappend$ (ldrop$ ?v0 ?v1) ?v2) (ldrop$ (fun_app$a (minus$ ?v0) (llength$a ?v1)) ?v2)))))
(assume a315 (forall ((?v0 Enat$) (?v1 B_llist$) (?v2 B_llist$)) (= (ldrop$c ?v0 (lappend$h ?v1 ?v2)) (ite (fun_app$ (less$ ?v0) (llength$b ?v1)) (lappend$h (ldrop$c ?v0 ?v1) ?v2) (ldrop$c (fun_app$a (minus$ ?v0) (llength$b ?v1)) ?v2)))))
(assume a316 (forall ((?v0 Enat$)) (= (fun_app$a (plus$ zero$) ?v0) ?v0)))
(assume a317 (forall ((?v0 Enat$)) (= (fun_app$a (plus$ ?v0) zero$) ?v0)))
(assume a318 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (= (fun_app$ (less$ ?v0) (fun_app$a (min$ ?v1) ?v2)) (and (fun_app$ (less$ ?v0) ?v1) (fun_app$ (less$ ?v0) ?v2)))))
(assume a319 (forall ((?v0 Enat$)) (= (fun_app$ (less_eq$ ?v0) zero$) (= ?v0 zero$))))
(assume a320 (forall ((?v0 Enat$)) (= (fun_app$ (less$ zero$) ?v0) (not (= ?v0 zero$)))))
(assume a321 (forall ((?v0 A_llist$)) (= (ldrop$ zero$ ?v0) ?v0)))
(assume a322 (forall ((?v0 B_llist$)) (= (ldrop$c zero$ ?v0) ?v0)))
(assume a323 (forall ((?v0 Enat$)) (= (fun_app$ (less$ ?v0) infinity$) (not (= ?v0 infinity$)))))
(assume a324 (forall ((?v0 Enat$)) (= (fun_app$ (less$ infinity$) ?v0) false)))
(assume a325 (forall ((?v0 Enat$)) (= (fun_app$a (minus$ zero$) ?v0) zero$)))
(assume a326 (forall ((?v0 Enat$)) (= (fun_app$a (minus$ ?v0) zero$) ?v0)))
(assume a327 (forall ((?v0 Enat$)) (= (fun_app$a (min$ ?v0) zero$) zero$)))
(assume a328 (forall ((?v0 Enat$)) (= (fun_app$a (min$ zero$) ?v0) zero$)))
(assume a329 (forall ((?v0 Enat$)) (=> (not (= ?v0 infinity$)) (= (fun_app$a (minus$ ?v0) ?v0) zero$))))
(assume a330 (forall ((?v0 Enat$) (?v1 A_llist$)) (= (lfinite$g (ltake$ ?v0 ?v1)) (or (lfinite$g ?v1) (fun_app$ (less$ ?v0) infinity$)))))
(assume a331 (forall ((?v0 Enat$) (?v1 B_llist$)) (= (lfinite$h (ltake$a ?v0 ?v1)) (or (lfinite$h ?v1) (fun_app$ (less$ ?v0) infinity$)))))
(assume a332 (forall ((?v0 Enat$) (?v1 A_b_prod_llist$)) (= (lfinite$ (ltake$g ?v0 ?v1)) (or (lfinite$ ?v1) (fun_app$ (less$ ?v0) infinity$)))))
(assume a333 (forall ((?v0 Enat$) (?v1 Enat$)) (= (= (fun_app$a (plus$ ?v0) ?v1) zero$) (and (= ?v0 zero$) (= ?v1 zero$)))))
(assume a334 (forall ((?v0 Enat$)) (=> (and (=> (= ?v0 zero$) false) (=> (not (= ?v0 zero$)) false)) false)))
(assume a335 (forall ((?v0 Enat$) (?v1 Enat$)) (= (= (fun_app$a (min$ ?v0) ?v1) zero$) (or (= ?v0 zero$) (= ?v1 zero$)))))
(assume a336 (forall ((?v0 Enat$) (?v1 Enat$)) (= (not (= ?v0 ?v1)) (or (fun_app$ (less$ ?v0) ?v1) (fun_app$ (less$ ?v1) ?v0)))))
(assume a337 (forall ((?v0 Enat$) (?v1 Enat$)) (= (not (fun_app$ (less$ ?v0) ?v1)) (or (fun_app$ (less$ ?v1) ?v0) (= ?v0 ?v1)))))
(assume a338 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (=> (fun_app$ (less$ ?v0) ?v1) false) (and (=> (= ?v0 ?v1) false) (=> (fun_app$ (less$ ?v1) ?v0) false))) false)))
(assume a339 (forall ((?v0 Enat_bool_fun$) (?v1 Enat$)) (=> (forall ((?v2 Enat$)) (=> (forall ((?v3 Enat$)) (=> (fun_app$ (less$ ?v3) ?v2) (fun_app$ ?v0 ?v3))) (fun_app$ ?v0 ?v2))) (fun_app$ ?v0 ?v1))))
(assume a340 (forall ((?v0 Enat$) (?v1 Enat_enat_fun$) (?v2 Enat$) (?v3 Enat$)) (=> (and (= ?v0 (fun_app$a ?v1 ?v2)) (and (fun_app$ (less$ ?v2) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$ (less$ ?v4) ?v5) (fun_app$ (less$ (fun_app$a ?v1 ?v4)) (fun_app$a ?v1 ?v5)))))) (fun_app$ (less$ ?v0) (fun_app$a ?v1 ?v3)))))
(assume a341 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (= ?v0 ?v1) (fun_app$ (less$ ?v1) ?v2)) (fun_app$ (less$ ?v0) ?v2))))
(assume a342 (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (fun_app$ (less$ ?v0) ?v1) (=> (not false) (fun_app$ (less$ ?v1) ?v0))) false)))
(assume a343 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_enat_fun$) (?v3 Enat$)) (=> (and (fun_app$ (less$ ?v0) ?v1) (and (= (fun_app$a ?v2 ?v1) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$ (less$ ?v4) ?v5) (fun_app$ (less$ (fun_app$a ?v2 ?v4)) (fun_app$a ?v2 ?v5)))))) (fun_app$ (less$ (fun_app$a ?v2 ?v0)) ?v3))))
(assume a344 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$ (less$ ?v0) ?v1) (= ?v1 ?v2)) (fun_app$ (less$ ?v0) ?v2))))
(assume a345 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat_enat_fun$) (?v3 Enat$)) (=> (and (fun_app$ (less$ ?v0) ?v1) (and (fun_app$ (less$ (fun_app$a ?v2 ?v1)) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$ (less$ ?v4) ?v5) (fun_app$ (less$ (fun_app$a ?v2 ?v4)) (fun_app$a ?v2 ?v5)))))) (fun_app$ (less$ (fun_app$a ?v2 ?v0)) ?v3))))
(assume a346 (forall ((?v0 Enat$) (?v1 Enat_enat_fun$) (?v2 Enat$) (?v3 Enat$)) (=> (and (fun_app$ (less$ ?v0) (fun_app$a ?v1 ?v2)) (and (fun_app$ (less$ ?v2) ?v3) (forall ((?v4 Enat$) (?v5 Enat$)) (=> (fun_app$ (less$ ?v4) ?v5) (fun_app$ (less$ (fun_app$a ?v1 ?v4)) (fun_app$a ?v1 ?v5)))))) (fun_app$ (less$ ?v0) (fun_app$a ?v1 ?v3)))))
(assume a347 (forall ((?v0 Enat$) (?v1 Enat$) (?v2 Enat$)) (=> (and (fun_app$ (less$ ?v0) ?v1) (fun_app$ (less$ ?v2) ?v0)) (fun_app$ (less$ ?v2) ?v1))))
(step t0 (cl (! (=> (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0)))) (! (or (! (not (! (fun_app$ (! (less_eq$ @p_5) :named @p_28) @p_1) :named @p_29)) :named @p_30) @p_3) :named @p_31)) :named @p_42) (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0))))) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0)))))
(step t1.t0 (cl (or (! (not (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0))))) :named @p_41) @p_31)) :rule forall_inst :args (xs$ @p_1))
(step t1.t1 (cl @p_41 @p_31) :rule or :premises (t1.t0))
(step t1.t2 (cl (not (! (= (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) (= (ltake$ ?v1 ?v0) ?v0))) (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0))))) :named @p_21)) (not (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) (= (ltake$ ?v1 ?v0) ?v0)))) (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0))))) :rule equiv_pos2)
(anchor :step t1.t3 :args ((?v0 A_llist$) (?v1 Enat$) (:= (?v0 A_llist$) ?v0) (:= (?v1 Enat$) ?v1)))
(step t1.t3.t0 (cl (= (! (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) :named @p_25) @p_25)) :rule refl)
(step t1.t3.t1 (cl (! (= (! (= (! (ltake$ ?v1 ?v0) :named @p_23) ?v0) :named @p_26) (! (= ?v0 @p_23) :named @p_24)) :named @p_27)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_27 2 6))
(step t1.t3.t2 (cl (= (=> @p_25 @p_26) (=> @p_25 @p_24))) :rule cong :premises (t1.t3.t0 t1.t3.t1))
(step t1.t3 (cl (= (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) (= (ltake$ ?v1 ?v0) ?v0))) (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) (= ?v0 (ltake$ ?v1 ?v0)))))) :rule bind)
(step t1.t4 (cl (! (= (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) (= ?v0 (ltake$ ?v1 ?v0)))) (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0))))) :named @p_22)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_22 13 6))
(step t1.t5 (cl @p_21) :rule trans :premises (t1.t3 t1.t4))
(step t1.t6 (cl (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0))))) :rule resolution :premises (t1.t2 t1.t5 a23))
(step t1.t7 (cl @p_31) :rule resolution :premises (t1.t1 t1.t6))
(step t1 (cl @p_41 @p_31) :rule subproof :discharge (t1.a0))
(step t2 (cl @p_42 @p_31) :rule resolution :premises (t0 t1))
(step t3 (cl @p_42 (! (not @p_31) :named @p_32)) :rule implies_neg2)
(step t4 (cl @p_42 @p_42) :rule resolution :premises (t2 t3))
(step t5 (cl @p_42) :rule contraction :premises (t4))
(step t6 (cl @p_41 @p_31) :rule implies :premises (t5))
(step t7 (cl @p_32 @p_30 @p_3) :rule or_pos)
(step t8 (cl @p_3 @p_30 @p_32) :rule reordering :premises (t7))
(step t9 (cl (= (! (= @p_29 true) :named @p_33) @p_29)) :rule equiv_simplify)
(step t10 (cl (not @p_33) @p_29) :rule equiv1 :premises (t9))
(step t11 (cl (not (! (= @p_7 (! (= @p_1 @p_5) :named @p_35)) :named @p_36)) (not @p_7) @p_35) :rule equiv_pos2)
(step t12 (cl (! (= @p_7 (! (= infinity$ @p_1) :named @p_37)) :named @p_40)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_40 2 6))
(step t13 (cl (= infinity$ @p_5)) :rule symm :premises (a1))
(step t14 (cl (= @p_1 @p_1)) :rule refl)
(step t15 (cl (= @p_37 (! (= @p_5 @p_1) :named @p_38))) :rule cong :premises (t13 t14))
(step t16 (cl (! (= @p_38 @p_35) :named @p_39)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_39 2 6))
(step t17 (cl (= @p_37 @p_35)) :rule trans :premises (t15 t16))
(step t18 (cl @p_36) :rule trans :premises (t12 t17))
(step t19 (cl @p_35) :rule resolution :premises (t11 t18 a2))
(step t20 (cl @p_38) :rule symm :premises (t19))
(step t21 (cl (= @p_28 @p_9)) :rule cong :premises (t20))
(step t22 (cl (= @p_29 @p_10)) :rule cong :premises (t21 t19))
(step t23 (cl (= (! (= @p_10 true) :named @p_34) @p_10)) :rule equiv_simplify)
(step t24 (cl @p_34 (not @p_10)) :rule equiv2 :premises (t23))
(step t25 (cl @p_34) :rule resolution :premises (t24 a4))
(step t26 (cl @p_33) :rule trans :premises (t22 t25))
(step t27 (cl @p_29) :rule resolution :premises (t10 t26))
(step t28 (cl @p_32) :rule resolution :premises (t8 a0 t27))
(step t29 (cl (not @p_21) (not (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) (= (ltake$ ?v1 ?v0) ?v0)))) (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0))))) :rule equiv_pos2)
(anchor :step t30 :args ((?v0 A_llist$) (?v1 Enat$) (:= (?v0 A_llist$) ?v0) (:= (?v1 Enat$) ?v1)))
(step t30.t0 (cl (= @p_25 @p_25)) :rule refl)
(step t30.t1 (cl @p_27) :rule hole :args ("TRUST_THEORY_REWRITE" @p_27 2 6))
(step t30.t2 (cl (= (=> @p_25 @p_26) (=> @p_25 @p_24))) :rule cong :premises (t30.t0 t30.t1))
(step t30 (cl (= (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) (= (ltake$ ?v1 ?v0) ?v0))) (forall ((?v0 A_llist$) (?v1 Enat$)) (=> (fun_app$ (less_eq$ (llength$a ?v0)) ?v1) (= ?v0 (ltake$ ?v1 ?v0)))))) :rule bind)
(step t31 (cl @p_22) :rule hole :args ("TRUST_THEORY_REWRITE" @p_22 13 6))
(step t32 (cl @p_21) :rule trans :premises (t30 t31))
(step t33 (cl (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0))))) :rule resolution :premises (t29 t32 a23))
(step t34 (cl) :rule resolution :premises (t6 t28 t33))
