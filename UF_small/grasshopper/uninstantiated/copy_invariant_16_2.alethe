unsat
(assume a0 (forall ((?f FldLoc)) (= (read$0 ?f null$0) null$0)))
(assume a1 (forall ((x Loc) (y Loc)) (or (and (= x y) (in$0 x (setenum$0 y))) (and (not (= x y)) (not (in$0 x (setenum$0 y)))))))
(assume a2 (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x X) (in$0 x (setminus$0 X Y)) (not (in$0 x Y))) (and (or (in$0 x Y) (not (in$0 x X))) (not (in$0 x (setminus$0 X Y)))))))
(assume a3 (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x X) (in$0 x Y) (in$0 x (intersection$0 X Y))) (and (or (not (in$0 x X)) (not (in$0 x Y))) (not (in$0 x (intersection$0 X Y)))))))
(assume a4 (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x (union$0 X Y)) (or (in$0 x X) (in$0 x Y))) (and (not (in$0 x X)) (not (in$0 x Y)) (not (in$0 x (union$0 X Y)))))))
(assume a5 (forall ((x Loc)) (not (in$0 x emptyset$0))))
(assume a6 (! (or (! (Btwn$0 next$0 curr_2$0 null$0 null$0) :named @p_3) (! (not (! (lseg_struct$0 sk_?X_4$0 next$0 curr_2$0 null$0) :named @p_1)) :named @p_2)) :named @p_4))
(assume a7 (or (! (Btwn$0 next$0 lst$0 curr_2$0 curr_2$0) :named @p_5) (not (lseg_struct$0 sk_?X_5$0 next$0 lst$0 curr_2$0))))
(assume a8 (! (= cp_2$0 null$0) :named @p_6))
(assume a9 (= Alloc$0 (union$0 FP_Caller$0 Alloc$0)))
(assume a10 (! (= sk_?X$0 (! (lseg_domain$0 next$0 lst$0 null$0) :named @p_7)) :named @p_8))
(assume a11 (! (lseg_struct$0 sk_?X$0 next$0 lst$0 null$0) :named @p_9))
(assume a12 (! (= sk_?X_2$0 (! (lseg_domain$0 next$0 cp_2$0 null$0) :named @p_10)) :named @p_11))
(assume a13 (! (= sk_?X_4$0 (! (lseg_domain$0 next$0 curr_2$0 null$0) :named @p_12)) :named @p_13))
(assume a14 (! (= sk_FP$0 sk_?X_1$0) :named @p_14))
(assume a15 (not (in$0 null$0 Alloc$0)))
(assume a16 (forall ((l1 Loc)) (or (and (Btwn$0 next$0 curr_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 curr_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 curr_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 curr_2$0 null$0)))))))
(assume a17 (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= l1 curr_2$0))) (and (or (= l1 curr_2$0) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)))))))
(assume a18 (forall ((?X SetLoc) (?f FldLoc) (?x Loc)) (or (in$0 (ep$0 ?f ?X ?x) ?X) (= ?x (ep$0 ?f ?X ?x)))))
(assume a19 (forall ((?X SetLoc) (?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x (ep$0 ?f ?X ?x) (ep$0 ?f ?X ?x))))
(assume a20 (or (! (Btwn$0 next$0 cp_2$0 null$0 null$0) :named @p_15) (not (lseg_struct$0 sk_?X_2$0 next$0 cp_2$0 null$0))))
(assume a21 (or (Btwn$0 next$0 lst$0 null$0 null$0) (! (not @p_9) :named @p_16)))
(assume a22 (= FP_Caller_1$0 (setminus$0 FP_Caller$0 FP$0)))
(assume a23 (! (= curr_2$0 lst$0) :named @p_17))
(assume a24 (! (= sk_?X$0 FP$0) :named @p_18))
(assume a25 (= FP_Caller$0 (union$0 FP$0 FP_Caller$0)))
(assume a26 (! (= sk_?X_1$0 (! (union$0 sk_?X_3$0 sk_?X_2$0) :named @p_19)) :named @p_20))
(assume a27 (! (= sk_?X_3$0 (! (union$0 sk_?X_5$0 sk_?X_4$0) :named @p_21)) :named @p_22))
(assume a28 (! (= sk_?X_5$0 (! (lseg_domain$0 next$0 lst$0 curr_2$0) :named @p_23)) :named @p_24))
(assume a29 (! (or (! (in$0 sk_?e$0 (! (intersection$0 sk_?X_3$0 sk_?X_2$0) :named @p_34)) :named @p_35) (! (in$0 sk_?e$0 (! (intersection$0 sk_?X_5$0 sk_?X_4$0) :named @p_32)) :named @p_33) (! (and (! (in$0 sk_?e$0 sk_FP$0) :named @p_30) (! (not (! (in$0 sk_?e$0 FP$0) :named @p_28)) :named @p_29)) :named @p_31) (! (not @p_15) :named @p_27) (! (not @p_3) :named @p_26) (! (not @p_5) :named @p_25)) :named @p_36))
(assume a30 (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))))
(assume a31 (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)))))))
(assume a32 (forall ((?X SetLoc) (?f FldLoc) (?x Loc) (?y Loc)) (or (Btwn$0 ?f ?x (ep$0 ?f ?X ?x) ?y) (not (Btwn$0 ?f ?x ?y ?y)) (not (in$0 ?y ?X)))))
(assume a33 (forall ((?X SetLoc) (?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?y)) (not (in$0 ?y ?X)) (in$0 (ep$0 ?f ?X ?x) ?X))))
(assume a34 (forall ((?f FldLoc) (?u Loc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?z)) (not (Btwn$0 ?f ?x ?u ?y)) (and (Btwn$0 ?f ?x ?u ?z) (Btwn$0 ?f ?u ?y ?z)))))
(assume a35 (forall ((?f FldLoc) (?u Loc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?z)) (not (Btwn$0 ?f ?y ?u ?z)) (and (Btwn$0 ?f ?x ?y ?u) (Btwn$0 ?f ?x ?u ?z)))))
(assume a36 (forall ((?f FldLoc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?y)) (not (Btwn$0 ?f ?y ?z ?z)) (Btwn$0 ?f ?x ?z ?z))))
(assume a37 (forall ((?f FldLoc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?z)) (and (Btwn$0 ?f ?x ?y ?y) (Btwn$0 ?f ?y ?z ?z)))))
(assume a38 (forall ((?f FldLoc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?y)) (not (Btwn$0 ?f ?x ?z ?z)) (Btwn$0 ?f ?x ?y ?z) (Btwn$0 ?f ?x ?z ?y))))
(assume a39 (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?x)) (= ?x ?y))))
(assume a40 (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y) (Btwn$0 ?f ?x (read$0 ?f ?x) ?y))))
(assume a41 (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (= (read$0 ?f ?x) ?x)) (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y))))
(assume a42 (forall ((?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x (read$0 ?f ?x) (read$0 ?f ?x))))
(assume a43 (forall ((?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x ?x ?x)))
(step t0 (cl (! (=> (forall ((?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x ?x ?x)) (! (Btwn$0 next$0 lst$0 lst$0 lst$0) :named @p_37)) :named @p_355) (forall ((?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x ?x ?x))) :rule implies_neg1)
(anchor :step t1)
(assume t1.a0 (forall ((?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x ?x ?x)))
(step t1.t0 (cl (or (! (not (forall ((?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x ?x ?x))) :named @p_354) @p_37)) :rule forall_inst :args (next$0 lst$0))
(step t1.t1 (cl @p_354 @p_37) :rule or :premises (t1.t0))
(step t1.t2 (cl @p_37) :rule resolution :premises (t1.t1 t1.a0))
(step t1 (cl @p_354 @p_37) :rule subproof :discharge (t1.a0))
(step t2 (cl @p_355 @p_37) :rule resolution :premises (t0 t1))
(step t3 (cl @p_355 (! (not @p_37) :named @p_38)) :rule implies_neg2)
(step t4 (cl @p_355 @p_355) :rule resolution :premises (t2 t3))
(step t5 (cl @p_355) :rule contraction :premises (t4))
(step t6 (cl @p_354 @p_37) :rule implies :premises (t5))
(step t7 (cl @p_37 @p_354) :rule reordering :premises (t6))
(step t8 (cl (not (! (= @p_36 (! (or (! (in$0 sk_?e$0 (! (intersection$0 (! (union$0 (! (lseg_domain$0 next$0 lst$0 lst$0) :named @p_41) (! (lseg_domain$0 next$0 lst$0 cp_2$0) :named @p_40)) :named @p_42) (! (lseg_domain$0 next$0 cp_2$0 cp_2$0) :named @p_39)) :named @p_43)) :named @p_44) (! (in$0 sk_?e$0 (! (intersection$0 @p_41 @p_40) :named @p_156)) :named @p_157) (! (and (! (in$0 sk_?e$0 (! (union$0 @p_42 @p_39) :named @p_271)) :named @p_272) (! (not (! (in$0 sk_?e$0 @p_40) :named @p_252)) :named @p_253)) :named @p_273) (! (not (! (Btwn$0 next$0 cp_2$0 cp_2$0 cp_2$0) :named @p_320)) :named @p_338) (! (not (! (Btwn$0 next$0 lst$0 cp_2$0 cp_2$0) :named @p_321)) :named @p_323) @p_38) :named @p_339)) :named @p_340)) (not @p_36) @p_339) :rule equiv_pos2)
(step t9 (cl (= sk_?e$0 sk_?e$0)) :rule refl)
(step t10 (cl (not (! (= @p_22 (! (= sk_?X_3$0 (! (union$0 sk_?X_5$0 @p_40) :named @p_345)) :named @p_348)) :named @p_349)) (not @p_22) @p_348) :rule equiv_pos2)
(step t11 (cl (= sk_?X_3$0 sk_?X_3$0)) :rule refl)
(step t12 (cl (= sk_?X_5$0 sk_?X_5$0)) :rule refl)
(step t13 (cl (not (! (= @p_13 (! (= sk_?X_4$0 (! (lseg_domain$0 next$0 curr_2$0 cp_2$0) :named @p_333)) :named @p_334)) :named @p_335)) (not @p_13) @p_334) :rule equiv_pos2)
(step t14 (cl (= sk_?X_4$0 sk_?X_4$0)) :rule refl)
(step t15 (cl (= next$0 next$0)) :rule refl)
(step t16 (cl (! (= curr_2$0 curr_2$0) :named @p_205)) :rule refl)
(step t17 (cl (= null$0 cp_2$0)) :rule symm :premises (a8))
(step t18 (cl (= @p_12 @p_333)) :rule cong :premises (t15 t16 t17))
(step t19 (cl @p_335) :rule cong :premises (t14 t18))
(step t20 (cl @p_334) :rule resolution :premises (t13 t19 a13))
(step t21 (cl (= cp_2$0 cp_2$0)) :rule refl)
(step t22 (cl (= @p_333 @p_40)) :rule cong :premises (t15 a23 t21))
(step t23 (cl (= sk_?X_4$0 @p_40)) :rule trans :premises (t20 t22))
(step t24 (cl (= @p_21 @p_345)) :rule cong :premises (t12 t23))
(step t25 (cl @p_349) :rule cong :premises (t11 t24))
(step t26 (cl @p_348) :rule resolution :premises (t10 t25 a27))
(step t27 (cl (not (! (= @p_24 (! (= sk_?X_5$0 @p_41) :named @p_346)) :named @p_347)) (not @p_24) @p_346) :rule equiv_pos2)
(step t28 (cl (= lst$0 lst$0)) :rule refl)
(step t29 (cl (= @p_23 @p_41)) :rule cong :premises (t15 t28 a23))
(step t30 (cl @p_347) :rule cong :premises (t12 t29))
(step t31 (cl @p_346) :rule resolution :premises (t27 t30 a28))
(step t32 (cl (= @p_40 @p_40)) :rule refl)
(step t33 (cl (= @p_345 @p_42)) :rule cong :premises (t31 t32))
(step t34 (cl (= sk_?X_3$0 @p_42)) :rule trans :premises (t26 t33))
(step t35 (cl (not (! (= @p_11 (! (= sk_?X_2$0 @p_39) :named @p_352)) :named @p_353)) (not @p_11) @p_352) :rule equiv_pos2)
(step t36 (cl (= sk_?X_2$0 sk_?X_2$0)) :rule refl)
(step t37 (cl (= @p_10 @p_39)) :rule cong :premises (t15 t21 t17))
(step t38 (cl @p_353) :rule cong :premises (t36 t37))
(step t39 (cl @p_352) :rule resolution :premises (t35 t38 a12))
(step t40 (cl (= @p_34 @p_43)) :rule cong :premises (t34 t39))
(step t41 (cl (= @p_35 @p_44)) :rule cong :premises (t9 t40))
(step t42 (cl (= @p_32 @p_156)) :rule cong :premises (t31 t23))
(step t43 (cl (= @p_33 @p_157)) :rule cong :premises (t9 t42))
(step t44 (cl (not (! (= @p_20 (! (= sk_FP$0 (! (union$0 sk_?X_3$0 @p_39) :named @p_344)) :named @p_350)) :named @p_351)) (not @p_20) @p_350) :rule equiv_pos2)
(step t45 (cl (= sk_?X_1$0 sk_FP$0)) :rule symm :premises (a14))
(step t46 (cl (= @p_19 @p_344)) :rule cong :premises (t11 t39))
(step t47 (cl @p_351) :rule cong :premises (t45 t46))
(step t48 (cl @p_350) :rule resolution :premises (t44 t47 a26))
(step t49 (cl (= @p_39 @p_39)) :rule refl)
(step t50 (cl (= @p_344 @p_271)) :rule cong :premises (t34 t49))
(step t51 (cl (= sk_FP$0 @p_271)) :rule trans :premises (t48 t50))
(step t52 (cl (= @p_30 @p_272)) :rule cong :premises (t9 t51))
(step t53 (cl (not (! (= (! (= FP$0 sk_?X$0) :named @p_342) (! (= FP$0 @p_40) :named @p_341)) :named @p_343)) (not @p_342) @p_341) :rule equiv_pos2)
(step t54 (cl (= FP$0 FP$0)) :rule refl)
(step t55 (cl (not (! (= @p_8 (! (= sk_?X$0 @p_40) :named @p_328)) :named @p_329)) (not @p_8) @p_328) :rule equiv_pos2)
(step t56 (cl (= sk_?X$0 sk_?X$0)) :rule refl)
(step t57 (cl (= @p_7 @p_40)) :rule cong :premises (t15 t28 t17))
(step t58 (cl @p_329) :rule cong :premises (t56 t57))
(step t59 (cl @p_328) :rule resolution :premises (t55 t58 a10))
(step t60 (cl @p_343) :rule cong :premises (t54 t59))
(step t61 (cl @p_342) :rule symm :premises (a24))
(step t62 (cl @p_341) :rule resolution :premises (t53 t60 t61))
(step t63 (cl (= @p_28 @p_252)) :rule cong :premises (t9 t62))
(step t64 (cl (= @p_29 @p_253)) :rule cong :premises (t63))
(step t65 (cl (= @p_31 @p_273)) :rule cong :premises (t52 t64))
(step t66 (cl (= @p_15 @p_320)) :rule cong :premises (t15 t21 t17 t17))
(step t67 (cl (= @p_27 @p_338)) :rule cong :premises (t66))
(step t68 (cl (= @p_3 @p_321)) :rule cong :premises (t15 a23 t17 t17))
(step t69 (cl (= @p_26 @p_323)) :rule cong :premises (t68))
(step t70 (cl (= @p_5 @p_37)) :rule cong :premises (t15 t28 a23 a23))
(step t71 (cl (= @p_25 @p_38)) :rule cong :premises (t70))
(step t72 (cl @p_340) :rule cong :premises (t41 t43 t65 t67 t69 t71))
(step t73 (cl @p_339) :rule resolution :premises (t8 t72 a29))
(step t74 (cl @p_44 @p_157 @p_273 @p_338 @p_323 @p_38) :rule or :premises (t73))
(step t75 (cl @p_38 @p_323 @p_338 @p_273 @p_157 @p_44) :rule reordering :premises (t74))
(step t76 (cl (not (! (= @p_4 (! (or @p_321 (! (not (! (lseg_struct$0 @p_40 next$0 lst$0 cp_2$0) :named @p_326)) :named @p_330)) :named @p_331)) :named @p_332)) (not @p_4) @p_331) :rule equiv_pos2)
(step t77 (cl (= @p_1 @p_326)) :rule cong :premises (t23 t15 a23 t17))
(step t78 (cl (= @p_2 @p_330)) :rule cong :premises (t77))
(step t79 (cl @p_332) :rule cong :premises (t68 t78))
(step t80 (cl @p_331) :rule resolution :premises (t76 t79 a6))
(step t81 (cl @p_321 @p_330) :rule or :premises (t80))
(step t82 (cl (not (! (= @p_9 @p_326) :named @p_327)) @p_16 @p_326) :rule equiv_pos2)
(step t83 (cl @p_327) :rule cong :premises (t59 t15 t28 t17))
(step t84 (cl @p_326) :rule resolution :premises (t82 t83 a11))
(step t85 (cl @p_321) :rule resolution :premises (t81 t84))
(step t86 (cl (! (not (! (and @p_321 @p_320) :named @p_322)) :named @p_337) @p_320) :rule and_pos :args (1))
(step t87 (cl @p_320 @p_337) :rule reordering :premises (t86))
(step t88 (cl (! (not (! (or @p_323 @p_323 @p_322) :named @p_324)) :named @p_336) @p_323 @p_323 @p_322) :rule or_pos)
(step t89 (cl @p_336 @p_323 @p_322) :rule contraction :premises (t88))
(step t90 (cl @p_323 @p_322 @p_336) :rule reordering :premises (t89))
(step t91 (cl (or (! (not (forall ((?f FldLoc) (?u Loc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?z)) (not (Btwn$0 ?f ?x ?u ?y)) (and (Btwn$0 ?f ?x ?u ?z) (Btwn$0 ?f ?u ?y ?z))))) :named @p_325) @p_324)) :rule forall_inst :args (next$0 cp_2$0 lst$0 cp_2$0 cp_2$0))
(step t92 (cl @p_325 @p_324) :rule or :premises (t91))
(step t93 (cl @p_324) :rule resolution :premises (t92 a34))
(step t94 (cl @p_322) :rule resolution :premises (t90 t85 t93))
(step t95 (cl @p_320) :rule resolution :premises (t87 t94))
(step t96 (cl (! (not (! (and @p_272 (! (or (! (in$0 sk_?e$0 @p_42) :named @p_48) (! (in$0 sk_?e$0 @p_39) :named @p_46)) :named @p_314)) :named @p_315)) :named @p_319) @p_314) :rule and_pos :args (1))
(step t97 (cl @p_314 @p_319) :rule reordering :premises (t96))
(step t98 (cl (! (not @p_314) :named @p_318) @p_48 @p_46) :rule or_pos)
(step t99 (cl @p_48 @p_46 @p_318) :rule reordering :premises (t98))
(step t100 (cl (not (! (= (! (or (! (not @p_46) :named @p_47) (! (not (! (= cp_2$0 sk_?e$0) :named @p_57)) :named @p_137) (! (not (! (not (! (in$0 cp_2$0 @p_39) :named @p_61)) :named @p_62)) :named @p_139)) :named @p_140) (! (or @p_47 @p_137 @p_61) :named @p_138)) :named @p_152)) (not @p_140) @p_138) :rule equiv_pos2)
(step t101 (cl (= @p_47 @p_47)) :rule refl)
(step t102 (cl (= @p_137 @p_137)) :rule refl)
(step t103 (cl (! (= @p_139 @p_61) :named @p_153)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_153 1 5))
(step t104 (cl @p_152) :rule cong :premises (t101 t102 t103))
(step t105 (cl (! (=> (! (and @p_46 @p_57 @p_62) :named @p_142) false) :named @p_144) @p_142) :rule implies_neg1)
(anchor :step t106)
(assume t106.a0 @p_46)
(assume t106.a1 @p_57)
(assume t106.a2 @p_62)
(step t106.t0 (cl (! (not (! (= (! (= false true) :named @p_146) false) :named @p_149)) :named @p_150) (! (not @p_146) :named @p_151) false) :rule equiv_pos2)
(step t106.t1 (cl @p_149) :rule hole :args ("TRUST_THEORY_REWRITE" @p_149 1 5))
(step t106.t2 (cl (= (! (= @p_61 false) :named @p_148) @p_62)) :rule equiv_simplify)
(step t106.t3 (cl @p_148 @p_139) :rule equiv2 :premises (t106.t2))
(step t106.t4 (cl (! (not @p_139) :named @p_141) @p_61) :rule not_not)
(step t106.t5 (cl @p_148 @p_61) :rule resolution :premises (t106.t3 t106.t4))
(step t106.t6 (cl (not (! (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (! (and (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0) (and (or (= cp_2$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 cp_2$0)))))) (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 cp_2$0)) (and (or (= cp_2$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 cp_2$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 cp_2$0)))))) @p_62) :named @p_63)) :named @p_64)) (not (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))))) @p_63) :rule equiv_pos2)
(anchor :step t106.t7 :args ((l1 Loc) (:= (l1 Loc) l1)))
(step t106.t7.t0 (cl (= (! (Btwn$0 next$0 cp_2$0 l1 null$0) :named @p_119) @p_119)) :rule refl)
(step t106.t7.t1 (cl (= (! (in$0 l1 @p_10) :named @p_117) @p_117)) :rule refl)
(step t106.t7.t2 (cl (! (= (! (= l1 null$0) :named @p_126) (! (= null$0 l1) :named @p_121)) :named @p_131)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_131 2 6))
(step t106.t7.t3 (cl (= (! (not @p_126) :named @p_129) (! (not @p_121) :named @p_124))) :rule cong :premises (t106.t7.t2))
(step t106.t7.t4 (cl (= (! (and @p_119 @p_117 @p_129) :named @p_130) (! (and @p_119 @p_117 @p_124) :named @p_125))) :rule cong :premises (t106.t7.t0 t106.t7.t1 t106.t7.t3))
(step t106.t7.t5 (cl (= (! (not @p_119) :named @p_120) @p_120)) :rule refl)
(step t106.t7.t6 (cl (= (! (or @p_126 @p_120) :named @p_127) (! (or @p_121 @p_120) :named @p_122))) :rule cong :premises (t106.t7.t2 t106.t7.t5))
(step t106.t7.t7 (cl (= (! (not @p_117) :named @p_118) @p_118)) :rule refl)
(step t106.t7.t8 (cl (= (! (and @p_127 @p_118) :named @p_128) (! (and @p_122 @p_118) :named @p_123))) :rule cong :premises (t106.t7.t6 t106.t7.t7))
(step t106.t7.t9 (cl (= (or @p_130 @p_128) (or @p_125 @p_123))) :rule cong :premises (t106.t7.t4 t106.t7.t8))
(step t106.t7 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= null$0 l1))) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))))) :rule bind)
(step t106.t8 (cl (! (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= null$0 l1))) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((l1 Loc)) (and (or (Btwn$0 next$0 cp_2$0 l1 null$0) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))) (or (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))) (or (not (= null$0 l1)) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))))) :named @p_115)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_115 13 6))
(step t106.t9 (cl (! (= (forall ((l1 Loc)) (and (or (Btwn$0 next$0 cp_2$0 l1 null$0) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))) (or (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))) (or (not (= null$0 l1)) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))))) (! (and (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0) (and (or (= null$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 null$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_805 Loc)) (or (not (= null$0 BOUND_VARIABLE_805)) (and (or (= null$0 BOUND_VARIABLE_805) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_805 null$0))) (not (in$0 BOUND_VARIABLE_805 (lseg_domain$0 next$0 cp_2$0 null$0))))))) :named @p_98)) :named @p_114)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_114 13 6))
(step t106.t10 (cl (= (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0) (and (or (= null$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0) (and (or (= null$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 null$0)))))))) :rule refl)
(step t106.t11 (cl (= (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 null$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 null$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)))))))) :rule refl)
(step t106.t12 (cl (! (= (forall ((BOUND_VARIABLE_805 Loc)) (or (not (= null$0 BOUND_VARIABLE_805)) (and (or (= null$0 BOUND_VARIABLE_805) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_805 null$0))) (not (in$0 BOUND_VARIABLE_805 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (! (or (! (not (! (= null$0 null$0) :named @p_99)) :named @p_102) (! (and (! (or @p_99 @p_27) :named @p_100) (! (not (! (in$0 null$0 @p_10) :named @p_65)) :named @p_66)) :named @p_101)) :named @p_103)) :named @p_113)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_113 13 6))
(step t106.t13 (cl (! (= @p_99 true) :named @p_110)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_110 2 5))
(step t106.t14 (cl (= @p_102 (! (not true) :named @p_111))) :rule cong :premises (t106.t13))
(step t106.t15 (cl (! (= @p_111 false) :named @p_112)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_112 1 6))
(step t106.t16 (cl (= @p_102 false)) :rule trans :premises (t106.t14 t106.t15))
(step t106.t17 (cl (= @p_27 @p_27)) :rule refl)
(step t106.t18 (cl (= @p_100 (! (or true @p_27) :named @p_108))) :rule cong :premises (t106.t13 t106.t17))
(step t106.t19 (cl (! (= @p_108 true) :named @p_109)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_109 1 6))
(step t106.t20 (cl (= @p_100 true)) :rule trans :premises (t106.t18 t106.t19))
(step t106.t21 (cl (= @p_66 @p_66)) :rule refl)
(step t106.t22 (cl (= @p_101 (! (and true @p_66) :named @p_106))) :rule cong :premises (t106.t20 t106.t21))
(step t106.t23 (cl (! (= @p_106 @p_66) :named @p_107)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_107 1 6))
(step t106.t24 (cl (= @p_101 @p_66)) :rule trans :premises (t106.t22 t106.t23))
(step t106.t25 (cl (= @p_103 (! (or false @p_66) :named @p_104))) :rule cong :premises (t106.t16 t106.t24))
(step t106.t26 (cl (! (= @p_104 @p_66) :named @p_105)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_105 1 6))
(step t106.t27 (cl (= @p_103 @p_66)) :rule trans :premises (t106.t25 t106.t26))
(step t106.t28 (cl (= (forall ((BOUND_VARIABLE_805 Loc)) (or (not (= null$0 BOUND_VARIABLE_805)) (and (or (= null$0 BOUND_VARIABLE_805) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_805 null$0))) (not (in$0 BOUND_VARIABLE_805 (lseg_domain$0 next$0 cp_2$0 null$0)))))) @p_66)) :rule trans :premises (t106.t12 t106.t27))
(step t106.t29 (cl (= @p_98 (! (and (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0) (and (or (= null$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 null$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)))))) @p_66) :named @p_67))) :rule cong :premises (t106.t10 t106.t11 t106.t28))
(step t106.t30 (cl (= (forall ((l1 Loc)) (and (or (Btwn$0 next$0 cp_2$0 l1 null$0) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))) (or (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))) (or (not (= null$0 l1)) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))))) @p_67)) :rule trans :premises (t106.t9 t106.t29))
(step t106.t31 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= null$0 l1))) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))) @p_67)) :rule trans :premises (t106.t8 t106.t30))
(step t106.t32 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))) @p_67)) :rule trans :premises (t106.t7 t106.t31))
(anchor :step t106.t33 :args ((BOUND_VARIABLE_781 Loc) (:= (BOUND_VARIABLE_781 Loc) BOUND_VARIABLE_781)))
(step t106.t33.t0 (cl (! (= BOUND_VARIABLE_781 BOUND_VARIABLE_781) :named @p_83)) :rule refl)
(step t106.t33.t1 (cl (= (! (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0) :named @p_93) (! (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0) :named @p_86))) :rule cong :premises (t15 t21 t106.t33.t0 t17))
(step t106.t33.t2 (cl (= (! (= null$0 BOUND_VARIABLE_781) :named @p_95) (! (= cp_2$0 BOUND_VARIABLE_781) :named @p_88))) :rule cong :premises (t17 t106.t33.t0))
(step t106.t33.t3 (cl (= (! (not @p_93) :named @p_94) (! (not @p_86) :named @p_87))) :rule cong :premises (t106.t33.t1))
(step t106.t33.t4 (cl (= (! (or @p_95 @p_94) :named @p_96) (! (or @p_88 @p_87) :named @p_89))) :rule cong :premises (t106.t33.t2 t106.t33.t3))
(step t106.t33.t5 (cl (= (! (in$0 BOUND_VARIABLE_781 @p_10) :named @p_91) (! (in$0 BOUND_VARIABLE_781 @p_39) :named @p_84))) :rule cong :premises (t106.t33.t0 t37))
(step t106.t33.t6 (cl (= (! (not @p_91) :named @p_92) (! (not @p_84) :named @p_85))) :rule cong :premises (t106.t33.t5))
(step t106.t33.t7 (cl (= (! (and @p_96 @p_92) :named @p_97) (! (and @p_89 @p_85) :named @p_90))) :rule cong :premises (t106.t33.t4 t106.t33.t6))
(step t106.t33.t8 (cl (= (or @p_93 @p_97) (or @p_86 @p_90))) :rule cong :premises (t106.t33.t1 t106.t33.t7))
(step t106.t33 (cl (= (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0) (and (or (= null$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0) (and (or (= cp_2$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 cp_2$0)))))))) :rule bind)
(anchor :step t106.t34 :args ((BOUND_VARIABLE_793 Loc) (:= (BOUND_VARIABLE_793 Loc) BOUND_VARIABLE_793)))
(step t106.t34.t0 (cl (! (= BOUND_VARIABLE_793 BOUND_VARIABLE_793) :named @p_68)) :rule refl)
(step t106.t34.t1 (cl (= (! (in$0 BOUND_VARIABLE_793 @p_10) :named @p_76) (! (in$0 BOUND_VARIABLE_793 @p_39) :named @p_69))) :rule cong :premises (t106.t34.t0 t37))
(step t106.t34.t2 (cl (= (! (= null$0 BOUND_VARIABLE_793) :named @p_80) (! (= cp_2$0 BOUND_VARIABLE_793) :named @p_73))) :rule cong :premises (t17 t106.t34.t0))
(step t106.t34.t3 (cl (= (! (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 null$0) :named @p_78) (! (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 cp_2$0) :named @p_71))) :rule cong :premises (t15 t21 t106.t34.t0 t17))
(step t106.t34.t4 (cl (= (! (not @p_78) :named @p_79) (! (not @p_71) :named @p_72))) :rule cong :premises (t106.t34.t3))
(step t106.t34.t5 (cl (= (! (or @p_80 @p_79) :named @p_81) (! (or @p_73 @p_72) :named @p_74))) :rule cong :premises (t106.t34.t2 t106.t34.t4))
(step t106.t34.t6 (cl (= (! (not @p_76) :named @p_77) (! (not @p_69) :named @p_70))) :rule cong :premises (t106.t34.t1))
(step t106.t34.t7 (cl (= (! (and @p_81 @p_77) :named @p_82) (! (and @p_74 @p_70) :named @p_75))) :rule cong :premises (t106.t34.t5 t106.t34.t6))
(step t106.t34.t8 (cl (= (or @p_76 @p_82) (or @p_69 @p_75))) :rule cong :premises (t106.t34.t1 t106.t34.t7))
(step t106.t34 (cl (= (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 null$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 cp_2$0)) (and (or (= cp_2$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 cp_2$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 cp_2$0)))))))) :rule bind)
(step t106.t35 (cl (= @p_65 @p_61)) :rule cong :premises (t17 t37))
(step t106.t36 (cl (= @p_66 @p_62)) :rule cong :premises (t106.t35))
(step t106.t37 (cl (= @p_67 @p_63)) :rule cong :premises (t106.t33 t106.t34 t106.t36))
(step t106.t38 (cl @p_64) :rule trans :premises (t106.t32 t106.t37))
(step t106.t39 (cl @p_63) :rule resolution :premises (t106.t6 t106.t38 a30))
(step t106.t40 (cl @p_62) :rule and :premises (t106.t39) :args (2))
(step t106.t41 (cl @p_148) :rule resolution :premises (t106.t5 t106.t40))
(step t106.t42 (cl (= false @p_61)) :rule symm :premises (t106.t41))
(step t106.t43 (cl (= sk_?e$0 cp_2$0)) :rule symm :premises (t106.a1))
(step t106.t44 (cl @p_57) :rule symm :premises (t106.t43))
(step t106.t45 (cl (= @p_61 @p_46)) :rule cong :premises (t106.t44 t49))
(step t106.t46 (cl (= (! (= @p_46 true) :named @p_147) @p_46)) :rule equiv_simplify)
(step t106.t47 (cl @p_147 @p_47) :rule equiv2 :premises (t106.t46))
(step t106.t48 (cl @p_147) :rule resolution :premises (t106.t47 t106.a0))
(step t106.t49 (cl @p_146) :rule trans :premises (t106.t42 t106.t45 t106.t48))
(step t106.t50 (cl false) :rule resolution :premises (t106.t0 t106.t1 t106.t49))
(step t106 (cl @p_47 @p_137 @p_139 false) :rule subproof :discharge (t106.a0 t106.a1 t106.a2))
(step t107 (cl (! (not @p_142) :named @p_143) @p_46) :rule and_pos :args (0))
(step t108 (cl @p_143 @p_57) :rule and_pos :args (1))
(step t109 (cl @p_143 @p_62) :rule and_pos :args (2))
(step t110 (cl false @p_143 @p_143 @p_143) :rule resolution :premises (t106 t107 t108 t109))
(step t111 (cl @p_143 @p_143 @p_143 false) :rule reordering :premises (t110))
(step t112 (cl @p_143 false) :rule contraction :premises (t111))
(step t113 (cl @p_144 false) :rule resolution :premises (t105 t112))
(step t114 (cl @p_144 (! (not false) :named @p_145)) :rule implies_neg2)
(step t115 (cl @p_144 @p_144) :rule resolution :premises (t113 t114))
(step t116 (cl @p_144) :rule contraction :premises (t115))
(step t117 (cl (= @p_144 @p_143)) :rule implies_simplify)
(step t118 (cl (not @p_144) @p_143) :rule equiv1 :premises (t117))
(step t119 (cl @p_143) :rule resolution :premises (t116 t118))
(step t120 (cl @p_47 @p_137 @p_139) :rule not_and :premises (t119))
(step t121 (cl @p_140 (not @p_47)) :rule or_neg :args (0))
(step t122 (cl @p_140 (not @p_137)) :rule or_neg :args (1))
(step t123 (cl @p_140 @p_141) :rule or_neg :args (2))
(step t124 (cl @p_140 @p_140 @p_140) :rule resolution :premises (t120 t121 t122 t123))
(step t125 (cl @p_140) :rule contraction :premises (t124))
(step t126 (cl @p_138) :rule resolution :premises (t100 t104 t125))
(step t127 (cl @p_47 @p_137 @p_61) :rule or :premises (t126))
(step t128 (cl @p_61 @p_47 @p_137) :rule reordering :premises (t127))
(step t129 (cl (not @p_64) (not (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))))) @p_63) :rule equiv_pos2)
(anchor :step t130 :args ((l1 Loc) (:= (l1 Loc) l1)))
(step t130.t0 (cl (= @p_119 @p_119)) :rule refl)
(step t130.t1 (cl (= @p_117 @p_117)) :rule refl)
(step t130.t2 (cl @p_131) :rule hole :args ("TRUST_THEORY_REWRITE" @p_131 2 6))
(step t130.t3 (cl (= @p_129 @p_124)) :rule cong :premises (t130.t2))
(step t130.t4 (cl (= @p_130 @p_125)) :rule cong :premises (t130.t0 t130.t1 t130.t3))
(step t130.t5 (cl (= @p_120 @p_120)) :rule refl)
(step t130.t6 (cl (= @p_127 @p_122)) :rule cong :premises (t130.t2 t130.t5))
(step t130.t7 (cl (= @p_118 @p_118)) :rule refl)
(step t130.t8 (cl (= @p_128 @p_123)) :rule cong :premises (t130.t6 t130.t7))
(step t130.t9 (cl (= (or @p_130 @p_128) (or @p_125 @p_123))) :rule cong :premises (t130.t4 t130.t8))
(step t130 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= null$0 l1))) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))))) :rule bind)
(step t131 (cl @p_115) :rule hole :args ("TRUST_THEORY_REWRITE" @p_115 13 6))
(step t132 (cl @p_114) :rule hole :args ("TRUST_THEORY_REWRITE" @p_114 13 6))
(step t133 (cl (= (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0) (and (or (= null$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0) (and (or (= null$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 null$0)))))))) :rule refl)
(step t134 (cl (= (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 null$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 null$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)))))))) :rule refl)
(step t135 (cl @p_113) :rule hole :args ("TRUST_THEORY_REWRITE" @p_113 13 6))
(step t136 (cl @p_110) :rule hole :args ("TRUST_THEORY_REWRITE" @p_110 2 5))
(step t137 (cl (= @p_102 @p_111)) :rule cong :premises (t136))
(step t138 (cl @p_112) :rule hole :args ("TRUST_THEORY_REWRITE" @p_112 1 6))
(step t139 (cl (= @p_102 false)) :rule trans :premises (t137 t138))
(step t140 (cl (= @p_27 @p_27)) :rule refl)
(step t141 (cl (= @p_100 @p_108)) :rule cong :premises (t136 t140))
(step t142 (cl @p_109) :rule hole :args ("TRUST_THEORY_REWRITE" @p_109 1 6))
(step t143 (cl (= @p_100 true)) :rule trans :premises (t141 t142))
(step t144 (cl (= @p_66 @p_66)) :rule refl)
(step t145 (cl (= @p_101 @p_106)) :rule cong :premises (t143 t144))
(step t146 (cl @p_107) :rule hole :args ("TRUST_THEORY_REWRITE" @p_107 1 6))
(step t147 (cl (= @p_101 @p_66)) :rule trans :premises (t145 t146))
(step t148 (cl (= @p_103 @p_104)) :rule cong :premises (t139 t147))
(step t149 (cl @p_105) :rule hole :args ("TRUST_THEORY_REWRITE" @p_105 1 6))
(step t150 (cl (= @p_103 @p_66)) :rule trans :premises (t148 t149))
(step t151 (cl (= (forall ((BOUND_VARIABLE_805 Loc)) (or (not (= null$0 BOUND_VARIABLE_805)) (and (or (= null$0 BOUND_VARIABLE_805) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_805 null$0))) (not (in$0 BOUND_VARIABLE_805 (lseg_domain$0 next$0 cp_2$0 null$0)))))) @p_66)) :rule trans :premises (t135 t150))
(step t152 (cl (= @p_98 @p_67)) :rule cong :premises (t133 t134 t151))
(step t153 (cl (= (forall ((l1 Loc)) (and (or (Btwn$0 next$0 cp_2$0 l1 null$0) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))) (or (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))) (or (not (= null$0 l1)) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0))))))) @p_67)) :rule trans :premises (t132 t152))
(step t154 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= null$0 l1))) (and (or (= null$0 l1) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))) @p_67)) :rule trans :premises (t131 t153))
(step t155 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 cp_2$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 cp_2$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 cp_2$0 null$0)))))) @p_67)) :rule trans :premises (t130 t154))
(anchor :step t156 :args ((BOUND_VARIABLE_781 Loc) (:= (BOUND_VARIABLE_781 Loc) BOUND_VARIABLE_781)))
(step t156.t0 (cl @p_83) :rule refl)
(step t156.t1 (cl (= @p_93 @p_86)) :rule cong :premises (t15 t21 t156.t0 t17))
(step t156.t2 (cl (= @p_95 @p_88)) :rule cong :premises (t17 t156.t0))
(step t156.t3 (cl (= @p_94 @p_87)) :rule cong :premises (t156.t1))
(step t156.t4 (cl (= @p_96 @p_89)) :rule cong :premises (t156.t2 t156.t3))
(step t156.t5 (cl (= @p_91 @p_84)) :rule cong :premises (t156.t0 t37))
(step t156.t6 (cl (= @p_92 @p_85)) :rule cong :premises (t156.t5))
(step t156.t7 (cl (= @p_97 @p_90)) :rule cong :premises (t156.t4 t156.t6))
(step t156.t8 (cl (= (or @p_93 @p_97) (or @p_86 @p_90))) :rule cong :premises (t156.t1 t156.t7))
(step t156 (cl (= (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0) (and (or (= null$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 null$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0) (and (or (= cp_2$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 cp_2$0)))))))) :rule bind)
(anchor :step t157 :args ((BOUND_VARIABLE_793 Loc) (:= (BOUND_VARIABLE_793 Loc) BOUND_VARIABLE_793)))
(step t157.t0 (cl @p_68) :rule refl)
(step t157.t1 (cl (= @p_76 @p_69)) :rule cong :premises (t157.t0 t37))
(step t157.t2 (cl (= @p_80 @p_73)) :rule cong :premises (t17 t157.t0))
(step t157.t3 (cl (= @p_78 @p_71)) :rule cong :premises (t15 t21 t157.t0 t17))
(step t157.t4 (cl (= @p_79 @p_72)) :rule cong :premises (t157.t3))
(step t157.t5 (cl (= @p_81 @p_74)) :rule cong :premises (t157.t2 t157.t4))
(step t157.t6 (cl (= @p_77 @p_70)) :rule cong :premises (t157.t1))
(step t157.t7 (cl (= @p_82 @p_75)) :rule cong :premises (t157.t5 t157.t6))
(step t157.t8 (cl (= (or @p_76 @p_82) (or @p_69 @p_75))) :rule cong :premises (t157.t1 t157.t7))
(step t157 (cl (= (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 null$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 null$0)))))) (forall ((BOUND_VARIABLE_793 Loc)) (or (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 cp_2$0)) (and (or (= cp_2$0 BOUND_VARIABLE_793) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_793 cp_2$0))) (not (in$0 BOUND_VARIABLE_793 (lseg_domain$0 next$0 cp_2$0 cp_2$0)))))))) :rule bind)
(step t158 (cl (= @p_65 @p_61)) :rule cong :premises (t17 t37))
(step t159 (cl (= @p_66 @p_62)) :rule cong :premises (t158))
(step t160 (cl (= @p_67 @p_63)) :rule cong :premises (t156 t157 t159))
(step t161 (cl @p_64) :rule trans :premises (t155 t160))
(step t162 (cl @p_63) :rule resolution :premises (t129 t161 a30))
(step t163 (cl @p_62) :rule and :premises (t162) :args (2))
(step t164 (cl (! (not (! (or (! (not (! (Btwn$0 next$0 cp_2$0 sk_?e$0 cp_2$0) :named @p_55)) :named @p_56) @p_57) :named @p_134)) :named @p_136) @p_56 @p_57) :rule or_pos)
(step t165 (cl @p_57 @p_56 @p_136) :rule reordering :premises (t164))
(step t166 (cl (or (! (not (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?x)) (= ?x ?y)))) :named @p_135) @p_134)) :rule forall_inst :args (next$0 cp_2$0 sk_?e$0))
(step t167 (cl @p_135 @p_134) :rule or :premises (t166))
(step t168 (cl @p_134) :rule resolution :premises (t167 a39))
(step t169 (cl (! (not (! (or @p_55 (! (and (or @p_57 @p_56) @p_47) :named @p_58)) :named @p_60)) :named @p_133) @p_55 @p_58) :rule or_pos)
(step t170 (cl @p_55 @p_58 @p_133) :rule reordering :premises (t169))
(step t171 (cl (or (! (not (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0) (and (or (= cp_2$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 cp_2$0))))))) :named @p_132) @p_60)) :rule forall_inst :args (sk_?e$0))
(step t172 (cl @p_132 @p_60) :rule or :premises (t171))
(step t173 (cl (forall ((BOUND_VARIABLE_781 Loc)) (or (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0) (and (or (= cp_2$0 BOUND_VARIABLE_781) (not (Btwn$0 next$0 cp_2$0 BOUND_VARIABLE_781 cp_2$0))) (not (in$0 BOUND_VARIABLE_781 (lseg_domain$0 next$0 cp_2$0 cp_2$0))))))) :rule and :premises (t162) :args (0))
(step t174 (cl @p_60) :rule resolution :premises (t172 t173))
(step t175 (cl (! (not @p_58) :named @p_59) @p_47) :rule and_pos :args (1))
(step t176 (cl @p_47 @p_59) :rule reordering :premises (t175))
(step t177 (cl @p_47) :rule resolution :premises (t128 t163 t165 t168 t170 t174 t176))
(step t178 (cl (! (not (! (or @p_315 (! (and (! (not @p_48) :named @p_49) @p_47 (! (not @p_272) :named @p_275)) :named @p_276)) :named @p_316)) :named @p_317) @p_315 @p_276) :rule or_pos)
(step t179 (cl @p_315 @p_276 @p_317) :rule reordering :premises (t178))
(step t180 (cl (or (! (not (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x (union$0 X Y)) (or (in$0 x X) (in$0 x Y))) (and (not (in$0 x X)) (not (in$0 x Y)) (not (in$0 x (union$0 X Y))))))) :named @p_303) @p_316)) :rule forall_inst :args (@p_42 @p_39 sk_?e$0))
(step t181 (cl @p_303 @p_316) :rule or :premises (t180))
(step t182 (cl @p_316) :rule resolution :premises (t181 a4))
(step t183 (cl (! (not (! (or (! (in$0 sk_?e$0 @p_41) :named @p_254) @p_252) :named @p_308)) :named @p_313) @p_254 @p_252) :rule or_pos)
(step t184 (cl @p_252 @p_254 @p_313) :rule reordering :premises (t183))
(step t185 (cl (! (not (! (and (or (! (= lst$0 sk_?e$0) :named @p_237) (! (not (! (Btwn$0 next$0 lst$0 sk_?e$0 lst$0) :named @p_258)) :named @p_259)) (! (not @p_254) :named @p_255)) :named @p_265)) :named @p_270) @p_255) :rule and_pos :args (1))
(step t186 (cl @p_255 @p_270) :rule reordering :premises (t185))
(step t187 (cl (! (not (! (and @p_48 @p_308) :named @p_309)) :named @p_312) @p_308) :rule and_pos :args (1))
(step t188 (cl @p_308 @p_312) :rule reordering :premises (t187))
(step t189 (cl (! (not (! (or @p_258 @p_265) :named @p_266)) :named @p_268) @p_258 @p_265) :rule or_pos)
(step t190 (cl @p_258 @p_265 @p_268) :rule reordering :premises (t189))
(step t191 (cl (or (! (not (forall ((BOUND_VARIABLE_719 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 lst$0) (and (or (= lst$0 BOUND_VARIABLE_719) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 lst$0))) (not (in$0 BOUND_VARIABLE_719 (lseg_domain$0 next$0 lst$0 lst$0))))))) :named @p_267) @p_266)) :rule forall_inst :args (sk_?e$0))
(step t192 (cl @p_267 @p_266) :rule or :premises (t191))
(step t193 (cl (not (! (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= l1 curr_2$0))) (and (or (= l1 curr_2$0) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (! (and (forall ((BOUND_VARIABLE_719 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 lst$0) (and (or (= lst$0 BOUND_VARIABLE_719) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 lst$0))) (not (in$0 BOUND_VARIABLE_719 (lseg_domain$0 next$0 lst$0 lst$0)))))) (forall ((BOUND_VARIABLE_731 Loc)) (or (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 lst$0)) (and (or (= lst$0 BOUND_VARIABLE_731) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_731 lst$0))) (not (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 lst$0)))))) (! (not (! (in$0 lst$0 @p_41) :named @p_163)) :named @p_164)) :named @p_169)) :named @p_170)) (not (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= l1 curr_2$0))) (and (or (= l1 curr_2$0) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0))))))) @p_169) :rule equiv_pos2)
(anchor :step t194 :args ((l1 Loc) (:= (l1 Loc) l1)))
(step t194.t0 (cl (= (! (Btwn$0 next$0 lst$0 l1 curr_2$0) :named @p_222) @p_222)) :rule refl)
(step t194.t1 (cl (= (! (in$0 l1 @p_23) :named @p_220) @p_220)) :rule refl)
(step t194.t2 (cl (! (= (! (= l1 curr_2$0) :named @p_229) (! (= curr_2$0 l1) :named @p_224)) :named @p_234)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_234 2 6))
(step t194.t3 (cl (= (! (not @p_229) :named @p_232) (! (not @p_224) :named @p_227))) :rule cong :premises (t194.t2))
(step t194.t4 (cl (= (! (and @p_222 @p_220 @p_232) :named @p_233) (! (and @p_222 @p_220 @p_227) :named @p_228))) :rule cong :premises (t194.t0 t194.t1 t194.t3))
(step t194.t5 (cl (= (! (not @p_222) :named @p_223) @p_223)) :rule refl)
(step t194.t6 (cl (= (! (or @p_229 @p_223) :named @p_230) (! (or @p_224 @p_223) :named @p_225))) :rule cong :premises (t194.t2 t194.t5))
(step t194.t7 (cl (= (! (not @p_220) :named @p_221) @p_221)) :rule refl)
(step t194.t8 (cl (= (! (and @p_230 @p_221) :named @p_231) (! (and @p_225 @p_221) :named @p_226))) :rule cong :premises (t194.t6 t194.t7))
(step t194.t9 (cl (= (or @p_233 @p_231) (or @p_228 @p_226))) :rule cong :premises (t194.t4 t194.t8))
(step t194 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= l1 curr_2$0))) (and (or (= l1 curr_2$0) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= curr_2$0 l1))) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)))))))) :rule bind)
(step t195 (cl (! (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= curr_2$0 l1))) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (forall ((l1 Loc)) (and (or (Btwn$0 next$0 lst$0 l1 curr_2$0) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0))))) (or (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0))))) (or (not (= curr_2$0 l1)) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)))))))) :named @p_219)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_219 13 6))
(step t196 (cl (! (= (forall ((l1 Loc)) (and (or (Btwn$0 next$0 lst$0 l1 curr_2$0) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0))))) (or (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0))))) (or (not (= curr_2$0 l1)) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0))))))) (! (and (forall ((BOUND_VARIABLE_719 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0) (and (or (= curr_2$0 BOUND_VARIABLE_719) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0))) (not (in$0 BOUND_VARIABLE_719 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (forall ((BOUND_VARIABLE_731 Loc)) (or (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 curr_2$0)) (and (or (= curr_2$0 BOUND_VARIABLE_731) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_731 curr_2$0))) (not (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (forall ((BOUND_VARIABLE_743 Loc)) (or (not (= curr_2$0 BOUND_VARIABLE_743)) (and (or (= curr_2$0 BOUND_VARIABLE_743) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_743 curr_2$0))) (not (in$0 BOUND_VARIABLE_743 (lseg_domain$0 next$0 lst$0 curr_2$0))))))) :named @p_204)) :named @p_218)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_218 13 6))
(step t197 (cl (= (forall ((BOUND_VARIABLE_719 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0) (and (or (= curr_2$0 BOUND_VARIABLE_719) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0))) (not (in$0 BOUND_VARIABLE_719 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (forall ((BOUND_VARIABLE_719 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0) (and (or (= curr_2$0 BOUND_VARIABLE_719) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0))) (not (in$0 BOUND_VARIABLE_719 (lseg_domain$0 next$0 lst$0 curr_2$0)))))))) :rule refl)
(step t198 (cl (= (forall ((BOUND_VARIABLE_731 Loc)) (or (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 curr_2$0)) (and (or (= curr_2$0 BOUND_VARIABLE_731) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_731 curr_2$0))) (not (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (forall ((BOUND_VARIABLE_731 Loc)) (or (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 curr_2$0)) (and (or (= curr_2$0 BOUND_VARIABLE_731) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_731 curr_2$0))) (not (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 curr_2$0)))))))) :rule refl)
(step t199 (cl (! (= (forall ((BOUND_VARIABLE_743 Loc)) (or (not (= curr_2$0 BOUND_VARIABLE_743)) (and (or (= curr_2$0 BOUND_VARIABLE_743) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_743 curr_2$0))) (not (in$0 BOUND_VARIABLE_743 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (! (or (! (not @p_205) :named @p_208) (! (and (! (or @p_205 @p_25) :named @p_206) (! (not (! (in$0 curr_2$0 @p_23) :named @p_171)) :named @p_172)) :named @p_207)) :named @p_209)) :named @p_217)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_217 13 6))
(step t200 (cl (! (= @p_205 true) :named @p_216)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_216 2 5))
(step t201 (cl (= @p_208 @p_111)) :rule cong :premises (t200))
(step t202 (cl (= @p_208 false)) :rule trans :premises (t201 t138))
(step t203 (cl (= @p_25 @p_25)) :rule refl)
(step t204 (cl (= @p_206 (! (or true @p_25) :named @p_214))) :rule cong :premises (t200 t203))
(step t205 (cl (! (= @p_214 true) :named @p_215)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_215 1 6))
(step t206 (cl (= @p_206 true)) :rule trans :premises (t204 t205))
(step t207 (cl (= @p_172 @p_172)) :rule refl)
(step t208 (cl (= @p_207 (! (and true @p_172) :named @p_212))) :rule cong :premises (t206 t207))
(step t209 (cl (! (= @p_212 @p_172) :named @p_213)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_213 1 6))
(step t210 (cl (= @p_207 @p_172)) :rule trans :premises (t208 t209))
(step t211 (cl (= @p_209 (! (or false @p_172) :named @p_210))) :rule cong :premises (t202 t210))
(step t212 (cl (! (= @p_210 @p_172) :named @p_211)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_211 1 6))
(step t213 (cl (= @p_209 @p_172)) :rule trans :premises (t211 t212))
(step t214 (cl (= (forall ((BOUND_VARIABLE_743 Loc)) (or (not (= curr_2$0 BOUND_VARIABLE_743)) (and (or (= curr_2$0 BOUND_VARIABLE_743) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_743 curr_2$0))) (not (in$0 BOUND_VARIABLE_743 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) @p_172)) :rule trans :premises (t199 t213))
(step t215 (cl (= @p_204 (! (and (forall ((BOUND_VARIABLE_719 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0) (and (or (= curr_2$0 BOUND_VARIABLE_719) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0))) (not (in$0 BOUND_VARIABLE_719 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (forall ((BOUND_VARIABLE_731 Loc)) (or (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 curr_2$0)) (and (or (= curr_2$0 BOUND_VARIABLE_731) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_731 curr_2$0))) (not (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) @p_172) :named @p_173))) :rule cong :premises (t197 t198 t214))
(step t216 (cl (= (forall ((l1 Loc)) (and (or (Btwn$0 next$0 lst$0 l1 curr_2$0) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0))))) (or (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0))))) (or (not (= curr_2$0 l1)) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0))))))) @p_173)) :rule trans :premises (t196 t215))
(step t217 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= curr_2$0 l1))) (and (or (= curr_2$0 l1) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) @p_173)) :rule trans :premises (t195 t216))
(step t218 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= l1 curr_2$0))) (and (or (= l1 curr_2$0) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) @p_173)) :rule trans :premises (t194 t217))
(anchor :step t219 :args ((BOUND_VARIABLE_719 Loc) (:= (BOUND_VARIABLE_719 Loc) BOUND_VARIABLE_719)))
(step t219.t0 (cl (! (= BOUND_VARIABLE_719 BOUND_VARIABLE_719) :named @p_189)) :rule refl)
(step t219.t1 (cl (= (! (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0) :named @p_199) (! (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 lst$0) :named @p_192))) :rule cong :premises (t15 t28 t219.t0 a23))
(step t219.t2 (cl (= (! (= curr_2$0 BOUND_VARIABLE_719) :named @p_201) (! (= lst$0 BOUND_VARIABLE_719) :named @p_194))) :rule cong :premises (a23 t219.t0))
(step t219.t3 (cl (= (! (not @p_199) :named @p_200) (! (not @p_192) :named @p_193))) :rule cong :premises (t219.t1))
(step t219.t4 (cl (= (! (or @p_201 @p_200) :named @p_202) (! (or @p_194 @p_193) :named @p_195))) :rule cong :premises (t219.t2 t219.t3))
(step t219.t5 (cl (= (! (in$0 BOUND_VARIABLE_719 @p_23) :named @p_197) (! (in$0 BOUND_VARIABLE_719 @p_41) :named @p_190))) :rule cong :premises (t219.t0 t29))
(step t219.t6 (cl (= (! (not @p_197) :named @p_198) (! (not @p_190) :named @p_191))) :rule cong :premises (t219.t5))
(step t219.t7 (cl (= (! (and @p_202 @p_198) :named @p_203) (! (and @p_195 @p_191) :named @p_196))) :rule cong :premises (t219.t4 t219.t6))
(step t219.t8 (cl (= (or @p_199 @p_203) (or @p_192 @p_196))) :rule cong :premises (t219.t1 t219.t7))
(step t219 (cl (= (forall ((BOUND_VARIABLE_719 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0) (and (or (= curr_2$0 BOUND_VARIABLE_719) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 curr_2$0))) (not (in$0 BOUND_VARIABLE_719 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (forall ((BOUND_VARIABLE_719 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 lst$0) (and (or (= lst$0 BOUND_VARIABLE_719) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 lst$0))) (not (in$0 BOUND_VARIABLE_719 (lseg_domain$0 next$0 lst$0 lst$0)))))))) :rule bind)
(anchor :step t220 :args ((BOUND_VARIABLE_731 Loc) (:= (BOUND_VARIABLE_731 Loc) BOUND_VARIABLE_731)))
(step t220.t0 (cl (! (= BOUND_VARIABLE_731 BOUND_VARIABLE_731) :named @p_174)) :rule refl)
(step t220.t1 (cl (= (! (in$0 BOUND_VARIABLE_731 @p_23) :named @p_182) (! (in$0 BOUND_VARIABLE_731 @p_41) :named @p_175))) :rule cong :premises (t220.t0 t29))
(step t220.t2 (cl (= (! (= curr_2$0 BOUND_VARIABLE_731) :named @p_186) (! (= lst$0 BOUND_VARIABLE_731) :named @p_179))) :rule cong :premises (a23 t220.t0))
(step t220.t3 (cl (= (! (Btwn$0 next$0 lst$0 BOUND_VARIABLE_731 curr_2$0) :named @p_184) (! (Btwn$0 next$0 lst$0 BOUND_VARIABLE_731 lst$0) :named @p_177))) :rule cong :premises (t15 t28 t220.t0 a23))
(step t220.t4 (cl (= (! (not @p_184) :named @p_185) (! (not @p_177) :named @p_178))) :rule cong :premises (t220.t3))
(step t220.t5 (cl (= (! (or @p_186 @p_185) :named @p_187) (! (or @p_179 @p_178) :named @p_180))) :rule cong :premises (t220.t2 t220.t4))
(step t220.t6 (cl (= (! (not @p_182) :named @p_183) (! (not @p_175) :named @p_176))) :rule cong :premises (t220.t1))
(step t220.t7 (cl (= (! (and @p_187 @p_183) :named @p_188) (! (and @p_180 @p_176) :named @p_181))) :rule cong :premises (t220.t5 t220.t6))
(step t220.t8 (cl (= (or @p_182 @p_188) (or @p_175 @p_181))) :rule cong :premises (t220.t1 t220.t7))
(step t220 (cl (= (forall ((BOUND_VARIABLE_731 Loc)) (or (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 curr_2$0)) (and (or (= curr_2$0 BOUND_VARIABLE_731) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_731 curr_2$0))) (not (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) (forall ((BOUND_VARIABLE_731 Loc)) (or (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 lst$0)) (and (or (= lst$0 BOUND_VARIABLE_731) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_731 lst$0))) (not (in$0 BOUND_VARIABLE_731 (lseg_domain$0 next$0 lst$0 lst$0)))))))) :rule bind)
(step t221 (cl (= @p_171 @p_163)) :rule cong :premises (a23 t29))
(step t222 (cl (= @p_172 @p_164)) :rule cong :premises (t221))
(step t223 (cl (= @p_173 @p_169)) :rule cong :premises (t219 t220 t222))
(step t224 (cl @p_170) :rule trans :premises (t218 t223))
(step t225 (cl @p_169) :rule resolution :premises (t193 t224 a17))
(step t226 (cl (forall ((BOUND_VARIABLE_719 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 lst$0) (and (or (= lst$0 BOUND_VARIABLE_719) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_719 lst$0))) (not (in$0 BOUND_VARIABLE_719 (lseg_domain$0 next$0 lst$0 lst$0))))))) :rule and :premises (t225) :args (0))
(step t227 (cl @p_266) :rule resolution :premises (t192 t226))
(step t228 (cl (! (not (! (or @p_309 (! (and @p_255 @p_253 @p_49) :named @p_306)) :named @p_310)) :named @p_311) @p_309 @p_306) :rule or_pos)
(step t229 (cl @p_309 @p_306 @p_311) :rule reordering :premises (t228))
(step t230 (cl (or @p_303 @p_310)) :rule forall_inst :args (@p_41 @p_40 sk_?e$0))
(step t231 (cl @p_303 @p_310) :rule or :premises (t230))
(step t232 (cl @p_310) :rule resolution :premises (t231 a4))
(step t233 (cl (! (not (! (or @p_259 @p_237) :named @p_260)) :named @p_261) @p_259 @p_237) :rule or_pos)
(step t234 (cl @p_237 @p_259 @p_261) :rule reordering :premises (t233))
(step t235 (cl (or @p_135 @p_260)) :rule forall_inst :args (next$0 lst$0 sk_?e$0))
(step t236 (cl @p_135 @p_260) :rule or :premises (t235))
(step t237 (cl @p_260) :rule resolution :premises (t236 a39))
(step t238 (cl (! (not @p_306) :named @p_307) @p_49) :rule and_pos :args (2))
(step t239 (cl @p_49 @p_307) :rule reordering :premises (t238))
(step t240 (cl (! (not (! (and (! (in$0 lst$0 @p_42) :named @p_278) (! (or @p_163 (! (in$0 lst$0 @p_40) :named @p_161)) :named @p_299)) :named @p_301)) :named @p_305) @p_299) :rule and_pos :args (1))
(step t241 (cl @p_299 @p_305) :rule reordering :premises (t240))
(step t242 (cl (! (not (! (or @p_301 (! (and @p_164 (! (not @p_161) :named @p_162) (! (not @p_278) :named @p_282)) :named @p_297)) :named @p_302)) :named @p_304) @p_301 @p_297) :rule or_pos)
(step t243 (cl @p_301 @p_297 @p_304) :rule reordering :premises (t242))
(step t244 (cl (or @p_303 @p_302)) :rule forall_inst :args (@p_41 @p_40 lst$0))
(step t245 (cl @p_303 @p_302) :rule or :premises (t244))
(step t246 (cl @p_302) :rule resolution :premises (t245 a4))
(step t247 (cl (! (not @p_299) :named @p_300) @p_163 @p_161) :rule or_pos)
(step t248 (cl @p_163 @p_161 @p_300) :rule reordering :premises (t247))
(step t249 (cl @p_164) :rule and :premises (t225) :args (2))
(step t250 (cl (! (not @p_297) :named @p_298) @p_282) :rule and_pos :args (2))
(step t251 (cl @p_282 @p_298) :rule reordering :premises (t250))
(step t252 (cl (not (! (= (! (or (! (not @p_253) :named @p_286) (! (not @p_237) :named @p_238) @p_162) :named @p_287) (! (or @p_252 @p_238 @p_162) :named @p_285)) :named @p_295)) (not @p_287) @p_285) :rule equiv_pos2)
(step t253 (cl (! (= @p_286 @p_252) :named @p_296)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_296 1 5))
(step t254 (cl (= @p_238 @p_238)) :rule refl)
(step t255 (cl (= @p_162 @p_162)) :rule refl)
(step t256 (cl @p_295) :rule cong :premises (t253 t254 t255))
(step t257 (cl (! (and @p_253 @p_237) :named @p_290) @p_286 @p_238) :rule and_neg)
(step t258 (cl (! (=> @p_290 @p_162) :named @p_292) @p_290) :rule implies_neg1)
(anchor :step t259)
(assume t259.a0 @p_253)
(assume t259.a1 @p_237)
(step t259.t0 (cl (= (! (= @p_161 false) :named @p_293) @p_162)) :rule equiv_simplify)
(step t259.t1 (cl (not @p_293) @p_162) :rule equiv1 :premises (t259.t0))
(step t259.t2 (cl (! (= sk_?e$0 lst$0) :named @p_248)) :rule symm :premises (t259.a1))
(step t259.t3 (cl @p_237) :rule symm :premises (t259.t2))
(step t259.t4 (cl (= @p_161 @p_252)) :rule cong :premises (t259.t3 t32))
(step t259.t5 (cl (= (! (= @p_252 false) :named @p_294) @p_253)) :rule equiv_simplify)
(step t259.t6 (cl @p_294 @p_286) :rule equiv2 :premises (t259.t5))
(step t259.t7 (cl (! (not @p_286) :named @p_289) @p_252) :rule not_not)
(step t259.t8 (cl @p_294 @p_252) :rule resolution :premises (t259.t6 t259.t7))
(step t259.t9 (cl @p_294) :rule resolution :premises (t259.t8 t259.a0))
(step t259.t10 (cl @p_293) :rule trans :premises (t259.t4 t259.t9))
(step t259.t11 (cl @p_162) :rule resolution :premises (t259.t1 t259.t10))
(step t259 (cl @p_286 @p_238 @p_162) :rule subproof :discharge (t259.a0 t259.a1))
(step t260 (cl (! (not @p_290) :named @p_291) @p_253) :rule and_pos :args (0))
(step t261 (cl @p_291 @p_237) :rule and_pos :args (1))
(step t262 (cl @p_162 @p_291 @p_291) :rule resolution :premises (t259 t260 t261))
(step t263 (cl @p_291 @p_291 @p_162) :rule reordering :premises (t262))
(step t264 (cl @p_291 @p_162) :rule contraction :premises (t263))
(step t265 (cl @p_292 @p_162) :rule resolution :premises (t258 t264))
(step t266 (cl @p_292 (! (not @p_162) :named @p_288)) :rule implies_neg2)
(step t267 (cl @p_292 @p_292) :rule resolution :premises (t265 t266))
(step t268 (cl @p_292) :rule contraction :premises (t267))
(step t269 (cl @p_291 @p_162) :rule implies :premises (t268))
(step t270 (cl @p_286 @p_238 @p_162) :rule resolution :premises (t257 t269))
(step t271 (cl @p_287 @p_289) :rule or_neg :args (0))
(step t272 (cl @p_287 (! (not @p_238) :named @p_243)) :rule or_neg :args (1))
(step t273 (cl @p_287 @p_288) :rule or_neg :args (2))
(step t274 (cl @p_287 @p_287 @p_287) :rule resolution :premises (t270 t271 t272 t273))
(step t275 (cl @p_287) :rule contraction :premises (t274))
(step t276 (cl @p_285) :rule resolution :premises (t252 t256 t275))
(step t277 (cl @p_252 @p_238 @p_162) :rule or :premises (t276))
(step t278 (cl (! (and @p_48 @p_237) :named @p_279) @p_49 @p_238) :rule and_neg)
(step t279 (cl (! (=> @p_279 @p_278) :named @p_281) @p_279) :rule implies_neg1)
(anchor :step t280)
(assume t280.a0 @p_48)
(assume t280.a1 @p_237)
(step t280.t0 (cl (= (! (= @p_278 true) :named @p_283) @p_278)) :rule equiv_simplify)
(step t280.t1 (cl (not @p_283) @p_278) :rule equiv1 :premises (t280.t0))
(step t280.t2 (cl @p_248) :rule symm :premises (t280.a1))
(step t280.t3 (cl @p_237) :rule symm :premises (t280.t2))
(step t280.t4 (cl (= @p_42 @p_42)) :rule refl)
(step t280.t5 (cl (= @p_278 @p_48)) :rule cong :premises (t280.t3 t280.t4))
(step t280.t6 (cl (= (! (= @p_48 true) :named @p_284) @p_48)) :rule equiv_simplify)
(step t280.t7 (cl @p_284 @p_49) :rule equiv2 :premises (t280.t6))
(step t280.t8 (cl @p_284) :rule resolution :premises (t280.t7 t280.a0))
(step t280.t9 (cl @p_283) :rule trans :premises (t280.t5 t280.t8))
(step t280.t10 (cl @p_278) :rule resolution :premises (t280.t1 t280.t9))
(step t280 (cl @p_49 @p_238 @p_278) :rule subproof :discharge (t280.a0 t280.a1))
(step t281 (cl (! (not @p_279) :named @p_280) @p_48) :rule and_pos :args (0))
(step t282 (cl @p_280 @p_237) :rule and_pos :args (1))
(step t283 (cl @p_278 @p_280 @p_280) :rule resolution :premises (t280 t281 t282))
(step t284 (cl @p_280 @p_280 @p_278) :rule reordering :premises (t283))
(step t285 (cl @p_280 @p_278) :rule contraction :premises (t284))
(step t286 (cl @p_281 @p_278) :rule resolution :premises (t279 t285))
(step t287 (cl @p_281 @p_282) :rule implies_neg2)
(step t288 (cl @p_281 @p_281) :rule resolution :premises (t286 t287))
(step t289 (cl @p_281) :rule contraction :premises (t288))
(step t290 (cl @p_280 @p_278) :rule implies :premises (t289))
(step t291 (cl @p_49 @p_238 @p_278) :rule resolution :premises (t278 t290))
(step t292 (cl @p_252 @p_49 @p_238) :rule resolution :premises (t241 t243 t246 t248 t249 t251 t277 t291))
(step t293 (cl @p_252 @p_49) :rule resolution :premises (t184 t186 t188 t190 t227 t229 t232 t234 t237 t239 t292))
(step t294 (cl (! (not @p_276) :named @p_277) @p_275) :rule and_pos :args (2))
(step t295 (cl @p_275 @p_277) :rule reordering :premises (t294))
(step t296 (cl (! (not @p_273) :named @p_274) @p_253) :rule and_pos :args (1))
(step t297 (cl @p_253 @p_274) :rule reordering :premises (t296))
(step t298 (cl @p_274 @p_272) :rule and_pos :args (0))
(step t299 (cl @p_272 @p_274) :rule reordering :premises (t298))
(step t300 (cl @p_274) :rule resolution :premises (t97 t99 t177 t179 t182 t293 t295 t297 t299))
(step t301 (cl (! (not (! (and @p_254 @p_252 @p_157) :named @p_262)) :named @p_269) @p_254) :rule and_pos :args (0))
(step t302 (cl @p_254 @p_269) :rule reordering :premises (t301))
(step t303 (cl (! (not (! (or @p_262 (! (and (or @p_255 @p_253) (! (not @p_157) :named @p_158)) :named @p_256)) :named @p_263)) :named @p_264) @p_262 @p_256) :rule or_pos)
(step t304 (cl @p_262 @p_256 @p_264) :rule reordering :premises (t303))
(step t305 (cl (or (! (not (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x X) (in$0 x Y) (in$0 x (intersection$0 X Y))) (and (or (not (in$0 x X)) (not (in$0 x Y))) (not (in$0 x (intersection$0 X Y))))))) :named @p_53) @p_263)) :rule forall_inst :args (@p_41 @p_40 sk_?e$0))
(step t306 (cl @p_53 @p_263) :rule or :premises (t305))
(step t307 (cl @p_263) :rule resolution :premises (t306 a3))
(step t308 (cl (! (not @p_256) :named @p_257) @p_158) :rule and_pos :args (1))
(step t309 (cl @p_158 @p_257) :rule reordering :premises (t308))
(step t310 (cl (not (! (= (! (or @p_158 @p_238 (! (not (! (not (! (in$0 lst$0 @p_156) :named @p_159)) :named @p_160)) :named @p_240)) :named @p_241) (! (or @p_158 @p_238 @p_159) :named @p_239)) :named @p_250)) (not @p_241) @p_239) :rule equiv_pos2)
(step t311 (cl (= @p_158 @p_158)) :rule refl)
(step t312 (cl (! (= @p_240 @p_159) :named @p_251)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_251 1 5))
(step t313 (cl @p_250) :rule cong :premises (t311 t254 t312))
(step t314 (cl (! (=> (! (and @p_157 @p_237 @p_160) :named @p_244) false) :named @p_246) @p_244) :rule implies_neg1)
(anchor :step t315)
(assume t315.a0 @p_157)
(assume t315.a1 @p_237)
(assume t315.a2 @p_160)
(step t315.t0 (cl @p_150 @p_151 false) :rule equiv_pos2)
(step t315.t1 (cl @p_149) :rule hole :args ("TRUST_THEORY_REWRITE" @p_149 1 5))
(step t315.t2 (cl (= (! (= @p_159 false) :named @p_249) @p_160)) :rule equiv_simplify)
(step t315.t3 (cl @p_249 @p_240) :rule equiv2 :premises (t315.t2))
(step t315.t4 (cl (! (not @p_240) :named @p_242) @p_159) :rule not_not)
(step t315.t5 (cl @p_249 @p_159) :rule resolution :premises (t315.t3 t315.t4))
(step t315.t6 (cl (! (not (! (and (or @p_164 @p_162) @p_160) :named @p_165)) :named @p_236) @p_160) :rule and_pos :args (1))
(step t315.t7 (cl @p_160 @p_236) :rule reordering :premises (t315.t6))
(step t315.t8 (cl (! (not (! (or (! (and @p_163 @p_161 @p_159) :named @p_166) @p_165) :named @p_167)) :named @p_235) @p_166 @p_165) :rule or_pos)
(step t315.t9 (cl @p_166 @p_165 @p_235) :rule reordering :premises (t315.t8))
(step t315.t10 (cl (! (not @p_166) :named @p_168) @p_163) :rule and_pos :args (0))
(step t315.t11 (cl @p_163 @p_168) :rule reordering :premises (t315.t10))
(step t315.t12 (cl @p_168) :rule resolution :premises (t315.t11 t249))
(step t315.t13 (cl (or @p_53 @p_167)) :rule forall_inst :args (@p_41 @p_40 lst$0))
(step t315.t14 (cl @p_53 @p_167) :rule or :premises (t315.t13))
(step t315.t15 (cl @p_167) :rule resolution :premises (t315.t14 a3))
(step t315.t16 (cl @p_165) :rule resolution :premises (t315.t9 t315.t12 t315.t15))
(step t315.t17 (cl @p_160) :rule resolution :premises (t315.t7 t315.t16))
(step t315.t18 (cl @p_249) :rule resolution :premises (t315.t5 t315.t17))
(step t315.t19 (cl (= false @p_159)) :rule symm :premises (t315.t18))
(step t315.t20 (cl @p_248) :rule symm :premises (t315.a1))
(step t315.t21 (cl @p_237) :rule symm :premises (t315.t20))
(step t315.t22 (cl (= @p_156 @p_156)) :rule refl)
(step t315.t23 (cl (= @p_159 @p_157)) :rule cong :premises (t315.t21 t315.t22))
(step t315.t24 (cl (= (! (= @p_157 true) :named @p_247) @p_157)) :rule equiv_simplify)
(step t315.t25 (cl @p_247 @p_158) :rule equiv2 :premises (t315.t24))
(step t315.t26 (cl @p_247) :rule resolution :premises (t315.t25 t315.a0))
(step t315.t27 (cl @p_146) :rule trans :premises (t315.t19 t315.t23 t315.t26))
(step t315.t28 (cl false) :rule resolution :premises (t315.t0 t315.t1 t315.t27))
(step t315 (cl @p_158 @p_238 @p_240 false) :rule subproof :discharge (t315.a0 t315.a1 t315.a2))
(step t316 (cl (! (not @p_244) :named @p_245) @p_157) :rule and_pos :args (0))
(step t317 (cl @p_245 @p_237) :rule and_pos :args (1))
(step t318 (cl @p_245 @p_160) :rule and_pos :args (2))
(step t319 (cl false @p_245 @p_245 @p_245) :rule resolution :premises (t315 t316 t317 t318))
(step t320 (cl @p_245 @p_245 @p_245 false) :rule reordering :premises (t319))
(step t321 (cl @p_245 false) :rule contraction :premises (t320))
(step t322 (cl @p_246 false) :rule resolution :premises (t314 t321))
(step t323 (cl @p_246 @p_145) :rule implies_neg2)
(step t324 (cl @p_246 @p_246) :rule resolution :premises (t322 t323))
(step t325 (cl @p_246) :rule contraction :premises (t324))
(step t326 (cl (= @p_246 @p_245)) :rule implies_simplify)
(step t327 (cl (not @p_246) @p_245) :rule equiv1 :premises (t326))
(step t328 (cl @p_245) :rule resolution :premises (t325 t327))
(step t329 (cl @p_158 @p_238 @p_240) :rule not_and :premises (t328))
(step t330 (cl @p_241 (not @p_158)) :rule or_neg :args (0))
(step t331 (cl @p_241 @p_243) :rule or_neg :args (1))
(step t332 (cl @p_241 @p_242) :rule or_neg :args (2))
(step t333 (cl @p_241 @p_241 @p_241) :rule resolution :premises (t329 t330 t331 t332))
(step t334 (cl @p_241) :rule contraction :premises (t333))
(step t335 (cl @p_239) :rule resolution :premises (t310 t313 t334))
(step t336 (cl @p_158 @p_238 @p_159) :rule or :premises (t335))
(step t337 (cl @p_236 @p_160) :rule and_pos :args (1))
(step t338 (cl @p_160 @p_236) :rule reordering :premises (t337))
(step t339 (cl @p_235 @p_166 @p_165) :rule or_pos)
(step t340 (cl @p_166 @p_165 @p_235) :rule reordering :premises (t339))
(step t341 (cl @p_168 @p_163) :rule and_pos :args (0))
(step t342 (cl @p_163 @p_168) :rule reordering :premises (t341))
(step t343 (cl @p_168) :rule resolution :premises (t342 t249))
(step t344 (cl (or @p_53 @p_167)) :rule forall_inst :args (@p_41 @p_40 lst$0))
(step t345 (cl @p_53 @p_167) :rule or :premises (t344))
(step t346 (cl @p_167) :rule resolution :premises (t345 a3))
(step t347 (cl @p_165) :rule resolution :premises (t340 t343 t346))
(step t348 (cl @p_160) :rule resolution :premises (t338 t347))
(step t349 (cl @p_158) :rule resolution :premises (t186 t302 t190 t227 t304 t307 t234 t237 t309 t336 t348))
(step t350 (cl (! (not (! (and (or @p_49 @p_47) (! (not @p_44) :named @p_45)) :named @p_50)) :named @p_155) @p_45) :rule and_pos :args (1))
(step t351 (cl @p_45 @p_155) :rule reordering :premises (t350))
(step t352 (cl (! (not (! (or (! (and @p_48 @p_46 @p_44) :named @p_51) @p_50) :named @p_52)) :named @p_154) @p_51 @p_50) :rule or_pos)
(step t353 (cl @p_51 @p_50 @p_154) :rule reordering :premises (t352))
(step t354 (cl (! (not @p_51) :named @p_54) @p_46) :rule and_pos :args (1))
(step t355 (cl @p_46 @p_54) :rule reordering :premises (t354))
(step t356 (cl @p_54) :rule resolution :premises (t355 t177))
(step t357 (cl (or @p_53 @p_52)) :rule forall_inst :args (@p_42 @p_39 sk_?e$0))
(step t358 (cl @p_53 @p_52) :rule or :premises (t357))
(step t359 (cl @p_52) :rule resolution :premises (t358 a3))
(step t360 (cl @p_50) :rule resolution :premises (t353 t356 t359))
(step t361 (cl @p_45) :rule resolution :premises (t351 t360))
(step t362 (cl @p_38) :rule resolution :premises (t75 t85 t95 t300 t349 t361))
(step t363 (cl) :rule resolution :premises (t7 t362 a43))
