unsat
(assume a0 (forall ((?f FldLoc)) (= (read$0 ?f null$0) null$0)))
(assume a1 (forall ((x Loc) (y Loc)) (or (and (= x y) (in$0 x (setenum$0 y))) (and (not (= x y)) (not (in$0 x (setenum$0 y)))))))
(assume a2 (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x X) (in$0 x (setminus$0 X Y)) (not (in$0 x Y))) (and (or (in$0 x Y) (not (in$0 x X))) (not (in$0 x (setminus$0 X Y)))))))
(assume a3 (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x X) (in$0 x Y) (in$0 x (intersection$0 X Y))) (and (or (not (in$0 x X)) (not (in$0 x Y))) (not (in$0 x (intersection$0 X Y)))))))
(assume a4 (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x (union$0 X Y)) (or (in$0 x X) (in$0 x Y))) (and (not (in$0 x X)) (not (in$0 x Y)) (not (in$0 x (union$0 X Y)))))))
(assume a5 (forall ((x Loc)) (not (in$0 x emptyset$0))))
(assume a6 (! (or (! (Btwn$0 next$0 lst$0 null$0 null$0) :named @p_3) (! (not (! (lseg_struct$0 sk_?X$0 next$0 lst$0 null$0) :named @p_1)) :named @p_2)) :named @p_4))
(assume a7 (= Alloc$0 (union$0 FP_Caller$0 Alloc$0)))
(assume a8 (! (= sk_?X$0 (! (lseg_domain$0 next$0 lst$0 null$0) :named @p_5)) :named @p_6))
(assume a9 @p_1)
(assume a10 (not (in$0 null$0 Alloc$0)))
(assume a11 (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)))))))
(assume a12 (forall ((?X SetLoc) (?f FldLoc) (?x Loc)) (or (in$0 (ep$0 ?f ?X ?x) ?X) (= ?x (ep$0 ?f ?X ?x)))))
(assume a13 (forall ((?X SetLoc) (?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x (ep$0 ?f ?X ?x) (ep$0 ?f ?X ?x))))
(assume a14 (= FP_Caller_1$0 (setminus$0 FP_Caller$0 FP$0)))
(assume a15 (! (= sk_?X$0 FP$0) :named @p_7))
(assume a16 (= FP_Caller$0 (union$0 FP$0 FP_Caller$0)))
(assume a17 (! (not (= lst$0 null$0)) :named @p_8))
(assume a18 (! (not (! (in$0 lst$0 FP$0) :named @p_9)) :named @p_10))
(assume a19 (forall ((?X SetLoc) (?f FldLoc) (?x Loc) (?y Loc)) (or (Btwn$0 ?f ?x (ep$0 ?f ?X ?x) ?y) (not (Btwn$0 ?f ?x ?y ?y)) (not (in$0 ?y ?X)))))
(assume a20 (forall ((?X SetLoc) (?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?y)) (not (in$0 ?y ?X)) (in$0 (ep$0 ?f ?X ?x) ?X))))
(assume a21 (forall ((?f FldLoc) (?u Loc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?z)) (not (Btwn$0 ?f ?x ?u ?y)) (and (Btwn$0 ?f ?x ?u ?z) (Btwn$0 ?f ?u ?y ?z)))))
(assume a22 (forall ((?f FldLoc) (?u Loc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?z)) (not (Btwn$0 ?f ?y ?u ?z)) (and (Btwn$0 ?f ?x ?y ?u) (Btwn$0 ?f ?x ?u ?z)))))
(assume a23 (forall ((?f FldLoc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?y)) (not (Btwn$0 ?f ?y ?z ?z)) (Btwn$0 ?f ?x ?z ?z))))
(assume a24 (forall ((?f FldLoc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?z)) (and (Btwn$0 ?f ?x ?y ?y) (Btwn$0 ?f ?y ?z ?z)))))
(assume a25 (forall ((?f FldLoc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?y)) (not (Btwn$0 ?f ?x ?z ?z)) (Btwn$0 ?f ?x ?y ?z) (Btwn$0 ?f ?x ?z ?y))))
(assume a26 (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?x)) (= ?x ?y))))
(assume a27 (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y) (Btwn$0 ?f ?x (read$0 ?f ?x) ?y))))
(assume a28 (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (= (read$0 ?f ?x) ?x)) (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y))))
(assume a29 (forall ((?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x (read$0 ?f ?x) (read$0 ?f ?x))))
(assume a30 (forall ((?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x ?x ?x)))
(step t0 (cl (! (not (! (or (! (not (! (Btwn$0 next$0 lst$0 lst$0 lst$0) :named @p_11)) :named @p_16) (! (not (! (Btwn$0 next$0 lst$0 null$0 lst$0) :named @p_13)) :named @p_78) (! (and (! (Btwn$0 next$0 lst$0 lst$0 null$0) :named @p_14) @p_13) :named @p_76)) :named @p_79)) :named @p_81) @p_16 @p_78 @p_76) :rule or_pos)
(step t1 (cl @p_16 @p_78 @p_76 @p_81) :rule reordering :premises (t0))
(step t2 (cl (or (! (not (forall ((?f FldLoc) (?u Loc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?z)) (not (Btwn$0 ?f ?y ?u ?z)) (and (Btwn$0 ?f ?x ?y ?u) (Btwn$0 ?f ?x ?u ?z))))) :named @p_80) @p_79)) :rule forall_inst :args (next$0 null$0 lst$0 lst$0 lst$0))
(step t3 (cl @p_80 @p_79) :rule or :premises (t2))
(step t4 (cl @p_79) :rule resolution :premises (t3 a22))
(step t5 (cl (! (not @p_76) :named @p_77) @p_14) :rule and_pos :args (0))
(step t6 (cl @p_14 @p_77) :rule reordering :premises (t5))
(step t7 (cl (! (not (! (or (! (= null$0 lst$0) :named @p_20) (! (not @p_14) :named @p_19)) :named @p_21)) :named @p_69) @p_20 @p_19) :rule or_pos)
(step t8 (cl @p_20 @p_19 @p_69) :rule reordering :premises (t7))
(step t9 (cl (not @p_20)) :rule not_symm :premises (a17))
(step t10 (cl (! (not (! (and @p_21 (! (not (! (in$0 lst$0 @p_5) :named @p_22)) :named @p_23)) :named @p_24)) :named @p_68) @p_21) :rule and_pos :args (0))
(step t11 (cl @p_21 @p_68) :rule reordering :premises (t10))
(step t12 (cl (! (not (! (or @p_22 @p_24) :named @p_25)) :named @p_67) @p_22 @p_24) :rule or_pos)
(step t13 (cl @p_22 @p_24 @p_67) :rule reordering :premises (t12))
(step t14 (cl (not (! (= @p_10 @p_23) :named @p_63)) (not @p_10) @p_23) :rule equiv_pos2)
(step t15 (cl (= lst$0 lst$0)) :rule refl)
(step t16 (cl (not (! (= (! (= FP$0 sk_?X$0) :named @p_65) (! (= FP$0 @p_5) :named @p_64)) :named @p_66)) (not @p_65) @p_64) :rule equiv_pos2)
(step t17 (cl (= FP$0 FP$0)) :rule refl)
(step t18 (cl @p_66) :rule cong :premises (t17 a8))
(step t19 (cl @p_65) :rule symm :premises (a15))
(step t20 (cl @p_64) :rule resolution :premises (t16 t18 t19))
(step t21 (cl (= @p_9 @p_22)) :rule cong :premises (t15 t20))
(step t22 (cl @p_63) :rule cong :premises (t21))
(step t23 (cl @p_23) :rule resolution :premises (t14 t22 a18))
(step t24 (cl (or (! (not (forall ((BOUND_VARIABLE_594 Loc)) (or (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_594) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_594 null$0))) (not (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0))))))) :named @p_62) @p_25)) :rule forall_inst :args (lst$0))
(step t25 (cl @p_62 @p_25) :rule or :premises (t24))
(step t26 (cl (not (! (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)))))) (! (and (forall ((BOUND_VARIABLE_582 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_582 null$0) (and (or (= null$0 BOUND_VARIABLE_582) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_582 null$0))) (not (in$0 BOUND_VARIABLE_582 (lseg_domain$0 next$0 lst$0 null$0)))))) (forall ((BOUND_VARIABLE_594 Loc)) (or (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_594) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_594 null$0))) (not (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0)))))) (! (not (in$0 null$0 @p_5)) :named @p_26)) :named @p_27)) :named @p_28)) (not (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0))))))) @p_27) :rule equiv_pos2)
(anchor :step t27 :args ((l1 Loc) (:= (l1 Loc) l1)))
(step t27.t0 (cl (= (! (Btwn$0 next$0 lst$0 l1 null$0) :named @p_49) @p_49)) :rule refl)
(step t27.t1 (cl (= (! (in$0 l1 @p_5) :named @p_47) @p_47)) :rule refl)
(step t27.t2 (cl (! (= (! (= l1 null$0) :named @p_56) (! (= null$0 l1) :named @p_51)) :named @p_61)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_61 2 6))
(step t27.t3 (cl (= (! (not @p_56) :named @p_59) (! (not @p_51) :named @p_54))) :rule cong :premises (t27.t2))
(step t27.t4 (cl (= (! (and @p_49 @p_47 @p_59) :named @p_60) (! (and @p_49 @p_47 @p_54) :named @p_55))) :rule cong :premises (t27.t0 t27.t1 t27.t3))
(step t27.t5 (cl (= (! (not @p_49) :named @p_50) @p_50)) :rule refl)
(step t27.t6 (cl (= (! (or @p_56 @p_50) :named @p_57) (! (or @p_51 @p_50) :named @p_52))) :rule cong :premises (t27.t2 t27.t5))
(step t27.t7 (cl (= (! (not @p_47) :named @p_48) @p_48)) :rule refl)
(step t27.t8 (cl (= (! (and @p_57 @p_48) :named @p_58) (! (and @p_52 @p_48) :named @p_53))) :rule cong :premises (t27.t6 t27.t7))
(step t27.t9 (cl (= (or @p_60 @p_58) (or @p_55 @p_53))) :rule cong :premises (t27.t4 t27.t8))
(step t27 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)))))) (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= null$0 l1))) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)))))))) :rule bind)
(step t28 (cl (! (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= null$0 l1))) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)))))) (forall ((l1 Loc)) (and (or (Btwn$0 next$0 lst$0 l1 null$0) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0))))) (or (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0))))) (or (not (= null$0 l1)) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)))))))) :named @p_46)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_46 13 6))
(step t29 (cl (! (= (forall ((l1 Loc)) (and (or (Btwn$0 next$0 lst$0 l1 null$0) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0))))) (or (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0))))) (or (not (= null$0 l1)) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0))))))) (! (and (forall ((BOUND_VARIABLE_582 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_582 null$0) (and (or (= null$0 BOUND_VARIABLE_582) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_582 null$0))) (not (in$0 BOUND_VARIABLE_582 (lseg_domain$0 next$0 lst$0 null$0)))))) (forall ((BOUND_VARIABLE_594 Loc)) (or (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_594) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_594 null$0))) (not (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0)))))) (forall ((BOUND_VARIABLE_606 Loc)) (or (not (= null$0 BOUND_VARIABLE_606)) (and (or (= null$0 BOUND_VARIABLE_606) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_606 null$0))) (not (in$0 BOUND_VARIABLE_606 (lseg_domain$0 next$0 lst$0 null$0))))))) :named @p_29)) :named @p_45)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_45 13 6))
(step t30 (cl (= (forall ((BOUND_VARIABLE_582 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_582 null$0) (and (or (= null$0 BOUND_VARIABLE_582) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_582 null$0))) (not (in$0 BOUND_VARIABLE_582 (lseg_domain$0 next$0 lst$0 null$0)))))) (forall ((BOUND_VARIABLE_582 Loc)) (or (Btwn$0 next$0 lst$0 BOUND_VARIABLE_582 null$0) (and (or (= null$0 BOUND_VARIABLE_582) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_582 null$0))) (not (in$0 BOUND_VARIABLE_582 (lseg_domain$0 next$0 lst$0 null$0)))))))) :rule refl)
(step t31 (cl (= (forall ((BOUND_VARIABLE_594 Loc)) (or (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_594) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_594 null$0))) (not (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0)))))) (forall ((BOUND_VARIABLE_594 Loc)) (or (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_594) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_594 null$0))) (not (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0)))))))) :rule refl)
(step t32 (cl (! (= (forall ((BOUND_VARIABLE_606 Loc)) (or (not (= null$0 BOUND_VARIABLE_606)) (and (or (= null$0 BOUND_VARIABLE_606) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_606 null$0))) (not (in$0 BOUND_VARIABLE_606 (lseg_domain$0 next$0 lst$0 null$0)))))) (! (or (! (not (! (= null$0 null$0) :named @p_30)) :named @p_33) (! (and (! (or (! (= null$0 null$0) :named @p_30) (! (not @p_3) :named @p_15)) :named @p_31) @p_26) :named @p_32)) :named @p_34)) :named @p_44)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_44 13 6))
(step t33 (cl (! (= @p_30 true) :named @p_41)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_41 2 5))
(step t34 (cl (= @p_33 (! (not true) :named @p_42))) :rule cong :premises (t33))
(step t35 (cl (! (= @p_42 false) :named @p_43)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_43 1 6))
(step t36 (cl (= @p_33 false)) :rule trans :premises (t34 t35))
(step t37 (cl (= @p_15 @p_15)) :rule refl)
(step t38 (cl (= @p_31 (! (or true @p_15) :named @p_39))) :rule cong :premises (t33 t37))
(step t39 (cl (! (= @p_39 true) :named @p_40)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_40 1 6))
(step t40 (cl (= @p_31 true)) :rule trans :premises (t38 t39))
(step t41 (cl (= @p_26 @p_26)) :rule refl)
(step t42 (cl (= @p_32 (! (and true @p_26) :named @p_37))) :rule cong :premises (t40 t41))
(step t43 (cl (! (= @p_37 @p_26) :named @p_38)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_38 1 6))
(step t44 (cl (= @p_32 @p_26)) :rule trans :premises (t42 t43))
(step t45 (cl (= @p_34 (! (or false @p_26) :named @p_35))) :rule cong :premises (t36 t44))
(step t46 (cl (! (= @p_35 @p_26) :named @p_36)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_36 1 6))
(step t47 (cl (= @p_34 @p_26)) :rule trans :premises (t45 t46))
(step t48 (cl (= (forall ((BOUND_VARIABLE_606 Loc)) (or (not (= null$0 BOUND_VARIABLE_606)) (and (or (= null$0 BOUND_VARIABLE_606) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_606 null$0))) (not (in$0 BOUND_VARIABLE_606 (lseg_domain$0 next$0 lst$0 null$0)))))) @p_26)) :rule trans :premises (t32 t47))
(step t49 (cl (= @p_29 @p_27)) :rule cong :premises (t30 t31 t48))
(step t50 (cl (= (forall ((l1 Loc)) (and (or (Btwn$0 next$0 lst$0 l1 null$0) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0))))) (or (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0))))) (or (not (= null$0 l1)) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0))))))) @p_27)) :rule trans :premises (t29 t49))
(step t51 (cl (= (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 null$0) (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= null$0 l1))) (and (or (= null$0 l1) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (in$0 l1 (lseg_domain$0 next$0 lst$0 null$0)))))) @p_27)) :rule trans :premises (t28 t50))
(step t52 (cl @p_28) :rule trans :premises (t27 t51))
(step t53 (cl @p_27) :rule resolution :premises (t26 t52 a11))
(step t54 (cl (forall ((BOUND_VARIABLE_594 Loc)) (or (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0)) (and (or (= null$0 BOUND_VARIABLE_594) (not (Btwn$0 next$0 lst$0 BOUND_VARIABLE_594 null$0))) (not (in$0 BOUND_VARIABLE_594 (lseg_domain$0 next$0 lst$0 null$0))))))) :rule and :premises (t53) :args (1))
(step t55 (cl @p_25) :rule resolution :premises (t25 t54))
(step t56 (cl @p_24) :rule resolution :premises (t13 t23 t55))
(step t57 (cl @p_21) :rule resolution :premises (t11 t56))
(step t58 (cl @p_19) :rule resolution :premises (t8 t9 t57))
(step t59 (cl @p_77) :rule resolution :premises (t6 t58))
(step t60 (cl (! (not (! (or @p_16 @p_15 @p_14 @p_13) :named @p_17)) :named @p_75) @p_16 @p_15 @p_14 @p_13) :rule or_pos)
(step t61 (cl @p_15 @p_14 @p_16 @p_13 @p_75) :rule reordering :premises (t60))
(step t62 (cl (not (! (= @p_4 (! (or @p_3 (! (not (! (lseg_struct$0 @p_5 next$0 lst$0 null$0) :named @p_70)) :named @p_72)) :named @p_73)) :named @p_74)) (not @p_4) @p_73) :rule equiv_pos2)
(step t63 (cl (= @p_3 @p_3)) :rule refl)
(step t64 (cl (= next$0 next$0)) :rule refl)
(step t65 (cl @p_30) :rule refl)
(step t66 (cl (! (= @p_1 @p_70) :named @p_71)) :rule cong :premises (a8 t64 t15 t65))
(step t67 (cl (= @p_2 @p_72)) :rule cong :premises (t66))
(step t68 (cl @p_74) :rule cong :premises (t63 t67))
(step t69 (cl @p_73) :rule resolution :premises (t62 t68 a6))
(step t70 (cl @p_3 @p_72) :rule or :premises (t69))
(step t71 (cl (not @p_71) @p_2 @p_70) :rule equiv_pos2)
(step t72 (cl @p_70) :rule resolution :premises (t71 t66 a9))
(step t73 (cl @p_3) :rule resolution :premises (t70 t72))
(step t74 (cl (or (! (not (forall ((?f FldLoc) (?x Loc)) (Btwn$0 ?f ?x ?x ?x))) :named @p_12) @p_11)) :rule forall_inst :args (next$0 lst$0))
(step t75 (cl @p_12 @p_11) :rule or :premises (t74))
(step t76 (cl @p_11) :rule resolution :premises (t75 a30))
(step t77 (cl (or (! (not (forall ((?f FldLoc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?y)) (not (Btwn$0 ?f ?x ?z ?z)) (Btwn$0 ?f ?x ?y ?z) (Btwn$0 ?f ?x ?z ?y)))) :named @p_18) @p_17)) :rule forall_inst :args (next$0 lst$0 lst$0 null$0))
(step t78 (cl @p_18 @p_17) :rule or :premises (t77))
(step t79 (cl @p_17) :rule resolution :premises (t78 a25))
(step t80 (cl @p_13) :rule resolution :premises (t61 t73 t58 t76 t79))
(step t81 (cl) :rule resolution :premises (t1 t4 t59 t80 t76))
