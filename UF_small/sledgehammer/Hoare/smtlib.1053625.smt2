(set-info :smt-lib-version 2.6)
(set-logic UF)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-sort S6 0)
(declare-sort S7 0)
(declare-sort S8 0)
(declare-sort S9 0)
(declare-sort S10 0)
(declare-sort S11 0)
(declare-sort S12 0)
(declare-sort S13 0)
(declare-sort S14 0)
(declare-sort S15 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S3 S2) S1)
(declare-fun f4 (S4 S2) S3)
(declare-fun f5 () S4)
(declare-fun f6 (S6 S5) S1)
(declare-fun f7 (S7 S6) S6)
(declare-fun f8 (S5) S7)
(declare-fun f9 (S5 S6) S1)
(declare-fun f10 () S6)
(declare-fun f11 (S9) S4)
(declare-fun f12 (S10 S11) S9)
(declare-fun f13 () S10)
(declare-fun f14 (S8) S11)
(declare-fun f15 (S12 S8) S9)
(declare-fun f16 () S12)
(declare-fun f17 (S6 S6) S1)
(declare-fun f18 (S5) S7)
(declare-fun f19 (S13 S4) S5)
(declare-fun f20 (S14 S9) S13)
(declare-fun f21 (S15 S4) S14)
(declare-fun f22 () S15)
(declare-fun f23 () S6)
(declare-fun f24 (S6) S6)
(declare-fun f25 () S8)
(declare-fun f26 () S6)
(assert (not (= f1 f2)))
(assert (forall ((?v0 S2) (?v1 S2)) (= (= (f3 (f4 f5 ?v0) ?v1) f1) (= ?v0 ?v1))))
(assert (forall ((?v0 S5) (?v1 S6) (?v2 S5)) (= (= (f6 (f7 (f8 ?v0) ?v1) ?v2) f1) (or (= ?v2 ?v0) (= (f9 ?v2 ?v1) f1)))))
(assert (forall ((?v0 S5)) (= (= (f6 f10 ?v0) f1) false)))
(assert (forall ((?v0 S8) (?v1 S2) (?v2 S2)) (=> (= (f3 (f4 (f11 (f12 f13 (f14 ?v0))) ?v1) ?v2) f1) (= (f3 (f4 (f11 (f15 f16 ?v0)) ?v1) ?v2) f1))))
(assert (forall ((?v0 S6) (?v1 S4) (?v2 S9) (?v3 S4) (?v4 S4)) (let ((?v_0 (f20 (f21 f22 ?v1) ?v2))) (=> (= (f17 ?v0 (f7 (f18 (f19 ?v_0 ?v3)) f23)) f1) (=> (forall ((?v5 S2) (?v6 S2)) (=> (= (f3 (f4 ?v3 ?v5) ?v6) f1) (= (f3 (f4 ?v4 ?v5) ?v6) f1))) (= (f17 ?v0 (f7 (f18 (f19 ?v_0 ?v4)) f23)) f1))))))
(assert (forall ((?v0 S4) (?v1 S8) (?v2 S4) (?v3 S6)) (let ((?v_0 (f21 f22 ?v0))) (let ((?v_1 (f18 (f19 (f20 ?v_0 (f15 f16 ?v1)) ?v2)))) (=> (= (f17 (f7 ?v_1 ?v3) (f7 (f18 (f19 (f20 ?v_0 (f12 f13 (f14 ?v1))) ?v2)) f23)) f1) (= (f17 ?v3 (f7 ?v_1 f23)) f1))))))
(assert (forall ((?v0 S5) (?v1 S6)) (= (f7 (f18 ?v0) ?v1) (f24 (f7 (f8 ?v0) ?v1)))))
(assert (= f23 (f24 f10)))
(assert (let ((?v_1 (f21 f22 f5)) (?v_0 (f15 f16 f25))) (let ((?v_3 (f18 (f19 (f20 ?v_1 ?v_0) (f11 ?v_0)))) (?v_2 (f12 f13 (f14 f25)))) (not (=> (= (f17 (f7 ?v_3 f26) (f7 (f18 (f19 (f20 ?v_1 ?v_2) (f11 ?v_2))) f23)) f1) (= (f17 f26 (f7 ?v_3 f23)) f1))))))
(check-sat)
(exit)
