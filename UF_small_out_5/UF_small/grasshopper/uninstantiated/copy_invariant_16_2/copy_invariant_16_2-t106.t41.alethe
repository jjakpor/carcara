(assume nt106.0 (not (not (in$0 sk_?e$0 (lseg_domain$0 next$0 cp_2$0 cp_2$0)))))
(assume nt106.1 (not (not (= cp_2$0 sk_?e$0))))
(assume nt106.2 (not (not (not (in$0 cp_2$0 (lseg_domain$0 next$0 cp_2$0 cp_2$0))))))
(assume nt106.3 (not false))
(anchor :step t106)
(assume t106.a0 (in$0 sk_?e$0 (lseg_domain$0 next$0 cp_2$0 cp_2$0)))
(assume t106.a1 (= cp_2$0 sk_?e$0))
(assume t106.a2 (not (in$0 cp_2$0 (lseg_domain$0 next$0 cp_2$0 cp_2$0))))
(step t106.t5 (cl (= (in$0 cp_2$0 (lseg_domain$0 next$0 cp_2$0 cp_2$0)) false) (in$0 cp_2$0 (lseg_domain$0 next$0 cp_2$0 cp_2$0))) :rule trust)
(step t106.t40 (cl (not (in$0 cp_2$0 (lseg_domain$0 next$0 cp_2$0 cp_2$0)))) :rule trust :args (2))
(step st106.t41 (cl (= (in$0 cp_2$0 (lseg_domain$0 next$0 cp_2$0 cp_2$0)) false)) :rule resolution :premises (t106.t5 t106.t40))
(step t106.t50 (cl false) :rule trust)
(step t106 (cl (not (in$0 sk_?e$0 (lseg_domain$0 next$0 cp_2$0 cp_2$0))) (not (= cp_2$0 sk_?e$0)) (not (not (in$0 cp_2$0 (lseg_domain$0 next$0 cp_2$0 cp_2$0)))) false) :rule subproof :discharge (t106.a0 t106.a1 t106.a2))
(step t.end (cl) :rule resolution :premises (nt106.0 nt106.1 nt106.2 nt106.3 t106))
