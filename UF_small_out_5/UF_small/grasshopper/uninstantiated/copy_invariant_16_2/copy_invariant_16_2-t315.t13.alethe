(assume nt315.0 (not (not (in$0 sk_?e$0 (intersection$0 (lseg_domain$0 next$0 lst$0 lst$0) (lseg_domain$0 next$0 lst$0 cp_2$0))))))
(assume nt315.1 (not (not (= lst$0 sk_?e$0))))
(assume nt315.2 (not (not (not (in$0 lst$0 (intersection$0 (lseg_domain$0 next$0 lst$0 lst$0) (lseg_domain$0 next$0 lst$0 cp_2$0)))))))
(assume nt315.3 (not false))
(anchor :step t315)
(assume t315.a0 (in$0 sk_?e$0 (intersection$0 (lseg_domain$0 next$0 lst$0 lst$0) (lseg_domain$0 next$0 lst$0 cp_2$0))))
(assume t315.a1 (= lst$0 sk_?e$0))
(assume t315.a2 (not (in$0 lst$0 (intersection$0 (lseg_domain$0 next$0 lst$0 lst$0) (lseg_domain$0 next$0 lst$0 cp_2$0)))))
(step st315.t13 (cl (or (not (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x X) (in$0 x Y) (in$0 x (intersection$0 X Y))) (and (or (not (in$0 x X)) (not (in$0 x Y))) (not (in$0 x (intersection$0 X Y))))))) (or (and (in$0 lst$0 (lseg_domain$0 next$0 lst$0 lst$0)) (in$0 lst$0 (lseg_domain$0 next$0 lst$0 cp_2$0)) (in$0 lst$0 (intersection$0 (lseg_domain$0 next$0 lst$0 lst$0) (lseg_domain$0 next$0 lst$0 cp_2$0)))) (and (or (not (in$0 lst$0 (lseg_domain$0 next$0 lst$0 lst$0))) (not (in$0 lst$0 (lseg_domain$0 next$0 lst$0 cp_2$0)))) (not (in$0 lst$0 (intersection$0 (lseg_domain$0 next$0 lst$0 lst$0) (lseg_domain$0 next$0 lst$0 cp_2$0)))))))) :rule forall_inst :args ((lseg_domain$0 next$0 lst$0 lst$0) (lseg_domain$0 next$0 lst$0 cp_2$0) lst$0))
(step t315.t28 (cl false) :rule trust)
(step t315 (cl (not (in$0 sk_?e$0 (intersection$0 (lseg_domain$0 next$0 lst$0 lst$0) (lseg_domain$0 next$0 lst$0 cp_2$0)))) (not (= lst$0 sk_?e$0)) (not (not (in$0 lst$0 (intersection$0 (lseg_domain$0 next$0 lst$0 lst$0) (lseg_domain$0 next$0 lst$0 cp_2$0))))) false) :rule subproof :discharge (t315.a0 t315.a1 t315.a2))
(step t.end (cl) :rule resolution :premises (nt315.0 nt315.1 nt315.2 nt315.3 t315))
