(assume nst64.0 (not (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0))))
(assume nst64.1 (not (not (and (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0)) (Btwn$0 next$0 (read$0 next$0 lst$0) (read$0 next$0 lst$0) null$0)))))
(assume t63 (or (not (and (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0)) (Btwn$0 next$0 (read$0 next$0 lst$0) (read$0 next$0 lst$0) null$0))) (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0))))
(step t63' (cl (not (and (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0)) (Btwn$0 next$0 (read$0 next$0 lst$0) (read$0 next$0 lst$0) null$0))) (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0))) :rule or :premises (t63))
(step st64 (cl (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0)) (not (and (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0)) (Btwn$0 next$0 (read$0 next$0 lst$0) (read$0 next$0 lst$0) null$0)))) :rule reordering :premises (t63'))
(step t.end (cl) :rule resolution :premises (nst64.0 nst64.1 st64))
