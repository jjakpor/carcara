(assume nst1.0 (not (not (in$0 elt$0 (setenum$0 elt$0)))))
(assume nst1.1 (not (not (and (not (in$0 elt$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0))) (not (in$0 elt$0 (setenum$0 elt$0))) (not (in$0 elt$0 (union$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0) (setenum$0 elt$0))))))))
(assume t0 (or (not (and (not (in$0 elt$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0))) (not (in$0 elt$0 (setenum$0 elt$0))) (not (in$0 elt$0 (union$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0) (setenum$0 elt$0)))))) (not (in$0 elt$0 (setenum$0 elt$0)))))
(step t0' (cl (not (and (not (in$0 elt$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0))) (not (in$0 elt$0 (setenum$0 elt$0))) (not (in$0 elt$0 (union$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0) (setenum$0 elt$0)))))) (not (in$0 elt$0 (setenum$0 elt$0)))) :rule or :premises (t0))
(step st1 (cl (not (in$0 elt$0 (setenum$0 elt$0))) (not (and (not (in$0 elt$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0))) (not (in$0 elt$0 (setenum$0 elt$0))) (not (in$0 elt$0 (union$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0) (setenum$0 elt$0))))))) :rule reordering :premises (t0'))
(step t.end (cl) :rule resolution :premises (nst1.0 nst1.1 st1))
