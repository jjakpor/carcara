(assume nst0.0 (not (not (and (not (in$0 elt$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0))) (not (in$0 elt$0 (setenum$0 elt$0))) (not (in$0 elt$0 (union$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0) (setenum$0 elt$0))))))))
(assume nst0.1 (not (not (in$0 elt$0 (setenum$0 elt$0)))))
(step st0 (cl (not (and (not (in$0 elt$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0))) (not (in$0 elt$0 (setenum$0 elt$0))) (not (in$0 elt$0 (union$0 (dlseg_domain$0 next$0 prev$0 (read$0 next$0 elt$0) (read$0 next$0 elt$0) (read$0 next$0 elt$0) b$0) (setenum$0 elt$0)))))) (not (in$0 elt$0 (setenum$0 elt$0)))) :rule and_pos :args (1))
(step t.end (cl) :rule resolution :premises (nst0.0 nst0.1 st0))
