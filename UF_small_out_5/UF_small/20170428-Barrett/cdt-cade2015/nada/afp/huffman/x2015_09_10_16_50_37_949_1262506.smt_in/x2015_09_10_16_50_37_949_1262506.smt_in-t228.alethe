(assume nst228.0 (not (not (= a$ d$))))
(assume a2 (not (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$))))
(assume a3 (consistent$ t$))
(assume a4 (not (= c$ d$)))
(assume a5 (member$ c$ (alphabet$ t$)))
(assume t82 (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$)))))
(assume t139 (or (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (not (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (not (= (fun_app$f (swapSyms$ t$ b$) c$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (not (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ b$) c$))) (cost$ t$)))))
(assume t141 (or (not (consistent$ t$)) (not (member$ c$ (alphabet$ t$))) (not (member$ b$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$))) (not (fun_app$b (less_eq$ (depth$ t$ b$)) (depth$ t$ c$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ b$) c$))) (cost$ t$)) (not (or (not (consistent$ t$)) (not (member$ b$ (alphabet$ t$))) (not (member$ c$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$))) (not (fun_app$b (less_eq$ (depth$ t$ b$)) (depth$ t$ c$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ b$) c$))) (cost$ t$))))))
(assume t149 (or (not (consistent$ t$)) (not (member$ b$ (alphabet$ t$))) (not (member$ c$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$))) (not (fun_app$b (less_eq$ (depth$ t$ b$)) (depth$ t$ c$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ b$) c$))) (cost$ t$))))
(assume t161 (fun_app$b (less_eq$ (depth$ t$ b$)) (depth$ t$ c$)))
(assume t164 (member$ b$ (alphabet$ t$)))
(assume t166 (or (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$)) (not (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) c$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$))))))
(assume t168 (or (= b$ c$) (not (member$ c$ (alphabet$ t$))) (= a$ c$) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) c$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$))) (not (or (not (member$ c$ (alphabet$ t$))) (= a$ c$) (= b$ c$) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) c$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$)))))))
(assume t174 (or (not (member$ c$ (alphabet$ t$))) (= a$ c$) (= b$ c$) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) c$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$)))))
(assume t191 (or (not (= b$ c$)) (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$)) (not (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (not (= (fun_app$f (swapSyms$ t$ b$) c$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (not (= t$ (fun_app$f (swapSyms$ t$ b$) b$)))))
(assume t202 (= t$ (fun_app$f (swapSyms$ t$ b$) b$)))
(assume t211 (not (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$))))
(assume t226 (or (= c$ d$) (not (= a$ d$)) (not (= a$ c$))))
(assume t227 (or (not (= a$ d$)) (= (fun_app$f (swapSyms$ t$ b$) c$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))))
(step t226' (cl (= c$ d$) (not (= a$ d$)) (not (= a$ c$))) :rule or :premises (t226))
(step t139' (cl (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (not (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (not (= (fun_app$f (swapSyms$ t$ b$) c$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (not (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ b$) c$))) (cost$ t$)))) :rule or :premises (t139))
(step t191' (cl (not (= b$ c$)) (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$)) (not (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (not (= (fun_app$f (swapSyms$ t$ b$) c$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) (not (= t$ (fun_app$f (swapSyms$ t$ b$) b$)))) :rule or :premises (t191))
(step t168' (cl (= b$ c$) (not (member$ c$ (alphabet$ t$))) (= a$ c$) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) c$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$))) (not (or (not (member$ c$ (alphabet$ t$))) (= a$ c$) (= b$ c$) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) c$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$)))))) :rule or :premises (t168))
(step t166' (cl (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$)) (not (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) c$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$))))) :rule or :premises (t166))
(step t227' (cl (not (= a$ d$)) (= (fun_app$f (swapSyms$ t$ b$) c$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) :rule or :premises (t227))
(step t141' (cl (not (consistent$ t$)) (not (member$ c$ (alphabet$ t$))) (not (member$ b$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$))) (not (fun_app$b (less_eq$ (depth$ t$ b$)) (depth$ t$ c$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ b$) c$))) (cost$ t$)) (not (or (not (consistent$ t$)) (not (member$ b$ (alphabet$ t$))) (not (member$ c$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$))) (not (fun_app$b (less_eq$ (depth$ t$ b$)) (depth$ t$ c$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ b$) c$))) (cost$ t$))))) :rule or :premises (t141))
(step st228 (cl (not (= a$ d$))) :rule resolution :premises (t139' t82 a2 t141' t149 t161 t164 a5 a3 t166' t168' t174 a5 t191' t202 t211 t82 t226' a4 t227'))
(step t.end (cl) :rule resolution :premises (nst228.0 st228))
