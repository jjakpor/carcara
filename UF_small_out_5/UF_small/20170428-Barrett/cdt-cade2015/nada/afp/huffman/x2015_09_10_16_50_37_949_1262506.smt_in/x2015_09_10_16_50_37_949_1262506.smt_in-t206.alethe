(assume nst206.0 (not (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$))))
(assume nst206.1 (not (not (and (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ t$)) (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)))))))
(assume t205 (or (not (and (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ t$)) (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))))) (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$))))
(step t205' (cl (not (and (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ t$)) (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))))) (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$))) :rule or :premises (t205))
(step st206 (cl (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (not (and (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ t$)) (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)))))) :rule reordering :premises (t205'))
(step t.end (cl) :rule resolution :premises (nst206.0 nst206.1 st206))
