(assume nst252.0 (not (or (not (not (= a$ d$))) (not (not (= b$ c$))))))
(assume nst252.1 (not (or (not (not (= a$ d$))) (not (not (= b$ c$))))))
(assume t249 (or (not (not (= a$ d$))) (not (not (= b$ c$)))))
(assume t250 (or (or (not (not (= a$ d$))) (not (not (= b$ c$)))) (not (not (not (= a$ d$))))))
(assume t251 (or (or (not (not (= a$ d$))) (not (not (= b$ c$)))) (not (not (not (= b$ c$))))))
(step t251' (cl (or (not (not (= a$ d$))) (not (not (= b$ c$)))) (not (not (not (= b$ c$))))) :rule or :premises (t251))
(step t250' (cl (or (not (not (= a$ d$))) (not (not (= b$ c$)))) (not (not (not (= a$ d$))))) :rule or :premises (t250))
(step t249' (cl (not (not (= a$ d$))) (not (not (= b$ c$)))) :rule or :premises (t249))
(step st252 (cl (or (not (not (= a$ d$))) (not (not (= b$ c$)))) (or (not (not (= a$ d$))) (not (not (= b$ c$))))) :rule resolution :premises (t249' t250' t251'))
(step t.end (cl) :rule resolution :premises (nst252.0 nst252.1 st252))
