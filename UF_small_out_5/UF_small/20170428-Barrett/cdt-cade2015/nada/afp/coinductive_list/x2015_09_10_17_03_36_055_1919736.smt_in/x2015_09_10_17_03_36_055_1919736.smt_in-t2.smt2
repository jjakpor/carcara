(set-logic UF)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort Nat$ 0)
(declare-sort Enat_bool_fun$ 0)
(declare-sort Enat_enat_fun$ 0)
(declare-sort A_llist_enat_fun$ 0)
(declare-sort B_llist_enat_fun$ 0)
(declare-sort Enat_enat_bool_fun_fun$ 0)
(declare-sort A_a_prod_llist_enat_fun$ 0)
(declare-sort A_b_prod_llist_enat_fun$ 0)
(declare-sort B_a_prod_llist_enat_fun$ 0)
(declare-sort B_b_prod_llist_enat_fun$ 0)
(declare-sort A_a_b_prod_prod_llist_enat_fun$ 0)
(declare-sort B_a_b_prod_prod_llist_enat_fun$ 0)
(declare-sort A_llist$ 0)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-sort A_b_prod$ 0)
(declare-sort A_b_prod_llist$ 0)
(declare-sort B_llist$ 0)
(declare-sort B_a_b_prod_prod$ 0)
(declare-sort B_a_b_prod_prod_llist$ 0)
(declare-sort B_b_prod$ 0)
(declare-sort B_b_prod_llist$ 0)
(declare-sort B_a_prod$ 0)
(declare-sort B_a_prod_llist$ 0)
(declare-sort A_a_b_prod_prod$ 0)
(declare-sort A_a_b_prod_prod_llist$ 0)
(declare-sort A_a_prod$ 0)
(declare-sort A_a_prod_llist$ 0)
(declare-sort A_b_prod_a_b_prod_prod$ 0)
(declare-sort A_b_prod_a_b_prod_prod_llist$ 0)
(declare-sort A_b_b_prod_prod$ 0)
(declare-sort A_b_b_prod_prod_llist$ 0)
(declare-sort A_b_a_prod_prod$ 0)
(declare-sort A_b_a_prod_prod_llist$ 0)
(declare-sort A_a_a_prod_prod$ 0)
(declare-sort A_a_a_prod_prod_llist$ 0)
(declare-sort B_b_b_prod_prod$ 0)
(declare-sort B_b_b_prod_prod_llist$ 0)
(declare-sort B_b_a_prod_prod$ 0)
(declare-sort B_b_a_prod_prod_llist$ 0)
(declare-sort A_b_prod_b_prod$ 0)
(declare-sort A_b_prod_b_prod_llist$ 0)
(declare-sort A_b_prod_a_prod$ 0)
(declare-sort A_b_prod_a_prod_llist$ 0)
(declare-sort B_a_b_prod_a_b_prod_prod_prod$ 0)
(declare-sort B_a_b_prod_a_b_prod_prod_prod_llist$ 0)
(declare-fun lNil$ () A_llist$)
(declare-fun lhd$ (A_llist$) A$)
(declare-fun ltl$ (A_llist$) A_llist$)
(declare-fun lCons$ (A$ A_llist$) A_llist$)
(declare-fun none$ () Nat_option$)
(declare-fun the$ (Nat_option$) Nat$)
(declare-fun some$ (Nat$) Nat_option$)
(declare-fun rep_enat$ (Enat$) Nat_option$)
(declare-fun abs_enat$ (Nat_option$) Enat$)
(declare-fun fst$ (A_b_prod$) A$)
(declare-fun snd$ (A_b_prod$) B$)
(declare-fun pair$ (A$ B$) A_b_prod$)
(declare-fun lNil$a () A_b_prod_llist$)
(declare-fun lhd$a (A_b_prod_llist$) A_b_prod$)
(declare-fun ltl$a (A_b_prod_llist$) A_b_prod_llist$)
(declare-fun lCons$a (A_b_prod$ A_b_prod_llist$) A_b_prod_llist$)
(declare-fun lNil$b () B_llist$)
(declare-fun lhd$b (B_llist$) B$)
(declare-fun ltl$b (B_llist$) B_llist$)
(declare-fun lCons$b (B$ B_llist$) B_llist$)
(declare-fun fst$a (B_a_b_prod_prod$) B$)
(declare-fun snd$a (B_a_b_prod_prod$) A_b_prod$)
(declare-fun pair$a (B$ A_b_prod$) B_a_b_prod_prod$)
(declare-fun lNil$c () B_a_b_prod_prod_llist$)
(declare-fun lhd$c (B_a_b_prod_prod_llist$) B_a_b_prod_prod$)
(declare-fun ltl$c (B_a_b_prod_prod_llist$) B_a_b_prod_prod_llist$)
(declare-fun lCons$c (B_a_b_prod_prod$ B_a_b_prod_prod_llist$) B_a_b_prod_prod_llist$)
(declare-fun fst$b (B_b_prod$) B$)
(declare-fun snd$b (B_b_prod$) B$)
(declare-fun pair$b (B$ B$) B_b_prod$)
(declare-fun lNil$d () B_b_prod_llist$)
(declare-fun lhd$d (B_b_prod_llist$) B_b_prod$)
(declare-fun ltl$d (B_b_prod_llist$) B_b_prod_llist$)
(declare-fun lCons$d (B_b_prod$ B_b_prod_llist$) B_b_prod_llist$)
(declare-fun fst$c (B_a_prod$) B$)
(declare-fun snd$c (B_a_prod$) A$)
(declare-fun pair$c (B$ A$) B_a_prod$)
(declare-fun lNil$e () B_a_prod_llist$)
(declare-fun lhd$e (B_a_prod_llist$) B_a_prod$)
(declare-fun ltl$e (B_a_prod_llist$) B_a_prod_llist$)
(declare-fun lCons$e (B_a_prod$ B_a_prod_llist$) B_a_prod_llist$)
(declare-fun fst$d (A_a_b_prod_prod$) A$)
(declare-fun snd$d (A_a_b_prod_prod$) A_b_prod$)
(declare-fun pair$d (A$ A_b_prod$) A_a_b_prod_prod$)
(declare-fun lNil$f () A_a_b_prod_prod_llist$)
(declare-fun lhd$f (A_a_b_prod_prod_llist$) A_a_b_prod_prod$)
(declare-fun ltl$f (A_a_b_prod_prod_llist$) A_a_b_prod_prod_llist$)
(declare-fun lCons$f (A_a_b_prod_prod$ A_a_b_prod_prod_llist$) A_a_b_prod_prod_llist$)
(declare-fun fst$e (A_a_prod$) A$)
(declare-fun snd$e (A_a_prod$) A$)
(declare-fun pair$e (A$ A$) A_a_prod$)
(declare-fun lNil$g () A_a_prod_llist$)
(declare-fun lhd$g (A_a_prod_llist$) A_a_prod$)
(declare-fun ltl$g (A_a_prod_llist$) A_a_prod_llist$)
(declare-fun lCons$g (A_a_prod$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun fst$f (A_b_prod_a_b_prod_prod$) A_b_prod$)
(declare-fun snd$f (A_b_prod_a_b_prod_prod$) A_b_prod$)
(declare-fun pair$f (A_b_prod$ A_b_prod$) A_b_prod_a_b_prod_prod$)
(declare-fun lNil$h () A_b_prod_a_b_prod_prod_llist$)
(declare-fun lhd$h (A_b_prod_a_b_prod_prod_llist$) A_b_prod_a_b_prod_prod$)
(declare-fun ltl$h (A_b_prod_a_b_prod_prod_llist$) A_b_prod_a_b_prod_prod_llist$)
(declare-fun lCons$h (A_b_prod_a_b_prod_prod$ A_b_prod_a_b_prod_prod_llist$) A_b_prod_a_b_prod_prod_llist$)
(declare-fun fst$g (A_b_b_prod_prod$) A$)
(declare-fun snd$g (A_b_b_prod_prod$) B_b_prod$)
(declare-fun pair$g (A$ B_b_prod$) A_b_b_prod_prod$)
(declare-fun lNil$i () A_b_b_prod_prod_llist$)
(declare-fun lhd$i (A_b_b_prod_prod_llist$) A_b_b_prod_prod$)
(declare-fun ltl$i (A_b_b_prod_prod_llist$) A_b_b_prod_prod_llist$)
(declare-fun lCons$i (A_b_b_prod_prod$ A_b_b_prod_prod_llist$) A_b_b_prod_prod_llist$)
(declare-fun fst$h (A_b_a_prod_prod$) A$)
(declare-fun snd$h (A_b_a_prod_prod$) B_a_prod$)
(declare-fun pair$h (A$ B_a_prod$) A_b_a_prod_prod$)
(declare-fun lNil$j () A_b_a_prod_prod_llist$)
(declare-fun lhd$j (A_b_a_prod_prod_llist$) A_b_a_prod_prod$)
(declare-fun ltl$j (A_b_a_prod_prod_llist$) A_b_a_prod_prod_llist$)
(declare-fun lCons$j (A_b_a_prod_prod$ A_b_a_prod_prod_llist$) A_b_a_prod_prod_llist$)
(declare-fun fst$i (A_a_a_prod_prod$) A$)
(declare-fun snd$i (A_a_a_prod_prod$) A_a_prod$)
(declare-fun pair$i (A$ A_a_prod$) A_a_a_prod_prod$)
(declare-fun lNil$k () A_a_a_prod_prod_llist$)
(declare-fun lhd$k (A_a_a_prod_prod_llist$) A_a_a_prod_prod$)
(declare-fun ltl$k (A_a_a_prod_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun lCons$k (A_a_a_prod_prod$ A_a_a_prod_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun fst$j (B_b_b_prod_prod$) B$)
(declare-fun snd$j (B_b_b_prod_prod$) B_b_prod$)
(declare-fun pair$j (B$ B_b_prod$) B_b_b_prod_prod$)
(declare-fun lNil$l () B_b_b_prod_prod_llist$)
(declare-fun lhd$l (B_b_b_prod_prod_llist$) B_b_b_prod_prod$)
(declare-fun ltl$l (B_b_b_prod_prod_llist$) B_b_b_prod_prod_llist$)
(declare-fun lCons$l (B_b_b_prod_prod$ B_b_b_prod_prod_llist$) B_b_b_prod_prod_llist$)
(declare-fun fst$k (B_b_a_prod_prod$) B$)
(declare-fun snd$k (B_b_a_prod_prod$) B_a_prod$)
(declare-fun pair$k (B$ B_a_prod$) B_b_a_prod_prod$)
(declare-fun lNil$m () B_b_a_prod_prod_llist$)
(declare-fun lhd$m (B_b_a_prod_prod_llist$) B_b_a_prod_prod$)
(declare-fun ltl$m (B_b_a_prod_prod_llist$) B_b_a_prod_prod_llist$)
(declare-fun lCons$m (B_b_a_prod_prod$ B_b_a_prod_prod_llist$) B_b_a_prod_prod_llist$)
(declare-fun fst$l (A_b_prod_b_prod$) A_b_prod$)
(declare-fun snd$l (A_b_prod_b_prod$) B$)
(declare-fun pair$l (A_b_prod$ B$) A_b_prod_b_prod$)
(declare-fun lNil$n () A_b_prod_b_prod_llist$)
(declare-fun lhd$n (A_b_prod_b_prod_llist$) A_b_prod_b_prod$)
(declare-fun ltl$n (A_b_prod_b_prod_llist$) A_b_prod_b_prod_llist$)
(declare-fun lCons$n (A_b_prod_b_prod$ A_b_prod_b_prod_llist$) A_b_prod_b_prod_llist$)
(declare-fun fst$m (A_b_prod_a_prod$) A_b_prod$)
(declare-fun snd$m (A_b_prod_a_prod$) A$)
(declare-fun pair$m (A_b_prod$ A$) A_b_prod_a_prod$)
(declare-fun lNil$o () A_b_prod_a_prod_llist$)
(declare-fun lhd$o (A_b_prod_a_prod_llist$) A_b_prod_a_prod$)
(declare-fun ltl$o (A_b_prod_a_prod_llist$) A_b_prod_a_prod_llist$)
(declare-fun lCons$o (A_b_prod_a_prod$ A_b_prod_a_prod_llist$) A_b_prod_a_prod_llist$)
(declare-fun fst$n (B_a_b_prod_a_b_prod_prod_prod$) B$)
(declare-fun snd$n (B_a_b_prod_a_b_prod_prod_prod$) A_b_prod_a_b_prod_prod$)
(declare-fun pair$n (B$ A_b_prod_a_b_prod_prod$) B_a_b_prod_a_b_prod_prod_prod$)
(declare-fun lNil$p () B_a_b_prod_a_b_prod_prod_prod_llist$)
(declare-fun lhd$p (B_a_b_prod_a_b_prod_prod_prod_llist$) B_a_b_prod_a_b_prod_prod_prod$)
(declare-fun ltl$p (B_a_b_prod_a_b_prod_prod_prod_llist$) B_a_b_prod_a_b_prod_prod_prod_llist$)
(declare-fun lCons$p (B_a_b_prod_a_b_prod_prod_prod$ B_a_b_prod_a_b_prod_prod_prod_llist$) B_a_b_prod_a_b_prod_prod_prod_llist$)
(declare-fun us$ () A_b_prod_llist$)
(declare-fun vs$ () A_b_prod_llist$)
(declare-fun xs$ () A_llist$)
(declare-fun ys$ () B_llist$)
(declare-fun min$ (Enat$) Enat_enat_fun$)
(declare-fun less$ (Enat$) Enat_bool_fun$)
(declare-fun llcp$ (B_a_b_prod_prod_llist$) B_a_b_prod_prod_llist_enat_fun$)
(declare-fun lzip$ (A_llist$ B_llist$) A_b_prod_llist$)
(declare-fun plus$ (Enat$) Enat_enat_fun$)
(declare-fun zero$ () Enat$)
(declare-fun ldrop$ (Enat$ A_llist$) A_llist$)
(declare-fun llcp$a (B_b_prod_llist$) B_b_prod_llist_enat_fun$)
(declare-fun llcp$b (B_a_prod_llist$) B_a_prod_llist_enat_fun$)
(declare-fun llcp$c (A_a_b_prod_prod_llist$) A_a_b_prod_prod_llist_enat_fun$)
(declare-fun llcp$d (A_a_prod_llist$) A_a_prod_llist_enat_fun$)
(declare-fun llcp$e (A_b_prod_llist$) A_b_prod_llist_enat_fun$)
(declare-fun llcp$f (A_llist$) A_llist_enat_fun$)
(declare-fun llcp$g (B_llist$) B_llist_enat_fun$)
(declare-fun ltake$ (Enat$ A_llist$) A_llist$)
(declare-fun lzip$a (A_llist$ A_llist$) A_a_prod_llist$)
(declare-fun lzip$b (B_llist$ A_llist$) B_a_prod_llist$)
(declare-fun lzip$c (B_llist$ B_llist$) B_b_prod_llist$)
(declare-fun lzip$d (A_llist$ B_b_prod_llist$) A_b_b_prod_prod_llist$)
(declare-fun lzip$e (A_llist$ B_a_prod_llist$) A_b_a_prod_prod_llist$)
(declare-fun lzip$f (A_llist$ A_b_prod_llist$) A_a_b_prod_prod_llist$)
(declare-fun lzip$g (A_llist$ A_a_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun lzip$h (B_llist$ B_b_prod_llist$) B_b_b_prod_prod_llist$)
(declare-fun lzip$i (B_llist$ B_a_prod_llist$) B_b_a_prod_prod_llist$)
(declare-fun lzip$j (A_b_prod_llist$ A_b_prod_llist$) A_b_prod_a_b_prod_prod_llist$)
(declare-fun lzip$k (A_b_prod_llist$ B_llist$) A_b_prod_b_prod_llist$)
(declare-fun lzip$l (A_b_prod_llist$ A_llist$) A_b_prod_a_prod_llist$)
(declare-fun lzip$m (B_llist$ A_b_prod_llist$) B_a_b_prod_prod_llist$)
(declare-fun lzip$n (B_llist$ A_b_prod_a_b_prod_prod_llist$) B_a_b_prod_a_b_prod_prod_prod_llist$)
(declare-fun minus$ (Enat$) Enat_enat_fun$)
(declare-fun ldrop$a (Enat$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun ldrop$b (Enat$ A_b_prod_llist$) A_b_prod_llist$)
(declare-fun ldrop$c (Enat$ B_llist$) B_llist$)
(declare-fun ldrop$d (Enat$ B_a_prod_llist$) B_a_prod_llist$)
(declare-fun ldrop$e (Enat$ B_b_prod_llist$) B_b_prod_llist$)
(declare-fun ldrop$f (Enat$ A_b_b_prod_prod_llist$) A_b_b_prod_prod_llist$)
(declare-fun ldrop$g (Enat$ A_b_a_prod_prod_llist$) A_b_a_prod_prod_llist$)
(declare-fun ldrop$h (Enat$ A_a_b_prod_prod_llist$) A_a_b_prod_prod_llist$)
(declare-fun ldrop$i (Enat$ A_a_a_prod_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun ldrop$j (Enat$ B_b_b_prod_prod_llist$) B_b_b_prod_prod_llist$)
(declare-fun ldrop$k (Enat$ B_b_a_prod_prod_llist$) B_b_a_prod_prod_llist$)
(declare-fun ldrop$l (Enat$ A_b_prod_a_b_prod_prod_llist$) A_b_prod_a_b_prod_prod_llist$)
(declare-fun ldrop$m (Enat$ B_a_b_prod_prod_llist$) B_a_b_prod_prod_llist$)
(declare-fun ltake$a (Enat$ B_llist$) B_llist$)
(declare-fun ltake$b (Enat$ B_a_b_prod_prod_llist$) B_a_b_prod_prod_llist$)
(declare-fun ltake$c (Enat$ B_b_prod_llist$) B_b_prod_llist$)
(declare-fun ltake$d (Enat$ B_a_prod_llist$) B_a_prod_llist$)
(declare-fun ltake$e (Enat$ A_a_b_prod_prod_llist$) A_a_b_prod_prod_llist$)
(declare-fun ltake$f (Enat$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun ltake$g (Enat$ A_b_prod_llist$) A_b_prod_llist$)
(declare-fun ltake$h (Enat$ A_b_b_prod_prod_llist$) A_b_b_prod_prod_llist$)
(declare-fun ltake$i (Enat$ A_b_a_prod_prod_llist$) A_b_a_prod_prod_llist$)
(declare-fun ltake$j (Enat$ A_a_a_prod_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun ltake$k (Enat$ B_b_b_prod_prod_llist$) B_b_b_prod_prod_llist$)
(declare-fun fun_app$ (Enat_bool_fun$ Enat$) Bool)
(declare-fun lappend$ (A_llist$ A_llist$) A_llist$)
(declare-fun less_eq$ (Enat$) Enat_bool_fun$)
(declare-fun lfinite$ (A_b_prod_llist$) Bool)
(declare-fun llength$ (A_b_prod_llist$) Enat$)
(declare-fun fun_app$a (Enat_enat_fun$ Enat$) Enat$)
(declare-fun fun_app$b (B_a_b_prod_prod_llist_enat_fun$ B_a_b_prod_prod_llist$) Enat$)
(declare-fun fun_app$c (B_b_prod_llist_enat_fun$ B_b_prod_llist$) Enat$)
(declare-fun fun_app$d (B_a_prod_llist_enat_fun$ B_a_prod_llist$) Enat$)
(declare-fun fun_app$e (A_a_b_prod_prod_llist_enat_fun$ A_a_b_prod_prod_llist$) Enat$)
(declare-fun fun_app$f (A_a_prod_llist_enat_fun$ A_a_prod_llist$) Enat$)
(declare-fun fun_app$g (A_b_prod_llist_enat_fun$ A_b_prod_llist$) Enat$)
(declare-fun fun_app$h (A_llist_enat_fun$ A_llist$) Enat$)
(declare-fun fun_app$i (B_llist_enat_fun$ B_llist$) Enat$)
(declare-fun fun_app$j (Enat_enat_bool_fun_fun$ Enat$) Enat_bool_fun$)
(declare-fun infinity$ () Enat$)
(declare-fun lappend$a (A_b_prod_llist$ A_b_prod_llist$) A_b_prod_llist$)
(declare-fun lappend$b (B_a_b_prod_prod_llist$ B_a_b_prod_prod_llist$) B_a_b_prod_prod_llist$)
(declare-fun lappend$c (B_b_prod_llist$ B_b_prod_llist$) B_b_prod_llist$)
(declare-fun lappend$d (B_a_prod_llist$ B_a_prod_llist$) B_a_prod_llist$)
(declare-fun lappend$e (A_a_b_prod_prod_llist$ A_a_b_prod_prod_llist$) A_a_b_prod_prod_llist$)
(declare-fun lappend$f (A_a_prod_llist$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun lappend$g (A_b_prod_a_b_prod_prod_llist$ A_b_prod_a_b_prod_prod_llist$) A_b_prod_a_b_prod_prod_llist$)
(declare-fun lappend$h (B_llist$ B_llist$) B_llist$)
(declare-fun lappend$i (A_b_prod_a_prod_llist$ A_b_prod_a_prod_llist$) A_b_prod_a_prod_llist$)
(declare-fun lappend$j (A_b_prod_b_prod_llist$ A_b_prod_b_prod_llist$) A_b_prod_b_prod_llist$)
(declare-fun lappend$k (A_b_b_prod_prod_llist$ A_b_b_prod_prod_llist$) A_b_b_prod_prod_llist$)
(declare-fun lfinite$a (B_a_b_prod_prod_llist$) Bool)
(declare-fun lfinite$b (B_b_prod_llist$) Bool)
(declare-fun lfinite$c (B_a_prod_llist$) Bool)
(declare-fun lfinite$d (A_a_b_prod_prod_llist$) Bool)
(declare-fun lfinite$e (A_a_prod_llist$) Bool)
(declare-fun lfinite$f (A_b_prod_a_b_prod_prod_llist$) Bool)
(declare-fun lfinite$g (A_llist$) Bool)
(declare-fun lfinite$h (B_llist$) Bool)
(declare-fun lfinite$i (A_b_prod_b_prod_llist$) Bool)
(declare-fun lfinite$j (A_b_prod_a_prod_llist$) Bool)
(declare-fun lfinite$k (B_a_b_prod_a_b_prod_prod_prod_llist$) Bool)
(declare-fun llength$a (A_llist$) Enat$)
(declare-fun llength$b (B_llist$) Enat$)
(declare-fun llength$c (B_a_b_prod_prod_llist$) Enat$)
(declare-fun llength$d (B_b_prod_llist$) Enat$)
(declare-fun llength$e (B_a_prod_llist$) Enat$)
(declare-fun llength$f (A_a_b_prod_prod_llist$) Enat$)
(declare-fun llength$g (A_a_prod_llist$) Enat$)
(declare-fun llength$h (A_b_prod_a_prod_llist$) Enat$)
(declare-fun llength$i (A_b_prod_b_prod_llist$) Enat$)
(declare-fun llength$j (A_b_prod_a_b_prod_prod_llist$) Enat$)
(declare-fun llength$k (A_b_b_prod_prod_llist$) Enat$)
(assert (not (=> (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0)))) (or (not (fun_app$ (less_eq$ (llength$a xs$)) (llength$ us$))) (= xs$ (ltake$ (llength$ us$) xs$))))))
(assert (not (or (not (fun_app$ (less_eq$ (llength$a xs$)) (llength$ us$))) (= xs$ (ltake$ (llength$ us$) xs$)))))
(assert (or (=> (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0)))) (or (not (fun_app$ (less_eq$ (llength$a xs$)) (llength$ us$))) (= xs$ (ltake$ (llength$ us$) xs$)))) (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0))))))
(assert (or (not (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0))))) (or (not (fun_app$ (less_eq$ (llength$a xs$)) (llength$ us$))) (= xs$ (ltake$ (llength$ us$) xs$)))))
(check-sat)
(exit)
