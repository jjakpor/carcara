(define-fun @quantifiers_skolemize_10 () A_list$ (choice ((?v3 A_list$)) (not (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3)))))))
(assume nst6.0 (not (not (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0)))))))
(assume nst6.1 (not (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))))
(assume t5 (=> (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0)))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))))
(step st6 (cl (not (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0))))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))) :rule implies :premises (t5))
(step t.end (cl) :rule resolution :premises (nst6.0 nst6.1 st6))
