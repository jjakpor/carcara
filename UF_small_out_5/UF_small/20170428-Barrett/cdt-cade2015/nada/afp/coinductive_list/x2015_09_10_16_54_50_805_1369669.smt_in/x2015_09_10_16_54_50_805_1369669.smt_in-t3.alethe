(define-fun @quantifiers_skolemize_10 () A_list$ (choice ((?v3 A_list$)) (not (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3)))))))
(assume nst3.0 (not (=> (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0)))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10))))))
(assume nst3.1 (not (not (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10))))))
(step st3 (cl (=> (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0)))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))) (not (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10))))) :rule implies_neg2)
(step t.end (cl) :rule resolution :premises (nst3.0 nst3.1 st3))
