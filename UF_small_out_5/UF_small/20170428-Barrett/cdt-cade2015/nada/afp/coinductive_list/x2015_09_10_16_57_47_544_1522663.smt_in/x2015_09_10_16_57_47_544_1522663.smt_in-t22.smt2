(set-logic UF)
(declare-sort A$ 0)
(declare-sort Nat$ 0)
(declare-sort A_set$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort Bool_a_fun$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort Nat_nat_fun$ 0)
(declare-sort A_a_prod_set$ 0)
(declare-sort Bool_nat_fun$ 0)
(declare-sort Nat_bool_fun$ 0)
(declare-sort A_a_llist_fun$ 0)
(declare-sort A_llist_a_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort Nat_llist_set$ 0)
(declare-sort A_llist_nat_fun$ 0)
(declare-sort Nat_a_llist_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_llist_bool_fun$ 0)
(declare-sort Bool_a_llist_fun$ 0)
(declare-sort Nat_nat_prod_set$ 0)
(declare-sort A_a_prod_bool_fun$ 0)
(declare-sort A_llist_a_set_fun$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_a_prod_llist_set$ 0)
(declare-sort Nat_llist_bool_fun$ 0)
(declare-sort A_a_llist_a_fun_fun$ 0)
(declare-sort A_llist_a_llist_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun$ 0)
(declare-sort Nat_nat_prod_bool_fun$ 0)
(declare-sort A_a_llist_bool_fun_fun$ 0)
(declare-sort A_llist_llist_bool_fun$ 0)
(declare-sort A_a_prod_llist_bool_fun$ 0)
(declare-sort Nat_llist_nat_llist_fun$ 0)
(declare-sort A_a_llist_a_llist_fun_fun$ 0)
(declare-sort A_llist_llist_a_llist_fun$ 0)
(declare-sort Nat_nat_llist_bool_fun_fun$ 0)
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_prod_llist_bool_fun$ 0)
(declare-sort A_llist_a_llist_bool_fun_fun$ 0)
(declare-sort Nat_bool_fun_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_fun_nat_bool_fun_fun$ 0)
(declare-sort A_llist_llist_a_llist_set_fun$ 0)
(declare-sort Nat_bool_fun_nat_bool_fun_fun$ 0)
(declare-sort A_a_prod_llist_a_a_prod_set_fun$ 0)
(declare-sort A_llist_llist_a_llist_llist_fun$ 0)
(declare-sort Nat_a_llist_fun_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_fun_nat_a_llist_fun_fun$ 0)
(declare-sort Nat_nat_llist_nat_llist_fun_fun$ 0)
(declare-sort Nat_a_llist_fun_nat_bool_fun_fun$ 0)
(declare-sort Nat_bool_fun_nat_a_llist_fun_fun$ 0)
(declare-sort A_a_prod_llist_a_a_prod_llist_fun$ 0)
(declare-sort A_llist_a_llist_llist_bool_fun_fun$ 0)
(declare-sort Nat_a_llist_fun_nat_a_llist_fun_fun$ 0)
(declare-sort A_a_prod_a_a_prod_llist_bool_fun_fun$ 0)
(declare-sort A_a_llist_a_fun_fun_a_llist_a_fun_fun$ 0)
(declare-sort A_llist_a_a_llist_a_llist_fun_fun_fun$ 0)
(declare-sort A_llist_a_llist_llist_a_llist_fun_fun$ 0)
(declare-sort Nat_nat_prod_llist_nat_nat_prod_set_fun$ 0)
(declare-sort Nat_nat_prod_llist_nat_nat_prod_llist_fun$ 0)
(declare-sort A_a_llist_a_fun_fun_a_a_llist_a_fun_fun_fun$ 0)
(declare-sort A_a_llist_bool_fun_fun_a_llist_bool_fun_fun$ 0)
(declare-sort A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ 0)
(declare-sort A_llist_a_llist_llist_a_llist_llist_fun_fun$ 0)
(declare-sort A_a_llist_a_fun_fun_a_a_llist_bool_fun_fun_fun$ 0)
(declare-sort A_a_llist_bool_fun_fun_a_a_llist_a_fun_fun_fun$ 0)
(declare-sort A_a_prod_a_a_prod_llist_a_a_prod_llist_fun_fun$ 0)
(declare-sort A_a_llist_a_fun_fun_a_a_llist_a_llist_fun_fun_fun$ 0)
(declare-sort A_a_llist_a_llist_fun_fun_a_a_llist_a_fun_fun_fun$ 0)
(declare-sort A_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun$ 0)
(declare-sort A_a_llist_bool_fun_fun_a_a_llist_bool_fun_fun_fun$ 0)
(declare-sort Nat_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ 0)
(declare-sort A_a_llist_a_llist_fun_fun_a_a_llist_bool_fun_fun_fun$ 0)
(declare-sort A_a_llist_bool_fun_fun_a_a_llist_a_llist_fun_fun_fun$ 0)
(declare-sort A_a_llist_a_llist_fun_fun_a_a_llist_a_llist_fun_fun_fun$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_llist_nat_nat_prod_llist_fun_fun$ 0)
(declare-sort A_llist_a_fun_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ 0)
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_a_prod$ 0)
(declare-sort A_a_prod_llist$ 0)
(declare-sort Nat_nat_prod$ 0)
(declare-sort Nat_nat_prod_llist$ 0)
(declare-sort Nat_llist$ 0)
(declare-sort A_nat_prod$ 0)
(declare-sort A_nat_prod_llist$ 0)
(declare-sort Nat_a_prod$ 0)
(declare-sort Nat_a_prod_llist$ 0)
(declare-sort A_a_llist_prod$ 0)
(declare-sort A_a_llist_prod_llist$ 0)
(declare-sort A_llist_a_prod$ 0)
(declare-sort A_llist_a_prod_llist$ 0)
(declare-sort A_llist_nat_prod$ 0)
(declare-sort A_llist_nat_prod_llist$ 0)
(declare-sort Nat_a_llist_prod$ 0)
(declare-sort Nat_a_llist_prod_llist$ 0)
(declare-sort A_a_a_prod_prod$ 0)
(declare-sort A_a_a_prod_prod_llist$ 0)
(declare-sort A_llist_a_llist_prod$ 0)
(declare-sort A_llist_a_llist_prod_llist$ 0)
(declare-sort Nat_a_a_prod_prod$ 0)
(declare-sort Nat_a_a_prod_prod_llist$ 0)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun lNil$ () A_llist$)
(declare-fun lhd$ (A_llist$) A$)
(declare-fun ltl$ (A_llist$) A_llist$)
(declare-fun lCons$ (A$ A_llist$) A_llist$)
(declare-fun lNil$a () A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$) A_llist$)
(declare-fun ltl$a (A_llist_llist$) A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$) A_llist_llist$)
(declare-fun fst$ (A_a_prod$) A$)
(declare-fun snd$ (A_a_prod$) A$)
(declare-fun pair$ (A$ A$) A_a_prod$)
(declare-fun lNil$b () A_a_prod_llist$)
(declare-fun lhd$b (A_a_prod_llist$) A_a_prod$)
(declare-fun ltl$b (A_a_prod_llist$) A_a_prod_llist$)
(declare-fun lCons$b (A_a_prod$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun fst$a (Nat_nat_prod$) Nat$)
(declare-fun snd$a (Nat_nat_prod$) Nat$)
(declare-fun pair$a (Nat$ Nat$) Nat_nat_prod$)
(declare-fun lNil$c () Nat_nat_prod_llist$)
(declare-fun lhd$c (Nat_nat_prod_llist$) Nat_nat_prod$)
(declare-fun ltl$c (Nat_nat_prod_llist$) Nat_nat_prod_llist$)
(declare-fun lCons$c (Nat_nat_prod$ Nat_nat_prod_llist$) Nat_nat_prod_llist$)
(declare-fun lNil$d () Nat_llist$)
(declare-fun lhd$d (Nat_llist$) Nat$)
(declare-fun ltl$d (Nat_llist$) Nat_llist$)
(declare-fun lCons$d (Nat$ Nat_llist$) Nat_llist$)
(declare-fun fst$b (A_nat_prod$) A$)
(declare-fun snd$b (A_nat_prod$) Nat$)
(declare-fun pair$b (A$ Nat$) A_nat_prod$)
(declare-fun lNil$e () A_nat_prod_llist$)
(declare-fun lhd$e (A_nat_prod_llist$) A_nat_prod$)
(declare-fun ltl$e (A_nat_prod_llist$) A_nat_prod_llist$)
(declare-fun lCons$e (A_nat_prod$ A_nat_prod_llist$) A_nat_prod_llist$)
(declare-fun fst$c (Nat_a_prod$) Nat$)
(declare-fun snd$c (Nat_a_prod$) A$)
(declare-fun pair$c (Nat$ A$) Nat_a_prod$)
(declare-fun lNil$f () Nat_a_prod_llist$)
(declare-fun lhd$f (Nat_a_prod_llist$) Nat_a_prod$)
(declare-fun ltl$f (Nat_a_prod_llist$) Nat_a_prod_llist$)
(declare-fun lCons$f (Nat_a_prod$ Nat_a_prod_llist$) Nat_a_prod_llist$)
(declare-fun fst$d (A_a_llist_prod$) A$)
(declare-fun snd$d (A_a_llist_prod$) A_llist$)
(declare-fun pair$d (A$ A_llist$) A_a_llist_prod$)
(declare-fun lNil$g () A_a_llist_prod_llist$)
(declare-fun lhd$g (A_a_llist_prod_llist$) A_a_llist_prod$)
(declare-fun ltl$g (A_a_llist_prod_llist$) A_a_llist_prod_llist$)
(declare-fun lCons$g (A_a_llist_prod$ A_a_llist_prod_llist$) A_a_llist_prod_llist$)
(declare-fun fst$e (A_llist_a_prod$) A_llist$)
(declare-fun snd$e (A_llist_a_prod$) A$)
(declare-fun pair$e (A_llist$ A$) A_llist_a_prod$)
(declare-fun lNil$h () A_llist_a_prod_llist$)
(declare-fun lhd$h (A_llist_a_prod_llist$) A_llist_a_prod$)
(declare-fun ltl$h (A_llist_a_prod_llist$) A_llist_a_prod_llist$)
(declare-fun lCons$h (A_llist_a_prod$ A_llist_a_prod_llist$) A_llist_a_prod_llist$)
(declare-fun fst$f (A_llist_nat_prod$) A_llist$)
(declare-fun snd$f (A_llist_nat_prod$) Nat$)
(declare-fun pair$f (A_llist$ Nat$) A_llist_nat_prod$)
(declare-fun lNil$i () A_llist_nat_prod_llist$)
(declare-fun lhd$i (A_llist_nat_prod_llist$) A_llist_nat_prod$)
(declare-fun ltl$i (A_llist_nat_prod_llist$) A_llist_nat_prod_llist$)
(declare-fun lCons$i (A_llist_nat_prod$ A_llist_nat_prod_llist$) A_llist_nat_prod_llist$)
(declare-fun fst$g (Nat_a_llist_prod$) Nat$)
(declare-fun snd$g (Nat_a_llist_prod$) A_llist$)
(declare-fun pair$g (Nat$ A_llist$) Nat_a_llist_prod$)
(declare-fun lNil$j () Nat_a_llist_prod_llist$)
(declare-fun lhd$j (Nat_a_llist_prod_llist$) Nat_a_llist_prod$)
(declare-fun ltl$j (Nat_a_llist_prod_llist$) Nat_a_llist_prod_llist$)
(declare-fun lCons$j (Nat_a_llist_prod$ Nat_a_llist_prod_llist$) Nat_a_llist_prod_llist$)
(declare-fun fst$h (A_a_a_prod_prod$) A$)
(declare-fun snd$h (A_a_a_prod_prod$) A_a_prod$)
(declare-fun pair$h (A$ A_a_prod$) A_a_a_prod_prod$)
(declare-fun lNil$k () A_a_a_prod_prod_llist$)
(declare-fun lhd$k (A_a_a_prod_prod_llist$) A_a_a_prod_prod$)
(declare-fun ltl$k (A_a_a_prod_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun lCons$k (A_a_a_prod_prod$ A_a_a_prod_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun fst$i (A_llist_a_llist_prod$) A_llist$)
(declare-fun snd$i (A_llist_a_llist_prod$) A_llist$)
(declare-fun pair$i (A_llist$ A_llist$) A_llist_a_llist_prod$)
(declare-fun lNil$l () A_llist_a_llist_prod_llist$)
(declare-fun lhd$l (A_llist_a_llist_prod_llist$) A_llist_a_llist_prod$)
(declare-fun ltl$l (A_llist_a_llist_prod_llist$) A_llist_a_llist_prod_llist$)
(declare-fun lCons$l (A_llist_a_llist_prod$ A_llist_a_llist_prod_llist$) A_llist_a_llist_prod_llist$)
(declare-fun fst$j (Nat_a_a_prod_prod$) Nat$)
(declare-fun snd$j (Nat_a_a_prod_prod$) A_a_prod$)
(declare-fun pair$j (Nat$ A_a_prod$) Nat_a_a_prod_prod$)
(declare-fun lNil$m () Nat_a_a_prod_prod_llist$)
(declare-fun lhd$m (Nat_a_a_prod_prod_llist$) Nat_a_a_prod_prod$)
(declare-fun ltl$m (Nat_a_a_prod_prod_llist$) Nat_a_a_prod_prod_llist$)
(declare-fun lCons$m (Nat_a_a_prod_prod$ Nat_a_a_prod_prod_llist$) Nat_a_a_prod_prod_llist$)
(declare-fun none$ () Nat_option$)
(declare-fun the$ (Nat_option$) Nat$)
(declare-fun some$ (Nat$) Nat_option$)
(declare-fun rep_enat$ (Enat$) Nat_option$)
(declare-fun abs_enat$ (Nat_option$) Enat$)
(declare-fun n$ () Nat$)
(declare-fun uu$ () A_a_llist_a_llist_fun_fun$)
(declare-fun xs$ () A_llist$)
(declare-fun min$ (Nat$) Nat_nat_fun$)
(declare-fun one$ () Nat$)
(declare-fun suc$ (Nat$) Nat$)
(declare-fun uua$ (A_llist_a_llist_fun$) A_a_llist_a_llist_fun_fun_a_a_llist_a_llist_fun_fun_fun$)
(declare-fun uub$ (A_a_fun$) A_a_llist_a_fun_fun_a_a_llist_a_fun_fun_fun$)
(declare-fun uuc$ (A_llist_a_fun$) A_a_llist_a_llist_fun_fun_a_a_llist_a_fun_fun_fun$)
(declare-fun uud$ (A_a_llist_fun$) A_a_llist_a_fun_fun_a_a_llist_a_llist_fun_fun_fun$)
(declare-fun uue$ (A_llist_a_llist_fun$ A_llist_a_llist_llist_a_llist_fun_fun$) A_llist_a_llist_llist_a_llist_fun_fun$)
(declare-fun uuf$ (A_bool_fun$) A_a_llist_a_fun_fun_a_a_llist_bool_fun_fun_fun$)
(declare-fun uug$ (Bool_a_fun$) A_a_llist_bool_fun_fun_a_a_llist_a_fun_fun_fun$)
(declare-fun uuh$ (Bool_bool_fun$) A_a_llist_bool_fun_fun_a_a_llist_bool_fun_fun_fun$)
(declare-fun uui$ (A_llist_bool_fun$) A_a_llist_a_llist_fun_fun_a_a_llist_bool_fun_fun_fun$)
(declare-fun uuj$ (Bool_a_llist_fun$) A_a_llist_bool_fun_fun_a_a_llist_a_llist_fun_fun_fun$)
(declare-fun uuk$ (A_a_prod_bool_fun$ A_a_prod_llist$) A_a_prod_a_a_prod_llist_a_a_prod_llist_fun_fun$)
(declare-fun uul$ (Nat_nat_prod_bool_fun$ Nat_nat_prod_llist$) Nat_nat_prod_nat_nat_prod_llist_nat_nat_prod_llist_fun_fun$)
(declare-fun uum$ (A_llist_bool_fun$ A_llist_llist$) A_llist_a_llist_llist_a_llist_llist_fun_fun$)
(declare-fun uun$ (A_bool_fun$) A_llist_a_a_llist_a_llist_fun_fun_fun$)
(declare-fun uuo$ () Nat_nat_llist_nat_llist_fun_fun$)
(declare-fun uup$ () A_a_prod_a_a_prod_llist_a_a_prod_llist_fun_fun$)
(declare-fun uuq$ () Nat_nat_prod_nat_nat_prod_llist_nat_nat_prod_llist_fun_fun$)
(declare-fun uur$ () A_llist_a_llist_llist_a_llist_llist_fun_fun$)
(declare-fun uus$ () A_a_llist_a_llist_fun_fun$)
(declare-fun uut$ () A_llist_a_llist_llist_bool_fun_fun$)
(declare-fun uuu$ () A_a_prod_a_a_prod_llist_bool_fun_fun$)
(declare-fun uuv$ () Nat_nat_llist_bool_fun_fun$)
(declare-fun uuw$ () A_a_llist_bool_fun_fun$)
(declare-fun uux$ () A_llist_a_llist_llist_bool_fun_fun$)
(declare-fun uuy$ () A_a_prod_a_a_prod_llist_bool_fun_fun$)
(declare-fun uuz$ () Nat_nat_llist_bool_fun_fun$)
(declare-fun uva$ () A_a_llist_bool_fun_fun$)
(declare-fun uvb$ () A_a_prod_llist_a_a_prod_llist_fun$)
(declare-fun uvc$ () A_llist_llist_a_llist_llist_fun$)
(declare-fun uvd$ () Nat_llist_nat_llist_fun$)
(declare-fun uve$ () A_llist_a_llist_fun$)
(declare-fun uvf$ () A_llist_a_fun$)
(declare-fun uvg$ () A_llist_a_llist_llist_a_llist_fun_fun$)
(declare-fun uvh$ () A_a_llist_a_fun_fun$)
(declare-fun uvi$ () A_llist_a_llist_llist_a_llist_fun_fun$)
(declare-fun uvj$ (A_llist$) A_a_llist_a_llist_fun_fun$)
(declare-fun uvk$ (A_llist$) A_a_llist_a_llist_fun_fun$)
(declare-fun uvl$ (A_llist_llist$) A_llist_a_llist_llist_a_llist_llist_fun_fun$)
(declare-fun uvm$ (A_bool_fun$) A_a_llist_a_llist_fun_fun$)
(declare-fun uvn$ (A_llist$) Nat_a_llist_fun$)
(declare-fun uvo$ (Bool_a_llist_fun$) Nat_bool_fun_nat_a_llist_fun_fun$)
(declare-fun uvp$ (Nat_a_llist_fun$) Nat_nat_fun_nat_a_llist_fun_fun$)
(declare-fun uvq$ (A_llist_bool_fun$) Nat_a_llist_fun_nat_bool_fun_fun$)
(declare-fun uvr$ (A_llist_nat_fun$) Nat_a_llist_fun_nat_nat_fun_fun$)
(declare-fun uvs$ (A_llist_a_llist_fun$) Nat_a_llist_fun_nat_a_llist_fun_fun$)
(declare-fun uvt$ (Bool_bool_fun$) Nat_bool_fun_nat_bool_fun_fun$)
(declare-fun uvu$ (Bool_nat_fun$) Nat_bool_fun_nat_nat_fun_fun$)
(declare-fun uvv$ (Nat_bool_fun$) Nat_nat_fun_nat_bool_fun_fun$)
(declare-fun uvw$ (Nat_nat_fun$) Nat_nat_fun_nat_nat_fun_fun$)
(declare-fun uvx$ (Nat$) A_llist_a_llist_llist_a_llist_fun_fun$)
(declare-fun uvy$ (Nat$) A_a_llist_a_fun_fun$)
(declare-fun uvz$ (Nat_nat_prod_set$) Nat_nat_bool_fun_fun$)
(declare-fun uwa$ () Nat_bool_fun$)
(declare-fun uwb$ () Nat_bool_fun$)
(declare-fun uwc$ () Nat_nat_fun$)
(declare-fun uwd$ (Nat$) Nat_nat_fun$)
(declare-fun uwe$ (Nat$) Nat_nat_fun$)
(declare-fun less$ (Nat$) Nat_bool_fun$)
(declare-fun lnth$ (A_llist_llist$) Nat_a_llist_fun$)
(declare-fun lzip$ (A_llist$ A_llist$) A_a_prod_llist$)
(declare-fun pred$ (Nat$) Nat$)
(declare-fun zero$ () Nat$)
(declare-fun lnth$a (A_llist$ Nat$) A$)
(declare-fun lnull$ (Nat_nat_prod_llist$) Bool)
(declare-fun lzip$a (A_llist$ Nat_llist$) A_nat_prod_llist$)
(declare-fun lzip$b (Nat_llist$ A_llist$) Nat_a_prod_llist$)
(declare-fun lzip$c (Nat_llist$ Nat_llist$) Nat_nat_prod_llist$)
(declare-fun lzip$d (A_llist$ A_llist_llist$) A_a_llist_prod_llist$)
(declare-fun lzip$e (A_llist_llist$ A_llist$) A_llist_a_prod_llist$)
(declare-fun lzip$f (A_llist_llist$ Nat_llist$) A_llist_nat_prod_llist$)
(declare-fun lzip$g (Nat_llist$ A_llist_llist$) Nat_a_llist_prod_llist$)
(declare-fun lzip$h (A_llist$ A_a_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun lzip$i (A_llist_llist$ A_llist_llist$) A_llist_a_llist_prod_llist$)
(declare-fun lzip$j (Nat_llist$ A_a_prod_llist$) Nat_a_a_prod_prod_llist$)
(declare-fun minus$ (Nat$) Nat_nat_fun$)
(declare-fun zero$a () Enat$)
(declare-fun compow$ (Nat$ A_a_prod_llist_a_a_prod_llist_fun$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun funpow$ () Nat_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$)
(declare-fun ldropn$ (Nat$) A_llist_a_llist_fun$)
(declare-fun lnull$a (A_llist_llist$) Bool)
(declare-fun lnull$b (A_a_prod_llist$) Bool)
(declare-fun lnull$c (Nat_llist$) Bool)
(declare-fun lnull$d () A_llist_bool_fun$)
(declare-fun lnull$e (Nat_a_prod_llist$) Bool)
(declare-fun lnull$f (Nat_a_llist_prod_llist$) Bool)
(declare-fun lnull$g (Nat_a_a_prod_prod_llist$) Bool)
(declare-fun member$ (Nat_nat_prod$ Nat_nat_prod_set$) Bool)
(declare-fun of_nat$ (Nat$) Nat$)
(declare-fun compow$a (Nat$ A_llist_llist_a_llist_llist_fun$ A_llist_llist$) A_llist_llist$)
(declare-fun compow$b (Nat$ Nat_llist_nat_llist_fun$ Nat_llist$) Nat_llist$)
(declare-fun compow$c () Nat_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$)
(declare-fun fun_app$ (A_llist_llist_a_llist_llist_fun$ A_llist_llist$) A_llist_llist$)
(declare-fun lappend$ (A_llist$) A_llist_a_llist_fun$)
(declare-fun lconcat$ (A_llist_llist$) A_llist$)
(declare-fun ldropn$a (Nat$) A_llist_llist_a_llist_llist_fun$)
(declare-fun ldropn$b (Nat$) A_a_prod_llist_a_a_prod_llist_fun$)
(declare-fun ldropn$c (Nat$) Nat_nat_prod_llist_nat_nat_prod_llist_fun$)
(declare-fun ldropn$d (Nat$ Nat_llist$) Nat_llist$)
(declare-fun lfilter$ (A_bool_fun$) A_llist_a_llist_fun$)
(declare-fun llexord$ (A_a_bool_fun_fun$) A_llist_a_llist_bool_fun_fun$)
(declare-fun lmember$ (A_llist$) A_llist_llist_bool_fun$)
(declare-fun member$a (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$b (A_a_prod_llist$ A_a_prod_llist_set$) Bool)
(declare-fun member$c (Nat_llist$ Nat_llist_set$) Bool)
(declare-fun member$d (A_llist$ A_llist_set$) Bool)
(declare-fun case_nat$ (A_llist$) Nat_a_llist_fun_nat_a_llist_fun_fun$)
(declare-fun fun_app$a (A_a_prod_llist_a_a_prod_llist_fun$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun fun_app$b (Nat_llist_nat_llist_fun$ Nat_llist$) Nat_llist$)
(declare-fun fun_app$c (A_llist_a_llist_fun$ A_llist$) A_llist$)
(declare-fun fun_app$d (A_llist_a_fun$ A_llist$) A$)
(declare-fun fun_app$e (A_a_llist_a_llist_fun_fun$ A$) A_llist_a_llist_fun$)
(declare-fun fun_app$f (A_llist_llist_a_llist_fun$ A_llist_llist$) A_llist$)
(declare-fun fun_app$g (A_llist_a_llist_llist_a_llist_fun_fun$ A_llist$) A_llist_llist_a_llist_fun$)
(declare-fun fun_app$h (Nat_a_llist_fun$ Nat$) A_llist$)
(declare-fun fun_app$i (Nat_nat_fun$ Nat$) Nat$)
(declare-fun fun_app$j (A_bool_fun$ A$) Bool)
(declare-fun fun_app$k (Nat_bool_fun$ Nat$) Bool)
(declare-fun fun_app$l (Nat_nat_bool_fun_fun$ Nat$) Nat_bool_fun$)
(declare-fun fun_app$m (A_llist_a_llist_llist_a_llist_llist_fun_fun$ A_llist$) A_llist_llist_a_llist_llist_fun$)
(declare-fun fun_app$n (A_a_llist_a_fun_fun$ A$) A_llist_a_fun$)
(declare-fun fun_app$o (Nat_a_llist_fun_nat_a_llist_fun_fun$ Nat_a_llist_fun$) Nat_a_llist_fun$)
(declare-fun fun_app$p (Nat_a_llist_fun_nat_bool_fun_fun$ Nat_a_llist_fun$) Nat_bool_fun$)
(declare-fun fun_app$q (A_llist_bool_fun$ A_llist$) Bool)
(declare-fun fun_app$r (Nat_a_llist_fun_nat_nat_fun_fun$ Nat_a_llist_fun$) Nat_nat_fun$)
(declare-fun fun_app$s (A_llist_nat_fun$ A_llist$) Nat$)
(declare-fun fun_app$t (Nat_bool_fun_nat_a_llist_fun_fun$ Nat_bool_fun$) Nat_a_llist_fun$)
(declare-fun fun_app$u (Bool_a_llist_fun$ Bool) A_llist$)
(declare-fun fun_app$v (Nat_bool_fun_nat_bool_fun_fun$ Nat_bool_fun$) Nat_bool_fun$)
(declare-fun fun_app$w (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$x (Nat_bool_fun_nat_nat_fun_fun$ Nat_bool_fun$) Nat_nat_fun$)
(declare-fun fun_app$y (Bool_nat_fun$ Bool) Nat$)
(declare-fun fun_app$z (Nat_nat_fun_nat_a_llist_fun_fun$ Nat_nat_fun$) Nat_a_llist_fun$)
(declare-fun gen_lset$ (A_llist_set$) A_llist_llist_a_llist_set_fun$)
(declare-fun iterates$ (A_a_fun$) A_a_llist_fun$)
(declare-fun lappend$a (A_llist_llist$ A_llist_llist$) A_llist_llist$)
(declare-fun lmember$a (A_a_prod$) A_a_prod_llist_bool_fun$)
(declare-fun lmember$b (Nat_nat_prod$) Nat_nat_prod_llist_bool_fun$)
(declare-fun lmember$c (A$) A_llist_bool_fun$)
(declare-fun case_nat$a (Bool) Nat_bool_fun_nat_bool_fun_fun$)
(declare-fun case_nat$b (Nat$) Nat_nat_fun_nat_nat_fun_fun$)
(declare-fun fun_app$aa (Nat_nat_fun_nat_bool_fun_fun$ Nat_nat_fun$) Nat_bool_fun$)
(declare-fun fun_app$ab (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun$) Nat_nat_fun$)
(declare-fun fun_app$ac (Nat_nat_prod_llist_nat_nat_prod_llist_fun$ Nat_nat_prod_llist$) Nat_nat_prod_llist$)
(declare-fun fun_app$ad (Nat_nat_prod_nat_nat_prod_llist_nat_nat_prod_llist_fun_fun$ Nat_nat_prod$) Nat_nat_prod_llist_nat_nat_prod_llist_fun$)
(declare-fun fun_app$ae (Nat_nat_prod_bool_fun$ Nat_nat_prod$) Bool)
(declare-fun fun_app$af (A_a_prod_a_a_prod_llist_a_a_prod_llist_fun_fun$ A_a_prod$) A_a_prod_llist_a_a_prod_llist_fun$)
(declare-fun fun_app$ag (A_a_prod_bool_fun$ A_a_prod$) Bool)
(declare-fun fun_app$ah (A_llist_a_a_llist_a_llist_fun_fun_fun$ A_llist$) A_a_llist_a_llist_fun_fun$)
(declare-fun fun_app$ai (A_a_llist_a_llist_fun_fun_a_a_llist_a_llist_fun_fun_fun$ A_a_llist_a_llist_fun_fun$) A_a_llist_a_llist_fun_fun$)
(declare-fun fun_app$aj (A_a_llist_bool_fun_fun$ A$) A_llist_bool_fun$)
(declare-fun fun_app$ak (A_a_llist_a_llist_fun_fun_a_a_llist_bool_fun_fun_fun$ A_a_llist_a_llist_fun_fun$) A_a_llist_bool_fun_fun$)
(declare-fun fun_app$al (A_a_llist_a_llist_fun_fun_a_a_llist_a_fun_fun_fun$ A_a_llist_a_llist_fun_fun$) A_a_llist_a_fun_fun$)
(declare-fun fun_app$am (A_a_llist_bool_fun_fun_a_a_llist_a_llist_fun_fun_fun$ A_a_llist_bool_fun_fun$) A_a_llist_a_llist_fun_fun$)
(declare-fun fun_app$an (A_a_llist_bool_fun_fun_a_a_llist_bool_fun_fun_fun$ A_a_llist_bool_fun_fun$) A_a_llist_bool_fun_fun$)
(declare-fun fun_app$ao (A_a_llist_bool_fun_fun_a_a_llist_a_fun_fun_fun$ A_a_llist_bool_fun_fun$) A_a_llist_a_fun_fun$)
(declare-fun fun_app$ap (Bool_a_fun$ Bool) A$)
(declare-fun fun_app$aq (A_a_llist_a_fun_fun_a_a_llist_a_llist_fun_fun_fun$ A_a_llist_a_fun_fun$) A_a_llist_a_llist_fun_fun$)
(declare-fun fun_app$ar (A_a_llist_fun$ A$) A_llist$)
(declare-fun fun_app$as (A_a_llist_a_fun_fun_a_a_llist_bool_fun_fun_fun$ A_a_llist_a_fun_fun$) A_a_llist_bool_fun_fun$)
(declare-fun fun_app$at (A_a_llist_a_fun_fun_a_a_llist_a_fun_fun_fun$ A_a_llist_a_fun_fun$) A_a_llist_a_fun_fun$)
(declare-fun fun_app$au (A_a_fun$ A$) A$)
(declare-fun fun_app$av (Nat_nat_llist_nat_llist_fun_fun$ Nat$) Nat_llist_nat_llist_fun$)
(declare-fun fun_app$aw (A_llist_llist_bool_fun$ A_llist_llist$) Bool)
(declare-fun fun_app$ax (A_llist_a_llist_llist_bool_fun_fun$ A_llist$) A_llist_llist_bool_fun$)
(declare-fun fun_app$ay (A_a_prod_llist_bool_fun$ A_a_prod_llist$) Bool)
(declare-fun fun_app$az (A_a_prod_a_a_prod_llist_bool_fun_fun$ A_a_prod$) A_a_prod_llist_bool_fun$)
(declare-fun fun_app$ba (Nat_llist_bool_fun$ Nat_llist$) Bool)
(declare-fun fun_app$bb (Nat_nat_llist_bool_fun_fun$ Nat$) Nat_llist_bool_fun$)
(declare-fun fun_app$bc (A_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun$ A_a_llist_a_llist_fun_fun$) A_llist_a_llist_fun$)
(declare-fun fun_app$bd (A_a_llist_a_fun_fun_a_llist_a_fun_fun$ A_a_llist_a_fun_fun$) A_llist_a_fun$)
(declare-fun fun_app$be (A_a_llist_bool_fun_fun_a_llist_bool_fun_fun$ A_a_llist_bool_fun_fun$) A_llist_bool_fun$)
(declare-fun fun_app$bf (Nat_nat_prod_llist_bool_fun$ Nat_nat_prod_llist$) Bool)
(declare-fun fun_app$bg (A_llist_llist_a_llist_set_fun$ A_llist_llist$) A_llist_set$)
(declare-fun fun_app$bh (A_a_prod_llist_a_a_prod_set_fun$ A_a_prod_llist$) A_a_prod_set$)
(declare-fun fun_app$bi (Nat_nat_prod_llist_nat_nat_prod_set_fun$ Nat_nat_prod_llist$) Nat_nat_prod_set$)
(declare-fun fun_app$bj (A_llist_a_set_fun$ A_llist$) A_set$)
(declare-fun fun_app$bk (A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ A_llist_a_llist_fun$) A_llist_a_llist_fun$)
(declare-fun fun_app$bl (A_llist_a_fun_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ A_llist_a_fun$) A_llist_a_llist_fun_a_llist_a_llist_fun_fun$)
(declare-fun fun_app$bm (Nat_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ Nat$) A_llist_a_llist_fun_a_llist_a_llist_fun_fun$)
(declare-fun fun_app$bn (A_llist_a_llist_bool_fun_fun$ A_llist$) A_llist_bool_fun$)
(declare-fun fun_app$bo (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun gen_lset$a (A_a_prod_set$) A_a_prod_llist_a_a_prod_set_fun$)
(declare-fun gen_lset$b (Nat_nat_prod_set$) Nat_nat_prod_llist_nat_nat_prod_set_fun$)
(declare-fun gen_lset$c (A_set$) A_llist_a_set_fun$)
(declare-fun ldistinct$ (A_llist_llist$) Bool)
(declare-fun undefined$ () A_llist$)
(declare-fun case_llist$ (A_llist$) A_a_llist_a_llist_fun_fun_a_llist_a_llist_fun_fun$)
(declare-fun ldistinct$a (A_a_prod_llist$) Bool)
(declare-fun ldistinct$b (Nat_nat_prod_llist$) Bool)
(declare-fun ldistinct$c (A_llist$) Bool)
(declare-fun ldropWhile$ (A_llist_bool_fun$ A_llist_llist$) A_llist_llist$)
(declare-fun ltakeWhile$ (A_bool_fun$) A_llist_a_llist_fun$)
(declare-fun pred_llist$ (A_llist_bool_fun$ A_llist_llist$) Bool)
(declare-fun undefined$a () A$)
(declare-fun undefined$b () A_llist_llist$)
(declare-fun undefined$c (Nat$) A_llist$)
(declare-fun undefined$d (Nat$) A$)
(declare-fun case_llist$a (A$) A_a_llist_a_fun_fun_a_llist_a_fun_fun$)
(declare-fun case_llist$b (A_llist$ A_llist_a_llist_llist_a_llist_fun_fun$) A_llist_llist_a_llist_fun$)
(declare-fun case_llist$c (Bool) A_a_llist_bool_fun_fun_a_llist_bool_fun_fun$)
(declare-fun case_llist$d (A_llist_llist$ A_llist_a_llist_llist_a_llist_llist_fun_fun$) A_llist_llist_a_llist_llist_fun$)
(declare-fun case_llist$e (A_a_prod_llist$ A_a_prod_a_a_prod_llist_a_a_prod_llist_fun_fun$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun case_llist$f (Nat_nat_prod_llist$ Nat_nat_prod_nat_nat_prod_llist_nat_nat_prod_llist_fun_fun$ Nat_nat_prod_llist$) Nat_nat_prod_llist$)
(declare-fun case_llist$g (Nat_llist$ Nat_nat_llist_nat_llist_fun_fun$ Nat_llist$) Nat_llist$)
(declare-fun case_llist$h (Bool A_llist_a_llist_llist_bool_fun_fun$ A_llist_llist$) Bool)
(declare-fun case_llist$i (Bool A_a_prod_a_a_prod_llist_bool_fun_fun$ A_a_prod_llist$) Bool)
(declare-fun case_llist$j (Bool Nat_nat_llist_bool_fun_fun$ Nat_llist$) Bool)
(declare-fun divides_aux$ (Nat_nat_prod$) Bool)
(declare-fun ldropWhile$a (Nat_nat_prod_bool_fun$ Nat_nat_prod_llist$) Nat_nat_prod_llist$)
(declare-fun ldropWhile$b (A_a_prod_bool_fun$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun ldropWhile$c (A_bool_fun$) A_llist_a_llist_fun$)
(declare-fun pred_llist$a (A_a_prod_bool_fun$ A_a_prod_llist$) Bool)
(declare-fun pred_llist$b (Nat_nat_prod_bool_fun$ Nat_nat_prod_llist$) Bool)
(declare-fun pred_llist$c (A_bool_fun$) A_llist_bool_fun$)
(declare-fun unfold_llist$ (A_llist_bool_fun$) A_llist_a_fun_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$)
(assert (not (not (and (= xs$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (= (fun_app$c (ldropn$ (suc$ n$)) (lCons$ (lhd$ xs$) (ltl$ xs$))) (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$))) (= (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$)) (fun_app$h (uvn$ (ltl$ xs$)) n$)) (not (= (fun_app$c (ldropn$ (suc$ n$)) xs$) (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$))) (= (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (ldropn$ n$) (fun_app$e uu$ (lhd$ xs$)))))))
(assert (not (not (= (fun_app$h (uvn$ (ltl$ xs$)) n$) (fun_app$c (ldropn$ n$) (ltl$ xs$))))))
(assert (or (not (and (= xs$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (= (fun_app$c (ldropn$ (suc$ n$)) (lCons$ (lhd$ xs$) (ltl$ xs$))) (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$))) (= (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$)) (fun_app$h (uvn$ (ltl$ xs$)) n$)) (not (= (fun_app$c (ldropn$ (suc$ n$)) xs$) (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$))) (= (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (ldropn$ n$) (fun_app$e uu$ (lhd$ xs$))))) (not (and (= xs$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (= (fun_app$c (ldropn$ (suc$ n$)) (lCons$ (lhd$ xs$) (ltl$ xs$))) (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$))) (= (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$)) (fun_app$h (uvn$ (ltl$ xs$)) n$)) (not (= (fun_app$c (ldropn$ (suc$ n$)) xs$) (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$))) (= (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (ldropn$ n$) (fun_app$e uu$ (lhd$ xs$))))) (not (and (= xs$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (= (fun_app$c (ldropn$ (suc$ n$)) (lCons$ (lhd$ xs$) (ltl$ xs$))) (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$))) (= (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$)) (fun_app$h (uvn$ (ltl$ xs$)) n$)) (not (= (fun_app$c (ldropn$ (suc$ n$)) xs$) (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$))) (= (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (ldropn$ n$) (fun_app$e uu$ (lhd$ xs$))))) (not (and (= xs$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (= (fun_app$c (ldropn$ (suc$ n$)) (lCons$ (lhd$ xs$) (ltl$ xs$))) (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$))) (= (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$)) (fun_app$h (uvn$ (ltl$ xs$)) n$)) (not (= (fun_app$c (ldropn$ (suc$ n$)) xs$) (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$))) (= (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (ldropn$ n$) (fun_app$e uu$ (lhd$ xs$))))) (not (and (= xs$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (= (fun_app$c (ldropn$ (suc$ n$)) (lCons$ (lhd$ xs$) (ltl$ xs$))) (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$))) (= (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$)) (fun_app$h (uvn$ (ltl$ xs$)) n$)) (not (= (fun_app$c (ldropn$ (suc$ n$)) xs$) (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$))) (= (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (ldropn$ n$) (fun_app$e uu$ (lhd$ xs$))))) (not (and (= xs$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (= (fun_app$c (ldropn$ (suc$ n$)) (lCons$ (lhd$ xs$) (ltl$ xs$))) (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$))) (= (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$)) (fun_app$h (uvn$ (ltl$ xs$)) n$)) (not (= (fun_app$c (ldropn$ (suc$ n$)) xs$) (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$))) (= (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (ldropn$ n$) (fun_app$e uu$ (lhd$ xs$))))) (not (and (= xs$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (= (fun_app$c (ldropn$ (suc$ n$)) (lCons$ (lhd$ xs$) (ltl$ xs$))) (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$))) (= (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$)) (fun_app$h (uvn$ (ltl$ xs$)) n$)) (not (= (fun_app$c (ldropn$ (suc$ n$)) xs$) (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$))) (= (fun_app$c (fun_app$bc (case_llist$ lNil$) uu$) xs$) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)) (ite (fun_app$q lnull$d xs$) lNil$ (fun_app$c (fun_app$e uu$ (lhd$ xs$)) (ltl$ xs$)))) (= (ldropn$ n$) (fun_app$e uu$ (lhd$ xs$))))) (not (= (fun_app$h (uvn$ (ltl$ xs$)) n$) (fun_app$c (ldropn$ n$) (ltl$ xs$))))))
(check-sat)
(exit)
