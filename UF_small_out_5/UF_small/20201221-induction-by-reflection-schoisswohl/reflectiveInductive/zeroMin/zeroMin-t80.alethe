(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst80.0 (not (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat)))))
(assume t46 (or (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat))) (not (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))) (not (= (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat))) (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))))))
(assume t76 (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat))))
(assume t79 (= (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat))) (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))))
(step t46' (cl (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat))) (not (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))) (not (= (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat))) (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))))) :rule or :premises (t46))
(step st80 (cl (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat)))) :rule resolution :premises (t46' t76 t79))
(step t.end (cl) :rule resolution :premises (nst80.0 st80))
