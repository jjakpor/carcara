(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst205.0 (not (leq (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) zeroR) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)))))
(assume t42 (or (not (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat)))) (leq (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) zeroR) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat))) (not (= (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat))) (leq (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) zeroR) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)))))))
(assume t201 (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat))))
(assume t204 (= (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat))) (leq (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) zeroR) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)))))
(step t42' (cl (not (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat)))) (leq (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) zeroR) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat))) (not (= (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat))) (leq (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) zeroR) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)))))) :rule or :premises (t42))
(step st205 (cl (leq (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) zeroR) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)))) :rule resolution :premises (t42' t201 t204))
(step t.end (cl) :rule resolution :premises (nst205.0 st205))
