(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst191.0 (not (or (not (forall ((phi form) (BOUND_VARIABLE_530 nat)) (or (not (models (push_nat empty v0_nat zero) phi)) (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) phi)) (models (push_nat empty v0_nat (s x0)) phi)))) (models (push_nat empty v0_nat BOUND_VARIABLE_530) phi)))) (or (not (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat)))) (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))) (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat)))))))
(step st191 (cl (or (not (forall ((phi form) (BOUND_VARIABLE_530 nat)) (or (not (models (push_nat empty v0_nat zero) phi)) (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) phi)) (models (push_nat empty v0_nat (s x0)) phi)))) (models (push_nat empty v0_nat BOUND_VARIABLE_530) phi)))) (or (not (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat)))) (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))) (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat)))))) :rule forall_inst :args ((leqR zeroR (inj_nat v0_nat)) @quantifiers_skolemize_1))
(step t.end (cl) :rule resolution :premises (nst191.0 st191))
