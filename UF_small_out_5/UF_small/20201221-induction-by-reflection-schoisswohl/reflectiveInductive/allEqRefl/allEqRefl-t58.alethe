(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (equal x x x))))
(define-fun @quantifiers_skolemize_7 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))))
(assume nst58.0 (not (not (= (models (push_nat empty v0_nat zero) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat))) (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))))))
(assume nst58.1 (not (models (push_nat empty v0_nat zero) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))
(assume nst58.2 (not (not (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat))))))
(step st58 (cl (not (= (models (push_nat empty v0_nat zero) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat))) (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat))))) (models (push_nat empty v0_nat zero) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat))) (not (equal (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat))))) :rule equiv_pos1)
(step t.end (cl) :rule resolution :premises (nst58.0 nst58.1 nst58.2 st58))
