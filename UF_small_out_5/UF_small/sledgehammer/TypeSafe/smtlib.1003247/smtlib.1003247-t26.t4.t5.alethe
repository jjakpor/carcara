(assume nt26.0 (not (not (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) (f64 f65 f66 f67 f72 f78))))))
(assume nt26.1 (not (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78))))
(anchor :step t26)
(assume t26.a0 (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) (f64 f65 f66 f67 f72 f78))))
(anchor :step t26.t4 :args ((?v0 S52) (?v1 S51) (:= (?v0 S52) ?v0) (:= (?v1 S51) ?v1)))
(step st26.t4.t5 (cl (= f72 f72)) :rule refl)
(step t26.t4.t11 (cl (= (= f1 (f75 ?v0 ?v1 ?v1)) (= (f64 f65 f66 f67 f72 f78) (f75 ?v0 ?v1 ?v1)))) :rule trust)
(step t26.t4 (cl (= (forall ((?v0 S52) (?v1 S51)) (= f1 (f75 ?v0 ?v1 ?v1))) (forall ((?v0 S52) (?v1 S51)) (= (f64 f65 f66 f67 f72 f78) (f75 ?v0 ?v1 ?v1))))) :rule bind)
(step t26.t9 (cl (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78))) :rule trust)
(step t26 (cl (not (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) (f64 f65 f66 f67 f72 f78)))) (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78))) :rule subproof :discharge (t26.a0))
(step t.end (cl) :rule resolution :premises (nt26.0 nt26.1 t26))
