(define-fun @quantifiers_skolemize_10 () S2 (choice ((?v6 S2)) (not (= (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f3 f8 ?v6))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f3 f4 ?v6)))))))
(assume nst40.0 (not (= (=> (and (not (= f10 f20)) (not (= f9 f20)) (not (= f9 f10))) (= (= f1 (f14 (f17 (f18 f19 f20) f10) (f21 f8))) (= f1 (f14 (f17 (f18 f19 f20) f9) (f21 f4))))) (=> (and (not (= f10 f20)) (not (= f9 f20)) (not (= f9 f10))) (= (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4))))))))
(assume t34 (= (and (not (= f10 f20)) (not (= f9 f20)) (not (= f9 f10))) (and (not (= f10 f20)) (not (= f9 f20)) (not (= f9 f10)))))
(assume t39 (= (= (= f1 (f14 (f17 (f18 f19 f20) f10) (f21 f8))) (= f1 (f14 (f17 (f18 f19 f20) f9) (f21 f4)))) (= (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4))))))
(step st40 (cl (= (=> (and (not (= f10 f20)) (not (= f9 f20)) (not (= f9 f10))) (= (= f1 (f14 (f17 (f18 f19 f20) f10) (f21 f8))) (= f1 (f14 (f17 (f18 f19 f20) f9) (f21 f4))))) (=> (and (not (= f10 f20)) (not (= f9 f20)) (not (= f9 f10))) (= (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4))))))) :rule cong :premises (t34 t39))
(step t.end (cl) :rule resolution :premises (nst40.0 st40))
