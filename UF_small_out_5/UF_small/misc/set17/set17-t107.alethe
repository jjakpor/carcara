(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst107.0 (not (= (or (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))) (not (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))))) (or (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))) (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))))))
(assume t105 (= (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))) (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c))))))
(assume t106 (= (not (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c))))) (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))))
(step st107 (cl (= (or (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))) (not (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))))) (or (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))) (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))))) :rule cong :premises (t105 t106))
(step t.end (cl) :rule resolution :premises (nst107.0 st107))
