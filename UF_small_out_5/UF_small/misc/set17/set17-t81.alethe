(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst81.0 (not (member @quantifiers_skolemize_3 (intersection a b))))
(assume nst81.1 (not (member @quantifiers_skolemize_3 (intersection a c))))
(assume nst81.2 (not (not (or (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 (intersection a c))))))
(assume t80 (or (not (or (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 (intersection a c))))
(step t80' (cl (not (or (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 (intersection a c))) :rule or :premises (t80))
(step st81 (cl (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 (intersection a c)) (not (or (member @quantifiers_skolemize_3 (intersection a b)) (member @quantifiers_skolemize_3 (intersection a c))))) :rule reordering :premises (t80'))
(step t.end (cl) :rule resolution :premises (nst81.0 nst81.1 nst81.2 st81))
