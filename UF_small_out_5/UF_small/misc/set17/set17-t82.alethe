(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst82.0 (not (not (= (member @quantifiers_skolemize_3 (intersection a b)) (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))))))
(assume nst82.1 (not (not (member @quantifiers_skolemize_3 (intersection a b)))))
(assume nst82.2 (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))))
(step st82 (cl (not (= (member @quantifiers_skolemize_3 (intersection a b)) (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)))) (not (member @quantifiers_skolemize_3 (intersection a b))) (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst82.0 nst82.1 nst82.2 st82))
