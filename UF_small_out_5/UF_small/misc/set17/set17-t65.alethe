(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst65.0 (not (member @quantifiers_skolemize_3 (union b c))))
(assume nst65.1 (not (not (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c)))))
(assume nst65.2 (not (not (= (member @quantifiers_skolemize_3 (union b c)) (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c))))))
(assume t64 (or (not (= (member @quantifiers_skolemize_3 (union b c)) (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c)))) (member @quantifiers_skolemize_3 (union b c)) (not (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c)))))
(step t64' (cl (not (= (member @quantifiers_skolemize_3 (union b c)) (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c)))) (member @quantifiers_skolemize_3 (union b c)) (not (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c)))) :rule or :premises (t64))
(step st65 (cl (member @quantifiers_skolemize_3 (union b c)) (not (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c))) (not (= (member @quantifiers_skolemize_3 (union b c)) (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c))))) :rule reordering :premises (t64'))
(step t.end (cl) :rule resolution :premises (nst65.0 nst65.1 nst65.2 st65))
