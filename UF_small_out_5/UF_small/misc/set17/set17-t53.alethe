(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst53.0 (not (=> (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))) (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c))))))))
(assume nst53.1 (not (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))))))
(assume t51 (or (=> (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))) (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))))) (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c))))))))
(assume t52 (or (not (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c))))))) (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))))))
(step t51' (cl (=> (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))) (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))))) (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c))))))) :rule or :premises (t51))
(step t52' (cl (not (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c))))))) (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))))) :rule or :premises (t52))
(step st53 (cl (=> (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))) (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))))) (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))))) :rule resolution :premises (t51' t52'))
(step t.end (cl) :rule resolution :premises (nst53.0 nst53.1 st53))
