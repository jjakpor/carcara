(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst69.0 (not (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c))))
(assume nst69.1 (not (not (member @quantifiers_skolemize_3 c))))
(step st69 (cl (or (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 c)) (not (member @quantifiers_skolemize_3 c))) :rule or_neg :args (1))
(step t.end (cl) :rule resolution :premises (nst69.0 nst69.1 st69))
