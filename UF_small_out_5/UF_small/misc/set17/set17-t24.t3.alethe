(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nt24.0 (not (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))))
(assume nt24.1 (not (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))))
(anchor :step t24)
(assume t24.a0 (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(step t24.t0 (cl (not (= (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c))))))) (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))) :rule trust)
(step t24.t2 (cl (= (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c))))))) :rule trust)
(step st24.t3 (cl (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))) :rule resolution :premises (t24.t0 t24.t2 t24.a0))
(step t24.t3 (cl (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))) :rule trust)
(step t24 (cl (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))))) :rule subproof :discharge (t24.a0))
(step t.end (cl) :rule resolution :premises (nt24.0 nt24.1 t24))
