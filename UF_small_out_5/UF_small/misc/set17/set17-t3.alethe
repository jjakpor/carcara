(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst3.0 (not (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b))))))
(assume nst3.1 (not (member @quantifiers_skolemize_4 a)))
(step st3 (cl (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (member @quantifiers_skolemize_4 a)) :rule and_pos :args (0))
(step t.end (cl) :rule resolution :premises (nst3.0 nst3.1 st3))
