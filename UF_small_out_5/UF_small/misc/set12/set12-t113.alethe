(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst113.0 (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(assume t67 (or (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))))))
(assume t112 (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))))
(step t67' (cl (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))))) :rule or :premises (t67))
(step st113 (cl (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) :rule resolution :premises (t67' t112))
(step t.end (cl) :rule resolution :premises (nst113.0 st113))
