(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst130.0 (not (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (member ?x (intersection ?s1 ?s2)) (and (member ?x ?s1) (member ?x ?s2))))) (= (member @quantifiers_skolemize_4 (intersection (intersection a b) c)) (and (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 c))))))
(step st130 (cl (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (member ?x (intersection ?s1 ?s2)) (and (member ?x ?s1) (member ?x ?s2))))) (= (member @quantifiers_skolemize_4 (intersection (intersection a b) c)) (and (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 c))))) :rule forall_inst :args (@quantifiers_skolemize_4 (intersection a b) c))
(step t.end (cl) :rule resolution :premises (nst130.0 st130))
