(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst65.0 (not (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)))))))
(assume t64 (or (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))))) (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)))))))
(step t64' (cl (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))))) (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)))))) :rule or :premises (t64))
(step st65 (cl (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)))))) :rule contraction :premises (t64'))
(step t.end (cl) :rule resolution :premises (nst65.0 st65))
