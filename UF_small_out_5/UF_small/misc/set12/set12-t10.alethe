(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst10.0 (not (not (member @quantifiers_skolemize_4 (intersection (intersection a b) c)))))
(assume nst10.1 (not (and (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 c))))
(assume nst10.2 (not (not (= (member @quantifiers_skolemize_4 (intersection (intersection a b) c)) (and (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 c))))))
(assume t9 (or (not (= (member @quantifiers_skolemize_4 (intersection (intersection a b) c)) (and (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 c)))) (not (member @quantifiers_skolemize_4 (intersection (intersection a b) c))) (and (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 c))))
(step t9' (cl (not (= (member @quantifiers_skolemize_4 (intersection (intersection a b) c)) (and (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 c)))) (not (member @quantifiers_skolemize_4 (intersection (intersection a b) c))) (and (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 c))) :rule or :premises (t9))
(step st10 (cl (not (member @quantifiers_skolemize_4 (intersection (intersection a b) c))) (and (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 c)) (not (= (member @quantifiers_skolemize_4 (intersection (intersection a b) c)) (and (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 c))))) :rule reordering :premises (t9'))
(step t.end (cl) :rule resolution :premises (nst10.0 nst10.1 nst10.2 st10))
