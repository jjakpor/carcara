(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst122.0 (not (subset (intersection a (intersection b c)) (intersection (intersection a b) c))))
(assume t50 (or (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) (not (or (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))))))
(assume t113 (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))
(assume t121 (or (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))))
(step t50' (cl (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) (not (or (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c)))))))) :rule or :premises (t50))
(step st122 (cl (subset (intersection a (intersection b c)) (intersection (intersection a b) c))) :rule resolution :premises (t50' t113 t121))
(step t.end (cl) :rule resolution :premises (nst122.0 st122))
