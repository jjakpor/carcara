(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst44.0 (not (seteq (intersection a (intersection b c)) (intersection (intersection a b) c))))
(assume nst44.1 (not (not (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c)))))))
(assume nst44.2 (not (not (= (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c))))))))
(assume t43 (or (not (= (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c)))))) (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c)))))))
(step t43' (cl (not (= (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c)))))) (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c)))))) :rule or :premises (t43))
(step st44 (cl (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c))))) (not (= (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c))))))) :rule reordering :premises (t43'))
(step t.end (cl) :rule resolution :premises (nst44.0 nst44.1 nst44.2 st44))
