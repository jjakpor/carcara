(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference b a))) (member ?x (difference b d))))))
(assume nst65.0 (not (or (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))) (not (member @quantifiers_skolemize_3 b)) (not (not (member @quantifiers_skolemize_3 d))))))
(assume nst65.1 (not (not (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))))))
(step st65 (cl (or (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))) (not (member @quantifiers_skolemize_3 b)) (not (not (member @quantifiers_skolemize_3 d)))) (not (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))))) :rule or_neg :args (0))
(step t.end (cl) :rule resolution :premises (nst65.0 nst65.1 st65))
