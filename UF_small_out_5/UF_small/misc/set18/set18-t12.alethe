(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference b a))) (member ?x (difference b d))))))
(assume nst12.0 (not (not (member @quantifiers_skolemize_3 (difference b a)))))
(assume nst12.1 (not (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a)))))
(assume nst12.2 (not (not (= (member @quantifiers_skolemize_3 (difference b a)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a)))))))
(assume t11 (or (not (= (member @quantifiers_skolemize_3 (difference b a)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))))) (not (member @quantifiers_skolemize_3 (difference b a))) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a)))))
(step t11' (cl (not (= (member @quantifiers_skolemize_3 (difference b a)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))))) (not (member @quantifiers_skolemize_3 (difference b a))) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a)))) :rule or :premises (t11))
(step st12 (cl (not (member @quantifiers_skolemize_3 (difference b a))) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))) (not (= (member @quantifiers_skolemize_3 (difference b a)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a)))))) :rule reordering :premises (t11'))
(step t.end (cl) :rule resolution :premises (nst12.0 nst12.1 nst12.2 st12))
