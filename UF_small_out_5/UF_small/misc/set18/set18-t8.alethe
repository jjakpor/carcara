(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference b a))) (member ?x (difference b d))))))
(assume nst8.0 (not (not (subset d a))))
(assume nst8.1 (not (member @quantifiers_skolemize_3 a)))
(assume nst8.2 (not (not (member @quantifiers_skolemize_3 d))))
(assume nst8.3 (not (not (or (not (member @quantifiers_skolemize_3 d)) (not (subset d a)) (member @quantifiers_skolemize_3 a)))))
(assume t7 (or (not (or (not (member @quantifiers_skolemize_3 d)) (not (subset d a)) (member @quantifiers_skolemize_3 a))) (not (member @quantifiers_skolemize_3 d)) (not (subset d a)) (member @quantifiers_skolemize_3 a)))
(step t7' (cl (not (or (not (member @quantifiers_skolemize_3 d)) (not (subset d a)) (member @quantifiers_skolemize_3 a))) (not (member @quantifiers_skolemize_3 d)) (not (subset d a)) (member @quantifiers_skolemize_3 a)) :rule or :premises (t7))
(step st8 (cl (not (subset d a)) (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 d)) (not (or (not (member @quantifiers_skolemize_3 d)) (not (subset d a)) (member @quantifiers_skolemize_3 a)))) :rule reordering :premises (t7'))
(step t.end (cl) :rule resolution :premises (nst8.0 nst8.1 nst8.2 nst8.3 st8))
