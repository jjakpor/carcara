(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst56.0 (not (not (= (seteq (intersection a b) (difference a (difference a b))) (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b)))))))
(assume nst56.1 (not (seteq (intersection a b) (difference a (difference a b)))))
(assume nst56.2 (not (not (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b))))))
(step st56 (cl (not (= (seteq (intersection a b) (difference a (difference a b))) (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b))))) (seteq (intersection a b) (difference a (difference a b))) (not (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b))))) :rule equiv_pos1)
(step t.end (cl) :rule resolution :premises (nst56.0 nst56.1 nst56.2 st56))
