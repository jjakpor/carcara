(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst138.0 (not (= (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))) (member @quantifiers_skolemize_3 (intersection a b))))))
(assume t136 (= (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))) (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b))))))
(assume t137 (= (not (not (member @quantifiers_skolemize_3 (intersection a b)))) (member @quantifiers_skolemize_3 (intersection a b))))
(step st138 (cl (= (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))) (member @quantifiers_skolemize_3 (intersection a b))))) :rule cong :premises (t136 t137))
(step t.end (cl) :rule resolution :premises (nst138.0 st138))
