(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst57.0 (not (seteq (intersection a b) (difference a (difference a b)))))
(assume nst57.1 (not (not (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b))))))
(assume nst57.2 (not (not (= (seteq (intersection a b) (difference a (difference a b))) (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b)))))))
(assume t56 (or (not (= (seteq (intersection a b) (difference a (difference a b))) (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b))))) (seteq (intersection a b) (difference a (difference a b))) (not (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b))))))
(step t56' (cl (not (= (seteq (intersection a b) (difference a (difference a b))) (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b))))) (seteq (intersection a b) (difference a (difference a b))) (not (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b))))) :rule or :premises (t56))
(step st57 (cl (seteq (intersection a b) (difference a (difference a b))) (not (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b)))) (not (= (seteq (intersection a b) (difference a (difference a b))) (and (subset (intersection a b) (difference a (difference a b))) (subset (difference a (difference a b)) (intersection a b)))))) :rule reordering :premises (t56'))
(step t.end (cl) :rule resolution :premises (nst57.0 nst57.1 nst57.2 st57))
