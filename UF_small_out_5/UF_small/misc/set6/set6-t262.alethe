(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst262.0 (not (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b))))))
(assume t247 (or (member @quantifiers_skolemize_4 (difference c b)) (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b)))) (not (= (member @quantifiers_skolemize_4 (difference c b)) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b)))))))
(assume t249 (not (member @quantifiers_skolemize_4 (difference c b))))
(assume t261 (= (member @quantifiers_skolemize_4 (difference c b)) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b)))))
(step t247' (cl (member @quantifiers_skolemize_4 (difference c b)) (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b)))) (not (= (member @quantifiers_skolemize_4 (difference c b)) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b)))))) :rule or :premises (t247))
(step st262 (cl (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b))))) :rule resolution :premises (t247' t249 t261))
(step t.end (cl) :rule resolution :premises (nst262.0 st262))
