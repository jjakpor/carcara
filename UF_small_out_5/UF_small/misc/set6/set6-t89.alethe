(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst89.0 (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b))))))
(assume nst89.1 (not (not (member @quantifiers_skolemize_3 c))))
(assume nst89.2 (not (not (not (member @quantifiers_skolemize_3 (intersection a b))))))
(step st89 (cl (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) :rule and_neg)
(step t.end (cl) :rule resolution :premises (nst89.0 nst89.1 nst89.2 st89))
