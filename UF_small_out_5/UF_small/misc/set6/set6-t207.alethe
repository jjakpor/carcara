(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst207.0 (not (not (= (member @quantifiers_skolemize_4 (difference c a)) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a)))))))
(assume nst207.1 (not (member @quantifiers_skolemize_4 (difference c a))))
(assume nst207.2 (not (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a))))))
(step st207 (cl (not (= (member @quantifiers_skolemize_4 (difference c a)) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a))))) (member @quantifiers_skolemize_4 (difference c a)) (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a))))) :rule equiv_pos1)
(step t.end (cl) :rule resolution :premises (nst207.0 nst207.1 nst207.2 st207))
