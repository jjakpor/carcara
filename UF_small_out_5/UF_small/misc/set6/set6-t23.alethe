(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst23.0 (not (= (or (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))) (not (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))))) (or (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_4 (difference c (intersection a b)))))))
(assume t21 (= (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))) (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b))))))
(assume t22 (= (not (not (member @quantifiers_skolemize_4 (difference c (intersection a b))))) (member @quantifiers_skolemize_4 (difference c (intersection a b)))))
(step st23 (cl (= (or (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))) (not (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))))) (or (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_4 (difference c (intersection a b)))))) :rule cong :premises (t21 t22))
(step t.end (cl) :rule resolution :premises (nst23.0 st23))
