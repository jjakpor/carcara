(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst86.0 (not (= (not (member @quantifiers_skolemize_3 c)) (not (member @quantifiers_skolemize_3 c)))))
(step st86 (cl (= (not (member @quantifiers_skolemize_3 c)) (not (member @quantifiers_skolemize_3 c)))) :rule refl)
(step t.end (cl) :rule resolution :premises (nst86.0 st86))
