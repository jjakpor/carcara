(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst18.0 (not (not (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))))))
(assume nst18.1 (not (not (member @quantifiers_skolemize_4 (difference c (intersection a b))))))
(assume nst18.2 (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))))
(step st18 (cl (not (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))))) (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst18.0 nst18.1 nst18.2 st18))
