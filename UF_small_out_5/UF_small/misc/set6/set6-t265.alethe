(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst265.0 (not (member @quantifiers_skolemize_4 (intersection a b))))
(assume nst265.1 (not (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b)))))
(assume nst265.2 (not (not (= (member @quantifiers_skolemize_4 (intersection a b)) (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b))))))
(assume t264 (or (not (= (member @quantifiers_skolemize_4 (intersection a b)) (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b)))) (member @quantifiers_skolemize_4 (intersection a b)) (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b)))))
(step t264' (cl (not (= (member @quantifiers_skolemize_4 (intersection a b)) (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b)))) (member @quantifiers_skolemize_4 (intersection a b)) (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b)))) :rule or :premises (t264))
(step st265 (cl (member @quantifiers_skolemize_4 (intersection a b)) (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b))) (not (= (member @quantifiers_skolemize_4 (intersection a b)) (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b))))) :rule reordering :premises (t264'))
(step t.end (cl) :rule resolution :premises (nst265.0 nst265.1 nst265.2 st265))
