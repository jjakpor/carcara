(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst15.0 (not (not (member @quantifiers_skolemize_4 c))))
(assume nst15.1 (not (member @quantifiers_skolemize_4 a)))
(assume nst15.2 (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a)))))
(assume t14 (or (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a))) (not (member @quantifiers_skolemize_4 c)) (member @quantifiers_skolemize_4 a)))
(step t14' (cl (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a))) (not (member @quantifiers_skolemize_4 c)) (member @quantifiers_skolemize_4 a)) :rule or :premises (t14))
(step st15 (cl (not (member @quantifiers_skolemize_4 c)) (member @quantifiers_skolemize_4 a) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a)))) :rule reordering :premises (t14'))
(step t.end (cl) :rule resolution :premises (nst15.0 nst15.1 nst15.2 st15))
