(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst146.0 (not (= (= (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (member @quantifiers_skolemize_3 (difference c (intersection a b)))) (= (member @quantifiers_skolemize_3 (difference c (intersection a b))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b))))))))
(step st146 (cl (= (= (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (member @quantifiers_skolemize_3 (difference c (intersection a b)))) (= (member @quantifiers_skolemize_3 (difference c (intersection a b))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b))))))) :rule hole)
(step t.end (cl) :rule resolution :premises (nst146.0 st146))
