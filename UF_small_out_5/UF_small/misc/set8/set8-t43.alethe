(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst43.0 (not (not (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b))))))
(assume a8 (not (seteq (intersection a b) (intersection b a))))
(assume t39 (or (seteq (intersection a b) (intersection b a)) (not (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b)))) (not (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b)))))))
(assume t42 (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b)))))
(step t39' (cl (seteq (intersection a b) (intersection b a)) (not (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b)))) (not (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b)))))) :rule or :premises (t39))
(step st43 (cl (not (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b))))) :rule resolution :premises (t39' a8 t42))
(step t.end (cl) :rule resolution :premises (nst43.0 st43))
