(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst79.0 (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))))
(assume nst79.1 (not (not (member @quantifiers_skolemize_3 (intersection b a)))))
(step st79 (cl (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))) (not (member @quantifiers_skolemize_3 (intersection b a)))) :rule or_neg :args (1))
(step t.end (cl) :rule resolution :premises (nst79.0 nst79.1 st79))
