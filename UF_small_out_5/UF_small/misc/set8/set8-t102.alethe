(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst102.0 (not (subset (intersection a b) (intersection b a))))
(assume t45 (or (subset (intersection a b) (intersection b a)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (not (or (subset (intersection a b) (intersection b a)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))))))
(assume t93 (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))
(assume t101 (or (subset (intersection a b) (intersection b a)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))))
(step t45' (cl (subset (intersection a b) (intersection b a)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (not (or (subset (intersection a b) (intersection b a)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))))) :rule or :premises (t45))
(step st102 (cl (subset (intersection a b) (intersection b a))) :rule resolution :premises (t45' t93 t101))
(step t.end (cl) :rule resolution :premises (nst102.0 st102))
