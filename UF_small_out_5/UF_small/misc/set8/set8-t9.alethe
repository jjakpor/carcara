(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst9.0 (not (= (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))) (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (member @quantifiers_skolemize_4 (intersection b a))))))
(assume t7 (= (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b)))))
(assume t8 (= (not (not (member @quantifiers_skolemize_4 (intersection b a)))) (member @quantifiers_skolemize_4 (intersection b a))))
(step st9 (cl (= (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))) (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (member @quantifiers_skolemize_4 (intersection b a))))) :rule cong :premises (t7 t8))
(step t.end (cl) :rule resolution :premises (nst9.0 st9))
