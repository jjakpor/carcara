(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst18.0 (not (not (= (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))))) (not (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))))) (or (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))) (not (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b)))))))))
(assume nst18.1 (not (not (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))))) (not (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))))))))
(assume nst18.2 (not (or (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))) (not (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b)))))))
(step st18 (cl (not (= (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))))) (not (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))))) (or (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))) (not (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))))))) (not (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))))) (not (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b)))))) (or (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))) (not (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b)))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst18.0 nst18.1 nst18.2 st18))
