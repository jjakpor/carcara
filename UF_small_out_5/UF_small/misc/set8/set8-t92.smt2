(set-logic UF)
(declare-sort Set 0)
(declare-sort Elem 0)
(declare-fun member (Elem Set) Bool)
(declare-fun subset (Set Set) Bool)
(declare-fun seteq (Set Set) Bool)
(declare-fun union (Set Set) Set)
(declare-fun intersection (Set Set) Set)
(declare-fun difference (Set Set) Set)
(declare-fun a () Set)
(declare-fun b () Set)
(assert (not (or (not (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection a b))) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection b a)))))
(assert (or (and (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a)) (not (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a)) (not (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b))))
(assert (or (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b) (not (and (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b)))))
(assert (or (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a) (not (and (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b)))))
(assert (or (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection b a)) (not (and (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a))) (not (= (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection b a)) (and (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a))))))
(assert (= (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection b a)) (and (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a))))
(assert (or (not (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection a b))) (and (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b)) (not (= (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection a b)) (and (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b))))))
(assert (= (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection a b)) (and (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) a) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) b))))
(assert (or (or (not (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection a b))) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection b a))) (not (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection b a)))))
(assert (or (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection a b)) (or (not (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection a b))) (member (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (intersection b a)))))
(check-sat)
(exit)
