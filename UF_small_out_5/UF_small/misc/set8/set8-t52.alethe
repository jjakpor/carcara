(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst52.0 (not (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))))))
(assume nst52.1 (not (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))))
(assume t50 (or (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))))
(assume t51 (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))))
(step t51' (cl (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) :rule or :premises (t51))
(step t50' (cl (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) :rule or :premises (t50))
(step st52 (cl (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) :rule resolution :premises (t50' t51'))
(step t.end (cl) :rule resolution :premises (nst52.0 nst52.1 st52))
