(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x b)) (member ?x (union a b))))))
(assume nst33.0 (not (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))))
(assume t19 (or (not (= (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))) (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b)))))) (not (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b)))))) (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))))
(assume t21 (= (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))) (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))))
(assume t32 (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))))
(step t19' (cl (not (= (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))) (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b)))))) (not (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b)))))) (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))) :rule or :premises (t19))
(step st33 (cl (not (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))))) :rule resolution :premises (t19' t21 t32))
(step t.end (cl) :rule resolution :premises (nst33.0 st33))
