(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union a b))) (member ?x c)))))
(assume nst2.0 (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c)))))
(assume nst2.1 (not (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))))
(assume t0 (or (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2)))))
(assume t1 (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2)))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))))
(step t0' (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2)))) :rule or :premises (t0))
(step t1' (cl (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2)))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) :rule or :premises (t1))
(step st2 (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) :rule resolution :premises (t0' t1'))
(step t.end (cl) :rule resolution :premises (nst2.0 nst2.1 st2))
