(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union a b))) (member ?x c)))))
(assume nst12.0 (not (= (not (forall ((?x Elem)) (or (not (member ?x (union a b))) (member ?x c)))) (not (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c))))))
(assume t11 (= (forall ((?x Elem)) (or (not (member ?x (union a b))) (member ?x c))) (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c))))
(step st12 (cl (= (not (forall ((?x Elem)) (or (not (member ?x (union a b))) (member ?x c)))) (not (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c))))) :rule cong :premises (t11))
(step t.end (cl) :rule resolution :premises (nst12.0 st12))
