unsat
(assume a0 (not (= f1 f2)))
(assume a1 (not (= (f3 f4 f5 f6 f7 (f8 f9)) f1)))
(assume a2 (= (f3 f4 f5 f6 f7 f10) f1))
(assume a3 (= f10 (f8 f9)))
(step t0 (cl (not (= (not (= f1 (f3 f4 f5 f6 f7 (f8 f9)))) false)) (not (not (= f1 (f3 f4 f5 f6 f7 (f8 f9))))) false) :rule equiv_pos2)
(step t1 (cl (= f1 (f3 f4 f5 f6 f7 f10))) :rule symm :premises (a2))
(step t2 (cl (= f4 f4)) :rule refl)
(step t3 (cl (= f5 f5)) :rule refl)
(step t4 (cl (= f6 f6)) :rule refl)
(step t5 (cl (= f7 f7)) :rule refl)
(step t6 (cl (= (f3 f4 f5 f6 f7 f10) (f3 f4 f5 f6 f7 (f8 f9)))) :rule cong :premises (t2 t3 t4 t5 a3))
(step t7 (cl (= f1 (f3 f4 f5 f6 f7 (f8 f9)))) :rule trans :premises (t1 t6))
(step t8 (cl (= (f3 f4 f5 f6 f7 (f8 f9)) (f3 f4 f5 f6 f7 (f8 f9)))) :rule refl)
(step t9 (cl (= (= f1 (f3 f4 f5 f6 f7 (f8 f9))) (= (f3 f4 f5 f6 f7 (f8 f9)) (f3 f4 f5 f6 f7 (f8 f9))))) :rule cong :premises (t7 t8))
(step t10 (cl (= (not (= f1 (f3 f4 f5 f6 f7 (f8 f9)))) (not (= (f3 f4 f5 f6 f7 (f8 f9)) (f3 f4 f5 f6 f7 (f8 f9)))))) :rule cong :premises (t9))
(step t11 (cl (= (= (f3 f4 f5 f6 f7 (f8 f9)) (f3 f4 f5 f6 f7 (f8 f9))) true)) :rule rare_rewrite :args ("eq-refl" (f3 f4 f5 f6 f7 (f8 f9))))
(step t12 (cl (= (not (= (f3 f4 f5 f6 f7 (f8 f9)) (f3 f4 f5 f6 f7 (f8 f9)))) (not true))) :rule cong :premises (t11))
(step t13 (cl (= (not true) false)) :rule rare_rewrite :args ("evaluate"))
(step t14 (cl (= (not (= (f3 f4 f5 f6 f7 (f8 f9)) (f3 f4 f5 f6 f7 (f8 f9)))) false)) :rule trans :premises (t12 t13))
(step t15 (cl (= (not (= f1 (f3 f4 f5 f6 f7 (f8 f9)))) false)) :rule trans :premises (t10 t14))
(step t16 (cl (not (= f1 (f3 f4 f5 f6 f7 (f8 f9))))) :rule not_symm :premises (a1))
(step t17 (cl false) :rule resolution :premises (t0 t15 t16))
(step t18 (cl (not false)) :rule false)
(step t19 (cl) :rule resolution :premises (t17 t18))
