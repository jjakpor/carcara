(assume nst708.0 (not (not (= (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))) (and (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))) (=> (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))) (= x63 x64)))))))
(assume nst708.1 (not (not (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))))))
(assume nst708.2 (not (and (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))) (=> (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))) (= x63 x64)))))
(step st708 (cl (not (= (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))) (and (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))) (=> (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))) (= x63 x64))))) (not (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64)))) (and (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))) (=> (or (and (= x63 y63) (= y63 x64)) (and (= x63 z63) (= z63 x64))) (= x63 x64)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst708.0 nst708.1 nst708.2 st708))
