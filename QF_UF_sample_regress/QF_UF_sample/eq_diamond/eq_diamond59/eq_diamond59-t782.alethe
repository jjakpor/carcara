(assume nst782.0 (not (= (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (and (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (=> (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (= x52 x53))))))
(assume t780 (or (not (= (= (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (and (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (=> (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (= x52 x53)))) true)) (= (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (and (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (=> (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (= x52 x53))))))
(assume t781 (= (= (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (and (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (=> (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (= x52 x53)))) true))
(step t780' (cl (not (= (= (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (and (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (=> (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (= x52 x53)))) true)) (= (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (and (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (=> (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (= x52 x53))))) :rule or :premises (t780))
(step st782 (cl (= (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (and (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (=> (or (and (= x52 y52) (= y52 x53)) (and (= x52 z52) (= z52 x53))) (= x52 x53))))) :rule resolution :premises (t780' t781))
(step t.end (cl) :rule resolution :premises (nst782.0 st782))
