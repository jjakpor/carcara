(assume nst404.0 (not (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))))))
(assume nst404.1 (not false))
(assume t403 (or (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) false))
(step t403' (cl (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) false) :rule or :premises (t403))
(step st404 (cl (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) false) :rule contraction :premises (t403'))
(step t.end (cl) :rule resolution :premises (nst404.0 nst404.1 st404))
