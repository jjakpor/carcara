(assume nst288.0 (not (= (f6 c_0) (f5 c_0))))
(assume nst288.1 (not (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0))))))
(assume nst288.2 (not (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0))))))
(assume t285 (or (not (= c_0 (f5 c_0))) (not (= c_0 (f6 c_0))) (= (f6 c_0) (f5 c_0))))
(assume t286 (or (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0)))) (= c_0 (f5 c_0))))
(assume t287 (or (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0)))) (= c_0 (f6 c_0))))
(step t287' (cl (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0)))) (= c_0 (f6 c_0))) :rule or :premises (t287))
(step t285' (cl (not (= c_0 (f5 c_0))) (not (= c_0 (f6 c_0))) (= (f6 c_0) (f5 c_0))) :rule or :premises (t285))
(step t286' (cl (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0)))) (= c_0 (f5 c_0))) :rule or :premises (t286))
(step st288 (cl (= (f6 c_0) (f5 c_0)) (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0)))) (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0))))) :rule resolution :premises (t285' t286' t287'))
(step t.end (cl) :rule resolution :premises (nst288.0 nst288.1 nst288.2 st288))
