(assume nst417.0 (not (not (= c_1 (f5 c_1)))))
(assume nst417.1 (not (not (and (not (= (f6 c_1) (f5 c_1))) (= c_1 (f6 c_1))))))
(assume nst417.2 (not (not (and (not (= (f6 c_1) (f5 c_1))) (= c_1 (f6 c_1))))))
(assume t414 (or (not (not (= (f6 c_1) (f5 c_1)))) (not (= c_1 (f6 c_1))) (not (= c_1 (f5 c_1)))))
(assume t415 (or (not (and (not (= (f6 c_1) (f5 c_1))) (= c_1 (f6 c_1)))) (not (= (f6 c_1) (f5 c_1)))))
(assume t416 (or (not (and (not (= (f6 c_1) (f5 c_1))) (= c_1 (f6 c_1)))) (= c_1 (f6 c_1))))
(step t415' (cl (not (and (not (= (f6 c_1) (f5 c_1))) (= c_1 (f6 c_1)))) (not (= (f6 c_1) (f5 c_1)))) :rule or :premises (t415))
(step t416' (cl (not (and (not (= (f6 c_1) (f5 c_1))) (= c_1 (f6 c_1)))) (= c_1 (f6 c_1))) :rule or :premises (t416))
(step t414' (cl (not (not (= (f6 c_1) (f5 c_1)))) (not (= c_1 (f6 c_1))) (not (= c_1 (f5 c_1)))) :rule or :premises (t414))
(step st417 (cl (not (= c_1 (f5 c_1))) (not (and (not (= (f6 c_1) (f5 c_1))) (= c_1 (f6 c_1)))) (not (and (not (= (f6 c_1) (f5 c_1))) (= c_1 (f6 c_1))))) :rule resolution :premises (t414' t415' t416'))
(step t.end (cl) :rule resolution :premises (nst417.0 nst417.1 nst417.2 st417))
