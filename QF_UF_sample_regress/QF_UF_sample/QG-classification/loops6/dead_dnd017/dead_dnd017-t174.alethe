(assume nst174.0 (not (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0)))))))
(assume nst174.1 (not (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0)))))))
(assume nst174.2 (not (= e3 (op e3 (op e3 e3)))))
(assume t173 (or (= e3 (op e3 (op e3 e3))) (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0))))) (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0)))))))
(step t173' (cl (= e3 (op e3 (op e3 e3))) (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0))))) (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0)))))) :rule or :premises (t173))
(step st174 (cl (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0))))) (not (and (= e3 (op e3 e0)) (= e0 (op e3 (op e3 e0))))) (= e3 (op e3 (op e3 e3)))) :rule reordering :premises (t173'))
(step t.end (cl) :rule resolution :premises (nst174.0 nst174.1 nst174.2 st174))
