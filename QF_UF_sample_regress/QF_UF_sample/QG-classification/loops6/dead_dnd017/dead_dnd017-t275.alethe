(assume nst275.0 (not (not (= e5 (op e5 e0)))))
(assume nst275.1 (not (not (= e0 (op e5 (op e5 e0))))))
(assume nst275.2 (not (= e5 (op e5 (op e5 e5)))))
(assume t262 (or (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0)))) (not (= e5 (op e5 e0))) (not (= e0 (op e5 (op e5 e0))))))
(assume t274 (or (not (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0))))) (= e5 (op e5 (op e5 e5)))))
(step t262' (cl (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0)))) (not (= e5 (op e5 e0))) (not (= e0 (op e5 (op e5 e0))))) :rule or :premises (t262))
(step t274' (cl (not (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0))))) (= e5 (op e5 (op e5 e5)))) :rule or :premises (t274))
(step st275 (cl (not (= e5 (op e5 e0))) (not (= e0 (op e5 (op e5 e0)))) (= e5 (op e5 (op e5 e5)))) :rule resolution :premises (t262' t274'))
(step t.end (cl) :rule resolution :premises (nst275.0 nst275.1 nst275.2 st275))
