(assume nt2.0 (not (not (= e2 (op e2 e0)))))
(assume nt2.1 (not (not (= e0 (op e2 (op e2 e0))))))
(assume nt2.2 (not (= e2 (op e2 (op e2 e2)))))
(anchor :step t2)
(assume t2.a0 (= e2 (op e2 e0)))
(assume t2.a1 (= e0 (op e2 (op e2 e0))))
(step t2.t2 (cl (= e2 e2)) :rule trust)
(step t2.t17 (cl (= e0 (op e2 e2))) :rule trust)
(step st2.t18 (cl (= (op e2 e0) (op e2 (op e2 e2)))) :rule cong :premises (t2.t2 t2.t17))
(step t2.t19 (cl (= e2 (op e2 (op e2 e2)))) :rule trust)
(step t2 (cl (not (= e2 (op e2 e0))) (not (= e0 (op e2 (op e2 e0)))) (= e2 (op e2 (op e2 e2)))) :rule subproof :discharge (t2.a0 t2.a1))
(step t.end (cl) :rule resolution :premises (nt2.0 nt2.1 nt2.2 t2))
