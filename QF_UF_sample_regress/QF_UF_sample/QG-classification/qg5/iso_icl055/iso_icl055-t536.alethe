(assume nst536.0 (not (and (and (and (and (= (op e0 e3) (op e3 e0)) (= (op e1 e3) (op e3 e1))) (= (op e2 e3) (op e3 e2))) (= (op e3 e3) (op e3 e3))) (= (op e4 e3) (op e3 e4)))))
(assume t220 (and (and (and (and (and (and (and (= (op e0 e0) (op e0 e0)) (= (op e1 e0) (op e0 e1))) (= (op e2 e0) (op e0 e2))) (= (op e3 e0) (op e0 e3))) (= (op e4 e0) (op e0 e4))) (and (and (and (and (= (op e0 e1) (op e1 e0)) (= (op e1 e1) (op e1 e1))) (= (op e2 e1) (op e1 e2))) (= (op e3 e1) (op e1 e3))) (= (op e4 e1) (op e1 e4)))) (and (and (and (and (= (op e0 e2) (op e2 e0)) (= (op e1 e2) (op e2 e1))) (= (op e2 e2) (op e2 e2))) (= (op e3 e2) (op e2 e3))) (= (op e4 e2) (op e2 e4)))) (and (and (and (and (= (op e0 e3) (op e3 e0)) (= (op e1 e3) (op e3 e1))) (= (op e2 e3) (op e3 e2))) (= (op e3 e3) (op e3 e3))) (= (op e4 e3) (op e3 e4)))))
(step st536 (cl (and (and (and (and (= (op e0 e3) (op e3 e0)) (= (op e1 e3) (op e3 e1))) (= (op e2 e3) (op e3 e2))) (= (op e3 e3) (op e3 e3))) (= (op e4 e3) (op e3 e4)))) :rule and :premises (t220) :args (1))
(step t.end (cl) :rule resolution :premises (nst536.0 st536))
