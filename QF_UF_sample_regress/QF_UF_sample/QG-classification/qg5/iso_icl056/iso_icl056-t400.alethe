(assume nst400.0 (not (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))))
(assume nst400.1 (not (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))))
(assume nst400.2 (not (= (op e1 (op e1 e1)) (op (op e1 e1) (op e1 e1)))))
(assume nst400.3 (not (= (op e1 (op e1 e1)) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))))))
(assume nst400.4 (not (= (op e1 e1) (op e1 (op e1 e1)))))
(assume t399 (or (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1)))) (= (op e1 (op e1 e1)) (op (op e1 e1) (op e1 e1))) (= (op e1 (op e1 e1)) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 e1) (op e1 (op e1 e1)))))
(step st400 (cl (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1)))) (= (op e1 (op e1 e1)) (op (op e1 e1) (op e1 e1))) (= (op e1 (op e1 e1)) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 e1) (op e1 (op e1 e1)))) :rule or :premises (t399))
(step t.end (cl) :rule resolution :premises (nst400.0 nst400.1 nst400.2 nst400.3 nst400.4 st400))
