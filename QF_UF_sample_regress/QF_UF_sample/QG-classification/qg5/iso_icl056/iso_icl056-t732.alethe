(assume nst732.0 (not (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op e1 e1) (op e1 (op e1 e1)))))))
(assume nst732.1 (not (= (op e1 e1) (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))))
(assume nst732.2 (not (= (op e1 e1) (op (op e1 (op e1 e1)) (op e1 e1)))))
(assume nst732.3 (not (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))))))
(assume nst732.4 (not (= (op e1 e1) (op (op e1 (op e1 e1)) e1))))
(assume t731 (or (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op e1 e1) (op (op e1 (op e1 e1)) (op e1 (op e1 e1)))) (= (op e1 e1) (op (op e1 (op e1 e1)) (op e1 e1))) (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 e1) (op (op e1 (op e1 e1)) e1))))
(step st732 (cl (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op e1 e1) (op (op e1 (op e1 e1)) (op e1 (op e1 e1)))) (= (op e1 e1) (op (op e1 (op e1 e1)) (op e1 e1))) (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 e1) (op (op e1 (op e1 e1)) e1))) :rule or :premises (t731))
(step t.end (cl) :rule resolution :premises (nst732.0 nst732.1 nst732.2 nst732.3 nst732.4 st732))
