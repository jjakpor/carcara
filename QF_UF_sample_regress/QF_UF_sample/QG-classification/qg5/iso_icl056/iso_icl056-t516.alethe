(assume nst516.0 (not (= e1 (op e1 e1))))
(assume nst516.1 (not (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))))
(assume nst516.2 (not (= e1 (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))))))
(assume nst516.3 (not (= e1 (op (op e1 e1) (op e1 e1)))))
(assume nst516.4 (not (= e1 (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))))
(assume t515 (or (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= e1 (op (op e1 (op e1 e1)) (op e1 (op e1 e1)))) (= e1 (op (op e1 e1) (op e1 e1))) (= e1 (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= e1 (op e1 e1))))
(step t515' (cl (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= e1 (op (op e1 (op e1 e1)) (op e1 (op e1 e1)))) (= e1 (op (op e1 e1) (op e1 e1))) (= e1 (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= e1 (op e1 e1))) :rule or :premises (t515))
(step st516 (cl (= e1 (op e1 e1)) (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= e1 (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= e1 (op (op e1 e1) (op e1 e1))) (= e1 (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))) :rule reordering :premises (t515'))
(step t.end (cl) :rule resolution :premises (nst516.0 nst516.1 nst516.2 nst516.3 nst516.4 st516))
