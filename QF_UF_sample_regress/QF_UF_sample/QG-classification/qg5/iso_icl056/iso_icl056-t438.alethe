(assume nst438.0 (not (= (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1))) false)))
(assume nst438.1 (not (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1)))))
(assume t436 (or (= (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1))) false) (not (not (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1)))))))
(assume t437 (or (not (not (not (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1)))))) (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1)))))
(step t436' (cl (= (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1))) false) (not (not (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1)))))) :rule or :premises (t436))
(step t437' (cl (not (not (not (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1)))))) (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1)))) :rule or :premises (t437))
(step st438 (cl (= (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1))) false) (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 e1)))) :rule resolution :premises (t436' t437'))
(step t.end (cl) :rule resolution :premises (nst438.0 nst438.1 st438))
