(assume nst558.0 (not (= e1 (op (op e1 e1) (op e1 e1)))))
(assume t252 (not (= e1 (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))))))
(assume t516 (or (= e1 (op e1 e1)) (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= e1 (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= e1 (op (op e1 e1) (op e1 e1))) (= e1 (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))))
(assume t526 (not (= e1 (op e1 e1))))
(assume t535 (not (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))))
(assume t557 (not (= e1 (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))))
(step t516' (cl (= e1 (op e1 e1)) (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= e1 (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= e1 (op (op e1 e1) (op e1 e1))) (= e1 (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))) :rule or :premises (t516))
(step st558 (cl (= e1 (op (op e1 e1) (op e1 e1)))) :rule resolution :premises (t516' t526 t535 t252 t557))
(step t.end (cl) :rule resolution :premises (nst558.0 st558))
