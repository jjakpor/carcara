(assume nst1239.0 (not (= (op (op (op e1 e3) e1) e3) (op (op (op e1 e3) e3) e3))))
(assume nst1239.1 (not (not (= e1 (op (op (op e1 e3) e1) e3)))))
(assume nst1239.2 (not (not (= (op (op e1 e3) e1) (op e3 (op (op e1 e3) e3))))))
(assume nst1239.3 (not (not (= e1 (op e3 (op (op e1 e3) e3))))))
(assume nst1239.4 (not (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)))))
(assume t1238 (or (= (op (op (op e1 e3) e1) e3) (op (op (op e1 e3) e3) e3)) (not (= e1 (op (op (op e1 e3) e1) e3))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3))) (not (= (op (op e1 e3) e1) (op e3 (op (op e1 e3) e3)))) (not (= e1 (op e3 (op (op e1 e3) e3))))))
(step t1238' (cl (= (op (op (op e1 e3) e1) e3) (op (op (op e1 e3) e3) e3)) (not (= e1 (op (op (op e1 e3) e1) e3))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3))) (not (= (op (op e1 e3) e1) (op e3 (op (op e1 e3) e3)))) (not (= e1 (op e3 (op (op e1 e3) e3))))) :rule or :premises (t1238))
(step st1239 (cl (= (op (op (op e1 e3) e1) e3) (op (op (op e1 e3) e3) e3)) (not (= e1 (op (op (op e1 e3) e1) e3))) (not (= (op (op e1 e3) e1) (op e3 (op (op e1 e3) e3)))) (not (= e1 (op e3 (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)))) :rule reordering :premises (t1238'))
(step t.end (cl) :rule resolution :premises (nst1239.0 nst1239.1 nst1239.2 nst1239.3 nst1239.4 st1239))
