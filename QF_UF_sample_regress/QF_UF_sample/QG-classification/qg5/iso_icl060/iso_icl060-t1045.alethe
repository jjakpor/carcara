(assume nst1045.0 (not (or (not (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1))))) (not (= (op (op e1 e3) e1) (op e3 (op e1 e3)))) (not (= (op e1 e3) (op e3 (op e3 (op e1 e3))))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3))) (not (= e3 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3)))) (not (= e3 (op e1 (op e1 e3)))) (not (= e3 (op (op e1 e3) (op (op e1 e3) e3)))) (not (= (op e1 e3) (op (op e1 e3) (op (op e1 e3) e3)))))))
(assume nst1045.1 (not (not (not (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1))))))))
(step st1045 (cl (or (not (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1))))) (not (= (op (op e1 e3) e1) (op e3 (op e1 e3)))) (not (= (op e1 e3) (op e3 (op e3 (op e1 e3))))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3))) (not (= e3 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3)))) (not (= e3 (op e1 (op e1 e3)))) (not (= e3 (op (op e1 e3) (op (op e1 e3) e3)))) (not (= (op e1 e3) (op (op e1 e3) (op (op e1 e3) e3))))) (not (not (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1))))))) :rule or_neg :args (0))
(step t.end (cl) :rule resolution :premises (nst1045.0 nst1045.1 st1045))
