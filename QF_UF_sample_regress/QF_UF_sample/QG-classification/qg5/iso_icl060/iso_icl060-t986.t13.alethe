(assume nt986.0 (not (not (= (op e1 e3) (op e3 (op e3 (op e1 e3)))))))
(assume nt986.1 (not (not (= (op (op e1 e3) e1) (op e3 (op e1 e3))))))
(assume nt986.2 (not (not (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1)))))))
(assume nt986.3 (not (not (= (op e1 e3) (op (op (op e1 e3) e3) (op (op e1 e3) e1))))))
(anchor :step t986)
(assume t986.a0 (= (op e1 e3) (op e3 (op e3 (op e1 e3)))))
(assume t986.a1 (= (op (op e1 e3) e1) (op e3 (op e1 e3))))
(assume t986.a2 (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1)))))
(step t986.t10 (cl (= (op e1 e3) (op e3 (op e3 (op e1 e3))))) :rule trust)
(step t986.t12 (cl (= (op e3 (op e3 (op e1 e3))) (op e3 (op (op e1 e3) e1)))) :rule trust)
(step st986.t13 (cl (= (op e1 e3) (op e3 (op (op e1 e3) e1)))) :rule trans :premises (t986.t10 t986.t12))
(step t986.t27 (cl (not (= (op e1 e3) (op (op (op e1 e3) e3) (op (op e1 e3) e1))))) :rule trust)
(step t986 (cl (not (= (op e1 e3) (op e3 (op e3 (op e1 e3))))) (not (= (op (op e1 e3) e1) (op e3 (op e1 e3)))) (not (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1))))) (not (= (op e1 e3) (op (op (op e1 e3) e3) (op (op e1 e3) e1))))) :rule subproof :discharge (t986.a0 t986.a1 t986.a2))
(step t.end (cl) :rule resolution :premises (nt986.0 nt986.1 nt986.2 nt986.3 t986))
