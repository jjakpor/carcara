(assume nst486.0 (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3))))
(assume t417 (not (= e3 (op (op (op e1 e3) e3) e3))))
(assume t460 (or (= (op e1 e3) (op (op (op e1 e3) e3) e3)) (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3)) (= e1 (op (op (op e1 e3) e3) e3)) (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)) (= e3 (op (op (op e1 e3) e3) e3))))
(assume t465 (not (= (op e1 e3) (op (op (op e1 e3) e3) e3))))
(assume t470 (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3))))
(assume t485 (not (= e1 (op (op (op e1 e3) e3) e3))))
(step t460' (cl (= (op e1 e3) (op (op (op e1 e3) e3) e3)) (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3)) (= e1 (op (op (op e1 e3) e3) e3)) (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)) (= e3 (op (op (op e1 e3) e3) e3))) :rule or :premises (t460))
(step st486 (cl (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3))) :rule resolution :premises (t460' t465 t470 t485 t417))
(step t.end (cl) :rule resolution :premises (nst486.0 st486))
