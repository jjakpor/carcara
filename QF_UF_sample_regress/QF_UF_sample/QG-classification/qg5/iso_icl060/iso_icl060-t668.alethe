(assume nst668.0 (not (= (op (op (op e1 e3) e1) (op (op e1 e3) e1)) (op (op (op e1 e3) e1) (op e1 e3)))))
(assume nst668.1 (not (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e1))))))
(assume nst668.2 (not (not (= (op e1 e3) (op (op (op e1 e3) e1) (op (op e1 e3) e3))))))
(assume nst668.3 (not (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e3)))))))
(assume nst668.4 (not (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3))))))
(assume nst668.5 (not (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) (op (op e1 e3) e3))))))
(assume t667 (or (= (op (op (op e1 e3) e1) (op (op e1 e3) e1)) (op (op (op e1 e3) e1) (op e1 e3))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e1)))) (not (= (op e1 e3) (op (op (op e1 e3) e1) (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e3))))) (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) (op (op e1 e3) e3))))))
(step st668 (cl (= (op (op (op e1 e3) e1) (op (op e1 e3) e1)) (op (op (op e1 e3) e1) (op e1 e3))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e1)))) (not (= (op e1 e3) (op (op (op e1 e3) e1) (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e3))))) (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) (op (op e1 e3) e3))))) :rule or :premises (t667))
(step t.end (cl) :rule resolution :premises (nst668.0 nst668.1 nst668.2 nst668.3 nst668.4 nst668.5 st668))
