(assume nst557.0 (not (= (op e0 e0) (op e0 (op (op (op e0 e0) e0) e0)))))
(assume nst557.1 (not (= (op e0 e0) (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) e0)))))
(assume nst557.2 (not (= (op e0 e0) (op (op e0 e0) (op (op (op e0 e0) e0) e0)))))
(assume nst557.3 (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)))))
(assume nst557.4 (not (= (op e0 e0) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0)))))
(assume t556 (or (= (op e0 e0) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op e0 e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op e0 (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) e0)))))
(step t556' (cl (= (op e0 e0) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op e0 e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op e0 (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) e0)))) :rule or :premises (t556))
(step st557 (cl (= (op e0 e0) (op e0 (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op e0 e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0)))) :rule reordering :premises (t556'))
(step t.end (cl) :rule resolution :premises (nst557.0 nst557.1 nst557.2 nst557.3 nst557.4 st557))
