(assume nst654.0 (not (= (or (or (or (or (= (op e0 e0) e4) (= (op e1 e1) e4)) (= (op e2 e2) e4)) (= (op e3 e3) e4)) (= (op e4 e4) e4)) (or (= e4 (op e4 e4)) (= e4 (op e3 e3)) (= e4 (op e2 e2)) (= e4 (op e0 e0)) (= e4 (op e1 e1))))))
(assume t649 (= (or (or (or (or (= (op e0 e0) e4) (= (op e1 e1) e4)) (= (op e2 e2) e4)) (= (op e3 e3) e4)) (= (op e4 e4) e4)) (or (= (op e4 e4) e4) (= (op e3 e3) e4) (= (op e2 e2) e4) (= (op e0 e0) e4) (= (op e1 e1) e4))))
(assume t653 (= (or (= (op e4 e4) e4) (= (op e3 e3) e4) (= (op e2 e2) e4) (= (op e0 e0) e4) (= (op e1 e1) e4)) (or (= e4 (op e4 e4)) (= e4 (op e3 e3)) (= e4 (op e2 e2)) (= e4 (op e0 e0)) (= e4 (op e1 e1)))))
(step st654 (cl (= (or (or (or (or (= (op e0 e0) e4) (= (op e1 e1) e4)) (= (op e2 e2) e4)) (= (op e3 e3) e4)) (= (op e4 e4) e4)) (or (= e4 (op e4 e4)) (= e4 (op e3 e3)) (= e4 (op e2 e2)) (= e4 (op e0 e0)) (= e4 (op e1 e1))))) :rule trans :premises (t649 t653))
(step t.end (cl) :rule resolution :premises (nst654.0 st654))
