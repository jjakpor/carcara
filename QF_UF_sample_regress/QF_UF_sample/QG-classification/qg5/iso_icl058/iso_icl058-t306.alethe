(assume nst306.0 (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) e0))))
(assume nst306.1 (not (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) e0))))
(assume nst306.2 (not (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0))))
(assume nst306.3 (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op (op e0 e0) e0) e0) e0))))
(assume nst306.4 (not (= e0 (op (op (op (op e0 e0) e0) e0) e0))))
(assume t305 (or (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) e0)) (= e0 (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op (op e0 e0) e0) e0) e0))))
(step t305' (cl (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) e0)) (= e0 (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op (op e0 e0) e0) e0) e0))) :rule or :premises (t305))
(step st306 (cl (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op (op e0 e0) e0) e0) e0)) (= e0 (op (op (op (op e0 e0) e0) e0) e0))) :rule reordering :premises (t305'))
(step t.end (cl) :rule resolution :premises (nst306.0 nst306.1 nst306.2 nst306.3 nst306.4 st306))
