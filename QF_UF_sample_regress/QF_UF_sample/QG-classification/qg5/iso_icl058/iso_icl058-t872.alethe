(assume nst872.0 (not (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0))))))
(assume t861 (or (not (= (not (= (op e0 e2) (op e4 e2))) (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0)))))) (not (not (= (op e0 e2) (op e4 e2)))) (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0))))))
(assume t863 (= (not (= (op e0 e2) (op e4 e2))) (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0))))))
(assume t871 (not (= (op e0 e2) (op e4 e2))))
(step t861' (cl (not (= (not (= (op e0 e2) (op e4 e2))) (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0)))))) (not (not (= (op e0 e2) (op e4 e2)))) (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0))))) :rule or :premises (t861))
(step st872 (cl (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) (op e0 e0))))) :rule resolution :premises (t861' t863 t871))
(step t.end (cl) :rule resolution :premises (nst872.0 st872))
