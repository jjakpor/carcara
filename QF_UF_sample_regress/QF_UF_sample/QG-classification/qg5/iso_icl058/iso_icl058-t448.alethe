(assume nst448.0 (not (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))))))
(assume t441 (or (not (= (not (= e1 e2)) (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)))))) (not (not (= e1 e2))) (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))))))
(assume t446 (= (not (= e1 e2)) (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))))))
(assume t447 (not (= e1 e2)))
(step t441' (cl (not (= (not (= e1 e2)) (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)))))) (not (not (= e1 e2))) (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))))) :rule or :premises (t441))
(step st448 (cl (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))))) :rule resolution :premises (t441' t446 t447))
(step t.end (cl) :rule resolution :premises (nst448.0 st448))
