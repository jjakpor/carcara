(assume nst380.0 (not (not (= (or (not (= (op e0 e1) e0)) (= (op e1 e0) e0)) (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3))))))))
(assume nst380.1 (not (not (or (not (= (op e0 e1) e0)) (= (op e1 e0) e0)))))
(assume nst380.2 (not (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3))))))
(step st380 (cl (not (= (or (not (= (op e0 e1) e0)) (= (op e1 e0) e0)) (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3)))))) (not (or (not (= (op e0 e1) e0)) (= (op e1 e0) e0))) (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst380.0 nst380.1 nst380.2 st380))
