(assume nst594.0 (not (not (= (= (op (op e2 e1) e2) e1) (= (op (op e3 e3) (op e3 e3)) (op (op (op (op (op e3 e3) (op e3 e3)) e3) (op (op e3 e3) (op e3 e3))) (op (op (op e3 e3) (op e3 e3)) e3)))))))
(assume nst594.1 (not (not (= (op (op e2 e1) e2) e1))))
(assume nst594.2 (not (= (op (op e3 e3) (op e3 e3)) (op (op (op (op (op e3 e3) (op e3 e3)) e3) (op (op e3 e3) (op e3 e3))) (op (op (op e3 e3) (op e3 e3)) e3)))))
(step st594 (cl (not (= (= (op (op e2 e1) e2) e1) (= (op (op e3 e3) (op e3 e3)) (op (op (op (op (op e3 e3) (op e3 e3)) e3) (op (op e3 e3) (op e3 e3))) (op (op (op e3 e3) (op e3 e3)) e3))))) (not (= (op (op e2 e1) e2) e1)) (= (op (op e3 e3) (op e3 e3)) (op (op (op (op (op e3 e3) (op e3 e3)) e3) (op (op e3 e3) (op e3 e3))) (op (op (op e3 e3) (op e3 e3)) e3)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst594.0 nst594.1 nst594.2 st594))
