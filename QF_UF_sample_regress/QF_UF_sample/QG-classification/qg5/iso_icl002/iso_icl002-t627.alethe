(assume nst627.0 (not (not (= (not (= (op e3 e3) (op e4 e3))) (not (= (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0))))))))
(assume nst627.1 (not (not (not (= (op e3 e3) (op e4 e3))))))
(assume nst627.2 (not (not (= (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0))))))
(step st627 (cl (not (= (not (= (op e3 e3) (op e4 e3))) (not (= (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0)))))) (not (not (= (op e3 e3) (op e4 e3)))) (not (= (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0)) (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst627.0 nst627.1 nst627.2 st627))
