(assume nst619.0 (not (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0)))))
(assume t610 (or (not (= (not (= e1 e3)) (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))))) (not (not (= e1 e3))) (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0)))))
(assume t617 (= (not (= e1 e3)) (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0)))))
(assume t618 (not (= e1 e3)))
(step t610' (cl (not (= (not (= e1 e3)) (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))))) (not (not (= e1 e3))) (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0)))) :rule or :premises (t610))
(step st619 (cl (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0)))) :rule resolution :premises (t610' t617 t618))
(step t.end (cl) :rule resolution :premises (nst619.0 st619))
