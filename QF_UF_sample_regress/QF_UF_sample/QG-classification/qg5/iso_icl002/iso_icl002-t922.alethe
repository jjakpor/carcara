(assume nst922.0 (not (= (or (or (or (or (= (op e0 e1) e4) (= (op e1 e1) e4)) (= (op e2 e1) e4)) (= (op e3 e1) e4)) (= (op e4 e1) e4)) (or (= (op e0 e0) (op (op e0 e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op e0 (op e0 (op e0 e0)))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))))
(assume t917 (= (or (or (or (or (= (op e0 e1) e4) (= (op e1 e1) e4)) (= (op e2 e1) e4)) (= (op e3 e1) e4)) (= (op e4 e1) e4)) (or (= e4 (op e4 e1)) (= e4 (op e3 e1)) (= e4 (op e2 e1)) (= e4 (op e0 e1)) (= e4 (op e1 e1)))))
(assume t921 (= (or (= e4 (op e4 e1)) (= e4 (op e3 e1)) (= e4 (op e2 e1)) (= e4 (op e0 e1)) (= e4 (op e1 e1))) (or (= (op e0 e0) (op (op e0 e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op e0 (op e0 (op e0 e0)))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))))
(step st922 (cl (= (or (or (or (or (= (op e0 e1) e4) (= (op e1 e1) e4)) (= (op e2 e1) e4)) (= (op e3 e1) e4)) (= (op e4 e1) e4)) (or (= (op e0 e0) (op (op e0 e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op e0 (op e0 (op e0 e0)))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))) :rule trans :premises (t917 t921))
(step t.end (cl) :rule resolution :premises (nst922.0 st922))
