(assume nst675.0 (not (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 e0))))))
(assume t670 (or (not (= (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 e0)))))) (not (not (= (op e0 e4) (op e1 e4)))) (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 e0))))))
(assume t672 (= (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 e0))))))
(assume t674 (not (= (op e0 e4) (op e1 e4))))
(step t670' (cl (not (= (not (= (op e0 e4) (op e1 e4))) (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 e0)))))) (not (not (= (op e0 e4) (op e1 e4)))) (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 e0))))) :rule or :premises (t670))
(step st675 (cl (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 e0))))) :rule resolution :premises (t670' t672 t674))
(step t.end (cl) :rule resolution :premises (nst675.0 st675))
