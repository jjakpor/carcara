(assume nst508.0 (not (not (= (or (not (= (op e0 e3) e0)) (= (op e3 e3) e3)) (or (not (= e0 (op e0 (op (op (op e0 (op e0 e0)) e0) e0)))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))))))))
(assume nst508.1 (not (not (or (not (= (op e0 e3) e0)) (= (op e3 e3) e3)))))
(assume nst508.2 (not (or (not (= e0 (op e0 (op (op (op e0 (op e0 e0)) e0) e0)))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))))))
(step st508 (cl (not (= (or (not (= (op e0 e3) e0)) (= (op e3 e3) e3)) (or (not (= e0 (op e0 (op (op (op e0 (op e0 e0)) e0) e0)))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0)))))) (not (or (not (= (op e0 e3) e0)) (= (op e3 e3) e3))) (or (not (= e0 (op e0 (op (op (op e0 (op e0 e0)) e0) e0)))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst508.0 nst508.1 nst508.2 st508))
