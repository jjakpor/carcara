(assume nst956.0 (not (= (or (or (or (or (= (op e4 e0) e3) (= (op e4 e1) e3)) (= (op e4 e2) e3)) (= (op e4 e3) e3)) (= (op e4 e4) e3)) (or (= (op (op e0 e0) (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) e0)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op e0 (op e0 e0))))))))
(assume t946 (= (or (or (or (or (= (op e4 e0) e3) (= (op e4 e1) e3)) (= (op e4 e2) e3)) (= (op e4 e3) e3)) (= (op e4 e4) e3)) (or (= e3 (op e4 e4)) (= e3 (op e4 e3)) (= e3 (op e4 e2)) (= e3 (op e4 e0)) (= e3 (op e4 e1)))))
(assume t955 (= (or (= e3 (op e4 e4)) (= e3 (op e4 e3)) (= e3 (op e4 e2)) (= e3 (op e4 e0)) (= e3 (op e4 e1))) (or (= (op (op e0 e0) (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) e0)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op e0 (op e0 e0)))))))
(step st956 (cl (= (or (or (or (or (= (op e4 e0) e3) (= (op e4 e1) e3)) (= (op e4 e2) e3)) (= (op e4 e3) e3)) (= (op e4 e4) e3)) (or (= (op (op e0 e0) (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) e0)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op e0 (op e0 e0))))))) :rule trans :premises (t946 t955))
(step t.end (cl) :rule resolution :premises (nst956.0 st956))
