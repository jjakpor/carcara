(assume nst1015.0 (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0)))))
(assume nst1015.1 (not (= (op e0 (op e0 e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) e0)))))
(assume nst1015.2 (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0)))))
(assume nst1015.3 (not (= (op e0 (op e0 e0)) (op e0 (op (op e0 (op e0 e0)) e0)))))
(assume nst1015.4 (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0)))))
(assume t1014 (or (= (op e0 (op e0 e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 (op e0 e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 (op e0 e0)) (op e0 (op (op e0 (op e0 e0)) e0))) (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0)))))
(step st1015 (cl (= (op e0 (op e0 e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 (op e0 e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 (op e0 e0)) (op e0 (op (op e0 (op e0 e0)) e0))) (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0)))) :rule or :premises (t1014))
(step t.end (cl) :rule resolution :premises (nst1015.0 nst1015.1 nst1015.2 nst1015.3 nst1015.4 st1015))
