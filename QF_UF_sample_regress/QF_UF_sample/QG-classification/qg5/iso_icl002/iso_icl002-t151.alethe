(assume nst151.0 (not (= (or (or (or (or (= (op e1 e0) e4) (= (op e1 e1) e4)) (= (op e1 e2) e4)) (= (op e1 e3) e4)) (= (op e1 e4) e4)) (or (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))))
(assume t145 (= (or (or (or (or (= (op e1 e0) e4) (= (op e1 e1) e4)) (= (op e1 e2) e4)) (= (op e1 e3) e4)) (= (op e1 e4) e4)) (or (= e4 (op e1 e4)) (= e4 (op e1 e3)) (= e4 (op e1 e2)) (= e4 (op e1 e0)) (= e4 (op e1 e1)))))
(assume t150 (= (or (= e4 (op e1 e4)) (= e4 (op e1 e3)) (= e4 (op e1 e2)) (= e4 (op e1 e0)) (= e4 (op e1 e1))) (or (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))))
(step st151 (cl (= (or (or (or (or (= (op e1 e0) e4) (= (op e1 e1) e4)) (= (op e1 e2) e4)) (= (op e1 e3) e4)) (= (op e1 e4) e4)) (or (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))) :rule trans :premises (t145 t150))
(step t.end (cl) :rule resolution :premises (nst151.0 st151))
