(assume nst136.0 (not (not (= e0 (op (op e0 e0) (op e0 e0))))))
(assume nst136.1 (not (not (= (op (op e0 (op e0 e0)) e0) (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0))))))
(assume nst136.2 (not (not (= (op e0 e0) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))))))
(assume nst136.3 (not (not (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op e0 (op e0 e0)))))))
(assume nst136.4 (not (not (= (op e0 (op e0 e0)) (op (op e0 e0) e0)))))
(assume nst136.5 (not (not (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0))))))
(assume nst136.6 (not (not (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))))))
(assume nst136.7 (not (not (= (op e0 (op e0 e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) e0))))))
(assume nst136.8 (not (not (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0)))))))
(assume nst136.9 (not (not (= e0 (op (op (op (op e0 (op e0 e0)) e0) e0) e0)))))
(assume nst136.10 (not (not (= (op e0 e0) (op (op (op e0 (op e0 e0)) e0) (op e0 e0))))))
(assume nst136.11 (not (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) e0))))))
(assume nst136.12 (not (not (= (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))))))
(assume nst136.13 (not (not (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0)))))))
(assume nst136.14 (not (not (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) (op e0 e0))))))
(assume nst136.15 (not (not (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))))))
(assume nst136.16 (not (not (= e0 (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))))))
(assume nst136.17 (not (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))))
(assume nst136.18 (not (not (= e0 (op e0 (op (op (op e0 (op e0 e0)) e0) e0))))))
(assume nst136.19 (not (not (= (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op (op e0 (op e0 e0)) e0))))))
(assume nst136.20 (not (not (= (op (op e0 (op e0 e0)) e0) (op e0 (op e0 (op e0 e0)))))))
(assume t135 (not (and (= e0 (op (op e0 e0) (op e0 e0))) (= (op (op e0 (op e0 e0)) e0) (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op e0 (op e0 e0)))) (= (op e0 (op e0 e0)) (op (op e0 e0) e0)) (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 (op e0 e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0)))) (= e0 (op (op (op (op e0 (op e0 e0)) e0) e0) e0)) (= (op e0 e0) (op (op (op e0 (op e0 e0)) e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0)))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= e0 (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))) (= e0 (op e0 (op (op (op e0 (op e0 e0)) e0) e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op (op e0 (op e0 e0)) e0))) (= (op (op e0 (op e0 e0)) e0) (op e0 (op e0 (op e0 e0)))))))
(step st136 (cl (not (= e0 (op (op e0 e0) (op e0 e0)))) (not (= (op (op e0 (op e0 e0)) e0) (op (op e0 e0) (op (op (op e0 (op e0 e0)) e0) e0)))) (not (= (op e0 e0) (op (op e0 e0) (op (op e0 (op e0 e0)) e0)))) (not (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op e0 (op e0 e0))))) (not (= (op e0 (op e0 e0)) (op (op e0 e0) e0))) (not (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0)))) (not (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0)))) (not (= (op e0 (op e0 e0)) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) e0)))) (not (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0))))) (not (= e0 (op (op (op (op e0 (op e0 e0)) e0) e0) e0))) (not (= (op e0 e0) (op (op (op e0 (op e0 e0)) e0) (op e0 e0)))) (not (= (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) e0)))) (not (= (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0)))) (not (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0))))) (not (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) (op e0 e0)))) (not (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0)))) (not (= e0 (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0)))) (not (= (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))) (not (= e0 (op e0 (op (op (op e0 (op e0 e0)) e0) e0)))) (not (= (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op (op e0 (op e0 e0)) e0)))) (not (= (op (op e0 (op e0 e0)) e0) (op e0 (op e0 (op e0 e0)))))) :rule not_and :premises (t135))
(step t.end (cl) :rule resolution :premises (nst136.0 nst136.1 nst136.2 nst136.3 nst136.4 nst136.5 nst136.6 nst136.7 nst136.8 nst136.9 nst136.10 nst136.11 nst136.12 nst136.13 nst136.14 nst136.15 nst136.16 nst136.17 nst136.18 nst136.19 nst136.20 st136))
