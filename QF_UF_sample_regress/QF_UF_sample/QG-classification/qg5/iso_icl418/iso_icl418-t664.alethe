(assume nst664.0 (not (not (= (or (or (or (or (= (op e3 e0) e1) (= (op e3 e1) e1)) (= (op e3 e2) e1)) (= (op e3 e3) e1)) (= (op e3 e4) e1)) (or (= (op e3 e4) (op e4 e3)) (= (op e3 e3) (op e4 e3)) (= (op e4 e3) (op e3 (op e3 e4))) (= (op e4 e3) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e4 e3) (op e3 (op e4 e3))))))))
(assume nst664.1 (not (not (or (or (or (or (= (op e3 e0) e1) (= (op e3 e1) e1)) (= (op e3 e2) e1)) (= (op e3 e3) e1)) (= (op e3 e4) e1)))))
(assume nst664.2 (not (or (= (op e3 e4) (op e4 e3)) (= (op e3 e3) (op e4 e3)) (= (op e4 e3) (op e3 (op e3 e4))) (= (op e4 e3) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e4 e3) (op e3 (op e4 e3))))))
(step st664 (cl (not (= (or (or (or (or (= (op e3 e0) e1) (= (op e3 e1) e1)) (= (op e3 e2) e1)) (= (op e3 e3) e1)) (= (op e3 e4) e1)) (or (= (op e3 e4) (op e4 e3)) (= (op e3 e3) (op e4 e3)) (= (op e4 e3) (op e3 (op e3 e4))) (= (op e4 e3) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e4 e3) (op e3 (op e4 e3)))))) (not (or (or (or (or (= (op e3 e0) e1) (= (op e3 e1) e1)) (= (op e3 e2) e1)) (= (op e3 e3) e1)) (= (op e3 e4) e1))) (or (= (op e3 e4) (op e4 e3)) (= (op e3 e3) (op e4 e3)) (= (op e4 e3) (op e3 (op e3 e4))) (= (op e4 e3) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e4 e3) (op e3 (op e4 e3))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst664.0 nst664.1 nst664.2 st664))
