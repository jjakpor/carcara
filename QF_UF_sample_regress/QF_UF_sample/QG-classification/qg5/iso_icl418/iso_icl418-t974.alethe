(assume nst974.0 (not (= (and (= (op (op e4 e3) e4) (op e4 (op e4 e3))) (= (op (op e4 e3) e3) (op e3 (op e4 e3))) (= (op (op e4 e3) (op e3 e4)) (op (op e3 e4) (op e4 e3))) (= (op (op (op e4 e3) (op e4 e3)) (op e4 e3)) (op (op e4 e3) (op (op e4 e3) (op e4 e3))))) (and (= (op (op e4 e3) e4) (op e4 (op e4 e3))) (= (op e3 (op e4 e3)) (op (op e4 e3) e3)) (= (op (op e3 e4) (op e4 e3)) (op (op e4 e3) (op e3 e4))) (= (op (op e4 e3) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) (op e4 e3)))))))
(assume t963 (= (= (op (op e4 e3) e4) (op e4 (op e4 e3))) (= (op (op e4 e3) e4) (op e4 (op e4 e3)))))
(assume t967 (= (= (op (op e4 e3) e3) (op e3 (op e4 e3))) (= (op e3 (op e4 e3)) (op (op e4 e3) e3))))
(assume t970 (= (= (op (op e4 e3) (op e3 e4)) (op (op e3 e4) (op e4 e3))) (= (op (op e3 e4) (op e4 e3)) (op (op e4 e3) (op e3 e4)))))
(assume t972 (= (= (op (op (op e4 e3) (op e4 e3)) (op e4 e3)) (op (op e4 e3) (op (op e4 e3) (op e4 e3)))) (= (op (op e4 e3) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) (op e4 e3)))))
(step st974 (cl (= (and (= (op (op e4 e3) e4) (op e4 (op e4 e3))) (= (op (op e4 e3) e3) (op e3 (op e4 e3))) (= (op (op e4 e3) (op e3 e4)) (op (op e3 e4) (op e4 e3))) (= (op (op (op e4 e3) (op e4 e3)) (op e4 e3)) (op (op e4 e3) (op (op e4 e3) (op e4 e3))))) (and (= (op (op e4 e3) e4) (op e4 (op e4 e3))) (= (op e3 (op e4 e3)) (op (op e4 e3) e3)) (= (op (op e3 e4) (op e4 e3)) (op (op e4 e3) (op e3 e4))) (= (op (op e4 e3) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) (op e4 e3)))))) :rule cong :premises (t963 t967 t970 t972))
(step t.end (cl) :rule resolution :premises (nst974.0 st974))
