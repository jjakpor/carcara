(assume nst583.0 (not (= (or (or (or (or (= (op e0 e0) e2) (= (op e1 e0) e2)) (= (op e2 e0) e2)) (= (op e3 e0) e2)) (= (op e4 e0) e2)) (or (= (op e3 e4) (op e4 (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op e3 e4) (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op e4 e3) (op (op e4 e3) (op e4 e3))))))))
(assume t578 (= (or (or (or (or (= (op e0 e0) e2) (= (op e1 e0) e2)) (= (op e2 e0) e2)) (= (op e3 e0) e2)) (= (op e4 e0) e2)) (or (= e2 (op e4 e0)) (= e2 (op e3 e0)) (= e2 (op e2 e0)) (= e2 (op e0 e0)) (= e2 (op e1 e0)))))
(assume t582 (= (or (= e2 (op e4 e0)) (= e2 (op e3 e0)) (= e2 (op e2 e0)) (= e2 (op e0 e0)) (= e2 (op e1 e0))) (or (= (op e3 e4) (op e4 (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op e3 e4) (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op e4 e3) (op (op e4 e3) (op e4 e3)))))))
(step st583 (cl (= (or (or (or (or (= (op e0 e0) e2) (= (op e1 e0) e2)) (= (op e2 e0) e2)) (= (op e3 e0) e2)) (= (op e4 e0) e2)) (or (= (op e3 e4) (op e4 (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op e3 e4) (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op e4 e3) (op (op e4 e3) (op e4 e3))))))) :rule trans :premises (t578 t582))
(step t.end (cl) :rule resolution :premises (nst583.0 st583))
