(assume nst273.0 (not (= (op e4 e3) (op (op e4 e3) e3))))
(assume nst273.1 (not (= (op (op e4 e3) (op e4 e3)) (op (op e4 e3) e3))))
(assume nst273.2 (not (= (op e3 e4) (op (op e4 e3) e3))))
(assume nst273.3 (not (= e3 (op (op e4 e3) e3))))
(assume nst273.4 (not (= e4 (op (op e4 e3) e3))))
(assume t272 (or (= e4 (op (op e4 e3) e3)) (= e3 (op (op e4 e3) e3)) (= (op e3 e4) (op (op e4 e3) e3)) (= (op (op e4 e3) (op e4 e3)) (op (op e4 e3) e3)) (= (op e4 e3) (op (op e4 e3) e3))))
(step t272' (cl (= e4 (op (op e4 e3) e3)) (= e3 (op (op e4 e3) e3)) (= (op e3 e4) (op (op e4 e3) e3)) (= (op (op e4 e3) (op e4 e3)) (op (op e4 e3) e3)) (= (op e4 e3) (op (op e4 e3) e3))) :rule or :premises (t272))
(step st273 (cl (= (op e4 e3) (op (op e4 e3) e3)) (= (op (op e4 e3) (op e4 e3)) (op (op e4 e3) e3)) (= (op e3 e4) (op (op e4 e3) e3)) (= e3 (op (op e4 e3) e3)) (= e4 (op (op e4 e3) e3))) :rule reordering :premises (t272'))
(step t.end (cl) :rule resolution :premises (nst273.0 nst273.1 nst273.2 nst273.3 nst273.4 st273))
