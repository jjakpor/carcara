(assume nst901.0 (not (= (op e0 e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op e0 e0) e0)))))
(assume nst901.1 (not (= (op e0 e0) (op (op (op e0 e0) e0) (op (op e0 e0) e0)))))
(assume nst901.2 (not (= (op e0 e0) (op (op e0 e0) (op (op e0 e0) e0)))))
(assume nst901.3 (not (= (op e0 e0) (op e0 (op (op e0 e0) e0)))))
(assume nst901.4 (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)))))
(assume t900 (or (= (op e0 e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op e0 e0) e0))) (= (op e0 e0) (op (op (op e0 e0) e0) (op (op e0 e0) e0))) (= (op e0 e0) (op (op e0 e0) (op (op e0 e0) e0))) (= (op e0 e0) (op e0 (op (op e0 e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)))))
(step st901 (cl (= (op e0 e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op e0 e0) e0))) (= (op e0 e0) (op (op (op e0 e0) e0) (op (op e0 e0) e0))) (= (op e0 e0) (op (op e0 e0) (op (op e0 e0) e0))) (= (op e0 e0) (op e0 (op (op e0 e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)))) :rule or :premises (t900))
(step t.end (cl) :rule resolution :premises (nst901.0 nst901.1 nst901.2 nst901.3 nst901.4 st901))
