(assume nst689.0 (not (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))))))
(assume t676 (or (not (= (not (= (op e0 e2) (op e2 e2))) (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))))) (not (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))))))
(assume t678 (= (not (= (op e0 e2) (op e2 e2))) (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))))))
(assume t688 (not (= (op e0 e2) (op e2 e2))))
(step t676' (cl (not (= (not (= (op e0 e2) (op e2 e2))) (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))))) (not (not (= (op e0 e2) (op e2 e2)))) (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))))) :rule or :premises (t676))
(step st689 (cl (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))))) :rule resolution :premises (t676' t678 t688))
(step t.end (cl) :rule resolution :premises (nst689.0 st689))
