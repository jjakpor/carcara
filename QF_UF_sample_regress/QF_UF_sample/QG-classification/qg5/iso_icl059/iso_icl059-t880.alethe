(assume nst880.0 (not (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0)))))
(assume t160 (or (= (op (op e0 e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0)))))
(assume t177 (not (= (op (op e0 e0) e0) (op (op e0 e0) (op e0 e0)))))
(assume t409 (not (= (op e0 (op e0 e0)) (op (op e0 e0) e0))))
(assume t605 (not (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) (op e0 e0)))))
(assume t879 (not (= (op (op e0 e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0)))))
(step t160' (cl (= (op (op e0 e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0)))) :rule or :premises (t160))
(step st880 (cl (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0)))) :rule resolution :premises (t160' t177 t409 t605 t879))
(step t.end (cl) :rule resolution :premises (nst880.0 st880))
