unsat
(assume a0 circuit)
(assume a1 rd2)
(assume a2 (not grn))
(assume a3 (=> org (and (not rd1) (not rd2))))
(assume a4 (=> rd1 (not rd2)))
(assume a5 (not (not org)))
(step t0 (cl (not org) (and (not rd1) (not rd2))) :rule implies :premises (a3))
(step t1 (cl (not (= (not (not org)) org)) (not (not (not org))) org) :rule equiv_pos2)
(step t2 (cl (= (not (not org)) org)) :rule rare_rewrite :args ("bool-double-not-elim" org))
(step t3 (cl org) :rule resolution :premises (t1 t2 a5))
(step t4 (cl (and (not rd1) (not rd2))) :rule resolution :premises (t0 t3))
(step t5 (cl (not (and (not rd1) (not rd2))) (not rd2)) :rule and_pos :args (1))
(step t6 (cl (not (and (not rd1) (not rd2)))) :rule resolution :premises (t5 a1))
(step t7 (cl) :rule resolution :premises (t4 t6))
