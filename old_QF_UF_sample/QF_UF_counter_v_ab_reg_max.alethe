unsat
(assume a0 (not (= y$n1s4 y$n15s4)))
(assume a1 (= y$2 (= y$n1s4 y$X)))
(assume a2 (= (= y$n15s4 y$X) y$6))
(assume a3 (= y$s$1_op (Add_4_4_4 y$X y$n1s4)))
(assume a4 (= y$s$4_op (ite y$6 y$n1s4 y$s$1_op)))
(assume a5 (= y$X$next_rhs_op (ite y$en y$s$4_op y$X)))
(assume a6 (= y$13 (= y$X$next y$X$next_rhs_op)))
(assume a7 (= y$27 (not (= y$n15s4 y$X$next))))
(assume a8 (= y$28 (= y$prop$next y$27)))
(assume a9 (= y$prop$next (not y$26)))
(assume a10 (= y$34 (= y$n1s4 y$X$next)))
(assume a11 (= y$s$1$next_op (Add_4_4_4 y$X$next y$n1s4)))
(assume a12 (= y$37 (= y$n15s4 y$s$1$next_op)))
(assume a13 (= y$43 (and y$34 y$37)))
(assume a14 (= y$43 (not y$45)))
(assume a15 (= y$33 (= y$n15s4 y$s$1_op)))
(assume a16 (= y$42 (and y$2 y$33)))
(assume a17 (= y$42 (not y$44)))
(assume a18 (= y$58 (and y$2 y$13 y$28 y$26 y$45 y$44)))
(assume a19 y$58)
(assume a20 (cl y$2 y$13 y$28 y$26 y$45 y$44))
(step t0 (cl (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (not (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule and_neg)
(step t1 (cl (=> (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 y$n1s4)) (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule implies_neg1)
(anchor :step t2)
(assume t2.a0 (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))
(assume t2.a1 (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))
(step t2.t0 (cl (not (= y$58 (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (not y$58) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule equiv_pos2)
(step t2.t1 (cl (not (= (= y$58 (and y$2 y$13 y$28 y$26 y$45 y$44)) (= y$58 (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44)))) (not (= y$58 (and y$2 y$13 y$28 y$26 y$45 y$44))) (= y$58 (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44))) :rule equiv_pos2)
(step t2.t2 (cl (= y$58 y$58)) :rule refl)
(step t2.t3 (cl (not (= (= y$2 (= y$n1s4 y$X)) (= y$2 (= y$X y$n1s4)))) (not (= y$2 (= y$n1s4 y$X))) (= y$2 (= y$X y$n1s4))) :rule equiv_pos2)
(step t2.t4 (cl (= y$2 y$2)) :rule refl)
(step t2.t5 (cl (= (= y$n1s4 y$X) (= y$X y$n1s4))) :rule rare_rewrite :args ("eq-symm" y$n1s4 y$X))
(step t2.t6 (cl (= (= y$2 (= y$n1s4 y$X)) (= y$2 (= y$X y$n1s4)))) :rule cong :premises (t2.t4 t2.t5))
(step t2.t7 (cl (= y$2 (= y$X y$n1s4))) :rule resolution :premises (t2.t3 t2.t6 a1))
(step t2.t8 (cl (not (= (= y$13 (= y$X$next y$X$next_rhs_op)) (= y$13 (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X))))) (not (= y$13 (= y$X$next y$X$next_rhs_op))) (= y$13 (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)))) :rule equiv_pos2)
(step t2.t9 (cl (= y$13 y$13)) :rule refl)
(step t2.t10 (cl (= y$X$next y$X$next)) :rule refl)
(step t2.t11 (cl (not (= (= y$X$next_rhs_op (ite y$en y$s$4_op y$X)) (= y$X$next_rhs_op (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)))) (not (= y$X$next_rhs_op (ite y$en y$s$4_op y$X))) (= y$X$next_rhs_op (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X))) :rule equiv_pos2)
(step t2.t12 (cl (= y$X$next_rhs_op y$X$next_rhs_op)) :rule refl)
(step t2.t13 (cl (= y$en y$en)) :rule refl)
(step t2.t14 (cl (not (= (= y$s$4_op (ite y$6 y$n1s4 y$s$1_op)) (= y$s$4_op (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4))))) (not (= y$s$4_op (ite y$6 y$n1s4 y$s$1_op))) (= y$s$4_op (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)))) :rule equiv_pos2)
(step t2.t15 (cl (= y$s$4_op y$s$4_op)) :rule refl)
(step t2.t16 (cl (not (= (= (= y$n15s4 y$X) y$6) (= y$6 (= y$X y$n15s4)))) (not (= (= y$n15s4 y$X) y$6)) (= y$6 (= y$X y$n15s4))) :rule equiv_pos2)
(step t2.t17 (cl (= (= (= y$n15s4 y$X) y$6) (= y$6 (= y$n15s4 y$X)))) :rule rare_rewrite :args ("eq-symm" (= y$n15s4 y$X) y$6))
(step t2.t18 (cl (= y$6 y$6)) :rule refl)
(step t2.t19 (cl (= (= y$n15s4 y$X) (= y$X y$n15s4))) :rule rare_rewrite :args ("eq-symm" y$n15s4 y$X))
(step t2.t20 (cl (= (= y$6 (= y$n15s4 y$X)) (= y$6 (= y$X y$n15s4)))) :rule cong :premises (t2.t18 t2.t19))
(step t2.t21 (cl (= (= (= y$n15s4 y$X) y$6) (= y$6 (= y$X y$n15s4)))) :rule trans :premises (t2.t17 t2.t20))
(step t2.t22 (cl (= y$6 (= y$X y$n15s4))) :rule resolution :premises (t2.t16 t2.t21 a2))
(step t2.t23 (cl (= y$n1s4 y$n1s4)) :rule refl)
(step t2.t24 (cl (= (ite y$6 y$n1s4 y$s$1_op) (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)))) :rule cong :premises (t2.t22 t2.t23 a3))
(step t2.t25 (cl (= (= y$s$4_op (ite y$6 y$n1s4 y$s$1_op)) (= y$s$4_op (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4))))) :rule cong :premises (t2.t15 t2.t24))
(step t2.t26 (cl (= y$s$4_op (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)))) :rule resolution :premises (t2.t14 t2.t25 a4))
(step t2.t27 (cl (= y$X y$X)) :rule refl)
(step t2.t28 (cl (= (ite y$en y$s$4_op y$X) (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X))) :rule cong :premises (t2.t13 t2.t26 t2.t27))
(step t2.t29 (cl (= (= y$X$next_rhs_op (ite y$en y$s$4_op y$X)) (= y$X$next_rhs_op (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)))) :rule cong :premises (t2.t12 t2.t28))
(step t2.t30 (cl (= y$X$next_rhs_op (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X))) :rule resolution :premises (t2.t11 t2.t29 a5))
(step t2.t31 (cl (= (= y$X$next y$X$next_rhs_op) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)))) :rule cong :premises (t2.t10 t2.t30))
(step t2.t32 (cl (= (= y$13 (= y$X$next y$X$next_rhs_op)) (= y$13 (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X))))) :rule cong :premises (t2.t9 t2.t31))
(step t2.t33 (cl (= y$13 (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)))) :rule resolution :premises (t2.t8 t2.t32 a6))
(step t2.t34 (cl (not (= (= y$28 (= y$27 y$prop$next)) (= y$28 (= y$prop$next (not (= y$X$next y$n15s4)))))) (not (= y$28 (= y$27 y$prop$next))) (= y$28 (= y$prop$next (not (= y$X$next y$n15s4))))) :rule equiv_pos2)
(step t2.t35 (cl (= y$28 y$28)) :rule refl)
(step t2.t36 (cl (not (= (= y$27 (not (= y$n15s4 y$X$next))) (= y$27 (not (= y$X$next y$n15s4))))) (not (= y$27 (not (= y$n15s4 y$X$next)))) (= y$27 (not (= y$X$next y$n15s4)))) :rule equiv_pos2)
(step t2.t37 (cl (= y$27 y$27)) :rule refl)
(step t2.t38 (cl (= (= y$n15s4 y$X$next) (= y$X$next y$n15s4))) :rule rare_rewrite :args ("eq-symm" y$n15s4 y$X$next))
(step t2.t39 (cl (= (not (= y$n15s4 y$X$next)) (not (= y$X$next y$n15s4)))) :rule cong :premises (t2.t38))
(step t2.t40 (cl (= (= y$27 (not (= y$n15s4 y$X$next))) (= y$27 (not (= y$X$next y$n15s4))))) :rule cong :premises (t2.t37 t2.t39))
(step t2.t41 (cl (= y$27 (not (= y$X$next y$n15s4)))) :rule resolution :premises (t2.t36 t2.t40 a7))
(step t2.t42 (cl (= y$prop$next y$prop$next)) :rule refl)
(step t2.t43 (cl (= (= y$27 y$prop$next) (= (not (= y$X$next y$n15s4)) y$prop$next))) :rule cong :premises (t2.t41 t2.t42))
(step t2.t44 (cl (= (= y$28 (= y$27 y$prop$next)) (= y$28 (= (not (= y$X$next y$n15s4)) y$prop$next)))) :rule cong :premises (t2.t35 t2.t43))
(step t2.t45 (cl (= (= (not (= y$X$next y$n15s4)) y$prop$next) (= y$prop$next (not (= y$X$next y$n15s4))))) :rule rare_rewrite :args ("eq-symm" (not (= y$X$next y$n15s4)) y$prop$next))
(step t2.t46 (cl (= (= y$28 (= (not (= y$X$next y$n15s4)) y$prop$next)) (= y$28 (= y$prop$next (not (= y$X$next y$n15s4)))))) :rule cong :premises (t2.t35 t2.t45))
(step t2.t47 (cl (= (= y$28 (= y$27 y$prop$next)) (= y$28 (= y$prop$next (not (= y$X$next y$n15s4)))))) :rule trans :premises (t2.t44 t2.t46))
(step t2.t48 (cl (not (= (= y$28 (= y$prop$next y$27)) (= y$28 (= y$27 y$prop$next)))) (not (= y$28 (= y$prop$next y$27))) (= y$28 (= y$27 y$prop$next))) :rule equiv_pos2)
(step t2.t49 (cl (= (= y$prop$next y$27) (= y$27 y$prop$next))) :rule rare_rewrite :args ("eq-symm" y$prop$next y$27))
(step t2.t50 (cl (= (= y$28 (= y$prop$next y$27)) (= y$28 (= y$27 y$prop$next)))) :rule cong :premises (t2.t35 t2.t49))
(step t2.t51 (cl (= y$28 (= y$27 y$prop$next))) :rule resolution :premises (t2.t48 t2.t50 a8))
(step t2.t52 (cl (= y$28 (= y$prop$next (not (= y$X$next y$n15s4))))) :rule resolution :premises (t2.t34 t2.t47 t2.t51))
(step t2.t53 (cl (= (not (= y$X$next y$n15s4)) (not (= y$X$next y$n15s4)))) :rule refl)
(step t2.t54 (cl (= (= y$prop$next (not (= y$X$next y$n15s4))) (= (not y$26) (not (= y$X$next y$n15s4))))) :rule cong :premises (a9 t2.t53))
(step t2.t55 (cl (= y$28 (= (not y$26) (not (= y$X$next y$n15s4))))) :rule trans :premises (t2.t52 t2.t54))
(step t2.t56 (cl (= y$26 y$26)) :rule refl)
(step t2.t57 (cl (= y$45 y$45)) :rule refl)
(step t2.t58 (cl (= y$44 y$44)) :rule refl)
(step t2.t59 (cl (= (and y$2 y$13 y$28 y$26 y$45 y$44) (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44))) :rule cong :premises (t2.t7 t2.t33 t2.t55 t2.t56 t2.t57 t2.t58))
(step t2.t60 (cl (= (= y$58 (and y$2 y$13 y$28 y$26 y$45 y$44)) (= y$58 (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44)))) :rule cong :premises (t2.t2 t2.t59))
(step t2.t61 (cl (= y$58 (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44))) :rule resolution :premises (t2.t1 t2.t60 a18))
(step t2.t62 (cl (not (= y$2 (= y$X y$n1s4))) (not y$2) (= y$X y$n1s4)) :rule equiv_pos2)
(step t2.t63 (cl (not (= y$58 (and y$2 y$13 y$28 y$26 y$45 y$44))) (not y$58) (and y$2 y$13 y$28 y$26 y$45 y$44)) :rule equiv_pos2)
(step t2.t64 (cl (and y$2 y$13 y$28 y$26 y$45 y$44)) :rule resolution :premises (t2.t63 a18 a19))
(step t2.t65 (cl y$2) :rule and :premises (t2.t64) :args (0))
(step t2.t66 (cl (= y$X y$n1s4)) :rule resolution :premises (t2.t62 t2.t7 t2.t65))
(step t2.t67 (cl (= (= y$X y$n1s4) (= y$n1s4 y$n1s4))) :rule cong :premises (t2.t66 t2.t23))
(step t2.t68 (cl (not (= y$13 (= y$X$next (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (not y$13) (= y$X$next (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule equiv_pos2)
(step t2.t69 (cl (= y$n15s4 y$n15s4)) :rule refl)
(step t2.t70 (cl (= (= y$X y$n15s4) (= y$n1s4 y$n15s4))) :rule cong :premises (t2.t66 t2.t69))
(step t2.t71 (cl (= (Add_4_4_4 y$X y$n1s4) (Add_4_4_4 y$n1s4 y$n1s4))) :rule cong :premises (t2.t66 t2.t23))
(step t2.t72 (cl (= (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule cong :premises (t2.t70 t2.t23 t2.t71))
(step t2.t73 (cl (= (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule cong :premises (t2.t13 t2.t72 t2.t66))
(step t2.t74 (cl (= (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= y$X$next (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t2.t10 t2.t73))
(step t2.t75 (cl (= y$13 (= y$X$next (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t2.t33 t2.t74))
(step t2.t76 (cl (= (= y$n1s4 y$n15s4) (= y$n15s4 y$n1s4))) :rule rare_rewrite :args ("eq-symm" y$n1s4 y$n15s4))
(step t2.t77 (cl (= (Add_4_4_4 y$n1s4 y$n1s4) (Add_4_4_4 y$n1s4 y$n1s4))) :rule refl)
(step t2.t78 (cl (= (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule cong :premises (t2.t76 t2.t23 t2.t77))
(step t2.t79 (cl (= (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule cong :premises (t2.t13 t2.t78 t2.t23))
(step t2.t80 (cl (= (= y$X$next (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$X$next (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t2.t10 t2.t79))
(step t2.t81 (cl (= y$13 (= y$X$next (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t2.t75 t2.t80))
(step t2.t82 (cl y$13) :rule and :premises (t2.t64) :args (1))
(step t2.t83 (cl (= y$X$next (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule resolution :premises (t2.t68 t2.t81 t2.t82))
(step t2.t84 (cl (= (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t2.t83 t2.t73))
(step t2.t85 (cl (not (= y$26 (= y$26 true))) (not y$26) (= y$26 true)) :rule equiv_pos2)
(step t2.t86 (cl (= (= y$26 true) y$26)) :rule rare_rewrite :args ("bool-eq-true" y$26))
(step t2.t87 (cl (= y$26 (= y$26 true))) :rule symm :premises (t2.t86))
(step t2.t88 (cl y$26) :rule and :premises (t2.t64) :args (3))
(step t2.t89 (cl (= y$26 true)) :rule resolution :premises (t2.t85 t2.t87 t2.t88))
(step t2.t90 (cl (= (not y$26) (not true))) :rule cong :premises (t2.t89))
(step t2.t91 (cl (= (= y$X$next y$n15s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) :rule cong :premises (t2.t83 t2.t69))
(step t2.t92 (cl (= (not (= y$X$next y$n15s4)) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)))) :rule cong :premises (t2.t91))
(step t2.t93 (cl (= (= (not y$26) (not (= y$X$next y$n15s4))) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))))) :rule cong :premises (t2.t90 t2.t92))
(step t2.t94 (cl (not (= y$45 (= y$45 true))) (not y$45) (= y$45 true)) :rule equiv_pos2)
(step t2.t95 (cl (= (= y$45 true) y$45)) :rule rare_rewrite :args ("bool-eq-true" y$45))
(step t2.t96 (cl (= y$45 (= y$45 true))) :rule symm :premises (t2.t95))
(step t2.t97 (cl y$45) :rule and :premises (t2.t64) :args (4))
(step t2.t98 (cl (= y$45 true)) :rule resolution :premises (t2.t94 t2.t96 t2.t97))
(step t2.t99 (cl (not (= y$44 (= y$44 true))) (not y$44) (= y$44 true)) :rule equiv_pos2)
(step t2.t100 (cl (= (= y$44 true) y$44)) :rule rare_rewrite :args ("bool-eq-true" y$44))
(step t2.t101 (cl (= y$44 (= y$44 true))) :rule symm :premises (t2.t100))
(step t2.t102 (cl y$44) :rule and :premises (t2.t64) :args (5))
(step t2.t103 (cl (= y$44 true)) :rule resolution :premises (t2.t99 t2.t101 t2.t102))
(step t2.t104 (cl (= (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44) (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) true true true))) :rule cong :premises (t2.t67 t2.t84 t2.t93 t2.t89 t2.t98 t2.t103))
(step t2.t105 (cl (= y$58 (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) true true true))) :rule trans :premises (t2.t61 t2.t104))
(step t2.t106 (cl (= (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) true true true) (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)))))) :rule hole :args ("ACI_NORM" (= (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) true true true) (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)))))))
(step t2.t107 (cl (= (= y$n1s4 y$n1s4) true)) :rule rare_rewrite :args ("eq-refl" y$n1s4))
(step t2.t108 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule refl)
(step t2.t109 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t2.t108 t2.t79))
(step t2.t110 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) true)) :rule rare_rewrite :args ("eq-refl" (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))
(step t2.t111 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) true)) :rule trans :premises (t2.t109 t2.t110))
(step t2.t112 (cl (= (not true) false)) :rule rare_rewrite :args ("evaluate"))
(step t2.t113 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule rare_rewrite :args ("eq-symm" (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))
(step t2.t114 (cl (= (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)) (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule cong :premises (t2.t113))
(step t2.t115 (cl (= (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) (= false (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))))) :rule cong :premises (t2.t112 t2.t114))
(step t2.t116 (cl (= (= false (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) false))) :rule rare_rewrite :args ("eq-symm" false (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))))
(step t2.t117 (cl (= (= (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) false) (not (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))))) :rule rare_rewrite :args ("bool-eq-false" (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))))
(step t2.t118 (cl (= (not (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule rare_rewrite :args ("bool-double-not-elim" (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))
(step t2.t119 (cl (= (= (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) false) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t2.t117 t2.t118))
(step t2.t120 (cl (= (= false (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t2.t116 t2.t119))
(step t2.t121 (cl (= (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t2.t115 t2.t120))
(step t2.t122 (cl (= (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)))) (and true true (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule cong :premises (t2.t107 t2.t111 t2.t121))
(step t2.t123 (cl (= (and true true (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule hole :args ("ACI_NORM" (= (and true true (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))))
(step t2.t124 (cl (= (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t2.t122 t2.t123))
(step t2.t125 (cl (= (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) true true true) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t2.t106 t2.t124))
(step t2.t126 (cl (= y$58 (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t2.t105 t2.t125))
(step t2.t127 (cl (= (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) true) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule equiv_simplify)
(step t2.t128 (cl (not (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) true)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule equiv1 :premises (t2.t127))
(step t2.t129 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule refl)
(step t2.t130 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule refl)
(step t2.t131 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t2.t108 t2.t130))
(step t2.t132 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) true)) :rule trans :premises (t2.t129 t2.t131 t2.t110))
(step t2.t133 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule resolution :premises (t2.t128 t2.t132))
(step t2.t134 (cl (= (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t2.t69 t2.t133))
(step t2.t135 (cl (= y$58 (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t2.t126 t2.t134))
(step t2.t136 (cl (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule resolution :premises (t2.t0 t2.t135 a19))
(step t2.t137 (cl (not (= (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) (not (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule equiv_pos2)
(step t2.t138 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule rare_rewrite :args ("eq-symm" (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))
(step t2.t139 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule rare_rewrite :args ("eq-symm" (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))
(step t2.t140 (cl (= (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) (ite y$en (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule cong :premises (t2.t13 t2.t138 t2.t139))
(step t2.t141 (cl (= (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) true) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule equiv_simplify)
(step t2.t142 (cl (not (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) true)) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule equiv1 :premises (t2.t141))
(step t2.t143 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule refl)
(step t2.t144 (cl (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule refl)
(step t2.t145 (cl (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule refl)
(step t2.t146 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t2.t144 t2.t145))
(step t2.t147 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) true)) :rule rare_rewrite :args ("eq-refl" (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))
(step t2.t148 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) true)) :rule trans :premises (t2.t143 t2.t146 t2.t147))
(step t2.t149 (cl (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule resolution :premises (t2.t142 t2.t148))
(step t2.t150 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule refl)
(step t2.t151 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t2.t149 t2.t150))
(step t2.t152 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule rare_rewrite :args ("eq-symm" (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))
(step t2.t153 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t2.t151 t2.t152))
(step t2.t154 (cl (= (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule refl)
(step t2.t155 (cl (= (ite y$en (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule cong :premises (t2.t13 t2.t153 t2.t154))
(step t2.t156 (cl (= (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule trans :premises (t2.t140 t2.t155))
(step t2.t157 (cl (not (= (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)))) (not (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) :rule equiv_pos2)
(step t2.t158 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t2.t133 t2.t144))
(step t2.t159 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) :rule cong :premises (t2.t133 t2.t23))
(step t2.t160 (cl (= (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)))) :rule cong :premises (t2.t13 t2.t158 t2.t159))
(step t2.t161 (cl (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) :rule hole)
(step t2.t162 (cl (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) :rule resolution :premises (t2.t157 t2.t160 t2.t161))
(step t2.t163 (cl (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule resolution :premises (t2.t137 t2.t156 t2.t162))
(step t2.t164 (cl y$en (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule ite1 :premises (t2.t163))
(step t2.t165 (cl (not y$en) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule ite2 :premises (t2.t163))
(step t2.t166 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not y$en)) :rule reordering :premises (t2.t165))
(step t2.t167 (cl (= (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) false) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))))) :rule equiv_simplify)
(step t2.t168 (cl (not (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) false)) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule equiv1 :premises (t2.t167))
(step t2.t169 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)) :rule symm :premises (t2.t136))
(step t2.t170 (cl (not (= (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))) (ite (= y$n15s4 y$n1s4) (= y$n1s4 (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))))) (not (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) (ite (= y$n15s4 y$n1s4) (= y$n1s4 (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule equiv_pos2)
(step t2.t171 (cl (= (= y$n15s4 y$n1s4) (= y$n15s4 y$n1s4))) :rule refl)
(step t2.t172 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= y$n1s4 (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule rare_rewrite :args ("eq-symm" (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))
(step t2.t173 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule rare_rewrite :args ("eq-symm" (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))
(step t2.t174 (cl (= (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))) (ite (= y$n15s4 y$n1s4) (= y$n1s4 (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))))) :rule cong :premises (t2.t171 t2.t172 t2.t173))
(step t2.t175 (cl (not (= (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))) (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))))) (not (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) :rule equiv_pos2)
(step t2.t176 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule cong :premises (t2.t149 t2.t23))
(step t2.t177 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) :rule cong :premises (t2.t149 t2.t77))
(step t2.t178 (cl (= (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))) (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t2.t171 t2.t176 t2.t177))
(step t2.t179 (cl (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) :rule hole)
(step t2.t180 (cl (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) :rule resolution :premises (t2.t175 t2.t178 t2.t179))
(step t2.t181 (cl (ite (= y$n15s4 y$n1s4) (= y$n1s4 (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule resolution :premises (t2.t170 t2.t174 t2.t180))
(step t2.t182 (cl (= y$n15s4 y$n1s4) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule ite1 :premises (t2.t181))
(step t2.t183 (cl (not (= y$n15s4 y$n1s4))) :rule not_symm :premises (a0))
(step t2.t184 (cl (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule resolution :premises (t2.t182 t2.t183))
(step t2.t185 (cl (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))) :rule symm :premises (t2.t184))
(step t2.t186 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule cong :premises (t2.t169 t2.t185))
(step t2.t187 (cl (= (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule equiv_simplify)
(step t2.t188 (cl (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false) (not (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule equiv2 :premises (t2.t187))
(step t2.t189 (cl (not (not (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) :rule not_not)
(step t2.t190 (cl (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) :rule resolution :premises (t2.t188 t2.t189))
(step t2.t191 (cl (not (= (= y$42 (not y$44)) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) (not (= y$42 (not y$44))) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule equiv_pos2)
(step t2.t192 (cl (not (= (= y$42 (and y$2 y$33)) (= y$42 (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4)))))) (not (= y$42 (and y$2 y$33))) (= y$42 (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4))))) :rule equiv_pos2)
(step t2.t193 (cl (= y$42 y$42)) :rule refl)
(step t2.t194 (cl (not (= (= y$33 (= y$n15s4 y$s$1_op)) (= y$33 (= y$n15s4 (Add_4_4_4 y$X y$n1s4))))) (not (= y$33 (= y$n15s4 y$s$1_op))) (= y$33 (= y$n15s4 (Add_4_4_4 y$X y$n1s4)))) :rule equiv_pos2)
(step t2.t195 (cl (= y$33 y$33)) :rule refl)
(step t2.t196 (cl (= (= y$n15s4 y$s$1_op) (= y$n15s4 (Add_4_4_4 y$X y$n1s4)))) :rule cong :premises (t2.t69 a3))
(step t2.t197 (cl (= (= y$33 (= y$n15s4 y$s$1_op)) (= y$33 (= y$n15s4 (Add_4_4_4 y$X y$n1s4))))) :rule cong :premises (t2.t195 t2.t196))
(step t2.t198 (cl (= y$33 (= y$n15s4 (Add_4_4_4 y$X y$n1s4)))) :rule resolution :premises (t2.t194 t2.t197 a15))
(step t2.t199 (cl (= (and y$2 y$33) (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4))))) :rule cong :premises (t2.t7 t2.t198))
(step t2.t200 (cl (= (= y$42 (and y$2 y$33)) (= y$42 (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4)))))) :rule cong :premises (t2.t193 t2.t199))
(step t2.t201 (cl (= y$42 (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4))))) :rule resolution :premises (t2.t192 t2.t200 a16))
(step t2.t202 (cl (= (= y$n15s4 (Add_4_4_4 y$X y$n1s4)) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule cong :premises (t2.t69 t2.t71))
(step t2.t203 (cl (= (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4))) (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t2.t67 t2.t202))
(step t2.t204 (cl (= y$42 (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t2.t201 t2.t203))
(step t2.t205 (cl (= (not y$44) (not true))) :rule cong :premises (t2.t103))
(step t2.t206 (cl (= (= y$42 (not y$44)) (= (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not true)))) :rule cong :premises (t2.t204 t2.t205))
(step t2.t207 (cl (= (= (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not true)) (= (not true) (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))))) :rule rare_rewrite :args ("eq-symm" (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not true)))
(step t2.t208 (cl (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule refl)
(step t2.t209 (cl (= (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (and true (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t2.t107 t2.t208))
(step t2.t210 (cl (= (and true (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule hole :args ("ACI_NORM" (= (and true (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))))
(step t2.t211 (cl (= (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule trans :premises (t2.t209 t2.t210))
(step t2.t212 (cl (= (= (not true) (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) (= false (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t2.t112 t2.t211))
(step t2.t213 (cl (= (= false (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false))) :rule rare_rewrite :args ("eq-symm" false (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))
(step t2.t214 (cl (= (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule rare_rewrite :args ("bool-eq-false" (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))
(step t2.t215 (cl (= (= false (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t2.t213 t2.t214))
(step t2.t216 (cl (= (= (not true) (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t2.t212 t2.t215))
(step t2.t217 (cl (= (= (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not true)) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t2.t207 t2.t216))
(step t2.t218 (cl (= (= y$42 (not y$44)) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t2.t206 t2.t217))
(step t2.t219 (cl (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule resolution :premises (t2.t191 t2.t218 a17))
(step t2.t220 (cl (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false)) :rule resolution :premises (t2.t190 t2.t219))
(step t2.t221 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) false)) :rule trans :premises (t2.t186 t2.t220))
(step t2.t222 (cl (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule resolution :premises (t2.t168 t2.t221))
(step t2.t223 (cl (not y$en)) :rule resolution :premises (t2.t166 t2.t222))
(step t2.t224 (cl (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule resolution :premises (t2.t164 t2.t223))
(step t2.t225 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) :rule symm :premises (t2.t224))
(step t2.t226 (cl (= y$n15s4 y$n1s4)) :rule trans :premises (t2.t136 t2.t225))
(step t2 (cl (not (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 y$n1s4)) :rule subproof :discharge (t2.a0 t2.a1))
(step t3 (cl (not (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule and_pos :args (0))
(step t4 (cl (not (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule and_pos :args (1))
(step t5 (cl (= y$n15s4 y$n1s4) (not (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (not (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule resolution :premises (t2 t3 t4))
(step t6 (cl (not (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (not (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= y$n15s4 y$n1s4)) :rule reordering :premises (t5))
(step t7 (cl (not (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= y$n15s4 y$n1s4)) :rule contraction :premises (t6))
(step t8 (cl (=> (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 y$n1s4)) (= y$n15s4 y$n1s4)) :rule resolution :premises (t1 t7))
(step t9 (cl (=> (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 y$n1s4)) (not (= y$n15s4 y$n1s4))) :rule implies_neg2)
(step t10 (cl (=> (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 y$n1s4)) (=> (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 y$n1s4))) :rule resolution :premises (t8 t9))
(step t11 (cl (=> (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 y$n1s4))) :rule contraction :premises (t10))
(step t12 (cl (not (and (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= y$n15s4 y$n1s4)) :rule implies :premises (t11))
(step t13 (cl (not (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 y$n1s4)) :rule resolution :premises (t0 t12))
(step t14 (cl (= y$n15s4 y$n1s4) (not (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule reordering :premises (t13))
(step t15 (cl (not (= (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) (not (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule equiv_pos2)
(step t16 (cl (= y$en y$en)) :rule refl)
(step t17 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule rare_rewrite :args ("eq-symm" (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))
(step t18 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule rare_rewrite :args ("eq-symm" (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))
(step t19 (cl (= (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) (ite y$en (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule cong :premises (t16 t17 t18))
(step t20 (cl (= (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) true) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule equiv_simplify)
(step t21 (cl (not (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) true)) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule equiv1 :premises (t20))
(step t22 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule refl)
(step t23 (cl (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule refl)
(step t24 (cl (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule refl)
(step t25 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t23 t24))
(step t26 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) true)) :rule rare_rewrite :args ("eq-refl" (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))
(step t27 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) true)) :rule trans :premises (t22 t25 t26))
(step t28 (cl (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule resolution :premises (t21 t27))
(step t29 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule refl)
(step t30 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t28 t29))
(step t31 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule rare_rewrite :args ("eq-symm" (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))
(step t32 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t30 t31))
(step t33 (cl (= (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule refl)
(step t34 (cl (= (ite y$en (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule cong :premises (t16 t32 t33))
(step t35 (cl (= (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule trans :premises (t19 t34))
(step t36 (cl (not (= (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)))) (not (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) :rule equiv_pos2)
(step t37 (cl (= (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) true) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule equiv_simplify)
(step t38 (cl (not (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) true)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule equiv1 :premises (t37))
(step t39 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule refl)
(step t40 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule refl)
(step t41 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule refl)
(step t42 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t40 t41))
(step t43 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) true)) :rule rare_rewrite :args ("eq-refl" (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))
(step t44 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) true)) :rule trans :premises (t39 t42 t43))
(step t45 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule resolution :premises (t38 t44))
(step t46 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t45 t23))
(step t47 (cl (= y$n1s4 y$n1s4)) :rule refl)
(step t48 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) :rule cong :premises (t45 t47))
(step t49 (cl (= (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)) (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4)))) :rule cong :premises (t16 t46 t48))
(step t50 (cl (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) :rule hole)
(step t51 (cl (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n1s4))) :rule resolution :premises (t36 t49 t50))
(step t52 (cl (ite y$en (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule resolution :premises (t15 t35 t51))
(step t53 (cl y$en (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule ite1 :premises (t52))
(step t54 (cl (not y$en) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule ite2 :premises (t52))
(step t55 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not y$en)) :rule reordering :premises (t54))
(step t56 (cl (= (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) false) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))))) :rule equiv_simplify)
(step t57 (cl (not (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) false)) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule equiv1 :premises (t56))
(step t58 (cl (not (= y$58 (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (not y$58) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule equiv_pos2)
(step t59 (cl (not (= (= y$58 (and y$2 y$13 y$28 y$26 y$45 y$44)) (= y$58 (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44)))) (not (= y$58 (and y$2 y$13 y$28 y$26 y$45 y$44))) (= y$58 (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44))) :rule equiv_pos2)
(step t60 (cl (= y$58 y$58)) :rule refl)
(step t61 (cl (not (= (= y$2 (= y$n1s4 y$X)) (= y$2 (= y$X y$n1s4)))) (not (= y$2 (= y$n1s4 y$X))) (= y$2 (= y$X y$n1s4))) :rule equiv_pos2)
(step t62 (cl (= y$2 y$2)) :rule refl)
(step t63 (cl (= (= y$n1s4 y$X) (= y$X y$n1s4))) :rule rare_rewrite :args ("eq-symm" y$n1s4 y$X))
(step t64 (cl (= (= y$2 (= y$n1s4 y$X)) (= y$2 (= y$X y$n1s4)))) :rule cong :premises (t62 t63))
(step t65 (cl (= y$2 (= y$X y$n1s4))) :rule resolution :premises (t61 t64 a1))
(step t66 (cl (not (= (= y$13 (= y$X$next y$X$next_rhs_op)) (= y$13 (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X))))) (not (= y$13 (= y$X$next y$X$next_rhs_op))) (= y$13 (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)))) :rule equiv_pos2)
(step t67 (cl (= y$13 y$13)) :rule refl)
(step t68 (cl (= y$X$next y$X$next)) :rule refl)
(step t69 (cl (not (= (= y$X$next_rhs_op (ite y$en y$s$4_op y$X)) (= y$X$next_rhs_op (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)))) (not (= y$X$next_rhs_op (ite y$en y$s$4_op y$X))) (= y$X$next_rhs_op (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X))) :rule equiv_pos2)
(step t70 (cl (= y$X$next_rhs_op y$X$next_rhs_op)) :rule refl)
(step t71 (cl (not (= (= y$s$4_op (ite y$6 y$n1s4 y$s$1_op)) (= y$s$4_op (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4))))) (not (= y$s$4_op (ite y$6 y$n1s4 y$s$1_op))) (= y$s$4_op (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)))) :rule equiv_pos2)
(step t72 (cl (= y$s$4_op y$s$4_op)) :rule refl)
(step t73 (cl (not (= (= (= y$n15s4 y$X) y$6) (= y$6 (= y$X y$n15s4)))) (not (= (= y$n15s4 y$X) y$6)) (= y$6 (= y$X y$n15s4))) :rule equiv_pos2)
(step t74 (cl (= (= (= y$n15s4 y$X) y$6) (= y$6 (= y$n15s4 y$X)))) :rule rare_rewrite :args ("eq-symm" (= y$n15s4 y$X) y$6))
(step t75 (cl (= y$6 y$6)) :rule refl)
(step t76 (cl (= (= y$n15s4 y$X) (= y$X y$n15s4))) :rule rare_rewrite :args ("eq-symm" y$n15s4 y$X))
(step t77 (cl (= (= y$6 (= y$n15s4 y$X)) (= y$6 (= y$X y$n15s4)))) :rule cong :premises (t75 t76))
(step t78 (cl (= (= (= y$n15s4 y$X) y$6) (= y$6 (= y$X y$n15s4)))) :rule trans :premises (t74 t77))
(step t79 (cl (= y$6 (= y$X y$n15s4))) :rule resolution :premises (t73 t78 a2))
(step t80 (cl (= (ite y$6 y$n1s4 y$s$1_op) (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)))) :rule cong :premises (t79 t47 a3))
(step t81 (cl (= (= y$s$4_op (ite y$6 y$n1s4 y$s$1_op)) (= y$s$4_op (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4))))) :rule cong :premises (t72 t80))
(step t82 (cl (= y$s$4_op (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)))) :rule resolution :premises (t71 t81 a4))
(step t83 (cl (= y$X y$X)) :rule refl)
(step t84 (cl (= (ite y$en y$s$4_op y$X) (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X))) :rule cong :premises (t16 t82 t83))
(step t85 (cl (= (= y$X$next_rhs_op (ite y$en y$s$4_op y$X)) (= y$X$next_rhs_op (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)))) :rule cong :premises (t70 t84))
(step t86 (cl (= y$X$next_rhs_op (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X))) :rule resolution :premises (t69 t85 a5))
(step t87 (cl (= (= y$X$next y$X$next_rhs_op) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)))) :rule cong :premises (t68 t86))
(step t88 (cl (= (= y$13 (= y$X$next y$X$next_rhs_op)) (= y$13 (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X))))) :rule cong :premises (t67 t87))
(step t89 (cl (= y$13 (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)))) :rule resolution :premises (t66 t88 a6))
(step t90 (cl (not (= (= y$28 (= y$27 y$prop$next)) (= y$28 (= y$prop$next (not (= y$X$next y$n15s4)))))) (not (= y$28 (= y$27 y$prop$next))) (= y$28 (= y$prop$next (not (= y$X$next y$n15s4))))) :rule equiv_pos2)
(step t91 (cl (= y$28 y$28)) :rule refl)
(step t92 (cl (not (= (= y$27 (not (= y$n15s4 y$X$next))) (= y$27 (not (= y$X$next y$n15s4))))) (not (= y$27 (not (= y$n15s4 y$X$next)))) (= y$27 (not (= y$X$next y$n15s4)))) :rule equiv_pos2)
(step t93 (cl (= y$27 y$27)) :rule refl)
(step t94 (cl (= (= y$n15s4 y$X$next) (= y$X$next y$n15s4))) :rule rare_rewrite :args ("eq-symm" y$n15s4 y$X$next))
(step t95 (cl (= (not (= y$n15s4 y$X$next)) (not (= y$X$next y$n15s4)))) :rule cong :premises (t94))
(step t96 (cl (= (= y$27 (not (= y$n15s4 y$X$next))) (= y$27 (not (= y$X$next y$n15s4))))) :rule cong :premises (t93 t95))
(step t97 (cl (= y$27 (not (= y$X$next y$n15s4)))) :rule resolution :premises (t92 t96 a7))
(step t98 (cl (= y$prop$next y$prop$next)) :rule refl)
(step t99 (cl (= (= y$27 y$prop$next) (= (not (= y$X$next y$n15s4)) y$prop$next))) :rule cong :premises (t97 t98))
(step t100 (cl (= (= y$28 (= y$27 y$prop$next)) (= y$28 (= (not (= y$X$next y$n15s4)) y$prop$next)))) :rule cong :premises (t91 t99))
(step t101 (cl (= (= (not (= y$X$next y$n15s4)) y$prop$next) (= y$prop$next (not (= y$X$next y$n15s4))))) :rule rare_rewrite :args ("eq-symm" (not (= y$X$next y$n15s4)) y$prop$next))
(step t102 (cl (= (= y$28 (= (not (= y$X$next y$n15s4)) y$prop$next)) (= y$28 (= y$prop$next (not (= y$X$next y$n15s4)))))) :rule cong :premises (t91 t101))
(step t103 (cl (= (= y$28 (= y$27 y$prop$next)) (= y$28 (= y$prop$next (not (= y$X$next y$n15s4)))))) :rule trans :premises (t100 t102))
(step t104 (cl (not (= (= y$28 (= y$prop$next y$27)) (= y$28 (= y$27 y$prop$next)))) (not (= y$28 (= y$prop$next y$27))) (= y$28 (= y$27 y$prop$next))) :rule equiv_pos2)
(step t105 (cl (= (= y$prop$next y$27) (= y$27 y$prop$next))) :rule rare_rewrite :args ("eq-symm" y$prop$next y$27))
(step t106 (cl (= (= y$28 (= y$prop$next y$27)) (= y$28 (= y$27 y$prop$next)))) :rule cong :premises (t91 t105))
(step t107 (cl (= y$28 (= y$27 y$prop$next))) :rule resolution :premises (t104 t106 a8))
(step t108 (cl (= y$28 (= y$prop$next (not (= y$X$next y$n15s4))))) :rule resolution :premises (t90 t103 t107))
(step t109 (cl (= (not (= y$X$next y$n15s4)) (not (= y$X$next y$n15s4)))) :rule refl)
(step t110 (cl (= (= y$prop$next (not (= y$X$next y$n15s4))) (= (not y$26) (not (= y$X$next y$n15s4))))) :rule cong :premises (a9 t109))
(step t111 (cl (= y$28 (= (not y$26) (not (= y$X$next y$n15s4))))) :rule trans :premises (t108 t110))
(step t112 (cl (= y$26 y$26)) :rule refl)
(step t113 (cl (= y$45 y$45)) :rule refl)
(step t114 (cl (= y$44 y$44)) :rule refl)
(step t115 (cl (= (and y$2 y$13 y$28 y$26 y$45 y$44) (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44))) :rule cong :premises (t65 t89 t111 t112 t113 t114))
(step t116 (cl (= (= y$58 (and y$2 y$13 y$28 y$26 y$45 y$44)) (= y$58 (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44)))) :rule cong :premises (t60 t115))
(step t117 (cl (= y$58 (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44))) :rule resolution :premises (t59 t116 a18))
(step t118 (cl (not (= y$2 (= y$X y$n1s4))) (not y$2) (= y$X y$n1s4)) :rule equiv_pos2)
(step t119 (cl (not (= y$58 (and y$2 y$13 y$28 y$26 y$45 y$44))) (not y$58) (and y$2 y$13 y$28 y$26 y$45 y$44)) :rule equiv_pos2)
(step t120 (cl (and y$2 y$13 y$28 y$26 y$45 y$44)) :rule resolution :premises (t119 a18 a19))
(step t121 (cl y$2) :rule and :premises (t120) :args (0))
(step t122 (cl (= y$X y$n1s4)) :rule resolution :premises (t118 t65 t121))
(step t123 (cl (= (= y$X y$n1s4) (= y$n1s4 y$n1s4))) :rule cong :premises (t122 t47))
(step t124 (cl (not (= y$13 (= y$X$next (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (not y$13) (= y$X$next (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule equiv_pos2)
(step t125 (cl (= y$n15s4 y$n15s4)) :rule refl)
(step t126 (cl (= (= y$X y$n15s4) (= y$n1s4 y$n15s4))) :rule cong :premises (t122 t125))
(step t127 (cl (= (Add_4_4_4 y$X y$n1s4) (Add_4_4_4 y$n1s4 y$n1s4))) :rule cong :premises (t122 t47))
(step t128 (cl (= (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule cong :premises (t126 t47 t127))
(step t129 (cl (= (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule cong :premises (t16 t128 t122))
(step t130 (cl (= (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= y$X$next (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t68 t129))
(step t131 (cl (= y$13 (= y$X$next (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t89 t130))
(step t132 (cl (= (= y$n1s4 y$n15s4) (= y$n15s4 y$n1s4))) :rule rare_rewrite :args ("eq-symm" y$n1s4 y$n15s4))
(step t133 (cl (= (Add_4_4_4 y$n1s4 y$n1s4) (Add_4_4_4 y$n1s4 y$n1s4))) :rule refl)
(step t134 (cl (= (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule cong :premises (t132 t47 t133))
(step t135 (cl (= (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule cong :premises (t16 t134 t47))
(step t136 (cl (= (= y$X$next (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$X$next (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t68 t135))
(step t137 (cl (= y$13 (= y$X$next (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t131 t136))
(step t138 (cl y$13) :rule and :premises (t120) :args (1))
(step t139 (cl (= y$X$next (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule resolution :premises (t124 t137 t138))
(step t140 (cl (= (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t139 t129))
(step t141 (cl (not (= y$26 (= y$26 true))) (not y$26) (= y$26 true)) :rule equiv_pos2)
(step t142 (cl (= (= y$26 true) y$26)) :rule rare_rewrite :args ("bool-eq-true" y$26))
(step t143 (cl (= y$26 (= y$26 true))) :rule symm :premises (t142))
(step t144 (cl y$26) :rule and :premises (t120) :args (3))
(step t145 (cl (= y$26 true)) :rule resolution :premises (t141 t143 t144))
(step t146 (cl (= (not y$26) (not true))) :rule cong :premises (t145))
(step t147 (cl (= (= y$X$next y$n15s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) :rule cong :premises (t139 t125))
(step t148 (cl (= (not (= y$X$next y$n15s4)) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)))) :rule cong :premises (t147))
(step t149 (cl (= (= (not y$26) (not (= y$X$next y$n15s4))) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))))) :rule cong :premises (t146 t148))
(step t150 (cl (not (= y$45 (= y$45 true))) (not y$45) (= y$45 true)) :rule equiv_pos2)
(step t151 (cl (= (= y$45 true) y$45)) :rule rare_rewrite :args ("bool-eq-true" y$45))
(step t152 (cl (= y$45 (= y$45 true))) :rule symm :premises (t151))
(step t153 (cl y$45) :rule and :premises (t120) :args (4))
(step t154 (cl (= y$45 true)) :rule resolution :premises (t150 t152 t153))
(step t155 (cl (not (= y$44 (= y$44 true))) (not y$44) (= y$44 true)) :rule equiv_pos2)
(step t156 (cl (= (= y$44 true) y$44)) :rule rare_rewrite :args ("bool-eq-true" y$44))
(step t157 (cl (= y$44 (= y$44 true))) :rule symm :premises (t156))
(step t158 (cl y$44) :rule and :premises (t120) :args (5))
(step t159 (cl (= y$44 true)) :rule resolution :premises (t155 t157 t158))
(step t160 (cl (= (and (= y$X y$n1s4) (= y$X$next (ite y$en (ite (= y$X y$n15s4) y$n1s4 (Add_4_4_4 y$X y$n1s4)) y$X)) (= (not y$26) (not (= y$X$next y$n15s4))) y$26 y$45 y$44) (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) true true true))) :rule cong :premises (t123 t140 t149 t145 t154 t159))
(step t161 (cl (= y$58 (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) true true true))) :rule trans :premises (t117 t160))
(step t162 (cl (= (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) true true true) (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)))))) :rule hole :args ("ACI_NORM" (= (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) true true true) (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)))))))
(step t163 (cl (= (= y$n1s4 y$n1s4) true)) :rule rare_rewrite :args ("eq-refl" y$n1s4))
(step t164 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t40 t135))
(step t165 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) true)) :rule trans :premises (t164 t43))
(step t166 (cl (= (not true) false)) :rule rare_rewrite :args ("evaluate"))
(step t167 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule rare_rewrite :args ("eq-symm" (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))
(step t168 (cl (= (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)) (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule cong :premises (t167))
(step t169 (cl (= (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) (= false (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))))) :rule cong :premises (t166 t168))
(step t170 (cl (= (= false (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) false))) :rule rare_rewrite :args ("eq-symm" false (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))))
(step t171 (cl (= (= (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) false) (not (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))))) :rule rare_rewrite :args ("bool-eq-false" (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))))
(step t172 (cl (= (not (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule rare_rewrite :args ("bool-double-not-elim" (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))
(step t173 (cl (= (= (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) false) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t171 t172))
(step t174 (cl (= (= false (not (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t170 t173))
(step t175 (cl (= (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t169 t174))
(step t176 (cl (= (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)))) (and true true (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))))) :rule cong :premises (t163 t165 t175))
(step t177 (cl (= (and true true (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule hole :args ("ACI_NORM" (= (and true true (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))))
(step t178 (cl (= (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)))) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t176 t177))
(step t179 (cl (= (and (= y$n1s4 y$n1s4) (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite y$en (ite (= y$n1s4 y$n15s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= (not true) (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4))) true true true) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t162 t178))
(step t180 (cl (= y$58 (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t161 t179))
(step t181 (cl (= (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)) (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule cong :premises (t125 t45))
(step t182 (cl (= y$58 (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4)))) :rule trans :premises (t180 t181))
(step t183 (cl (= y$n15s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule resolution :premises (t58 t182 a19))
(step t184 (cl (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) y$n15s4)) :rule symm :premises (t183))
(step t185 (cl (not (= (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))) (ite (= y$n15s4 y$n1s4) (= y$n1s4 (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))))) (not (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) (ite (= y$n15s4 y$n1s4) (= y$n1s4 (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule equiv_pos2)
(step t186 (cl (= (= y$n15s4 y$n1s4) (= y$n15s4 y$n1s4))) :rule refl)
(step t187 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= y$n1s4 (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule rare_rewrite :args ("eq-symm" (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))
(step t188 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule rare_rewrite :args ("eq-symm" (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))
(step t189 (cl (= (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))) (ite (= y$n15s4 y$n1s4) (= y$n1s4 (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))))) :rule cong :premises (t186 t187 t188))
(step t190 (cl (not (= (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))) (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))))) (not (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) :rule equiv_pos2)
(step t191 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule cong :premises (t28 t47))
(step t192 (cl (= (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) :rule cong :premises (t28 t133))
(step t193 (cl (= (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))) (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t186 t191 t192))
(step t194 (cl (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) :rule hole)
(step t195 (cl (ite (= y$n15s4 y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4)))) :rule resolution :premises (t190 t193 t194))
(step t196 (cl (ite (= y$n15s4 y$n1s4) (= y$n1s4 (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule resolution :premises (t185 t189 t195))
(step t197 (cl (= y$n15s4 y$n1s4) (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule ite1 :premises (t196))
(step t198 (cl (not (= y$n15s4 y$n1s4))) :rule not_symm :premises (a0))
(step t199 (cl (= (Add_4_4_4 y$n1s4 y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule resolution :premises (t197 t198))
(step t200 (cl (= (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) (Add_4_4_4 y$n1s4 y$n1s4))) :rule symm :premises (t199))
(step t201 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule cong :premises (t184 t200))
(step t202 (cl (= (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule equiv_simplify)
(step t203 (cl (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false) (not (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule equiv2 :premises (t202))
(step t204 (cl (not (not (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) :rule not_not)
(step t205 (cl (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) :rule resolution :premises (t203 t204))
(step t206 (cl (not (= (= y$42 (not y$44)) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) (not (= y$42 (not y$44))) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule equiv_pos2)
(step t207 (cl (not (= (= y$42 (and y$2 y$33)) (= y$42 (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4)))))) (not (= y$42 (and y$2 y$33))) (= y$42 (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4))))) :rule equiv_pos2)
(step t208 (cl (= y$42 y$42)) :rule refl)
(step t209 (cl (not (= (= y$33 (= y$n15s4 y$s$1_op)) (= y$33 (= y$n15s4 (Add_4_4_4 y$X y$n1s4))))) (not (= y$33 (= y$n15s4 y$s$1_op))) (= y$33 (= y$n15s4 (Add_4_4_4 y$X y$n1s4)))) :rule equiv_pos2)
(step t210 (cl (= y$33 y$33)) :rule refl)
(step t211 (cl (= (= y$n15s4 y$s$1_op) (= y$n15s4 (Add_4_4_4 y$X y$n1s4)))) :rule cong :premises (t125 a3))
(step t212 (cl (= (= y$33 (= y$n15s4 y$s$1_op)) (= y$33 (= y$n15s4 (Add_4_4_4 y$X y$n1s4))))) :rule cong :premises (t210 t211))
(step t213 (cl (= y$33 (= y$n15s4 (Add_4_4_4 y$X y$n1s4)))) :rule resolution :premises (t209 t212 a15))
(step t214 (cl (= (and y$2 y$33) (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4))))) :rule cong :premises (t65 t213))
(step t215 (cl (= (= y$42 (and y$2 y$33)) (= y$42 (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4)))))) :rule cong :premises (t208 t214))
(step t216 (cl (= y$42 (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4))))) :rule resolution :premises (t207 t215 a16))
(step t217 (cl (= (= y$n15s4 (Add_4_4_4 y$X y$n1s4)) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule cong :premises (t125 t127))
(step t218 (cl (= (and (= y$X y$n1s4) (= y$n15s4 (Add_4_4_4 y$X y$n1s4))) (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t123 t217))
(step t219 (cl (= y$42 (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t216 t218))
(step t220 (cl (= (not y$44) (not true))) :rule cong :premises (t159))
(step t221 (cl (= (= y$42 (not y$44)) (= (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not true)))) :rule cong :premises (t219 t220))
(step t222 (cl (= (= (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not true)) (= (not true) (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))))) :rule rare_rewrite :args ("eq-symm" (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not true)))
(step t223 (cl (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule refl)
(step t224 (cl (= (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (and true (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t163 t223))
(step t225 (cl (= (and true (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule hole :args ("ACI_NORM" (= (and true (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))))
(step t226 (cl (= (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule trans :premises (t224 t225))
(step t227 (cl (= (= (not true) (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) (= false (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule cong :premises (t166 t226))
(step t228 (cl (= (= false (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false))) :rule rare_rewrite :args ("eq-symm" false (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))
(step t229 (cl (= (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule rare_rewrite :args ("bool-eq-false" (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))
(step t230 (cl (= (= false (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t228 t229))
(step t231 (cl (= (= (not true) (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t227 t230))
(step t232 (cl (= (= (and (= y$n1s4 y$n1s4) (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))) (not true)) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t222 t231))
(step t233 (cl (= (= y$42 (not y$44)) (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule trans :premises (t221 t232))
(step t234 (cl (not (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)))) :rule resolution :premises (t206 t233 a17))
(step t235 (cl (= (= y$n15s4 (Add_4_4_4 y$n1s4 y$n1s4)) false)) :rule resolution :premises (t205 t234))
(step t236 (cl (= (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))) false)) :rule trans :premises (t201 t235))
(step t237 (cl (not (= (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4) (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4))))) :rule resolution :premises (t57 t236))
(step t238 (cl (not y$en)) :rule resolution :premises (t55 t237))
(step t239 (cl (= y$n1s4 (ite y$en (ite (= y$n15s4 y$n1s4) y$n1s4 (Add_4_4_4 y$n1s4 y$n1s4)) y$n1s4))) :rule resolution :premises (t53 t238))
(step t240 (cl) :rule resolution :premises (t14 t239 t183 t198))
