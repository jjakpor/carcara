(assume nst1.0 (not (not (fun_app$a (properPath$ as$) tr$))))
(assume nst1.1 (not (and (= (shd$ as$) (lab$ tr$)) (not (forall ((?v4 A_treeFI$)) (or (not (member$ ?v4 (set$ (sub$ tr$)))) (not (fun_app$a (properPath$ (stl$ as$)) ?v4))))))))
(assume nst1.2 (not (not (= (fun_app$a (properPath$ as$) tr$) (and (= (shd$ as$) (lab$ tr$)) (not (forall ((?v4 A_treeFI$)) (or (not (member$ ?v4 (set$ (sub$ tr$)))) (not (fun_app$a (properPath$ (stl$ as$)) ?v4))))))))))
(assume t0 (or (not (= (fun_app$a (properPath$ as$) tr$) (and (= (shd$ as$) (lab$ tr$)) (not (forall ((?v4 A_treeFI$)) (or (not (member$ ?v4 (set$ (sub$ tr$)))) (not (fun_app$a (properPath$ (stl$ as$)) ?v4)))))))) (not (fun_app$a (properPath$ as$) tr$)) (and (= (shd$ as$) (lab$ tr$)) (not (forall ((?v4 A_treeFI$)) (or (not (member$ ?v4 (set$ (sub$ tr$)))) (not (fun_app$a (properPath$ (stl$ as$)) ?v4))))))))
(step t0' (cl (not (= (fun_app$a (properPath$ as$) tr$) (and (= (shd$ as$) (lab$ tr$)) (not (forall ((?v4 A_treeFI$)) (or (not (member$ ?v4 (set$ (sub$ tr$)))) (not (fun_app$a (properPath$ (stl$ as$)) ?v4)))))))) (not (fun_app$a (properPath$ as$) tr$)) (and (= (shd$ as$) (lab$ tr$)) (not (forall ((?v4 A_treeFI$)) (or (not (member$ ?v4 (set$ (sub$ tr$)))) (not (fun_app$a (properPath$ (stl$ as$)) ?v4))))))) :rule or :premises (t0))
(step st1 (cl (not (fun_app$a (properPath$ as$) tr$)) (and (= (shd$ as$) (lab$ tr$)) (not (forall ((?v4 A_treeFI$)) (or (not (member$ ?v4 (set$ (sub$ tr$)))) (not (fun_app$a (properPath$ (stl$ as$)) ?v4)))))) (not (= (fun_app$a (properPath$ as$) tr$) (and (= (shd$ as$) (lab$ tr$)) (not (forall ((?v4 A_treeFI$)) (or (not (member$ ?v4 (set$ (sub$ tr$)))) (not (fun_app$a (properPath$ (stl$ as$)) ?v4))))))))) :rule reordering :premises (t0'))
(step t.end (cl) :rule resolution :premises (nst1.0 nst1.1 nst1.2 st1))
