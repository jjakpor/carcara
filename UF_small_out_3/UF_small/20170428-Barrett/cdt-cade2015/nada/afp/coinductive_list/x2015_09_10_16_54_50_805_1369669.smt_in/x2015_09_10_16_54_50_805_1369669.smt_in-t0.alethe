(define-fun @quantifiers_skolemize_10 () A_list$ (choice ((?v3 A_list$)) (not (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3)))))))
(assume nst0.0 (not (=> (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0)))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10))))))
(assume nst0.1 (not (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0))))))
(step st0 (cl (=> (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0)))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))) (forall ((?v0 A_list$)) (not (= xs$ (fun_app$g llist_of$ ?v0))))) :rule implies_neg1)
(step t.end (cl) :rule resolution :premises (nst0.0 nst0.1 st0))
