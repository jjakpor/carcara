(assume nt156.0 (not (not (forall ((?v0 A$)) (= (fun_app$e uu$ ?v0) (ldropn$ n$))))))
(assume nt156.1 (not (= (fun_app$e uu$ (lhd$ xs$)) (ldropn$ n$))))
(anchor :step t156)
(assume t156.a0 (forall ((?v0 A$)) (= (fun_app$e uu$ ?v0) (ldropn$ n$))))
(step t156.t0 (cl (or (not (forall ((?v0 A$)) (= (fun_app$e uu$ ?v0) (ldropn$ n$)))) (= (fun_app$e uu$ (lhd$ xs$)) (ldropn$ n$)))) :rule trust :args ((lhd$ xs$)))
(step st156.t1 (cl (not (forall ((?v0 A$)) (= (fun_app$e uu$ ?v0) (ldropn$ n$)))) (= (fun_app$e uu$ (lhd$ xs$)) (ldropn$ n$))) :rule or :premises (t156.t0))
(step t156.t2 (cl (= (fun_app$e uu$ (lhd$ xs$)) (ldropn$ n$))) :rule trust)
(step t156 (cl (not (forall ((?v0 A$)) (= (fun_app$e uu$ ?v0) (ldropn$ n$)))) (= (fun_app$e uu$ (lhd$ xs$)) (ldropn$ n$))) :rule subproof :discharge (t156.a0))
(step t.end (cl) :rule resolution :premises (nt156.0 nt156.1 t156))
