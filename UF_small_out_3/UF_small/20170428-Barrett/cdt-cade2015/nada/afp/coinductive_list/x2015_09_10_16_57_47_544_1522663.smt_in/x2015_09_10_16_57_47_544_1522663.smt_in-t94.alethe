(assume nst94.0 (not (= (forall ((?v0 A_llist$) (?v1 A_a_llist_a_llist_fun_fun$) (?v2 A_llist$)) (= (fun_app$c (fun_app$bc (case_llist$ ?v0) ?v1) ?v2) (ite (fun_app$q lnull$d ?v2) ?v0 (fun_app$c (fun_app$e ?v1 (lhd$ ?v2)) (ltl$ ?v2))))) (forall ((?v0 A_llist$) (?v1 A_a_llist_a_llist_fun_fun$) (?v2 A_llist$)) (= (fun_app$c (fun_app$bc (case_llist$ ?v0) ?v1) ?v2) (ite (fun_app$q lnull$d ?v2) ?v0 (fun_app$c (fun_app$e ?v1 (lhd$ ?v2)) (ltl$ ?v2))))))))
(step st94 (cl (= (forall ((?v0 A_llist$) (?v1 A_a_llist_a_llist_fun_fun$) (?v2 A_llist$)) (= (fun_app$c (fun_app$bc (case_llist$ ?v0) ?v1) ?v2) (ite (fun_app$q lnull$d ?v2) ?v0 (fun_app$c (fun_app$e ?v1 (lhd$ ?v2)) (ltl$ ?v2))))) (forall ((?v0 A_llist$) (?v1 A_a_llist_a_llist_fun_fun$) (?v2 A_llist$)) (= (fun_app$c (fun_app$bc (case_llist$ ?v0) ?v1) ?v2) (ite (fun_app$q lnull$d ?v2) ?v0 (fun_app$c (fun_app$e ?v1 (lhd$ ?v2)) (ltl$ ?v2))))))) :rule refl)
(step t.end (cl) :rule resolution :premises (nst94.0 st94))
