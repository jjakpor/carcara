(assume nst82.0 (not (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))))
(assume a71 (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$) (?v3 A$) (?v4 A$)) (= (swapFourSyms$ ?v0 ?v1 ?v2 ?v3 ?v4) (ite (= ?v1 ?v4) (fun_app$f (swapSyms$ ?v0 ?v2) ?v3) (ite (= ?v2 ?v3) (fun_app$f (swapSyms$ ?v0 ?v1) ?v4) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ ?v0 ?v1) ?v3) ?v2) ?v4))))))
(assume t81 (or (not (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$) (?v3 A$) (?v4 A$)) (= (swapFourSyms$ ?v0 ?v1 ?v2 ?v3 ?v4) (ite (= ?v1 ?v4) (fun_app$f (swapSyms$ ?v0 ?v2) ?v3) (ite (= ?v2 ?v3) (fun_app$f (swapSyms$ ?v0 ?v1) ?v4) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ ?v0 ?v1) ?v3) ?v2) ?v4)))))) (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))))
(step t81' (cl (not (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$) (?v3 A$) (?v4 A$)) (= (swapFourSyms$ ?v0 ?v1 ?v2 ?v3 ?v4) (ite (= ?v1 ?v4) (fun_app$f (swapSyms$ ?v0 ?v2) ?v3) (ite (= ?v2 ?v3) (fun_app$f (swapSyms$ ?v0 ?v1) ?v4) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ ?v0 ?v1) ?v3) ?v2) ?v4)))))) (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) :rule or :premises (t81))
(step st82 (cl (= (swapFourSyms$ t$ a$ b$ c$ d$) (ite (= a$ d$) (fun_app$f (swapSyms$ t$ b$) c$) (ite (= b$ c$) (fun_app$f (swapSyms$ t$ a$) d$) (fun_app$f (swapSyms$ (fun_app$f (swapSyms$ t$ a$) c$) b$) d$))))) :rule resolution :premises (t81' a71))
(step t.end (cl) :rule resolution :premises (nst82.0 st82))
