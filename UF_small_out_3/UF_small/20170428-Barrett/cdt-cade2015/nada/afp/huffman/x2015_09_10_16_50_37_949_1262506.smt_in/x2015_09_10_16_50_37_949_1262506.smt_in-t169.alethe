(assume nst169.0 (not (or (not (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ t$))) (= a$ ?v3) (= b$ ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) ?v3)))))) (or (not (member$ c$ (alphabet$ t$))) (= a$ c$) (= b$ c$) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) c$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$)))))))
(step st169 (cl (or (not (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ t$))) (= a$ ?v3) (= b$ ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) ?v3)))))) (or (not (member$ c$ (alphabet$ t$))) (= a$ c$) (= b$ c$) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) c$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) c$)))))) :rule forall_inst :args (c$))
(step t.end (cl) :rule resolution :premises (nst169.0 st169))
