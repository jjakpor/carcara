(define-fun @quantifiers_skolemize_10 () S2 (choice ((?v6 S2)) (not (= (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f3 f8 ?v6))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f3 f4 ?v6)))))))
(assume nst1.0 (not (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4)))))
(assume nst1.1 (not (not (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8))))))
(assume nst1.2 (not (not (= (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8)))))))
(assume t0 (or (not (= (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8))))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4))) (not (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8))))))
(step t0' (cl (not (= (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8))))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4))) (not (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8))))) :rule or :premises (t0))
(step st1 (cl (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4))) (not (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8)))) (not (= (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f9) (f21 f4))) (= (f11 f12 f13) (f14 (f17 (f18 f19 f20) f10) (f21 f8)))))) :rule reordering :premises (t0'))
(step t.end (cl) :rule resolution :premises (nst1.0 nst1.1 nst1.2 st1))
