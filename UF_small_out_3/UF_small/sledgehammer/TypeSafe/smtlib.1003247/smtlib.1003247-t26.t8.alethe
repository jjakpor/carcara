(assume nt26.0 (not (not (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) (f64 f65 f66 f67 f72 f78))))))
(assume nt26.1 (not (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78))))
(assume a15 (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) f1)))
(anchor :step t26)
(assume t26.a0 (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) (f64 f65 f66 f67 f72 f78))))
(step t26.t2 (cl (not (= (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) f1)) (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) (f64 f65 f66 f67 f72 f78))))) (not (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) f1))) (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) (f64 f65 f66 f67 f72 f78)))) :rule trust)
(step t26.t7 (cl (= (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) f1)) (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) (f64 f65 f66 f67 f72 f78))))) :rule trust)
(step st26.t8 (cl (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) (f64 f65 f66 f67 f72 f78)))) :rule resolution :premises (t26.t2 t26.t7 a15))
(step t26.t9 (cl (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78))) :rule trust)
(step t26 (cl (not (forall ((?v0 S52) (?v1 S51)) (= (f75 ?v0 ?v1 ?v1) (f64 f65 f66 f67 f72 f78)))) (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78))) :rule subproof :discharge (t26.a0))
(step t.end (cl) :rule resolution :premises (nt26.0 nt26.1 t26))
