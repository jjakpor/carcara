(assume nst45.0 (not (= (or (not (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76) (f64 f65 f66 f67 f72 f78))) (not (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78)))) (or (not (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76))) (not (= (f64 f65 f66 f67 f72 f78) (f75 f65 f76 f76)))))))
(assume t43 (= (not (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76) (f64 f65 f66 f67 f72 f78))) (not (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76)))))
(assume t44 (= (not (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78))) (not (= (f64 f65 f66 f67 f72 f78) (f75 f65 f76 f76)))))
(step st45 (cl (= (or (not (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76) (f64 f65 f66 f67 f72 f78))) (not (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78)))) (or (not (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76))) (not (= (f64 f65 f66 f67 f72 f78) (f75 f65 f76 f76)))))) :rule cong :premises (t43 t44))
(step t.end (cl) :rule resolution :premises (nst45.0 st45))
