(define-fun @quantifiers_skolemize_1 () Elem (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))))
(define-fun @quantifiers_skolemize_2 () List (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))))
(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2)))))))
(define-fun @quantifiers_skolemize_4 () List (choice ((?y2 List)) (not (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2)))))) ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2))))))) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2))))))
(assume nst25.0 (not (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))))
(assume a2 (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (=> (= (cons ?x1 ?y1) (cons ?x2 ?y2)) (and (= ?x1 ?x2) (= ?y1 ?y2))))))
(assume t22 (or (not (= (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (=> (= (cons ?x1 ?y1) (cons ?x2 ?y2)) (and (= ?x1 ?x2) (= ?y1 ?y2))))) (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2))))))) (not (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (=> (= (cons ?x1 ?y1) (cons ?x2 ?y2)) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))))
(assume t24 (= (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (=> (= (cons ?x1 ?y1) (cons ?x2 ?y2)) (and (= ?x1 ?x2) (= ?y1 ?y2))))) (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))))
(step t22' (cl (not (= (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (=> (= (cons ?x1 ?y1) (cons ?x2 ?y2)) (and (= ?x1 ?x2) (= ?y1 ?y2))))) (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2))))))) (not (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (=> (= (cons ?x1 ?y1) (cons ?x2 ?y2)) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) :rule or :premises (t22))
(step st25 (cl (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) :rule resolution :premises (t22' t24 a2))
(step t.end (cl) :rule resolution :premises (nst25.0 st25))
