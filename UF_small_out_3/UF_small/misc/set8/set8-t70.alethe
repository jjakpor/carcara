(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst70.0 (not (member @quantifiers_skolemize_3 (intersection b a))))
(assume nst70.1 (not (not (and (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 a)))))
(assume nst70.2 (not (not (= (member @quantifiers_skolemize_3 (intersection b a)) (and (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 a))))))
(assume t69 (or (not (= (member @quantifiers_skolemize_3 (intersection b a)) (and (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 a)))) (member @quantifiers_skolemize_3 (intersection b a)) (not (and (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 a)))))
(step t69' (cl (not (= (member @quantifiers_skolemize_3 (intersection b a)) (and (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 a)))) (member @quantifiers_skolemize_3 (intersection b a)) (not (and (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 a)))) :rule or :premises (t69))
(step st70 (cl (member @quantifiers_skolemize_3 (intersection b a)) (not (and (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 a))) (not (= (member @quantifiers_skolemize_3 (intersection b a)) (and (member @quantifiers_skolemize_3 b) (member @quantifiers_skolemize_3 a))))) :rule reordering :premises (t69'))
(step t.end (cl) :rule resolution :premises (nst70.0 nst70.1 nst70.2 st70))
