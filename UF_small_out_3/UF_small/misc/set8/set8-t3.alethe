(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst3.0 (not (member @quantifiers_skolemize_4 a)))
(assume nst3.1 (not (not (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a)))))
(assume t2 (or (not (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a))) (member @quantifiers_skolemize_4 a)))
(step t2' (cl (not (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a))) (member @quantifiers_skolemize_4 a)) :rule or :premises (t2))
(step st3 (cl (member @quantifiers_skolemize_4 a) (not (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a)))) :rule reordering :premises (t2'))
(step t.end (cl) :rule resolution :premises (nst3.0 nst3.1 st3))
