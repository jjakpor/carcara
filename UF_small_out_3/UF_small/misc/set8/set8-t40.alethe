(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst40.0 (not (or (not (forall ((?s1 Set) (?s2 Set)) (= (seteq ?s1 ?s2) (and (subset ?s1 ?s2) (subset ?s2 ?s1))))) (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b)))))))
(step st40 (cl (or (not (forall ((?s1 Set) (?s2 Set)) (= (seteq ?s1 ?s2) (and (subset ?s1 ?s2) (subset ?s2 ?s1))))) (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b)))))) :rule forall_inst :args ((intersection a b) (intersection b a)))
(step t.end (cl) :rule resolution :premises (nst40.0 st40))
