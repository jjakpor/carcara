(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst209.0 (not (or (member @quantifiers_skolemize_4 (difference c a)) (member @quantifiers_skolemize_4 (difference c b)))))
(assume nst209.1 (not (not (member @quantifiers_skolemize_4 (difference c a)))))
(step st209 (cl (or (member @quantifiers_skolemize_4 (difference c a)) (member @quantifiers_skolemize_4 (difference c b))) (not (member @quantifiers_skolemize_4 (difference c a)))) :rule or_neg :args (0))
(step t.end (cl) :rule resolution :premises (nst209.0 nst209.1 st209))
