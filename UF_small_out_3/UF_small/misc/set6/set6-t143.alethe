(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst143.0 (not (not (= (member @quantifiers_skolemize_3 (difference c (intersection a b))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b))))))))
(assume nst143.1 (not (member @quantifiers_skolemize_3 (difference c (intersection a b)))))
(assume nst143.2 (not (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))))))
(step st143 (cl (not (= (member @quantifiers_skolemize_3 (difference c (intersection a b))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))))) (member @quantifiers_skolemize_3 (difference c (intersection a b))) (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))))) :rule equiv_pos1)
(step t.end (cl) :rule resolution :premises (nst143.0 nst143.1 nst143.2 st143))
