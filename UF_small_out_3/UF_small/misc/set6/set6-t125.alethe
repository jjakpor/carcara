(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst125.0 (not (= (= (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference c a))) (= (member @quantifiers_skolemize_3 (difference c a)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))))))
(step st125 (cl (= (= (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference c a))) (= (member @quantifiers_skolemize_3 (difference c a)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))))) :rule hole)
(step t.end (cl) :rule resolution :premises (nst125.0 st125))
