(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst99.0 (not (not (member @quantifiers_skolemize_3 b))))
(assume nst99.1 (not (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b))))))
(assume t98 (or (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b)))) (not (member @quantifiers_skolemize_3 b))))
(step t98' (cl (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b)))) (not (member @quantifiers_skolemize_3 b))) :rule or :premises (t98))
(step st99 (cl (not (member @quantifiers_skolemize_3 b)) (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b))))) :rule reordering :premises (t98'))
(step t.end (cl) :rule resolution :premises (nst99.0 nst99.1 st99))
