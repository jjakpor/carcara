(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst35.0 (not (= (or (not (not (forall ((?x Elem)) (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b))))))) (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))))) (or (forall ((?x Elem)) (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b))))) (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))))))))
(assume t33 (= (not (not (forall ((?x Elem)) (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b))))))) (forall ((?x Elem)) (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume t34 (= (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b))))) (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))))))
(step st35 (cl (= (or (not (not (forall ((?x Elem)) (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b))))))) (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))))) (or (forall ((?x Elem)) (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b))))) (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))))))) :rule cong :premises (t33 t34))
(step t.end (cl) :rule resolution :premises (nst35.0 st35))
