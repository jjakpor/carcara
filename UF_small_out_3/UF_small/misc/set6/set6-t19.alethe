(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst19.0 (not (not (member @quantifiers_skolemize_4 (difference c (intersection a b))))))
(assume nst19.1 (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))))
(assume nst19.2 (not (not (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))))))
(assume t18 (or (not (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))))) (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))))
(step t18' (cl (not (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))))) (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))) :rule or :premises (t18))
(step st19 (cl (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))) (not (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))))) :rule reordering :premises (t18'))
(step t.end (cl) :rule resolution :premises (nst19.0 nst19.1 nst19.2 st19))
