(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference b a))) (member ?x (difference b d))))))
(assume nst39.0 (not (not (or (not (member @quantifiers_skolemize_3 (difference b a))) (member @quantifiers_skolemize_3 (difference b d))))))
(assume t25 (or (not (= (not (forall ((?x Elem)) (or (not (member ?x (difference b a))) (member ?x (difference b d))))) (not (or (not (member @quantifiers_skolemize_3 (difference b a))) (member @quantifiers_skolemize_3 (difference b d)))))) (not (not (forall ((?x Elem)) (or (not (member ?x (difference b a))) (member ?x (difference b d)))))) (not (or (not (member @quantifiers_skolemize_3 (difference b a))) (member @quantifiers_skolemize_3 (difference b d))))))
(assume t27 (= (not (forall ((?x Elem)) (or (not (member ?x (difference b a))) (member ?x (difference b d))))) (not (or (not (member @quantifiers_skolemize_3 (difference b a))) (member @quantifiers_skolemize_3 (difference b d))))))
(assume t38 (not (forall ((?x Elem)) (or (not (member ?x (difference b a))) (member ?x (difference b d))))))
(step t25' (cl (not (= (not (forall ((?x Elem)) (or (not (member ?x (difference b a))) (member ?x (difference b d))))) (not (or (not (member @quantifiers_skolemize_3 (difference b a))) (member @quantifiers_skolemize_3 (difference b d)))))) (not (not (forall ((?x Elem)) (or (not (member ?x (difference b a))) (member ?x (difference b d)))))) (not (or (not (member @quantifiers_skolemize_3 (difference b a))) (member @quantifiers_skolemize_3 (difference b d))))) :rule or :premises (t25))
(step st39 (cl (not (or (not (member @quantifiers_skolemize_3 (difference b a))) (member @quantifiers_skolemize_3 (difference b d))))) :rule resolution :premises (t25' t27 t38))
(step t.end (cl) :rule resolution :premises (nst39.0 st39))
