(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference b a))) (member ?x (difference b d))))))
(assume nst74.0 (not (member @quantifiers_skolemize_3 (difference b d))))
(assume nst74.1 (not (not (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))))))
(assume nst74.2 (not (not (= (member @quantifiers_skolemize_3 (difference b d)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d)))))))
(assume t73 (or (not (= (member @quantifiers_skolemize_3 (difference b d)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))))) (member @quantifiers_skolemize_3 (difference b d)) (not (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))))))
(step t73' (cl (not (= (member @quantifiers_skolemize_3 (difference b d)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))))) (member @quantifiers_skolemize_3 (difference b d)) (not (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))))) :rule or :premises (t73))
(step st74 (cl (member @quantifiers_skolemize_3 (difference b d)) (not (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d)))) (not (= (member @quantifiers_skolemize_3 (difference b d)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d)))))) :rule reordering :premises (t73'))
(step t.end (cl) :rule resolution :premises (nst74.0 nst74.1 nst74.2 st74))
