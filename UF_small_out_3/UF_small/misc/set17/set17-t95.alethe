(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst95.0 (not (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (member ?x (intersection ?s1 ?s2)) (and (member ?x ?s1) (member ?x ?s2))))) (= (member @quantifiers_skolemize_3 (intersection a (union b c))) (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 (union b c)))))))
(step st95 (cl (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (member ?x (intersection ?s1 ?s2)) (and (member ?x ?s1) (member ?x ?s2))))) (= (member @quantifiers_skolemize_3 (intersection a (union b c))) (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 (union b c)))))) :rule forall_inst :args (@quantifiers_skolemize_3 a (union b c)))
(step t.end (cl) :rule resolution :premises (nst95.0 st95))
