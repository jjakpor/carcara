(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst70.0 (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 (union b c)))))
(assume nst70.1 (not (not (member @quantifiers_skolemize_3 a))))
(assume nst70.2 (not (not (member @quantifiers_skolemize_3 (union b c)))))
(step st70 (cl (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 (union b c))) (not (member @quantifiers_skolemize_3 a)) (not (member @quantifiers_skolemize_3 (union b c)))) :rule and_neg)
(step t.end (cl) :rule resolution :premises (nst70.0 nst70.1 nst70.2 st70))
