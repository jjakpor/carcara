(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst151.0 (not (or (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))) (not (not (member @quantifiers_skolemize_4 (intersection a (union b c))))))))
(assume t150 (or (or (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))) (not (not (member @quantifiers_skolemize_4 (intersection a (union b c)))))) (or (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))) (not (not (member @quantifiers_skolemize_4 (intersection a (union b c))))))))
(step t150' (cl (or (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))) (not (not (member @quantifiers_skolemize_4 (intersection a (union b c)))))) (or (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))) (not (not (member @quantifiers_skolemize_4 (intersection a (union b c))))))) :rule or :premises (t150))
(step st151 (cl (or (or (not (member @quantifiers_skolemize_4 (intersection a (union b c)))) (member @quantifiers_skolemize_4 (union (intersection a b) (intersection a c)))) (not (not (member @quantifiers_skolemize_4 (intersection a (union b c))))))) :rule contraction :premises (t150'))
(step t.end (cl) :rule resolution :premises (nst151.0 st151))
