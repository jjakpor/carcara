(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst57.0 (not (not (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))))
(assume nst57.1 (not (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))))))
(assume t56 (=> (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))) (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))))))
(step st57 (cl (not (not (forall ((?x Elem)) (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c))))))) (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))))) :rule implies :premises (t56))
(step t.end (cl) :rule resolution :premises (nst57.0 nst57.1 st57))
