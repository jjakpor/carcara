(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst44.0 (not (not (and (subset (union (intersection a b) (intersection a c)) (intersection a (union b c))) (subset (intersection a (union b c)) (union (intersection a b) (intersection a c)))))))
(assume a9 (not (seteq (union (intersection a b) (intersection a c)) (intersection a (union b c)))))
(assume t40 (or (seteq (union (intersection a b) (intersection a c)) (intersection a (union b c))) (not (and (subset (union (intersection a b) (intersection a c)) (intersection a (union b c))) (subset (intersection a (union b c)) (union (intersection a b) (intersection a c))))) (not (= (seteq (union (intersection a b) (intersection a c)) (intersection a (union b c))) (and (subset (union (intersection a b) (intersection a c)) (intersection a (union b c))) (subset (intersection a (union b c)) (union (intersection a b) (intersection a c))))))))
(assume t43 (= (seteq (union (intersection a b) (intersection a c)) (intersection a (union b c))) (and (subset (union (intersection a b) (intersection a c)) (intersection a (union b c))) (subset (intersection a (union b c)) (union (intersection a b) (intersection a c))))))
(step t40' (cl (seteq (union (intersection a b) (intersection a c)) (intersection a (union b c))) (not (and (subset (union (intersection a b) (intersection a c)) (intersection a (union b c))) (subset (intersection a (union b c)) (union (intersection a b) (intersection a c))))) (not (= (seteq (union (intersection a b) (intersection a c)) (intersection a (union b c))) (and (subset (union (intersection a b) (intersection a c)) (intersection a (union b c))) (subset (intersection a (union b c)) (union (intersection a b) (intersection a c))))))) :rule or :premises (t40))
(step st44 (cl (not (and (subset (union (intersection a b) (intersection a c)) (intersection a (union b c))) (subset (intersection a (union b c)) (union (intersection a b) (intersection a c)))))) :rule resolution :premises (t40' a9 t43))
(step t.end (cl) :rule resolution :premises (nst44.0 st44))
