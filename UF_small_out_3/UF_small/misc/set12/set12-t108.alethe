(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst108.0 (not (or (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (not (not (member @quantifiers_skolemize_3 (intersection a (intersection b c))))))))
(assume t107 (or (or (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (not (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))))) (or (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (not (not (member @quantifiers_skolemize_3 (intersection a (intersection b c))))))))
(step t107' (cl (or (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (not (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))))) (or (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (not (not (member @quantifiers_skolemize_3 (intersection a (intersection b c))))))) :rule or :premises (t107))
(step st108 (cl (or (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (not (not (member @quantifiers_skolemize_3 (intersection a (intersection b c))))))) :rule contraction :premises (t107'))
(step t.end (cl) :rule resolution :premises (nst108.0 st108))
