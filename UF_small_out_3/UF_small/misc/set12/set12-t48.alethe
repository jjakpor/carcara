(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst48.0 (not (not (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c)))))))
(assume a8 (not (seteq (intersection a (intersection b c)) (intersection (intersection a b) c))))
(assume t44 (or (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c))))) (not (= (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c))))))))
(assume t47 (= (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c))))))
(step t44' (cl (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (not (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c))))) (not (= (seteq (intersection a (intersection b c)) (intersection (intersection a b) c)) (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c))))))) :rule or :premises (t44))
(step st48 (cl (not (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c)))))) :rule resolution :premises (t44' a8 t47))
(step t.end (cl) :rule resolution :premises (nst48.0 st48))
