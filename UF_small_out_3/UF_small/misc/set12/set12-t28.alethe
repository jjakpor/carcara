(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nt28.0 (not (not (not (forall ((?x Elem)) (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))))
(assume nt28.1 (not (not (or (not (member @quantifiers_skolemize_4 (intersection (intersection a b) c))) (member @quantifiers_skolemize_4 (intersection a (intersection b c)))))))
(anchor :step t28)
(assume t28.a0 (not (forall ((?x Elem)) (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(anchor :step t28)
(assume t28.a0 (not (forall ((?x Elem)) (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(step t28.t3 (cl (not (or (not (member @quantifiers_skolemize_4 (intersection (intersection a b) c))) (member @quantifiers_skolemize_4 (intersection a (intersection b c)))))) :rule trust)
(step t28 (cl (not (not (forall ((?x Elem)) (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection (intersection a b) c))) (member @quantifiers_skolemize_4 (intersection a (intersection b c)))))) :rule subproof :discharge (t28.a0))
(step t28.t3 (cl (not (or (not (member @quantifiers_skolemize_4 (intersection (intersection a b) c))) (member @quantifiers_skolemize_4 (intersection a (intersection b c)))))) :rule trust)
(step t28 (cl (not (not (forall ((?x Elem)) (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c))))))) (not (or (not (member @quantifiers_skolemize_4 (intersection (intersection a b) c))) (member @quantifiers_skolemize_4 (intersection a (intersection b c)))))) :rule subproof :discharge (t28.a0))
(step t.end (cl) :rule resolution :premises (nt28.0 nt28.1 t28))
