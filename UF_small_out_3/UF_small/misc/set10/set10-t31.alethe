(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union a b))) (member ?x c)))))
(assume nst31.0 (not (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))))))
(assume nst31.1 (not (or (not (member @quantifiers_skolemize_3 b)) (not (subset b c)) (member @quantifiers_skolemize_3 c))))
(assume t30 (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2)))) (or (not (member @quantifiers_skolemize_3 b)) (not (subset b c)) (member @quantifiers_skolemize_3 c))))
(step st31 (cl (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2)))) (or (not (member @quantifiers_skolemize_3 b)) (not (subset b c)) (member @quantifiers_skolemize_3 c))) :rule or :premises (t30))
(step t.end (cl) :rule resolution :premises (nst31.0 nst31.1 st31))
