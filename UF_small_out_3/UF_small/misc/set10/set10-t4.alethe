(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union a b))) (member ?x c)))))
(assume nst4.0 (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c)))))
(assume nst4.1 (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c)))))
(assume t2 (or (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))))
(assume t3 (or (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) (not (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c)))))
(step t3' (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) (not (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c)))) :rule or :premises (t3))
(step t2' (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) :rule or :premises (t2))
(step st4 (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2))) (or (not (member @quantifiers_skolemize_3 a)) (not (subset a c)) (member @quantifiers_skolemize_3 c)))) :rule resolution :premises (t2' t3'))
(step t.end (cl) :rule resolution :premises (nst4.0 nst4.1 st4))
