(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst102.0 (not (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b))))))
(assume nst102.1 (not (not (member @quantifiers_skolemize_3 a))))
(assume nst102.2 (not (not (not (member @quantifiers_skolemize_3 (difference a b))))))
(step st102 (cl (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (not (member @quantifiers_skolemize_3 a)) (not (not (member @quantifiers_skolemize_3 (difference a b))))) :rule and_neg)
(step t.end (cl) :rule resolution :premises (nst102.0 nst102.1 nst102.2 st102))
