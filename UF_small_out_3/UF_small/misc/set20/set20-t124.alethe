(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst124.0 (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))))
(assume nst124.1 (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))))
(assume t122 (or (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))))
(assume t123 (or (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))) (not (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))))
(step t123' (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))) (not (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))) :rule or :premises (t123))
(step t122' (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))) :rule or :premises (t122))
(step st124 (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))) :rule resolution :premises (t122' t123'))
(step t.end (cl) :rule resolution :premises (nst124.0 nst124.1 st124))
