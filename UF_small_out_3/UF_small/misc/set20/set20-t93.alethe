(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst93.0 (not (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))))))
(assume nst93.1 (not (= (member @quantifiers_skolemize_3 (difference a b)) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))))))
(assume t92 (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference a b)) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))))))
(step st93 (cl (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2))))) (= (member @quantifiers_skolemize_3 (difference a b)) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))))) :rule implies :premises (t92))
(step t.end (cl) :rule resolution :premises (nst93.0 nst93.1 st93))
