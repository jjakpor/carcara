(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst126.0 (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b))))))))
(assume t117 (or (not (= (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))))))) (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b))))))))
(assume t119 (= (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b))))))))
(assume t125 (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))))
(step t117' (cl (not (= (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b))))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))))))) (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b))))))) :rule or :premises (t117))
(step st126 (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b))))))) :rule resolution :premises (t117' t119 t125))
(step t.end (cl) :rule resolution :premises (nst126.0 st126))
