(set-logic UF)
(declare-sort nat 0)
(declare-sort env 0)
(declare-sort form 0)
(declare-sort var_nat 0)
(declare-sort term_nat 0)
(declare-fun zero () nat)
(declare-fun s (nat) nat)
(declare-fun v0_nat () var_nat)
(declare-fun next_nat (var_nat) var_nat)
(declare-fun inj_nat (var_nat) term_nat)
(declare-fun zeroR () term_nat)
(declare-fun sR (term_nat) term_nat)
(declare-fun leqR (term_nat term_nat) form)
(declare-fun eq_nat (term_nat term_nat) form)
(declare-fun falseR () form)
(declare-fun orR (form form) form)
(declare-fun notR (form) form)
(declare-fun forallR_nat (var_nat form) form)
(declare-fun empty () env)
(declare-fun push_nat (env var_nat nat) env)
(declare-fun evalV_nat (env var_nat) nat)
(declare-fun eval_nat (env term_nat) nat)
(declare-fun leq (nat nat) Bool)
(declare-fun models (env form) Bool)
(assert (not (not (forall ((x nat)) (leq x x)))))
(assert (not (leq zero zero)))
(assert (or (not (forall ((x nat)) (leq x x))) (leq zero zero)))
(check-sat)
(exit)
