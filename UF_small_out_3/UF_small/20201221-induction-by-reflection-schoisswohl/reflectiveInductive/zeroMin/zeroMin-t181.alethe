(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst181.0 (not (or (not (models (push_nat empty v0_nat @quantifiers_skolemize_15) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s @quantifiers_skolemize_15)) (leqR zeroR (inj_nat v0_nat))))))
(assume nst181.1 (not (not (not (models (push_nat empty v0_nat @quantifiers_skolemize_15) (leqR zeroR (inj_nat v0_nat)))))))
(step st181 (cl (or (not (models (push_nat empty v0_nat @quantifiers_skolemize_15) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s @quantifiers_skolemize_15)) (leqR zeroR (inj_nat v0_nat)))) (not (not (models (push_nat empty v0_nat @quantifiers_skolemize_15) (leqR zeroR (inj_nat v0_nat)))))) :rule or_neg :args (0))
(step t.end (cl) :rule resolution :premises (nst181.0 nst181.1 st181))
