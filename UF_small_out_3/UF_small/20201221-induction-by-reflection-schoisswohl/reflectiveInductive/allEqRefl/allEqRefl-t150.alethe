(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (equal x x x))))
(define-fun @quantifiers_skolemize_7 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))))
(assume nt150.0 (not (not (forall ((x nat) (y nat) (z nat)) (= (equal (s x) (s y) (s z)) (equal x y z))))))
(assume nt150.1 (not (= (equal (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))) (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))) (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)))) (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))))))
(anchor :step t150)
(assume t150.a0 (forall ((x nat) (y nat) (z nat)) (= (equal (s x) (s y) (s z)) (equal x y z))))
(anchor :step t150)
(assume t150.a0 (forall ((x nat) (y nat) (z nat)) (= (equal (s x) (s y) (s z)) (equal x y z))))
(step t150.t2 (cl (= (equal (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))) (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))) (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)))) (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))))) :rule trust)
(step t150 (cl (not (forall ((x nat) (y nat) (z nat)) (= (equal (s x) (s y) (s z)) (equal x y z)))) (= (equal (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))) (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))) (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)))) (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))))) :rule subproof :discharge (t150.a0))
(step t150.t2 (cl (= (equal (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))) (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))) (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)))) (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))))) :rule trust)
(step t150 (cl (not (forall ((x nat) (y nat) (z nat)) (= (equal (s x) (s y) (s z)) (equal x y z)))) (= (equal (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))) (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))) (s (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)))) (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_7) (inj_nat v0_nat))))) :rule subproof :discharge (t150.a0))
(step t.end (cl) :rule resolution :premises (nt150.0 nt150.1 t150))
