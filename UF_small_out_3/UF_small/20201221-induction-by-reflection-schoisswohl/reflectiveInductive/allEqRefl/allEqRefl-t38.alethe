(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (equal x x x))))
(define-fun @quantifiers_skolemize_7 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))))
(assume nst38.0 (not (not (= (=> (forall ((env env) (v var_nat)) (= (evalV_nat env v) (eval_nat env (inj_nat v)))) (= (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)))) (=> (forall ((env env) (v var_nat)) (= (evalV_nat env v) (eval_nat env (inj_nat v)))) (= (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat)))))))
(assume nst38.1 (not (not (=> (forall ((env env) (v var_nat)) (= (evalV_nat env v) (eval_nat env (inj_nat v)))) (= (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)))))))
(assume nst38.2 (not (=> (forall ((env env) (v var_nat)) (= (evalV_nat env v) (eval_nat env (inj_nat v)))) (= (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat)))))
(step st38 (cl (not (= (=> (forall ((env env) (v var_nat)) (= (evalV_nat env v) (eval_nat env (inj_nat v)))) (= (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)))) (=> (forall ((env env) (v var_nat)) (= (evalV_nat env v) (eval_nat env (inj_nat v)))) (= (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat))))) (not (=> (forall ((env env) (v var_nat)) (= (evalV_nat env v) (eval_nat env (inj_nat v)))) (= (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat))))) (=> (forall ((env env) (v var_nat)) (= (evalV_nat env v) (eval_nat env (inj_nat v)))) (= (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst38.0 nst38.1 nst38.2 st38))
