(assume nst59.0 (not (or (not (= (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR))))) (not (models empty (orR (notR (notR (qR bR))) (notR (pR aR))))))) (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR))))) (not (not (models empty (orR (notR (notR (qR bR))) (notR (pR aR)))))))))
(assume nst59.1 (not (not (not (not (models empty (orR (notR (notR (qR bR))) (notR (pR aR)))))))))
(step st59 (cl (or (not (= (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR))))) (not (models empty (orR (notR (notR (qR bR))) (notR (pR aR))))))) (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR))))) (not (not (models empty (orR (notR (notR (qR bR))) (notR (pR aR))))))) (not (not (not (models empty (orR (notR (notR (qR bR))) (notR (pR aR)))))))) :rule or_neg :args (2))
(step t.end (cl) :rule resolution :premises (nst59.0 nst59.1 st59))
