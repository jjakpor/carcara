(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))
(assume nst4.0 (not (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))))))
(assume nst4.1 (not (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))))))
(assume t2 (or (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))))
(assume t3 (or (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))))))
(step t3' (cl (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))))) :rule or :premises (t3))
(step t2' (cl (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) :rule or :premises (t2))
(step st4 (cl (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))))) :rule resolution :premises (t2' t3'))
(step t.end (cl) :rule resolution :premises (nst4.0 nst4.1 st4))
