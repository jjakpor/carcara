(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))
(assume nst10.0 (not (= (not (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))))
(step st10 (cl (= (not (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))) :rule hole)
(step t.end (cl) :rule resolution :premises (nst10.0 st10))
