(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))
(assume nst2.0 (not (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))))))
(assume nst2.1 (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))))
(assume t0 (or (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))))
(assume t1 (or (not (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))))
(step t0' (cl (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) :rule or :premises (t0))
(step t1' (cl (not (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) :rule or :premises (t1))
(step st2 (cl (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) :rule resolution :premises (t0' t1'))
(step t.end (cl) :rule resolution :premises (nst2.0 nst2.1 st2))
