(assume nst62.0 (not (or (not (= (models empty (notR (notR (orR (notR (pR aR)) (notR (qR bR)))))) (not (models empty (notR (orR (notR (pR aR)) (notR (qR bR)))))))) (models empty (notR (notR (orR (notR (pR aR)) (notR (qR bR)))))) (not (not (models empty (notR (orR (notR (pR aR)) (notR (qR bR))))))))))
(assume nst62.1 (not (not (not (= (models empty (notR (notR (orR (notR (pR aR)) (notR (qR bR)))))) (not (models empty (notR (orR (notR (pR aR)) (notR (qR bR)))))))))))
(step st62 (cl (or (not (= (models empty (notR (notR (orR (notR (pR aR)) (notR (qR bR)))))) (not (models empty (notR (orR (notR (pR aR)) (notR (qR bR)))))))) (models empty (notR (notR (orR (notR (pR aR)) (notR (qR bR)))))) (not (not (models empty (notR (orR (notR (pR aR)) (notR (qR bR)))))))) (not (not (= (models empty (notR (notR (orR (notR (pR aR)) (notR (qR bR)))))) (not (models empty (notR (orR (notR (pR aR)) (notR (qR bR)))))))))) :rule or_neg :args (0))
(step t.end (cl) :rule resolution :premises (nst62.0 nst62.1 st62))
