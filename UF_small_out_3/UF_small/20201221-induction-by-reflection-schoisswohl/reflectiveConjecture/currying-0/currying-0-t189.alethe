(assume nst189.0 (not (or (not (= (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (notR (qR bR))))) (rR cR)))) (not (models empty (orR (notR (notR (orR (notR (pR aR)) (notR (qR bR))))) (rR cR)))))) (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (notR (qR bR))))) (rR cR)))) (not (not (models empty (orR (notR (notR (orR (notR (pR aR)) (notR (qR bR))))) (rR cR))))))))
(assume nst189.1 (not (not (not (not (models empty (orR (notR (notR (orR (notR (pR aR)) (notR (qR bR))))) (rR cR))))))))
(step st189 (cl (or (not (= (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (notR (qR bR))))) (rR cR)))) (not (models empty (orR (notR (notR (orR (notR (pR aR)) (notR (qR bR))))) (rR cR)))))) (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (notR (qR bR))))) (rR cR)))) (not (not (models empty (orR (notR (notR (orR (notR (pR aR)) (notR (qR bR))))) (rR cR)))))) (not (not (not (models empty (orR (notR (notR (orR (notR (pR aR)) (notR (qR bR))))) (rR cR))))))) :rule or_neg :args (2))
(step t.end (cl) :rule resolution :premises (nst189.0 nst189.1 st189))
