(assume nt1.0 (not (not (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))))))
(assume nt1.1 (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))))
(anchor :step t1)
(assume t1.a0 (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))))
(step t1.t0 (cl (or (not (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) (= (models empty (notR (pR aR))) (not (models empty (pR aR)))))) :rule trust :args (empty (pR aR)))
(step st1.t1 (cl (not (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) :rule or :premises (t1.t0))
(step t1.t2 (cl (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) :rule trust)
(step t1 (cl (not (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) :rule subproof :discharge (t1.a0))
(step t.end (cl) :rule resolution :premises (nt1.0 nt1.1 t1))
