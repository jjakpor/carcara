(assume nst17.0 (not (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR)))))))
(assume t16 (or (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR))))) (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR))))) (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR)))))))
(step t16' (cl (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR))))) (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR))))) (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR)))))) :rule or :premises (t16))
(step st17 (cl (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR)))))) :rule contraction :premises (t16'))
(step t.end (cl) :rule resolution :premises (nst17.0 st17))
