(assume nst2.0 (not (or (not (forall ((?f FldLoc) (?u Loc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?z)) (not (Btwn$0 ?f ?y ?u ?z)) (and (Btwn$0 ?f ?x ?y ?u) (Btwn$0 ?f ?x ?u ?z))))) (or (not (Btwn$0 next$0 x$0 x$0 x$0)) (not (Btwn$0 next$0 x$0 root_x$0 x$0)) (and (Btwn$0 next$0 x$0 x$0 root_x$0) (Btwn$0 next$0 x$0 root_x$0 x$0))))))
(step st2 (cl (or (not (forall ((?f FldLoc) (?u Loc) (?x Loc) (?y Loc) (?z Loc)) (or (not (Btwn$0 ?f ?x ?y ?z)) (not (Btwn$0 ?f ?y ?u ?z)) (and (Btwn$0 ?f ?x ?y ?u) (Btwn$0 ?f ?x ?u ?z))))) (or (not (Btwn$0 next$0 x$0 x$0 x$0)) (not (Btwn$0 next$0 x$0 root_x$0 x$0)) (and (Btwn$0 next$0 x$0 x$0 root_x$0) (Btwn$0 next$0 x$0 root_x$0 x$0))))) :rule forall_inst :args (next$0 root_x$0 x$0 x$0 x$0))
(step t.end (cl) :rule resolution :premises (nst2.0 st2))
