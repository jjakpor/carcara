(assume nt259.0 (not (not (not (in$0 sk_?e$0 (lseg_domain$0 next$0 lst$0 cp_2$0))))))
(assume nt259.1 (not (not (= lst$0 sk_?e$0))))
(assume nt259.2 (not (not (in$0 lst$0 (lseg_domain$0 next$0 lst$0 cp_2$0)))))
(anchor :step t259)
(assume t259.a0 (not (in$0 sk_?e$0 (lseg_domain$0 next$0 lst$0 cp_2$0))))
(assume t259.a1 (= lst$0 sk_?e$0))
(step t259.t4 (cl (= (in$0 lst$0 (lseg_domain$0 next$0 lst$0 cp_2$0)) (in$0 sk_?e$0 (lseg_domain$0 next$0 lst$0 cp_2$0)))) :rule trust)
(step t259.t9 (cl (= (in$0 sk_?e$0 (lseg_domain$0 next$0 lst$0 cp_2$0)) false)) :rule trust)
(step st259.t10 (cl (= (in$0 lst$0 (lseg_domain$0 next$0 lst$0 cp_2$0)) false)) :rule trans :premises (t259.t4 t259.t9))
(step t259.t11 (cl (not (in$0 lst$0 (lseg_domain$0 next$0 lst$0 cp_2$0)))) :rule trust)
(step t259 (cl (not (not (in$0 sk_?e$0 (lseg_domain$0 next$0 lst$0 cp_2$0)))) (not (= lst$0 sk_?e$0)) (not (in$0 lst$0 (lseg_domain$0 next$0 lst$0 cp_2$0)))) :rule subproof :discharge (t259.a0 t259.a1))
(step t.end (cl) :rule resolution :premises (nt259.0 nt259.1 nt259.2 t259))
