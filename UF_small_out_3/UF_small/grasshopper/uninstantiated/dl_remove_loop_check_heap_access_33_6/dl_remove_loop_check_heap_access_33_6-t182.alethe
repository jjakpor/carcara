(assume nst182.0 (not (not (Btwn$0 next$0 c_init$0 prv_5$0 prv_5$0))))
(assume nst182.1 (not (not (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0)))))
(assume nst182.2 (not (and (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0)) (Btwn$0 next$0 prv_5$0 prv_5$0 (read$0 next$0 d_init$0)))))
(assume nst182.3 (not (not (or (not (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0))) (not (Btwn$0 next$0 c_init$0 prv_5$0 prv_5$0)) (and (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0)) (Btwn$0 next$0 prv_5$0 prv_5$0 (read$0 next$0 d_init$0)))))))
(assume t181 (or (not (or (not (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0))) (not (Btwn$0 next$0 c_init$0 prv_5$0 prv_5$0)) (and (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0)) (Btwn$0 next$0 prv_5$0 prv_5$0 (read$0 next$0 d_init$0))))) (not (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0))) (not (Btwn$0 next$0 c_init$0 prv_5$0 prv_5$0)) (and (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0)) (Btwn$0 next$0 prv_5$0 prv_5$0 (read$0 next$0 d_init$0)))))
(step t181' (cl (not (or (not (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0))) (not (Btwn$0 next$0 c_init$0 prv_5$0 prv_5$0)) (and (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0)) (Btwn$0 next$0 prv_5$0 prv_5$0 (read$0 next$0 d_init$0))))) (not (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0))) (not (Btwn$0 next$0 c_init$0 prv_5$0 prv_5$0)) (and (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0)) (Btwn$0 next$0 prv_5$0 prv_5$0 (read$0 next$0 d_init$0)))) :rule or :premises (t181))
(step st182 (cl (not (Btwn$0 next$0 c_init$0 prv_5$0 prv_5$0)) (not (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0))) (and (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0)) (Btwn$0 next$0 prv_5$0 prv_5$0 (read$0 next$0 d_init$0))) (not (or (not (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0))) (not (Btwn$0 next$0 c_init$0 prv_5$0 prv_5$0)) (and (Btwn$0 next$0 c_init$0 prv_5$0 (read$0 next$0 d_init$0)) (Btwn$0 next$0 prv_5$0 prv_5$0 (read$0 next$0 d_init$0)))))) :rule reordering :premises (t181'))
(step t.end (cl) :rule resolution :premises (nst182.0 nst182.1 nst182.2 nst182.3 st182))
