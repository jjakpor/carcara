(assume nst369.0 (not (not (and (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0)) (or (in$0 (read$0 next$0 d_init$0) FP_Caller$0) (in$0 (read$0 next$0 d_init$0) Alloc$0))))))
(assume t352 (or (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0)) (not (and (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0)) (or (in$0 (read$0 next$0 d_init$0) FP_Caller$0) (in$0 (read$0 next$0 d_init$0) Alloc$0))))))
(assume t368 (not (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0))))
(step t352' (cl (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0)) (not (and (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0)) (or (in$0 (read$0 next$0 d_init$0) FP_Caller$0) (in$0 (read$0 next$0 d_init$0) Alloc$0))))) :rule or :premises (t352))
(step st369 (cl (not (and (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0)) (or (in$0 (read$0 next$0 d_init$0) FP_Caller$0) (in$0 (read$0 next$0 d_init$0) Alloc$0))))) :rule resolution :premises (t352' t368))
(step t.end (cl) :rule resolution :premises (nst369.0 st369))
