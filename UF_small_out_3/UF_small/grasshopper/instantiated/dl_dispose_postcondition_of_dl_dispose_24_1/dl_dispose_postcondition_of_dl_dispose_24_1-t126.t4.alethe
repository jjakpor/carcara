(assume nt126.0 (not (not (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x))))))
(assume nt126.1 (not (or (not (Btwn$0 next$0 prv_2$0 sk_?e$0 prv_2$0)) (= sk_?e$0 prv_2$0))))
(assume a76 (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y))))
(anchor :step t126)
(assume t126.a0 (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x))))
(step t126.t2 (cl (not (= (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y))) (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x))))) (not (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y)))) (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x)))) :rule trust)
(step t126.t3 (cl (= (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y))) (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x))))) :rule trust)
(step st126.t4 (cl (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x)))) :rule resolution :premises (t126.t2 t126.t3 a76))
(step t126.t5 (cl (or (not (Btwn$0 next$0 prv_2$0 sk_?e$0 prv_2$0)) (= sk_?e$0 prv_2$0))) :rule trust)
(step t126 (cl (not (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x)))) (or (not (Btwn$0 next$0 prv_2$0 sk_?e$0 prv_2$0)) (= sk_?e$0 prv_2$0))) :rule subproof :discharge (t126.a0))
(step t.end (cl) :rule resolution :premises (nt126.0 nt126.1 t126))
