(assume t754 (or (not (= (= (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (and (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (=> (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (= x67 x68)))) true)) (= (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (and (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (=> (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (= x67 x68))))))
(assume t755 (= (= (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (and (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (=> (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (= x67 x68)))) true))
(assume nt756.0 (not (= (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (and (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (=> (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (= x67 x68))))))
(step t754' (cl (not (= (= (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (and (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (=> (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (= x67 x68)))) true)) (= (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (and (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (=> (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (= x67 x68))))) :rule or :premises (t754))
(step t756 (cl (= (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (and (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (=> (or (and (= x67 y67) (= y67 x68)) (and (= x67 z67) (= z67 x68))) (= x67 x68))))) :rule resolution :premises (t754' t755))
(step t.end (cl) :rule resolution :premises (nt756.0 t756))
