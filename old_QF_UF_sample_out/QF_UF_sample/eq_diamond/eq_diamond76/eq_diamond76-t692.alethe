(assume t686 (or (not (= (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (and (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (=> (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (= x61 x62))))) (not (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62)))) (and (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (=> (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (= x61 x62)))))
(assume t690 (= (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (and (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (=> (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (= x61 x62)))))
(assume t691 (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))))
(assume nt692.0 (not (and (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (=> (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (= x61 x62)))))
(step t686' (cl (not (= (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (and (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (=> (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (= x61 x62))))) (not (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62)))) (and (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (=> (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (= x61 x62)))) :rule or :premises (t686))
(step t692 (cl (and (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (=> (or (and (= x61 y61) (= y61 x62)) (and (= x61 z61) (= z61 x62))) (= x61 x62)))) :rule resolution :premises (t686' t690 t691))
(step t.end (cl) :rule resolution :premises (nt692.0 t692))
