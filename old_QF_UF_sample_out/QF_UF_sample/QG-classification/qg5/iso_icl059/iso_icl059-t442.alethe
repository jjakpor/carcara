(assume t438 (or (not (= (not (= (op e1 e1) (op e1 e2))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op e0 e0) e0) e0) (op e0 e0)))))) (not (not (= (op e1 e1) (op e1 e2)))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op e0 e0) e0) e0) (op e0 e0))))))
(assume t440 (= (not (= (op e1 e1) (op e1 e2))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op e0 e0) e0) e0) (op e0 e0))))))
(assume t441 (not (= (op e1 e1) (op e1 e2))))
(assume nt442.0 (not (not (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op e0 e0) e0) e0) (op e0 e0))))))
(step t438' (cl (not (= (not (= (op e1 e1) (op e1 e2))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op e0 e0) e0) e0) (op e0 e0)))))) (not (not (= (op e1 e1) (op e1 e2)))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op e0 e0) e0) e0) (op e0 e0))))) :rule or :premises (t438))
(step t442 (cl (not (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op e0 e0) e0) e0) (op e0 e0))))) :rule resolution :premises (t438' t440 t441))
(step t.end (cl) :rule resolution :premises (nt442.0 t442))
