(assume t667 (or (= (op e0 e0) (op (op (op e0 e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op e0 e0) e0) e0))) (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op e0 e0) e0))) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))))))
(assume t493 (not (= (op e0 e0) (op (op (op e0 e0) e0) e0))))
(assume t692 (not (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) e0))))
(assume t773 (not (= (op (op (op e0 e0) e0) e0) (op e0 (op (op e0 e0) e0)))))
(assume t797 (not (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))))))
(assume nt798.0 (not (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op e0 e0) e0) e0)))))
(step t667' (cl (= (op e0 e0) (op (op (op e0 e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op e0 e0) e0) e0))) (= (op e0 (op e0 e0)) (op (op (op e0 e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op e0 e0) e0))) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))))) :rule or :premises (t667))
(step t798 (cl (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op e0 e0) e0) e0)))) :rule resolution :premises (t667' t493 t692 t773 t797))
(step t.end (cl) :rule resolution :premises (nt798.0 t798))
