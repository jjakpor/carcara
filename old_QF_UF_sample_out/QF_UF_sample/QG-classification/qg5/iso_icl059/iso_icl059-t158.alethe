(assume t132 (or (not (= (or (or (or (or (= (op e0 e2) e3) (= (op e1 e2) e3)) (= (op e2 e2) e3)) (= (op e3 e2) e3)) (= (op e4 e2) e3)) (or (= (op (op e0 e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0)))))) (not (or (or (or (or (= (op e0 e2) e3) (= (op e1 e2) e3)) (= (op e2 e2) e3)) (= (op e3 e2) e3)) (= (op e4 e2) e3))) (or (= (op (op e0 e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0))))))
(assume t151 (= (or (or (or (or (= (op e0 e2) e3) (= (op e1 e2) e3)) (= (op e2 e2) e3)) (= (op e3 e2) e3)) (= (op e4 e2) e3)) (or (= (op (op e0 e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0))))))
(assume t157 (or (or (or (or (= (op e0 e2) e3) (= (op e1 e2) e3)) (= (op e2 e2) e3)) (= (op e3 e2) e3)) (= (op e4 e2) e3)))
(assume nt158.0 (not (or (= (op (op e0 e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0))))))
(step t132' (cl (not (= (or (or (or (or (= (op e0 e2) e3) (= (op e1 e2) e3)) (= (op e2 e2) e3)) (= (op e3 e2) e3)) (= (op e4 e2) e3)) (or (= (op (op e0 e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0)))))) (not (or (or (or (or (= (op e0 e2) e3) (= (op e1 e2) e3)) (= (op e2 e2) e3)) (= (op e3 e2) e3)) (= (op e4 e2) e3))) (or (= (op (op e0 e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0))))) :rule or :premises (t132))
(step t158 (cl (or (= (op (op e0 e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op e0 e0))) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) (op e0 e0))) (= (op (op e0 e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 (op e0 e0)) (op (op e0 e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0))))) :rule resolution :premises (t132' t151 t157))
(step t.end (cl) :rule resolution :premises (nt158.0 t158))
