(assume t380 (or (not (= (or (not (= (op e0 e1) e0)) (= (op e1 e0) e0)) (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3)))))) (not (or (not (= (op e0 e1) e0)) (= (op e1 e0) e0))) (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3))))))
(assume t385 (= (or (not (= (op e0 e1) e0)) (= (op e1 e0) e0)) (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3))))))
(assume t390 (or (not (= (op e0 e1) e0)) (= (op e1 e0) e0)))
(assume nt391.0 (not (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3))))))
(step t380' (cl (not (= (or (not (= (op e0 e1) e0)) (= (op e1 e0) e0)) (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3)))))) (not (or (not (= (op e0 e1) e0)) (= (op e1 e0) e0))) (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3))))) :rule or :premises (t380))
(step t391 (cl (or (not (= (op e3 e3) (op (op e3 e3) (op (op e3 e3) (op e3 e3))))) (= (op e3 e3) (op (op (op e3 e3) (op e3 e3)) (op e3 e3))))) :rule resolution :premises (t380' t385 t390))
(step t.end (cl) :rule resolution :premises (nt391.0 t391))
