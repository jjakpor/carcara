(assume nt1026.0 (not (and (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1)))) (= (op (op e1 e3) e1) (op e3 (op e1 e3))) (= (op e1 e3) (op e3 (op e3 (op e1 e3)))) (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)) (= e3 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3))) (= e3 (op e1 (op e1 e3))) (= e3 (op (op e1 e3) (op (op e1 e3) e3))))))
(assume nt1026.1 (not (not (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1)))))))
(assume nt1026.2 (not (not (= (op (op e1 e3) e1) (op e3 (op e1 e3))))))
(assume nt1026.3 (not (not (= (op e1 e3) (op e3 (op e3 (op e1 e3)))))))
(assume nt1026.4 (not (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)))))
(assume nt1026.5 (not (not (= e3 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3))))))
(assume nt1026.6 (not (not (= e3 (op e1 (op e1 e3))))))
(assume nt1026.7 (not (not (= e3 (op (op e1 e3) (op (op e1 e3) e3))))))
(step t1026 (cl (and (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1)))) (= (op (op e1 e3) e1) (op e3 (op e1 e3))) (= (op e1 e3) (op e3 (op e3 (op e1 e3)))) (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)) (= e3 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3))) (= e3 (op e1 (op e1 e3))) (= e3 (op (op e1 e3) (op (op e1 e3) e3)))) (not (not (= (op e3 (op (op e1 e3) e1)) (op (op (op e1 e3) e3) (op (op e1 e3) e1))))) (not (= (op (op e1 e3) e1) (op e3 (op e1 e3)))) (not (= (op e1 e3) (op e3 (op e3 (op e1 e3))))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3))) (not (= e3 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3)))) (not (= e3 (op e1 (op e1 e3)))) (not (= e3 (op (op e1 e3) (op (op e1 e3) e3))))) :rule and_neg)
(step t.end (cl) :rule resolution :premises (nt1026.0 nt1026.1 nt1026.2 nt1026.3 nt1026.4 nt1026.5 nt1026.6 nt1026.7 t1026))
