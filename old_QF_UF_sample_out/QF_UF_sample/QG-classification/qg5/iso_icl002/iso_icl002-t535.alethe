(assume t498 (or (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))) (= (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op (op e0 e0) (op e0 e0)) (op (op e0 (op e0 e0)) e0))))
(assume t178 (not (= (op e0 e0) (op (op e0 (op e0 e0)) e0))))
(assume t505 (not (= (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))
(assume t534 (not (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0)))))
(assume t474 (not (= (op (op e0 e0) (op e0 e0)) (op (op e0 (op e0 e0)) e0))))
(assume nt535.0 (not (= (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0)))))
(step t498' (cl (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))) (= (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op (op e0 e0) (op e0 e0)) (op (op e0 (op e0 e0)) e0))) :rule or :premises (t498))
(step t535 (cl (= (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0)))) :rule resolution :premises (t498' t178 t505 t534 t474))
(step t.end (cl) :rule resolution :premises (nt535.0 t535))
