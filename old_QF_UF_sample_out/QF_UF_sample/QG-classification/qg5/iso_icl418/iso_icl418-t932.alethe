(assume t930 (= (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e0) (op e0 e0)) (= (op e0 e1) (op e1 e0))) (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) true (= (op e0 e1) (op e1 e0)))))
(assume t931 (= (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) true (= (op e0 e1) (op e1 e0))) (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e1) (op e1 e0)))))
(assume nt932.0 (not (= (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e0) (op e0 e0)) (= (op e0 e1) (op e1 e0))) (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e1) (op e1 e0))))))
(step t932 (cl (= (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e0) (op e0 e0)) (= (op e0 e1) (op e1 e0))) (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e1) (op e1 e0))))) :rule trans :premises (t930 t931))
(step t.end (cl) :rule resolution :premises (nt932.0 t932))
