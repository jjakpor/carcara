(assume t403 (or (not (= (not (= (op e0 e0) (op e0 e3))) (not (= (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) e3))))) (not (not (= (op e0 e0) (op e0 e3)))) (not (= (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) e3)))))
(assume t405 (= (not (= (op e0 e0) (op e0 e3))) (not (= (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) e3)))))
(assume t414 (not (= (op e0 e0) (op e0 e3))))
(assume nt415.0 (not (not (= (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) e3)))))
(step t403' (cl (not (= (not (= (op e0 e0) (op e0 e3))) (not (= (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) e3))))) (not (not (= (op e0 e0) (op e0 e3)))) (not (= (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) e3)))) :rule or :premises (t403))
(step t415 (cl (not (= (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))) (op (op (op e4 e3) (op e4 e3)) e3)))) :rule resolution :premises (t403' t405 t414))
(step t.end (cl) :rule resolution :premises (nt415.0 t415))
