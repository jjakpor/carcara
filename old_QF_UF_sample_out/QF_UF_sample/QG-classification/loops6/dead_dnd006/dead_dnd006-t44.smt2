(set-logic QF_UF)
(declare-sort U 0)
(declare-sort I 0)
(declare-fun unit () I)
(declare-fun op (I I) I)
(declare-fun e5 () I)
(declare-fun e4 () I)
(declare-fun e3 () I)
(declare-fun e2 () I)
(declare-fun e1 () I)
(declare-fun e0 () I)
(assert (= (or (or (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= (op e0 e0) unit))) (and (= (op e1 (op e1 e0)) e0) (not (= (op e1 e0) unit)))) (and (= (op e2 (op e2 e0)) e0) (not (= (op e2 e0) unit)))) (and (= (op e3 (op e3 e0)) e0) (not (= (op e3 e0) unit)))) (and (= (op e4 (op e4 e0)) e0) (not (= (op e4 e0) unit)))) (and (= (op e5 (op e5 e0)) e0) (not (= (op e5 e0) unit)))) (or (and (= (op e5 (op e5 e0)) e0) (not (= (op e5 e0) unit))) (and (= (op e4 (op e4 e0)) e0) (not (= (op e4 e0) unit))) (and (= (op e3 (op e3 e0)) e0) (not (= (op e3 e0) unit))) (and (= (op e2 (op e2 e0)) e0) (not (= (op e2 e0) unit))) (and (= (op e0 (op e0 e0)) e0) (not (= (op e0 e0) unit))) (and (= (op e1 (op e1 e0)) e0) (not (= (op e1 e0) unit))))))
(assert (= (or (and (= (op e5 (op e5 e0)) e0) (not (= (op e5 e0) unit))) (and (= (op e4 (op e4 e0)) e0) (not (= (op e4 e0) unit))) (and (= (op e3 (op e3 e0)) e0) (not (= (op e3 e0) unit))) (and (= (op e2 (op e2 e0)) e0) (not (= (op e2 e0) unit))) (and (= (op e0 (op e0 e0)) e0) (not (= (op e0 e0) unit))) (and (= (op e1 (op e1 e0)) e0) (not (= (op e1 e0) unit)))) (or (and (= e0 (op e5 (op e5 e0))) (not (= unit (op e5 e0)))) (and (= e0 (op e4 (op e4 e0))) (not (= unit (op e4 e0)))) (and (= e0 (op e3 (op e3 e0))) (not (= unit (op e3 e0)))) (and (= e0 (op e2 (op e2 e0))) (not (= unit (op e2 e0)))) (and (= e0 (op e0 (op e0 e0))) (not (= unit (op e0 e0)))) (and (= e0 (op e1 (op e1 e0))) (not (= unit (op e1 e0)))))))
(assert (not (= (or (or (or (or (or (and (= (op e0 (op e0 e0)) e0) (not (= (op e0 e0) unit))) (and (= (op e1 (op e1 e0)) e0) (not (= (op e1 e0) unit)))) (and (= (op e2 (op e2 e0)) e0) (not (= (op e2 e0) unit)))) (and (= (op e3 (op e3 e0)) e0) (not (= (op e3 e0) unit)))) (and (= (op e4 (op e4 e0)) e0) (not (= (op e4 e0) unit)))) (and (= (op e5 (op e5 e0)) e0) (not (= (op e5 e0) unit)))) (or (and (= e0 (op e5 (op e5 e0))) (not (= unit (op e5 e0)))) (and (= e0 (op e4 (op e4 e0))) (not (= unit (op e4 e0)))) (and (= e0 (op e3 (op e3 e0))) (not (= unit (op e3 e0)))) (and (= e0 (op e2 (op e2 e0))) (not (= unit (op e2 e0)))) (and (= e0 (op e0 (op e0 e0))) (not (= unit (op e0 e0)))) (and (= e0 (op e1 (op e1 e0))) (not (= unit (op e1 e0))))))))
(check-sat)
(exit)
