(assume t396 (or (=> (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))) false) (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))))
(assume t404 (or (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) false))
(assume nt405.0 (not (=> (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))) false)))
(assume nt405.1 (not false))
(step t396' (cl (=> (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))) false) (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) :rule or :premises (t396))
(step t404' (cl (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) false) :rule or :premises (t404))
(step t405 (cl (=> (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))) false) false) :rule resolution :premises (t396' t404'))
(step t.end (cl) :rule resolution :premises (nt405.0 nt405.1 t405))
