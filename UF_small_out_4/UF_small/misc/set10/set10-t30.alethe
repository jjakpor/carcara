(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union a b))) (member ?x c)))))
(assume nst30.0 (not (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2)))) (or (not (member @quantifiers_skolemize_3 b)) (not (subset b c)) (member @quantifiers_skolemize_3 c)))))
(step st30 (cl (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (or (not (member ?x ?s1)) (not (subset ?s1 ?s2)) (member ?x ?s2)))) (or (not (member @quantifiers_skolemize_3 b)) (not (subset b c)) (member @quantifiers_skolemize_3 c)))) :rule forall_inst :args (@quantifiers_skolemize_3 b c))
(step t.end (cl) :rule resolution :premises (nst30.0 st30))
