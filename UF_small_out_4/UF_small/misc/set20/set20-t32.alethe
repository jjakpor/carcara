(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst32.0 (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b))))
(assume nst32.1 (not (not (member @quantifiers_skolemize_4 a))))
(assume nst32.2 (not (not (member @quantifiers_skolemize_4 b))))
(step st32 (cl (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b)) (not (member @quantifiers_skolemize_4 a)) (not (member @quantifiers_skolemize_4 b))) :rule and_neg)
(step t.end (cl) :rule resolution :premises (nst32.0 nst32.1 nst32.2 st32))
