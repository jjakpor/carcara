(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst19.0 (not (= (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))) (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))))))
(step st19 (cl (= (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))) (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))))) :rule refl)
(step t.end (cl) :rule resolution :premises (nst19.0 st19))
