(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst0.0 (not (not (= (member @quantifiers_skolemize_4 (difference a b)) (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b)))))))
(assume nst0.1 (not (member @quantifiers_skolemize_4 (difference a b))))
(assume nst0.2 (not (not (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))))))
(step st0 (cl (not (= (member @quantifiers_skolemize_4 (difference a b)) (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))))) (member @quantifiers_skolemize_4 (difference a b)) (not (and (member @quantifiers_skolemize_4 a) (not (member @quantifiers_skolemize_4 b))))) :rule equiv_pos1)
(step t.end (cl) :rule resolution :premises (nst0.0 nst0.1 nst0.2 st0))
