(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst39.0 (not (= (or (not (not (forall ((?x Elem)) (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b)))))) (not (or (not (member @quantifiers_skolemize_4 (difference a (difference a b)))) (member @quantifiers_skolemize_4 (intersection a b))))) (or (forall ((?x Elem)) (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b)))) (not (or (not (member @quantifiers_skolemize_4 (difference a (difference a b)))) (member @quantifiers_skolemize_4 (intersection a b))))))))
(assume t37 (= (not (not (forall ((?x Elem)) (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b)))))) (forall ((?x Elem)) (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume t38 (= (not (or (not (member @quantifiers_skolemize_4 (difference a (difference a b)))) (member @quantifiers_skolemize_4 (intersection a b)))) (not (or (not (member @quantifiers_skolemize_4 (difference a (difference a b)))) (member @quantifiers_skolemize_4 (intersection a b))))))
(step st39 (cl (= (or (not (not (forall ((?x Elem)) (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b)))))) (not (or (not (member @quantifiers_skolemize_4 (difference a (difference a b)))) (member @quantifiers_skolemize_4 (intersection a b))))) (or (forall ((?x Elem)) (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b)))) (not (or (not (member @quantifiers_skolemize_4 (difference a (difference a b)))) (member @quantifiers_skolemize_4 (intersection a b))))))) :rule cong :premises (t37 t38))
(step t.end (cl) :rule resolution :premises (nst39.0 st39))
