(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst74.0 (not (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))))
(assume nst74.1 (not (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))))
(assume t73 (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))))
(step st74 (cl (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b))))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))) :rule implies :premises (t73))
(step t.end (cl) :rule resolution :premises (nst74.0 nst74.1 st74))
