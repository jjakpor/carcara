(define-fun @quantifiers_skolemize_1 () Elem (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))))
(define-fun @quantifiers_skolemize_2 () List (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))))
(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2)))))))
(define-fun @quantifiers_skolemize_4 () List (choice ((?y2 List)) (not (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2)))))) ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2))))))) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2))))))
(assume nst18.0 (not (= (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2) (cons @quantifiers_skolemize_3 @quantifiers_skolemize_4))))
(assume nst18.1 (not (or (not (= (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2) (cons @quantifiers_skolemize_3 @quantifiers_skolemize_4))) (and (= @quantifiers_skolemize_1 @quantifiers_skolemize_3) (= @quantifiers_skolemize_2 @quantifiers_skolemize_4)))))
(assume t17 (or (or (not (= (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2) (cons @quantifiers_skolemize_3 @quantifiers_skolemize_4))) (and (= @quantifiers_skolemize_1 @quantifiers_skolemize_3) (= @quantifiers_skolemize_2 @quantifiers_skolemize_4))) (= (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2) (cons @quantifiers_skolemize_3 @quantifiers_skolemize_4))))
(step t17' (cl (or (not (= (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2) (cons @quantifiers_skolemize_3 @quantifiers_skolemize_4))) (and (= @quantifiers_skolemize_1 @quantifiers_skolemize_3) (= @quantifiers_skolemize_2 @quantifiers_skolemize_4))) (= (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2) (cons @quantifiers_skolemize_3 @quantifiers_skolemize_4))) :rule or :premises (t17))
(step st18 (cl (= (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2) (cons @quantifiers_skolemize_3 @quantifiers_skolemize_4)) (or (not (= (cons @quantifiers_skolemize_1 @quantifiers_skolemize_2) (cons @quantifiers_skolemize_3 @quantifiers_skolemize_4))) (and (= @quantifiers_skolemize_1 @quantifiers_skolemize_3) (= @quantifiers_skolemize_2 @quantifiers_skolemize_4)))) :rule reordering :premises (t17'))
(step t.end (cl) :rule resolution :premises (nst18.0 nst18.1 st18))
