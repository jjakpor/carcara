(set-logic UF)
(declare-sort List 0)
(declare-sort Elem 0)
(declare-fun cons (Elem List) List)
(declare-fun nil () List)
(declare-fun car (List) Elem)
(declare-fun cdr (List) List)
(assert (not (= (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (=> (= (cons ?x1 ?y1) (cons ?x2 ?y2)) (and (= ?x1 ?x2) (= ?y1 ?y2))))) (not (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2))))))))
(assert (= (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (=> (= (cons ?x1 ?y1) (cons ?x2 ?y2)) (and (= ?x1 ?x2) (= ?y1 ?y2)))) (forall ((?x1 Elem) (?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2))))))
(check-sat)
(exit)
