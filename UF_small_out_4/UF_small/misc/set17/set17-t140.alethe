(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst140.0 (not (member @quantifiers_skolemize_4 a)))
(assume nst140.1 (not (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 (union b c))))))
(assume t139 (or (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 (union b c)))) (member @quantifiers_skolemize_4 a)))
(step t139' (cl (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 (union b c)))) (member @quantifiers_skolemize_4 a)) :rule or :premises (t139))
(step st140 (cl (member @quantifiers_skolemize_4 a) (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 (union b c))))) :rule reordering :premises (t139'))
(step t.end (cl) :rule resolution :premises (nst140.0 nst140.1 st140))
