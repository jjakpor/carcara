(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst91.0 (not (member @quantifiers_skolemize_3 a)))
(assume nst91.1 (not (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)))))
(assume t90 (or (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) (member @quantifiers_skolemize_3 a)))
(step t90' (cl (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) (member @quantifiers_skolemize_3 a)) :rule or :premises (t90))
(step st91 (cl (member @quantifiers_skolemize_3 a) (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)))) :rule reordering :premises (t90'))
(step t.end (cl) :rule resolution :premises (nst91.0 nst91.1 st91))
