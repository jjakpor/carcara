(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference b a))) (member ?x (difference b d))))))
(assume nst47.0 (not (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference b a))))))
(assume nst47.1 (not (= (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference b a)))))
(assume t45 (or (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference b a)))) (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2))))))
(assume t46 (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2))))) (= (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference b a)))))
(step t45' (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference b a)))) (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2))))) :rule or :premises (t45))
(step t46' (cl (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2))))) (= (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference b a)))) :rule or :premises (t46))
(step st47 (cl (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference b a)))) (= (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))) (member @quantifiers_skolemize_3 (difference b a)))) :rule resolution :premises (t45' t46'))
(step t.end (cl) :rule resolution :premises (nst47.0 nst47.1 st47))
