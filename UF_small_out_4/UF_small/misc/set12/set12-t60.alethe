(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst60.0 (not (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)))))))
(assume t59 (or (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))))) (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)))))))
(step t59' (cl (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))))) (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)))))) :rule or :premises (t59))
(step st60 (cl (=> (not (forall ((?x Elem)) (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)))))) :rule contraction :premises (t59'))
(step t.end (cl) :rule resolution :premises (nst60.0 st60))
