(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst105.0 (not (not (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2)))))))))
(assume nst105.1 (not (or (subset (intersection b a) (intersection a b)) (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))))
(assume t104 (or (not (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) (or (subset (intersection b a) (intersection a b)) (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))))
(step st105 (cl (not (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) (or (subset (intersection b a) (intersection a b)) (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))) :rule or :premises (t104))
(step t.end (cl) :rule resolution :premises (nst105.0 nst105.1 st105))
