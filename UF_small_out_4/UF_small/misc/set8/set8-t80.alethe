(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst80.0 (not (not (= (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))) (member @quantifiers_skolemize_3 (intersection a b)))))))
(assume nst80.1 (not (not (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))) (not (not (member @quantifiers_skolemize_3 (intersection a b))))))))
(assume nst80.2 (not (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))) (member @quantifiers_skolemize_3 (intersection a b)))))
(step st80 (cl (not (= (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))) (member @quantifiers_skolemize_3 (intersection a b))))) (not (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))) (not (not (member @quantifiers_skolemize_3 (intersection a b)))))) (or (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))) (member @quantifiers_skolemize_3 (intersection a b)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst80.0 nst80.1 nst80.2 st80))
