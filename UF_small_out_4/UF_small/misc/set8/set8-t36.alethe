(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst36.0 (not (subset (intersection b a) (intersection a b))))
(assume nst36.1 (not (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))))))
(assume nst36.2 (not (not (or (subset (intersection b a) (intersection a b)) (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))))))))
(assume t35 (or (not (or (subset (intersection b a) (intersection a b)) (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))) (subset (intersection b a) (intersection a b)) (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))))))
(step t35' (cl (not (or (subset (intersection b a) (intersection a b)) (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))) (subset (intersection b a) (intersection a b)) (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))))) :rule or :premises (t35))
(step st36 (cl (subset (intersection b a) (intersection a b)) (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))) (not (or (subset (intersection b a) (intersection a b)) (not (forall ((?x Elem)) (or (not (member ?x (intersection b a))) (member ?x (intersection a b)))))))) :rule reordering :premises (t35'))
(step t.end (cl) :rule resolution :premises (nst36.0 nst36.1 nst36.2 st36))
