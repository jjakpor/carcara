(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst48.0 (not (= (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))))))
(step st48 (cl (= (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))))) :rule refl)
(step t.end (cl) :rule resolution :premises (nst48.0 st48))
