(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst95.0 (not (not (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2)))))))))
(assume nst95.1 (not (or (subset (intersection a b) (intersection b a)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))))
(assume t94 (or (not (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) (or (subset (intersection a b) (intersection b a)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))))
(step st95 (cl (not (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) (or (subset (intersection a b) (intersection b a)) (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))) :rule or :premises (t94))
(step t.end (cl) :rule resolution :premises (nst95.0 nst95.1 st95))
