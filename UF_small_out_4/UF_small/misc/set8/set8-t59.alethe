(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst59.0 (not (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))))))
(assume nst59.1 (not (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))))))
(assume t56 (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))))
(assume t57 (or (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) (not (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))))))
(assume t58 (or (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) (not (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))))))
(step t56' (cl (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) :rule or :premises (t56))
(step t57' (cl (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) (not (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))))) :rule or :premises (t57))
(step t58' (cl (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) (not (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))))) :rule or :premises (t58))
(step st59 (cl (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a)))))) :rule resolution :premises (t56' t57' t58'))
(step t.end (cl) :rule resolution :premises (nst59.0 nst59.1 st59))
