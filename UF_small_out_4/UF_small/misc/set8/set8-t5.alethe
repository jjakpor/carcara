(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst5.0 (not (not (member @quantifiers_skolemize_4 (intersection b a)))))
(assume nst5.1 (not (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a))))
(assume nst5.2 (not (not (= (member @quantifiers_skolemize_4 (intersection b a)) (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a))))))
(assume t4 (or (not (= (member @quantifiers_skolemize_4 (intersection b a)) (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a)))) (not (member @quantifiers_skolemize_4 (intersection b a))) (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a))))
(step t4' (cl (not (= (member @quantifiers_skolemize_4 (intersection b a)) (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a)))) (not (member @quantifiers_skolemize_4 (intersection b a))) (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a))) :rule or :premises (t4))
(step st5 (cl (not (member @quantifiers_skolemize_4 (intersection b a))) (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a)) (not (= (member @quantifiers_skolemize_4 (intersection b a)) (and (member @quantifiers_skolemize_4 b) (member @quantifiers_skolemize_4 a))))) :rule reordering :premises (t4'))
(step t.end (cl) :rule resolution :premises (nst5.0 nst5.1 nst5.2 st5))
