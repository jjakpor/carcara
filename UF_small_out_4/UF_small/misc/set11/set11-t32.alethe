(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x b)) (member ?x (union a b))))))
(assume nst32.0 (not (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b)))))))
(assume a8 (not (subset b (union a b))))
(assume t23 (or (subset b (union a b)) (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))) (not (or (subset b (union a b)) (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b)))))))))
(assume t31 (or (subset b (union a b)) (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b)))))))
(step t23' (cl (subset b (union a b)) (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))) (not (or (subset b (union a b)) (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b)))))))) :rule or :premises (t23))
(step st32 (cl (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b)))))) :rule resolution :premises (t23' a8 t31))
(step t.end (cl) :rule resolution :premises (nst32.0 st32))
