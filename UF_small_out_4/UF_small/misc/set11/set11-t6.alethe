(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x b)) (member ?x (union a b))))))
(assume nst6.0 (not (not (member @quantifiers_skolemize_3 b))))
(assume nst6.1 (not (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))))
(assume t5 (or (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)) (not (member @quantifiers_skolemize_3 b))))
(step t5' (cl (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)) (not (member @quantifiers_skolemize_3 b))) :rule or :premises (t5))
(step st6 (cl (not (member @quantifiers_skolemize_3 b)) (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) :rule reordering :premises (t5'))
(step t.end (cl) :rule resolution :premises (nst6.0 nst6.1 st6))
