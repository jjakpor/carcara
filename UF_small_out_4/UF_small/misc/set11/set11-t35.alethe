(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x b)) (member ?x (union a b))))))
(assume nst35.0 (not (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))))
(assume t6 (or (not (member @quantifiers_skolemize_3 b)) (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))))
(assume t34 (member @quantifiers_skolemize_3 b))
(step t6' (cl (not (member @quantifiers_skolemize_3 b)) (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) :rule or :premises (t6))
(step st35 (cl (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) :rule resolution :premises (t6' t34))
(step t.end (cl) :rule resolution :premises (nst35.0 st35))
