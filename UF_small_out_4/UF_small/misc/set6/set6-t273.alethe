(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume t1 (or (not (member @quantifiers_skolemize_4 b)) (not (member @quantifiers_skolemize_4 a)) (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b))))
(assume t232 (member @quantifiers_skolemize_4 a))
(assume t263 (member @quantifiers_skolemize_4 b))
(assume t272 (not (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b))))
(step t1' (cl (not (member @quantifiers_skolemize_4 b)) (not (member @quantifiers_skolemize_4 a)) (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b))) :rule or :premises (t1))
(step st273 (cl) :rule resolution :premises (t1' t232 t263 t272))
