(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst88.0 (not (= (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (member @quantifiers_skolemize_3 (intersection a b))))))
(assume t85 (= (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b))))))
(assume t86 (= (not (member @quantifiers_skolemize_3 c)) (not (member @quantifiers_skolemize_3 c))))
(assume t87 (= (not (not (member @quantifiers_skolemize_3 (intersection a b)))) (member @quantifiers_skolemize_3 (intersection a b))))
(step st88 (cl (= (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (member @quantifiers_skolemize_3 (intersection a b))))) :rule cong :premises (t85 t86 t87))
(step t.end (cl) :rule resolution :premises (nst88.0 st88))
