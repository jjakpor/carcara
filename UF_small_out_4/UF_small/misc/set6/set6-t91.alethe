(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst91.0 (not (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b)))))))
(assume nst91.1 (not (not (not (member @quantifiers_skolemize_3 c)))))
(step st91 (cl (or (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 (intersection a b)))) (not (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (intersection a b))))) (not (not (member @quantifiers_skolemize_3 c)))) :rule or_neg :args (1))
(step t.end (cl) :rule resolution :premises (nst91.0 nst91.1 st91))
