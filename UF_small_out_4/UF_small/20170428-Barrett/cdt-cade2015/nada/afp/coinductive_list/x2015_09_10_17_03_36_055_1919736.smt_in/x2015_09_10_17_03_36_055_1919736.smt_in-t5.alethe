(assume nst5.0 (not (=> (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0)))) (or (not (fun_app$ (less_eq$ (llength$a xs$)) (llength$ us$))) (= xs$ (ltake$ (llength$ us$) xs$))))))
(assume t4 (or (=> (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0)))) (or (not (fun_app$ (less_eq$ (llength$a xs$)) (llength$ us$))) (= xs$ (ltake$ (llength$ us$) xs$)))) (=> (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0)))) (or (not (fun_app$ (less_eq$ (llength$a xs$)) (llength$ us$))) (= xs$ (ltake$ (llength$ us$) xs$))))))
(step t4' (cl (=> (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0)))) (or (not (fun_app$ (less_eq$ (llength$a xs$)) (llength$ us$))) (= xs$ (ltake$ (llength$ us$) xs$)))) (=> (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0)))) (or (not (fun_app$ (less_eq$ (llength$a xs$)) (llength$ us$))) (= xs$ (ltake$ (llength$ us$) xs$))))) :rule or :premises (t4))
(step st5 (cl (=> (forall ((?v0 A_llist$) (?v1 Enat$)) (or (not (fun_app$ (less_eq$ (llength$a ?v0)) ?v1)) (= ?v0 (ltake$ ?v1 ?v0)))) (or (not (fun_app$ (less_eq$ (llength$a xs$)) (llength$ us$))) (= xs$ (ltake$ (llength$ us$) xs$))))) :rule contraction :premises (t4'))
(step t.end (cl) :rule resolution :premises (nst5.0 st5))
