(define-fun @quantifiers_skolemize_10 () A_list$ (choice ((?v3 A_list$)) (not (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3)))))))
(assume nst19.0 (not (not (= (not (forall ((?v3 A_list$)) (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3)))))) (not (or (not (member$c @quantifiers_skolemize_10 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))))))))
(assume nst19.1 (not (not (not (forall ((?v3 A_list$)) (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3)))))))))
(assume nst19.2 (not (not (or (not (member$c @quantifiers_skolemize_10 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))))))
(step st19 (cl (not (= (not (forall ((?v3 A_list$)) (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3)))))) (not (or (not (member$c @quantifiers_skolemize_10 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10))))))) (not (not (forall ((?v3 A_list$)) (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3))))))) (not (or (not (member$c @quantifiers_skolemize_10 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst19.0 nst19.1 nst19.2 st19))
