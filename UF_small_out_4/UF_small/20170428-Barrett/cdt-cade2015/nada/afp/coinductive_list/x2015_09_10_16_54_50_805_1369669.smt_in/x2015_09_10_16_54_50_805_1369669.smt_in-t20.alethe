(define-fun @quantifiers_skolemize_10 () A_list$ (choice ((?v3 A_list$)) (not (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3)))))))
(assume nt20.0 (not (= (forall ((?v3 A_list$)) (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3))))) (or (not (member$c @quantifiers_skolemize_10 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))))))
(anchor :step t20 :args ((:= (?v3 A_list$) @quantifiers_skolemize_10)))
(step t20.t0 (cl (= (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3)))) (or (not (member$c @quantifiers_skolemize_10 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))))) :rule trust)
(step t20 (cl (= (forall ((?v3 A_list$)) (or (not (member$c ?v3 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ ?v3))))) (or (not (member$c @quantifiers_skolemize_10 (collect$a top$b))) (not (= xs$ (fun_app$g llist_of$ @quantifiers_skolemize_10)))))) :rule sko_forall)
(step t.end (cl) :rule resolution :premises (nt20.0 t20))
