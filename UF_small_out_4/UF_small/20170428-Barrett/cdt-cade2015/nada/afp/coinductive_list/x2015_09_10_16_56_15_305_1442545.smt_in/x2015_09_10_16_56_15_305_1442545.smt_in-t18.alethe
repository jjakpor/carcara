(assume nst18.0 (not (not (= (or (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$))) (not (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)))) (not (not (fun_app$h lnull$ xs$)))) (or (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$))) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)) (fun_app$h lnull$ xs$))))))
(assume nst18.1 (not (not (or (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$))) (not (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)))) (not (not (fun_app$h lnull$ xs$)))))))
(assume nst18.2 (not (or (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$))) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)) (fun_app$h lnull$ xs$))))
(step st18 (cl (not (= (or (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$))) (not (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)))) (not (not (fun_app$h lnull$ xs$)))) (or (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$))) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)) (fun_app$h lnull$ xs$)))) (not (or (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$))) (not (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)))) (not (not (fun_app$h lnull$ xs$))))) (or (and (not (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$))) (not (fun_app$h lnull$ xs$))) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)) (fun_app$h lnull$ xs$))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst18.0 nst18.1 nst18.2 st18))
