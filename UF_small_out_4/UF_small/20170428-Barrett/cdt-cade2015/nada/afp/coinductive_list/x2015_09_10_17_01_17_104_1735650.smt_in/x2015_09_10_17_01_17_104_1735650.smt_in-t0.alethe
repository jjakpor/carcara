(assume nst0.0 (not (not (= (or (not (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$))))) (not (= (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))) (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$))))) (or (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$))) (not (= (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))) (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))))))))
(assume nst0.1 (not (not (or (not (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$))))) (not (= (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))) (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$))))))))
(assume nst0.2 (not (or (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$))) (not (= (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))) (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))))))
(step st0 (cl (not (= (or (not (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$))))) (not (= (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))) (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$))))) (or (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$))) (not (= (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))) (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$))))))) (not (or (not (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$))))) (not (= (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))) (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))))) (or (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$))) (not (= (iterates$ f$ (fun_app$a (fun_app$b (fun_app$c funpow$ n$) f$) x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))) (not (= (fun_app$ (ldrop$ (enat$ n$)) (iterates$ f$ x$)) (fun_app$ (ldropn$ n$) (iterates$ f$ x$)))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst0.0 nst0.1 nst0.2 st0))
