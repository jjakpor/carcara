(assume nst12.0 (not (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (member$ ?v2 (alphabet$ ?v0)) (not (= ?v1 ?v2)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ ?v0))) (= ?v1 ?v3) (= ?v2 ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3))))))))))
(assume a38 (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (and (member$ ?v2 (alphabet$ ?v0)) (and (not (= ?v1 ?v2)) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (=> (and (member$ ?v3 (alphabet$ ?v0)) (and (not (= ?v3 ?v1)) (not (= ?v3 ?v2)))) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3))))))))))))
(assume t10 (or (not (= (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (and (member$ ?v2 (alphabet$ ?v0)) (and (not (= ?v1 ?v2)) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (=> (and (member$ ?v3 (alphabet$ ?v0)) (and (not (= ?v3 ?v1)) (not (= ?v3 ?v2)))) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3))))))))))) (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (member$ ?v2 (alphabet$ ?v0)) (not (= ?v1 ?v2)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ ?v0))) (= ?v1 ?v3) (= ?v2 ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3)))))))))) (not (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (and (member$ ?v2 (alphabet$ ?v0)) (and (not (= ?v1 ?v2)) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (=> (and (member$ ?v3 (alphabet$ ?v0)) (and (not (= ?v3 ?v1)) (not (= ?v3 ?v2)))) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3)))))))))))) (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (member$ ?v2 (alphabet$ ?v0)) (not (= ?v1 ?v2)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ ?v0))) (= ?v1 ?v3) (= ?v2 ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3))))))))))
(assume t11 (= (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (and (member$ ?v2 (alphabet$ ?v0)) (and (not (= ?v1 ?v2)) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (=> (and (member$ ?v3 (alphabet$ ?v0)) (and (not (= ?v3 ?v1)) (not (= ?v3 ?v2)))) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3))))))))))) (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (member$ ?v2 (alphabet$ ?v0)) (not (= ?v1 ?v2)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ ?v0))) (= ?v1 ?v3) (= ?v2 ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3))))))))))
(step t10' (cl (not (= (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (and (member$ ?v2 (alphabet$ ?v0)) (and (not (= ?v1 ?v2)) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (=> (and (member$ ?v3 (alphabet$ ?v0)) (and (not (= ?v3 ?v1)) (not (= ?v3 ?v2)))) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3))))))))))) (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (member$ ?v2 (alphabet$ ?v0)) (not (= ?v1 ?v2)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ ?v0))) (= ?v1 ?v3) (= ?v2 ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3)))))))))) (not (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (and (member$ ?v2 (alphabet$ ?v0)) (and (not (= ?v1 ?v2)) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (=> (and (member$ ?v3 (alphabet$ ?v0)) (and (not (= ?v3 ?v1)) (not (= ?v3 ?v2)))) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3)))))))))))) (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (member$ ?v2 (alphabet$ ?v0)) (not (= ?v1 ?v2)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ ?v0))) (= ?v1 ?v3) (= ?v2 ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3))))))))) :rule or :premises (t10))
(step st12 (cl (forall ((?v0 A_tree$) (?v1 A$) (?v2 A$)) (= (fun_app$ (fun_app$c (minima$ ?v0) ?v1) ?v2) (and (member$ ?v1 (alphabet$ ?v0)) (member$ ?v2 (alphabet$ ?v0)) (not (= ?v1 ?v2)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v2)) (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ ?v0))) (= ?v1 ?v3) (= ?v2 ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v1)) (fun_app$a (freq$ ?v0) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ ?v0) ?v2)) (fun_app$a (freq$ ?v0) ?v3))))))))) :rule resolution :premises (t10' t11 a38))
(step t.end (cl) :rule resolution :premises (nst12.0 st12))
