(assume nst171.0 (not (not (and (member$ a$ (alphabet$ t$)) (member$ b$ (alphabet$ t$)) (not (= a$ b$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) b$)) (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ t$))) (= a$ ?v3) (= b$ ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) ?v3)))))))))
(assume nst171.1 (not (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ t$))) (= a$ ?v3) (= b$ ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) ?v3)))))))
(step st171 (cl (not (and (member$ a$ (alphabet$ t$)) (member$ b$ (alphabet$ t$)) (not (= a$ b$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) b$)) (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ t$))) (= a$ ?v3) (= b$ ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) ?v3))))))) (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ t$))) (= a$ ?v3) (= b$ ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) ?v3)))))) :rule and_pos :args (4))
(step t.end (cl) :rule resolution :premises (nst171.0 nst171.1 st171))
