(assume nst293.0 (not (or (not (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ t$))) (= a$ ?v3) (= b$ ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) ?v3)))))) (or (not (member$ d$ (alphabet$ t$))) (= a$ d$) (= b$ d$) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) d$)))))))
(step st293 (cl (or (not (forall ((?v3 A$)) (or (not (member$ ?v3 (alphabet$ t$))) (= a$ ?v3) (= b$ ?v3) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) ?v3)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) ?v3)))))) (or (not (member$ d$ (alphabet$ t$))) (= a$ d$) (= b$ d$) (and (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$)) (fun_app$b (less_eq$ (fun_app$a (freq$ t$) b$)) (fun_app$a (freq$ t$) d$)))))) :rule forall_inst :args (d$))
(step t.end (cl) :rule resolution :premises (nst293.0 st293))
