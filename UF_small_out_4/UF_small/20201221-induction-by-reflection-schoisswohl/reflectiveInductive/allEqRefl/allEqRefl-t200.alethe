(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (equal x x x))))
(define-fun @quantifiers_skolemize_7 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))))
(assume nst200.0 (not (= (not (forall ((x nat)) (equal x x x))) (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1)))))
(assume t199 (= (forall ((x nat)) (equal x x x)) (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1)))
(step st200 (cl (= (not (forall ((x nat)) (equal x x x))) (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1)))) :rule cong :premises (t199))
(step t.end (cl) :rule resolution :premises (nst200.0 st200))
