(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst215.0 (not (not (leq zero @quantifiers_skolemize_1))))
(assume a16 (not (forall ((x nat)) (leq zero x))))
(assume t212 (or (not (= (not (forall ((x nat)) (leq zero x))) (not (leq zero @quantifiers_skolemize_1)))) (not (not (forall ((x nat)) (leq zero x)))) (not (leq zero @quantifiers_skolemize_1))))
(assume t214 (= (not (forall ((x nat)) (leq zero x))) (not (leq zero @quantifiers_skolemize_1))))
(step t212' (cl (not (= (not (forall ((x nat)) (leq zero x))) (not (leq zero @quantifiers_skolemize_1)))) (not (not (forall ((x nat)) (leq zero x)))) (not (leq zero @quantifiers_skolemize_1))) :rule or :premises (t212))
(step st215 (cl (not (leq zero @quantifiers_skolemize_1))) :rule resolution :premises (t212' t214 a16))
(step t.end (cl) :rule resolution :premises (nst215.0 st215))
