(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst48.0 (not (not (= (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat))) true))))
(assume nst48.1 (not (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))))
(assume t47 (= (= (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat))) true) (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))))
(step st48 (cl (not (= (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat))) true)) (leq (eval_nat (push_nat empty v0_nat zero) zeroR) (eval_nat (push_nat empty v0_nat zero) (inj_nat v0_nat)))) :rule equiv1 :premises (t47))
(step t.end (cl) :rule resolution :premises (nst48.0 nst48.1 st48))
