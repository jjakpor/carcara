(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst55.0 (not (= (eval_nat (push_nat empty v0_nat zero) zeroR) zero)))
(assume t54 (= zero (eval_nat (push_nat empty v0_nat zero) zeroR)))
(step st55 (cl (= (eval_nat (push_nat empty v0_nat zero) zeroR) zero)) :rule symm :premises (t54))
(step t.end (cl) :rule resolution :premises (nst55.0 st55))
