(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))
(assume nst12.0 (not (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))))))))
(assume nst12.1 (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha))))))
(assume nst12.2 (not (not (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))))
(step st12 (cl (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))) (not (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha)))))) :rule equiv_pos1)
(step t.end (cl) :rule resolution :premises (nst12.0 nst12.1 nst12.2 st12))
