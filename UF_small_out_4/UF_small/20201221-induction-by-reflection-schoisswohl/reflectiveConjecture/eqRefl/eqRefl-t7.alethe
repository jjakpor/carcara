(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))))))
(assume nst7.0 (not (= (=> (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha))))) (=> (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha)))))))
(assume t1 (= (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))) (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y))))))
(assume t6 (= (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha)))))
(step st7 (cl (= (=> (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))) (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) (= (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha)) (eval_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (inj_alpha v0_alpha))))) (=> (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha)))))) :rule cong :premises (t1 t6))
(step t.end (cl) :rule resolution :premises (nst7.0 st7))
