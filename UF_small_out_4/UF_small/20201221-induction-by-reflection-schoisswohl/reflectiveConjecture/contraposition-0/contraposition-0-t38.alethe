(assume nst38.0 (not (not (= (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models empty (notR (qR bR))) (not (models empty (qR bR))))) (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR)))))))))
(assume nst38.1 (not (not (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models empty (notR (qR bR))) (not (models empty (qR bR))))))))
(assume nst38.2 (not (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR)))))))
(step st38 (cl (not (= (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models empty (notR (qR bR))) (not (models empty (qR bR))))) (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR))))))) (not (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models empty (notR (qR bR))) (not (models empty (qR bR)))))) (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR)))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst38.0 nst38.1 nst38.2 st38))
