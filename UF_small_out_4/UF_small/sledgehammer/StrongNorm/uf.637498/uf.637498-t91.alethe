(assume nst91.0 (not (forall ((?v2 S2) (?v3 S22)) (or (not (= (f33 (f34 f38 (f9 f10 f11)) f39) (f33 (f34 f38 ?v2) ?v3))) (not (= (f115 (f133 f134 f5) f135) (f3 f5 ?v2))) (not (= (f115 (f133 f134 f5) f135) (f115 (f133 f134 f5) ?v3)))))))
(assume t50 (or (forall ((?v2 S2) (?v3 S22)) (or (not (= (f33 (f34 f38 (f9 f10 f11)) f39) (f33 (f34 f38 ?v2) ?v3))) (not (= (f115 (f133 f134 f5) f135) (f3 f5 ?v2))) (not (= (f115 (f133 f134 f5) f135) (f115 (f133 f134 f5) ?v3))))) (or (= f39 (f33 (f34 f38 (f9 f10 f11)) f39)) (not (forall ((?v2 S2) (?v3 S22)) (or (not (= (f33 (f34 f38 (f9 f10 f11)) f39) (f33 (f34 f38 ?v2) ?v3))) (not (= (f115 (f133 f134 f5) f135) (f3 f5 ?v2))) (not (= (f115 (f133 f134 f5) f135) (f115 (f133 f134 f5) ?v3)))))))))
(assume t90 (not (or (= f39 (f33 (f34 f38 (f9 f10 f11)) f39)) (not (forall ((?v2 S2) (?v3 S22)) (or (not (= (f33 (f34 f38 (f9 f10 f11)) f39) (f33 (f34 f38 ?v2) ?v3))) (not (= (f115 (f133 f134 f5) f135) (f3 f5 ?v2))) (not (= (f115 (f133 f134 f5) f135) (f115 (f133 f134 f5) ?v3)))))))))
(step t50' (cl (forall ((?v2 S2) (?v3 S22)) (or (not (= (f33 (f34 f38 (f9 f10 f11)) f39) (f33 (f34 f38 ?v2) ?v3))) (not (= (f115 (f133 f134 f5) f135) (f3 f5 ?v2))) (not (= (f115 (f133 f134 f5) f135) (f115 (f133 f134 f5) ?v3))))) (or (= f39 (f33 (f34 f38 (f9 f10 f11)) f39)) (not (forall ((?v2 S2) (?v3 S22)) (or (not (= (f33 (f34 f38 (f9 f10 f11)) f39) (f33 (f34 f38 ?v2) ?v3))) (not (= (f115 (f133 f134 f5) f135) (f3 f5 ?v2))) (not (= (f115 (f133 f134 f5) f135) (f115 (f133 f134 f5) ?v3)))))))) :rule or :premises (t50))
(step st91 (cl (forall ((?v2 S2) (?v3 S22)) (or (not (= (f33 (f34 f38 (f9 f10 f11)) f39) (f33 (f34 f38 ?v2) ?v3))) (not (= (f115 (f133 f134 f5) f135) (f3 f5 ?v2))) (not (= (f115 (f133 f134 f5) f135) (f115 (f133 f134 f5) ?v3)))))) :rule resolution :premises (t50' t90))
(step t.end (cl) :rule resolution :premises (nst91.0 st91))
