(assume nst370.0 (not (= (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f15 f16 ?v0) ?v1) f1) (=> (= (f3 (f15 f16 ?v1) ?v0) f1) (= ?v0 ?v1)))) (forall ((?v0 S3) (?v1 S3)) (or (not (= (f3 (f15 f16 ?v0) ?v1) (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25)))))) (not (= (f3 (f15 f16 ?v1) ?v0) (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25)))))) (= ?v0 ?v1))))))
(assume t366 (= (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f15 f16 ?v0) ?v1) f1) (=> (= (f3 (f15 f16 ?v1) ?v0) f1) (= ?v0 ?v1)))) (forall ((?v0 S3) (?v1 S3)) (or (not (= f1 (f3 (f15 f16 ?v0) ?v1))) (not (= f1 (f3 (f15 f16 ?v1) ?v0))) (= ?v0 ?v1)))))
(assume t369 (= (forall ((?v0 S3) (?v1 S3)) (or (not (= f1 (f3 (f15 f16 ?v0) ?v1))) (not (= f1 (f3 (f15 f16 ?v1) ?v0))) (= ?v0 ?v1))) (forall ((?v0 S3) (?v1 S3)) (or (not (= (f3 (f15 f16 ?v0) ?v1) (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25)))))) (not (= (f3 (f15 f16 ?v1) ?v0) (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25)))))) (= ?v0 ?v1)))))
(step st370 (cl (= (forall ((?v0 S3) (?v1 S3)) (=> (= (f3 (f15 f16 ?v0) ?v1) f1) (=> (= (f3 (f15 f16 ?v1) ?v0) f1) (= ?v0 ?v1)))) (forall ((?v0 S3) (?v1 S3)) (or (not (= (f3 (f15 f16 ?v0) ?v1) (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25)))))) (not (= (f3 (f15 f16 ?v1) ?v0) (f3 f4 (f5 (f6 f7 (f5 (f6 f8 (f5 f9 (f5 f10 (f5 f10 (f5 f11 f25))))) f13)) (f5 f9 (f5 f11 f25)))))) (= ?v0 ?v1))))) :rule trans :premises (t366 t369))
(step t.end (cl) :rule resolution :premises (nst370.0 st370))
