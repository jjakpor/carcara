(assume nst72.0 (not (not (= (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (=> (= (f64 ?v0 ?v1 ?v2 ?v3 f78) f1) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) f1))) (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78))))))))
(assume nst72.1 (not (not (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (=> (= (f64 ?v0 ?v1 ?v2 ?v3 f78) f1) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) f1))))))
(assume nst72.2 (not (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78))))))
(step st72 (cl (not (= (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (=> (= (f64 ?v0 ?v1 ?v2 ?v3 f78) f1) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) f1))) (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78)))))) (not (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (=> (= (f64 ?v0 ?v1 ?v2 ?v3 f78) f1) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) f1)))) (forall ((?v0 S52) (?v1 S47) (?v2 S53) (?v3 S38) (?v4 S55) (?v5 S55) (?v6 S51)) (or (not (= (f64 ?v0 ?v1 ?v2 ?v3 f78) (f64 f65 f66 f67 f72 f78))) (= (f64 ?v0 ?v1 ?v2 (f68 (f69 (f70 f71 ?v3) ?v4) ?v5) ?v6) (f64 f65 f66 f67 f72 f78))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst72.0 nst72.1 nst72.2 st72))
