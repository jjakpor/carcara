(assume nt7.0 (not (not (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x))))))
(assume nt7.1 (not (or (not (Btwn$0 next$0 prv_5$0 (read$0 next$0 d_init$0) prv_5$0)) (= (read$0 next$0 d_init$0) prv_5$0))))
(anchor :step t7)
(assume t7.a0 (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x))))
(anchor :step t7.t3 :args ((?x Loc) (?y Loc) (:= (?x Loc) ?x) (:= (?y Loc) ?y)))
(step t7.t3.t2 (cl (= (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x)))) :rule trust)
(step t7.t3 (cl (= (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y))) (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x))))) :rule bind)
(step t7.t5 (cl (or (not (Btwn$0 next$0 prv_5$0 (read$0 next$0 d_init$0) prv_5$0)) (= (read$0 next$0 d_init$0) prv_5$0))) :rule trust)
(step t7 (cl (not (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x)))) (or (not (Btwn$0 next$0 prv_5$0 (read$0 next$0 d_init$0) prv_5$0)) (= (read$0 next$0 d_init$0) prv_5$0))) :rule subproof :discharge (t7.a0))
(step t.end (cl) :rule resolution :premises (nt7.0 nt7.1 t7))
