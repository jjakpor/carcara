(assume nst59.0 (not (= (in$0 sk_?e$0 (union$0 (intersection$0 Alloc_1$0 (dlseg_domain$0 next$0 prev$0 a$0 prv_2$0 prv_2$0 b_1$0)) (setminus$0 Alloc_1$0 Alloc$0))) true)))
(assume t46 (or (= (in$0 sk_?e$0 (union$0 (intersection$0 Alloc_1$0 (dlseg_domain$0 next$0 prev$0 a$0 prv_2$0 prv_2$0 b_1$0)) (setminus$0 Alloc_1$0 Alloc$0))) true) (not (in$0 sk_?e$0 (union$0 (intersection$0 Alloc_1$0 (dlseg_domain$0 next$0 prev$0 a$0 prv_2$0 prv_2$0 b_1$0)) (setminus$0 Alloc_1$0 Alloc$0))))))
(assume t58 (in$0 sk_?e$0 (union$0 (intersection$0 Alloc_1$0 (dlseg_domain$0 next$0 prev$0 a$0 prv_2$0 prv_2$0 b_1$0)) (setminus$0 Alloc_1$0 Alloc$0))))
(step t46' (cl (= (in$0 sk_?e$0 (union$0 (intersection$0 Alloc_1$0 (dlseg_domain$0 next$0 prev$0 a$0 prv_2$0 prv_2$0 b_1$0)) (setminus$0 Alloc_1$0 Alloc$0))) true) (not (in$0 sk_?e$0 (union$0 (intersection$0 Alloc_1$0 (dlseg_domain$0 next$0 prev$0 a$0 prv_2$0 prv_2$0 b_1$0)) (setminus$0 Alloc_1$0 Alloc$0))))) :rule or :premises (t46))
(step st59 (cl (= (in$0 sk_?e$0 (union$0 (intersection$0 Alloc_1$0 (dlseg_domain$0 next$0 prev$0 a$0 prv_2$0 prv_2$0 b_1$0)) (setminus$0 Alloc_1$0 Alloc$0))) true)) :rule resolution :premises (t46' t58))
(step t.end (cl) :rule resolution :premises (nst59.0 st59))
