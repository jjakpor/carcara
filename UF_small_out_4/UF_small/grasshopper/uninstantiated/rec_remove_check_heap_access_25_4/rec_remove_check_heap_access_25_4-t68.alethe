(assume nst68.0 (not (= null$0 lst$0)))
(assume nst68.1 (not (not (Btwn$0 next$0 lst$0 null$0 null$0))))
(assume nst68.2 (not (not (= lst$0 (read$0 next$0 lst$0)))))
(assume nst68.3 (not (not (or (not (= lst$0 (read$0 next$0 lst$0))) (not (Btwn$0 next$0 lst$0 null$0 null$0)) (= null$0 lst$0)))))
(assume t67 (or (not (or (not (= lst$0 (read$0 next$0 lst$0))) (not (Btwn$0 next$0 lst$0 null$0 null$0)) (= null$0 lst$0))) (not (= lst$0 (read$0 next$0 lst$0))) (not (Btwn$0 next$0 lst$0 null$0 null$0)) (= null$0 lst$0)))
(step t67' (cl (not (or (not (= lst$0 (read$0 next$0 lst$0))) (not (Btwn$0 next$0 lst$0 null$0 null$0)) (= null$0 lst$0))) (not (= lst$0 (read$0 next$0 lst$0))) (not (Btwn$0 next$0 lst$0 null$0 null$0)) (= null$0 lst$0)) :rule or :premises (t67))
(step st68 (cl (= null$0 lst$0) (not (Btwn$0 next$0 lst$0 null$0 null$0)) (not (= lst$0 (read$0 next$0 lst$0))) (not (or (not (= lst$0 (read$0 next$0 lst$0))) (not (Btwn$0 next$0 lst$0 null$0 null$0)) (= null$0 lst$0)))) :rule reordering :premises (t67'))
(step t.end (cl) :rule resolution :premises (nst68.0 nst68.1 nst68.2 nst68.3 st68))
