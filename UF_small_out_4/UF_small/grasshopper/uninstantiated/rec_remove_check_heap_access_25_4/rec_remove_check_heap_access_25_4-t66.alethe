(assume nst66.0 (not (= lst$0 (read$0 next$0 lst$0))))
(assume nst66.1 (not (not (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0)))))
(assume nst66.2 (not (not (or (not (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0))) (= lst$0 (read$0 next$0 lst$0))))))
(assume t65 (or (not (or (not (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0))) (= lst$0 (read$0 next$0 lst$0)))) (not (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0))) (= lst$0 (read$0 next$0 lst$0))))
(step t65' (cl (not (or (not (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0))) (= lst$0 (read$0 next$0 lst$0)))) (not (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0))) (= lst$0 (read$0 next$0 lst$0))) :rule or :premises (t65))
(step st66 (cl (= lst$0 (read$0 next$0 lst$0)) (not (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0))) (not (or (not (Btwn$0 next$0 (read$0 next$0 lst$0) lst$0 (read$0 next$0 lst$0))) (= lst$0 (read$0 next$0 lst$0))))) :rule reordering :premises (t65'))
(step t.end (cl) :rule resolution :premises (nst66.0 nst66.1 nst66.2 st66))
