(assume nt75.0 (not (not (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (= ?x (read$0 ?f ?x))) (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y))))))
(assume nt75.1 (not (or (not (= lst$0 (read$0 next$0 lst$0))) (not (Btwn$0 next$0 lst$0 null$0 null$0)) (= lst$0 null$0))))
(anchor :step t75)
(assume t75.a0 (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (= ?x (read$0 ?f ?x))) (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y))))
(anchor :step t75.t3 :args ((?f FldLoc) (?x Loc) (?y Loc) (:= (?f FldLoc) ?f) (:= (?x Loc) ?x) (:= (?y Loc) ?y)))
(step t75.t3.t0 (cl (= (= (read$0 ?f ?x) ?x) (= ?x (read$0 ?f ?x)))) :rule trust)
(step st75.t3.t1 (cl (= (not (= (read$0 ?f ?x) ?x)) (not (= ?x (read$0 ?f ?x))))) :rule cong :premises (t75.t3.t0))
(step t75.t3.t4 (cl (= (or (not (= (read$0 ?f ?x) ?x)) (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y)) (or (not (= ?x (read$0 ?f ?x))) (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y)))) :rule trust)
(step t75.t3 (cl (= (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (= (read$0 ?f ?x) ?x)) (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y))) (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (= ?x (read$0 ?f ?x))) (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y))))) :rule bind)
(step t75.t5 (cl (or (not (= lst$0 (read$0 next$0 lst$0))) (not (Btwn$0 next$0 lst$0 null$0 null$0)) (= lst$0 null$0))) :rule trust)
(step t75 (cl (not (forall ((?f FldLoc) (?x Loc) (?y Loc)) (or (not (= ?x (read$0 ?f ?x))) (not (Btwn$0 ?f ?x ?y ?y)) (= ?x ?y)))) (or (not (= lst$0 (read$0 next$0 lst$0))) (not (Btwn$0 next$0 lst$0 null$0 null$0)) (= lst$0 null$0))) :rule subproof :discharge (t75.a0))
(step t.end (cl) :rule resolution :premises (nt75.0 nt75.1 t75))
