(assume nst370.0 (not (or (not (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x (union$0 X Y)) (or (in$0 x X) (in$0 x Y))) (and (not (in$0 x X)) (not (in$0 x Y)) (not (in$0 x (union$0 X Y))))))) (or (and (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0)) (or (in$0 (read$0 next$0 d_init$0) FP_Caller$0) (in$0 (read$0 next$0 d_init$0) Alloc$0))) (and (not (in$0 (read$0 next$0 d_init$0) FP_Caller$0)) (not (in$0 (read$0 next$0 d_init$0) Alloc$0)) (not (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0))))))))
(step st370 (cl (or (not (forall ((X SetLoc) (Y SetLoc) (x Loc)) (or (and (in$0 x (union$0 X Y)) (or (in$0 x X) (in$0 x Y))) (and (not (in$0 x X)) (not (in$0 x Y)) (not (in$0 x (union$0 X Y))))))) (or (and (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0)) (or (in$0 (read$0 next$0 d_init$0) FP_Caller$0) (in$0 (read$0 next$0 d_init$0) Alloc$0))) (and (not (in$0 (read$0 next$0 d_init$0) FP_Caller$0)) (not (in$0 (read$0 next$0 d_init$0) Alloc$0)) (not (in$0 (read$0 next$0 d_init$0) (union$0 FP_Caller$0 Alloc$0))))))) :rule forall_inst :args (FP_Caller$0 Alloc$0 (read$0 next$0 d_init$0)))
(step t.end (cl) :rule resolution :premises (nst370.0 st370))
