(assume nt13.0 (not (not (= e2 (op e2 e0)))))
(assume nt13.1 (not (not (= e0 (op e2 (op e2 e0))))))
(assume nt13.2 (not (= e2 (op e2 (op e2 e2)))))
(assume t0 (or (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0)))) (not (= e2 (op e2 e0))) (not (= e0 (op e2 (op e2 e0))))))
(assume t12 (or (not (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0))))) (= e2 (op e2 (op e2 e2)))))
(step t12' (cl (not (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0))))) (= e2 (op e2 (op e2 e2)))) :rule or :premises (t12))
(step t0' (cl (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0)))) (not (= e2 (op e2 e0))) (not (= e0 (op e2 (op e2 e0))))) :rule or :premises (t0))
(step t13 (cl (not (= e2 (op e2 e0))) (not (= e0 (op e2 (op e2 e0)))) (= e2 (op e2 (op e2 e2)))) :rule resolution :premises (t0' t12'))
(step t.end (cl) :rule resolution :premises (nt13.0 nt13.1 nt13.2 t13))
