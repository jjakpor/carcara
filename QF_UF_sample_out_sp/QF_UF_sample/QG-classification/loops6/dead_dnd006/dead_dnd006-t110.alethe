(assume nt110.0 (not (= e2 (op e2 (op e2 e2)))))
(assume nt110.1 (not (not (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0)))))))
(assume nt110.2 (not (not (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0)))))))
(assume t107 (or (not (= e2 (op e2 e0))) (not (= e0 (op e2 (op e2 e0)))) (= e2 (op e2 (op e2 e2)))))
(assume t108 (or (not (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0))))) (= e2 (op e2 e0))))
(assume t109 (or (not (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0))))) (= e0 (op e2 (op e2 e0)))))
(step t107' (cl (not (= e2 (op e2 e0))) (not (= e0 (op e2 (op e2 e0)))) (= e2 (op e2 (op e2 e2)))) :rule or :premises (t107))
(step t108' (cl (not (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0))))) (= e2 (op e2 e0))) :rule or :premises (t108))
(step t109' (cl (not (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0))))) (= e0 (op e2 (op e2 e0)))) :rule or :premises (t109))
(step t110 (cl (= e2 (op e2 (op e2 e2))) (not (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0))))) (not (and (= e2 (op e2 e0)) (= e0 (op e2 (op e2 e0)))))) :rule resolution :premises (t107' t108' t109'))
(step t.end (cl) :rule resolution :premises (nt110.0 nt110.1 nt110.2 t110))
