(assume nt268.0 (not (= e5 (op e5 (op e5 e5)))))
(assume nt268.1 (not (not (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0)))))))
(assume nt268.2 (not (not (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0)))))))
(assume t265 (or (not (= e5 (op e5 e0))) (not (= e0 (op e5 (op e5 e0)))) (= e5 (op e5 (op e5 e5)))))
(assume t266 (or (not (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0))))) (= e5 (op e5 e0))))
(assume t267 (or (not (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0))))) (= e0 (op e5 (op e5 e0)))))
(step t265' (cl (not (= e5 (op e5 e0))) (not (= e0 (op e5 (op e5 e0)))) (= e5 (op e5 (op e5 e5)))) :rule or :premises (t265))
(step t267' (cl (not (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0))))) (= e0 (op e5 (op e5 e0)))) :rule or :premises (t267))
(step t266' (cl (not (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0))))) (= e5 (op e5 e0))) :rule or :premises (t266))
(step t268 (cl (= e5 (op e5 (op e5 e5))) (not (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0))))) (not (and (= e5 (op e5 e0)) (= e0 (op e5 (op e5 e0)))))) :rule resolution :premises (t265' t266' t267'))
(step t.end (cl) :rule resolution :premises (nt268.0 nt268.1 nt268.2 t268))
