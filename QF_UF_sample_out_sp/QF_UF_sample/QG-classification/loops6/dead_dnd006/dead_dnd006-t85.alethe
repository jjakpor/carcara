(assume nt85.0 (not (and (= e0 (op e1 (op e1 e0))) (not (= e0 (op e1 e0))))))
(assume nt85.1 (not (and (= e0 (op e0 (op e0 e0))) (not (= e0 (op e0 e0))))))
(assume nt85.2 (not (and (= e0 (op e2 (op e2 e0))) (not (= e0 (op e2 e0))))))
(assume nt85.3 (not (and (= e0 (op e3 (op e3 e0))) (not (= e0 (op e3 e0))))))
(assume nt85.4 (not (and (= e0 (op e4 (op e4 e0))) (not (= e0 (op e4 e0))))))
(assume nt85.5 (not (and (= e0 (op e5 (op e5 e0))) (not (= e0 (op e5 e0))))))
(assume t84 (or (and (= e0 (op e5 (op e5 e0))) (not (= e0 (op e5 e0)))) (and (= e0 (op e4 (op e4 e0))) (not (= e0 (op e4 e0)))) (and (= e0 (op e3 (op e3 e0))) (not (= e0 (op e3 e0)))) (and (= e0 (op e2 (op e2 e0))) (not (= e0 (op e2 e0)))) (and (= e0 (op e0 (op e0 e0))) (not (= e0 (op e0 e0)))) (and (= e0 (op e1 (op e1 e0))) (not (= e0 (op e1 e0))))))
(step t84' (cl (and (= e0 (op e5 (op e5 e0))) (not (= e0 (op e5 e0)))) (and (= e0 (op e4 (op e4 e0))) (not (= e0 (op e4 e0)))) (and (= e0 (op e3 (op e3 e0))) (not (= e0 (op e3 e0)))) (and (= e0 (op e2 (op e2 e0))) (not (= e0 (op e2 e0)))) (and (= e0 (op e0 (op e0 e0))) (not (= e0 (op e0 e0)))) (and (= e0 (op e1 (op e1 e0))) (not (= e0 (op e1 e0))))) :rule or :premises (t84))
(step t85 (cl (and (= e0 (op e1 (op e1 e0))) (not (= e0 (op e1 e0)))) (and (= e0 (op e0 (op e0 e0))) (not (= e0 (op e0 e0)))) (and (= e0 (op e2 (op e2 e0))) (not (= e0 (op e2 e0)))) (and (= e0 (op e3 (op e3 e0))) (not (= e0 (op e3 e0)))) (and (= e0 (op e4 (op e4 e0))) (not (= e0 (op e4 e0)))) (and (= e0 (op e5 (op e5 e0))) (not (= e0 (op e5 e0))))) :rule reordering :premises (t84'))
(step t.end (cl) :rule resolution :premises (nt85.0 nt85.1 nt85.2 nt85.3 nt85.4 nt85.5 t85))
