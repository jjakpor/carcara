(assume nt973.0 (not (= (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))) false)))
(assume nt973.1 (not (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0)))))
(assume t971 (or (= (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))) false) (not (not (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0)))))))
(assume t972 (or (not (not (not (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0)))))) (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0)))))
(step t971' (cl (= (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))) false) (not (not (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0)))))) :rule or :premises (t971))
(step t972' (cl (not (not (not (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0)))))) (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0)))) :rule or :premises (t972))
(step t973 (cl (= (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0))) false) (= (op e0 (op (op e0 (op e0 e0)) e0)) (op (op e0 e0) (op (op e0 (op e0 e0)) e0)))) :rule resolution :premises (t971' t972'))
(step t.end (cl) :rule resolution :premises (nt973.0 nt973.1 t973))
