(assume nt158.0 (not (or (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))))
(assume t138 (or (not (= (or (or (or (or (= (op e1 e0) e4) (= (op e1 e1) e4)) (= (op e1 e2) e4)) (= (op e1 e3) e4)) (= (op e1 e4) e4)) (or (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))) (not (or (or (or (or (= (op e1 e0) e4) (= (op e1 e1) e4)) (= (op e1 e2) e4)) (= (op e1 e3) e4)) (= (op e1 e4) e4))) (or (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))))
(assume t151 (= (or (or (or (or (= (op e1 e0) e4) (= (op e1 e1) e4)) (= (op e1 e2) e4)) (= (op e1 e3) e4)) (= (op e1 e4) e4)) (or (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))))
(assume t157 (or (or (or (or (= (op e1 e0) e4) (= (op e1 e1) e4)) (= (op e1 e2) e4)) (= (op e1 e3) e4)) (= (op e1 e4) e4)))
(step t138' (cl (not (= (or (or (or (or (= (op e1 e0) e4) (= (op e1 e1) e4)) (= (op e1 e2) e4)) (= (op e1 e3) e4)) (= (op e1 e4) e4)) (or (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))) (not (or (or (or (or (= (op e1 e0) e4) (= (op e1 e1) e4)) (= (op e1 e2) e4)) (= (op e1 e3) e4)) (= (op e1 e4) e4))) (or (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))) :rule or :premises (t138))
(step t158 (cl (or (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))) :rule resolution :premises (t138' t151 t157))
(step t.end (cl) :rule resolution :premises (nt158.0 t158))
