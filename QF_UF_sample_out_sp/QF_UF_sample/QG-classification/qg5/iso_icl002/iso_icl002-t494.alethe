(assume nt494.0 (not (= (or (or (or (or (= (op e0 e0) e2) (= (op e1 e1) e2)) (= (op e2 e2) e2)) (= (op e3 e3) e2)) (= (op e4 e4) e2)) (or (= (op (op e0 e0) (op e0 e0)) (op (op e0 (op e0 e0)) e0)) (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))))
(assume t484 (= (or (or (or (or (= (op e0 e0) e2) (= (op e1 e1) e2)) (= (op e2 e2) e2)) (= (op e3 e3) e2)) (= (op e4 e4) e2)) (or (= e2 (op e4 e4)) (= e2 (op e3 e3)) (= e2 (op e2 e2)) (= e2 (op e0 e0)) (= e2 (op e1 e1)))))
(assume t493 (= (or (= e2 (op e4 e4)) (= e2 (op e3 e3)) (= e2 (op e2 e2)) (= e2 (op e0 e0)) (= e2 (op e1 e1))) (or (= (op (op e0 e0) (op e0 e0)) (op (op e0 (op e0 e0)) e0)) (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))))
(step t494 (cl (= (or (or (or (or (= (op e0 e0) e2) (= (op e1 e1) e2)) (= (op e2 e2) e2)) (= (op e3 e3) e2)) (= (op e4 e4) e2)) (or (= (op (op e0 e0) (op e0 e0)) (op (op e0 (op e0 e0)) e0)) (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= (op e0 e0) (op (op e0 (op e0 e0)) e0)) (= (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))) :rule trans :premises (t484 t493))
(step t.end (cl) :rule resolution :premises (nt494.0 t494))
