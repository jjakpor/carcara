(assume nt585.0 (not (= (or (= e3 (op e4 e4)) (= e3 (op e3 e4)) (= e3 (op e2 e4)) (= e3 (op e0 e4)) (= e3 (op e1 e4))) (or (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op e0 e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) (op e0 e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) (op e0 e0)))))))
(assume t581 (= (= e3 (op e4 e4)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op e0 e0)))))
(assume t582 (= (= e3 (op e3 e4)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0)))))
(assume t583 (= (= e3 (op e2 e4)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) (op e0 e0)))))
(assume t584 (= (= e3 (op e0 e4)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0)))))
(assume t84 (= (= e3 (op e1 e4)) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) (op e0 e0)))))
(step t585 (cl (= (or (= e3 (op e4 e4)) (= e3 (op e3 e4)) (= e3 (op e2 e4)) (= e3 (op e0 e4)) (= e3 (op e1 e4))) (or (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 e0) (op e0 e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op (op e0 (op e0 e0)) e0) (op e0 e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0))) (= (op (op (op e0 (op e0 e0)) e0) e0) (op (op e0 (op e0 e0)) (op e0 e0)))))) :rule cong :premises (t581 t582 t583 t584 t84))
(step t.end (cl) :rule resolution :premises (nt585.0 t585))
