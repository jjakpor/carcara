(assume nt1042.0 (not (= (op (op e4 e3) (op e4 e3)) (op e3 (op e4 e3)))))
(assume nt1042.1 (not (= (op e3 e4) (op (op e4 e3) (op e4 e3)))))
(assume nt1042.2 (not (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3))))))
(assume nt1042.3 (not (= (op e3 (op e3 e4)) (op (op e4 e3) (op e4 e3)))))
(assume nt1042.4 (not (= (op e3 e3) (op (op e4 e3) (op e4 e3)))))
(assume t1041 (or (= (op e3 e4) (op (op e4 e3) (op e4 e3))) (= (op e3 e3) (op (op e4 e3) (op e4 e3))) (= (op e3 (op e3 e4)) (op (op e4 e3) (op e4 e3))) (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op (op e4 e3) (op e4 e3)) (op e3 (op e4 e3)))))
(step t1041' (cl (= (op e3 e4) (op (op e4 e3) (op e4 e3))) (= (op e3 e3) (op (op e4 e3) (op e4 e3))) (= (op e3 (op e3 e4)) (op (op e4 e3) (op e4 e3))) (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op (op e4 e3) (op e4 e3)) (op e3 (op e4 e3)))) :rule or :premises (t1041))
(step t1042 (cl (= (op (op e4 e3) (op e4 e3)) (op e3 (op e4 e3))) (= (op e3 e4) (op (op e4 e3) (op e4 e3))) (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e3 (op e3 e4)) (op (op e4 e3) (op e4 e3))) (= (op e3 e3) (op (op e4 e3) (op e4 e3)))) :rule reordering :premises (t1041'))
(step t.end (cl) :rule resolution :premises (nt1042.0 nt1042.1 nt1042.2 nt1042.3 nt1042.4 t1042))
