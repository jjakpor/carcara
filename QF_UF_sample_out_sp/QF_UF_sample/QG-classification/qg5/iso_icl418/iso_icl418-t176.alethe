(assume nt176.0 (not (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))))))
(assume t167 (or (not (= (= (op (op e1 e1) (op e1 e1)) (op e1 e1)) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3)))))) (not (= (op (op e1 e1) (op e1 e1)) (op e1 e1))) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))))))
(assume t171 (= (= (op (op e1 e1) (op e1 e1)) (op e1 e1)) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))))))
(assume t175 (= (op (op e1 e1) (op e1 e1)) (op e1 e1)))
(step t167' (cl (not (= (= (op (op e1 e1) (op e1 e1)) (op e1 e1)) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3)))))) (not (= (op (op e1 e1) (op e1 e1)) (op e1 e1))) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))))) :rule or :premises (t167))
(step t176 (cl (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))))) :rule resolution :premises (t167' t171 t175))
(step t.end (cl) :rule resolution :premises (nt176.0 t176))
