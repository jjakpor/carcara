(assume nt903.0 (not (= (and (and (and (and (= (op e4 e0) (op e0 e4)) (= (op e4 e1) (op e1 e4))) (= (op e4 e2) (op e2 e4))) (= (op e4 e3) (op e3 e4))) (= (op e4 e4) (op e4 e4))) (and (= (op e3 e4) (op e4 e3)) (= (op e2 e4) (op e4 e2)) (= (op e0 e4) (op e4 e0)) (= (op e1 e4) (op e4 e1))))))
(assume t895 (= (and (and (and (and (= (op e4 e0) (op e0 e4)) (= (op e4 e1) (op e1 e4))) (= (op e4 e2) (op e2 e4))) (= (op e4 e3) (op e3 e4))) (= (op e4 e4) (op e4 e4))) (and (= (op e4 e4) (op e4 e4)) (= (op e4 e3) (op e3 e4)) (= (op e4 e2) (op e2 e4)) (= (op e4 e0) (op e0 e4)) (= (op e4 e1) (op e1 e4)))))
(assume t902 (= (and (= (op e4 e4) (op e4 e4)) (= (op e4 e3) (op e3 e4)) (= (op e4 e2) (op e2 e4)) (= (op e4 e0) (op e0 e4)) (= (op e4 e1) (op e1 e4))) (and (= (op e3 e4) (op e4 e3)) (= (op e2 e4) (op e4 e2)) (= (op e0 e4) (op e4 e0)) (= (op e1 e4) (op e4 e1)))))
(step t903 (cl (= (and (and (and (and (= (op e4 e0) (op e0 e4)) (= (op e4 e1) (op e1 e4))) (= (op e4 e2) (op e2 e4))) (= (op e4 e3) (op e3 e4))) (= (op e4 e4) (op e4 e4))) (and (= (op e3 e4) (op e4 e3)) (= (op e2 e4) (op e4 e2)) (= (op e0 e4) (op e4 e0)) (= (op e1 e4) (op e4 e1))))) :rule trans :premises (t895 t902))
(step t.end (cl) :rule resolution :premises (nt903.0 t903))
