(assume nt354.0 (not (= (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3)) false)))
(assume nt354.1 (not (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3))))
(assume t352 (or (= (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3)) false) (not (not (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3))))))
(assume t353 (or (not (not (not (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3))))) (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3))))
(step t353' (cl (not (not (not (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3))))) (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3))) :rule or :premises (t353))
(step t352' (cl (= (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3)) false) (not (not (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3))))) :rule or :premises (t352))
(step t354 (cl (= (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3)) false) (= (op (op e4 e3) e3) (op (op (op e4 e3) (op e4 e3)) e3))) :rule resolution :premises (t352' t353'))
(step t.end (cl) :rule resolution :premises (nt354.0 nt354.1 t354))
