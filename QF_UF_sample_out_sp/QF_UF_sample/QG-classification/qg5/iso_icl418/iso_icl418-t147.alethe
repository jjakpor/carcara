(assume nt147.0 (not (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e4))))
(assume nt147.1 (not (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))))))
(assume nt147.2 (not (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e4 e3)))))
(assume nt147.3 (not (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e3 e4)))))
(assume nt147.4 (not (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e3))))
(assume t146 (or (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e4)) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e3 e4))) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e4 e3)))))
(step t146' (cl (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e4)) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e3 e4))) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e4 e3)))) :rule or :premises (t146))
(step t147 (cl (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e4)) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e4 e3))) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e3 e4))) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) e3))) :rule reordering :premises (t146'))
(step t.end (cl) :rule resolution :premises (nt147.0 nt147.1 nt147.2 nt147.3 nt147.4 t147))
