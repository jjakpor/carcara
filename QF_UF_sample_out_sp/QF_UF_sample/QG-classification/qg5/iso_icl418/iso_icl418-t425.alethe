(assume nt425.0 (not (= (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3)) false)))
(assume nt425.1 (not (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3))))
(assume t423 (or (= (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3)) false) (not (not (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3))))))
(assume t424 (or (not (not (not (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3))))) (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3))))
(step t423' (cl (= (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3)) false) (not (not (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3))))) :rule or :premises (t423))
(step t424' (cl (not (not (not (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3))))) (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3))) :rule or :premises (t424))
(step t425 (cl (= (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3)) false) (= (op (op e3 e4) e3) (op (op (op e4 e3) (op e4 e3)) e3))) :rule resolution :premises (t423' t424'))
(step t.end (cl) :rule resolution :premises (nt425.0 nt425.1 t425))
