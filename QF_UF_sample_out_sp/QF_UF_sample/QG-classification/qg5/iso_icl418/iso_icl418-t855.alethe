(assume nt855.0 (not (= (op (op e4 e3) (op e4 e3)) (op (op e3 e4) (op e3 e4)))))
(assume t781 (or (= (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e3 e4))) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op e3 e4))) (= (op (op e4 e3) (op e4 e3)) (op (op e3 e4) (op e3 e4))) (= (op e3 (op e3 e4)) (op (op e4 e3) (op e4 e3))) (= (op (op e4 e3) (op e4 e3)) (op e4 (op e3 e4)))))
(assume t787 (not (= (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e3 e4)))))
(assume t804 (not (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op e3 e4)))))
(assume t828 (not (= (op e3 (op e3 e4)) (op (op e4 e3) (op e4 e3)))))
(assume t854 (not (= (op (op e4 e3) (op e4 e3)) (op e4 (op e3 e4)))))
(step t781' (cl (= (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e3 e4))) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op e3 e4))) (= (op (op e4 e3) (op e4 e3)) (op (op e3 e4) (op e3 e4))) (= (op e3 (op e3 e4)) (op (op e4 e3) (op e4 e3))) (= (op (op e4 e3) (op e4 e3)) (op e4 (op e3 e4)))) :rule or :premises (t781))
(step t855 (cl (= (op (op e4 e3) (op e4 e3)) (op (op e3 e4) (op e3 e4)))) :rule resolution :premises (t781' t787 t804 t828 t854))
(step t.end (cl) :rule resolution :premises (nt855.0 t855))
