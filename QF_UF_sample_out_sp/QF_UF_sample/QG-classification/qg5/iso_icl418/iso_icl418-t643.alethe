(assume nt643.0 (not (= (= (op e3 e4) (op e3 (op e4 e3))) false)))
(assume nt643.1 (not (= (op e3 e4) (op e3 (op e4 e3)))))
(assume t641 (or (= (= (op e3 e4) (op e3 (op e4 e3))) false) (not (not (= (op e3 e4) (op e3 (op e4 e3)))))))
(assume t642 (or (not (not (not (= (op e3 e4) (op e3 (op e4 e3)))))) (= (op e3 e4) (op e3 (op e4 e3)))))
(step t642' (cl (not (not (not (= (op e3 e4) (op e3 (op e4 e3)))))) (= (op e3 e4) (op e3 (op e4 e3)))) :rule or :premises (t642))
(step t641' (cl (= (= (op e3 e4) (op e3 (op e4 e3))) false) (not (not (= (op e3 e4) (op e3 (op e4 e3)))))) :rule or :premises (t641))
(step t643 (cl (= (= (op e3 e4) (op e3 (op e4 e3))) false) (= (op e3 e4) (op e3 (op e4 e3)))) :rule resolution :premises (t641' t642'))
(step t.end (cl) :rule resolution :premises (nt643.0 nt643.1 t643))
