(assume nt651.0 (not (= (or (= e1 (op e0 e4)) (= e1 (op e0 e3)) (= e1 (op e0 e2)) (= e1 (op e0 e0)) (= e1 (op e0 e1))) (or (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)))) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op e0 e0) e0))) (= (op (op (op e0 e0) e0) e0) (op e0 (op e0 e0))) (= (op (op (op e0 e0) e0) e0) (op e0 e0)) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op e0 e0) e0) e0)))))))
(assume t648 (= (= e1 (op e0 e4)) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))))))
(assume t649 (= (= e1 (op e0 e3)) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op e0 e0) e0)))))
(assume t650 (= (= e1 (op e0 e2)) (= (op (op (op e0 e0) e0) e0) (op e0 (op e0 e0)))))
(assume t473 (= (= e1 (op e0 e0)) (= (op (op (op e0 e0) e0) e0) (op e0 e0))))
(assume t95 (= (= e1 (op e0 e1)) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op e0 e0) e0) e0)))))
(step t651 (cl (= (or (= e1 (op e0 e4)) (= e1 (op e0 e3)) (= e1 (op e0 e2)) (= e1 (op e0 e0)) (= e1 (op e0 e1))) (or (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)))) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op e0 e0) e0))) (= (op (op (op e0 e0) e0) e0) (op e0 (op e0 e0))) (= (op (op (op e0 e0) e0) e0) (op e0 e0)) (= (op (op (op e0 e0) e0) e0) (op e0 (op (op (op e0 e0) e0) e0)))))) :rule cong :premises (t648 t649 t650 t473 t95))
(step t.end (cl) :rule resolution :premises (nt651.0 t651))
