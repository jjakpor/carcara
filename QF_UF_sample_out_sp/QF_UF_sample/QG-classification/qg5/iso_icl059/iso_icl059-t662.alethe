(assume nt662.0 (not (and (and (or (or (or (or (= (op e0 e0) e0) (= (op e0 e1) e0)) (= (op e0 e2) e0)) (= (op e0 e3) e0)) (= (op e0 e4) e0)) (or (or (or (or (= (op e0 e0) e0) (= (op e1 e0) e0)) (= (op e2 e0) e0)) (= (op e3 e0) e0)) (= (op e4 e0) e0))) (and (or (or (or (or (= (op e0 e0) e1) (= (op e0 e1) e1)) (= (op e0 e2) e1)) (= (op e0 e3) e1)) (= (op e0 e4) e1)) (or (or (or (or (= (op e0 e0) e1) (= (op e1 e0) e1)) (= (op e2 e0) e1)) (= (op e3 e0) e1)) (= (op e4 e0) e1))))))
(assume t661 (and (and (and (or (or (or (or (= (op e0 e0) e0) (= (op e0 e1) e0)) (= (op e0 e2) e0)) (= (op e0 e3) e0)) (= (op e0 e4) e0)) (or (or (or (or (= (op e0 e0) e0) (= (op e1 e0) e0)) (= (op e2 e0) e0)) (= (op e3 e0) e0)) (= (op e4 e0) e0))) (and (or (or (or (or (= (op e0 e0) e1) (= (op e0 e1) e1)) (= (op e0 e2) e1)) (= (op e0 e3) e1)) (= (op e0 e4) e1)) (or (or (or (or (= (op e0 e0) e1) (= (op e1 e0) e1)) (= (op e2 e0) e1)) (= (op e3 e0) e1)) (= (op e4 e0) e1)))) (and (or (or (or (or (= (op e0 e0) e2) (= (op e0 e1) e2)) (= (op e0 e2) e2)) (= (op e0 e3) e2)) (= (op e0 e4) e2)) (or (or (or (or (= (op e0 e0) e2) (= (op e1 e0) e2)) (= (op e2 e0) e2)) (= (op e3 e0) e2)) (= (op e4 e0) e2)))))
(step t662 (cl (and (and (or (or (or (or (= (op e0 e0) e0) (= (op e0 e1) e0)) (= (op e0 e2) e0)) (= (op e0 e3) e0)) (= (op e0 e4) e0)) (or (or (or (or (= (op e0 e0) e0) (= (op e1 e0) e0)) (= (op e2 e0) e0)) (= (op e3 e0) e0)) (= (op e4 e0) e0))) (and (or (or (or (or (= (op e0 e0) e1) (= (op e0 e1) e1)) (= (op e0 e2) e1)) (= (op e0 e3) e1)) (= (op e0 e4) e1)) (or (or (or (or (= (op e0 e0) e1) (= (op e1 e0) e1)) (= (op e2 e0) e1)) (= (op e3 e0) e1)) (= (op e4 e0) e1))))) :rule and :premises (t661) :args (0))
(step t.end (cl) :rule resolution :premises (nt662.0 t662))
