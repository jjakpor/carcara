(assume nt801.0 (not (= (or (or (or (or (= (op e3 e0) e2) (= (op e3 e1) e2)) (= (op e3 e2) e2)) (= (op e3 e3) e2)) (= (op e3 e4) e2)) (or (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))))))))
(assume t797 (= (or (or (or (or (= (op e3 e0) e2) (= (op e3 e1) e2)) (= (op e3 e2) e2)) (= (op e3 e3) e2)) (= (op e3 e4) e2)) (or (= e2 (op e3 e4)) (= e2 (op e3 e3)) (= e2 (op e3 e2)) (= e2 (op e3 e0)) (= e2 (op e3 e1)))))
(assume t800 (= (or (= e2 (op e3 e4)) (= e2 (op e3 e3)) (= e2 (op e3 e2)) (= e2 (op e3 e0)) (= e2 (op e3 e1))) (or (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)))))))
(step t801 (cl (= (or (or (or (or (= (op e3 e0) e2) (= (op e3 e1) e2)) (= (op e3 e2) e2)) (= (op e3 e3) e2)) (= (op e3 e4) e2)) (or (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op e0 e0))) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))))))) :rule trans :premises (t797 t800))
(step t.end (cl) :rule resolution :premises (nt801.0 t801))
