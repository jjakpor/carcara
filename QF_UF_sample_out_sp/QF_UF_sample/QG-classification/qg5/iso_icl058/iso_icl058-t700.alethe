(assume nt700.0 (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0)))))
(assume t695 (or (not (= (= (op e3 e4) (op e4 e3)) (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0))))) (not (= (op e3 e4) (op e4 e3))) (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0)))))
(assume t696 (= (= (op e3 e4) (op e4 e3)) (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0)))))
(assume t699 (= (op e3 e4) (op e4 e3)))
(step t695' (cl (not (= (= (op e3 e4) (op e4 e3)) (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0))))) (not (= (op e3 e4) (op e4 e3))) (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0)))) :rule or :premises (t695))
(step t700 (cl (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0)))) :rule resolution :premises (t695' t696 t699))
(step t.end (cl) :rule resolution :premises (nt700.0 t700))
