(assume nt2.t125.0 (not (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op e0 e0) e0))))))
(assume t2.t120 (or (not (= (not (= (op e3 e4) (op e4 e4))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op e0 e0) e0)))))) (not (not (= (op e3 e4) (op e4 e4)))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op e0 e0) e0))))))
(assume t2.t122 (= (not (= (op e3 e4) (op e4 e4))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op e0 e0) e0))))))
(assume t2.t124 (not (= (op e3 e4) (op e4 e4))))
(step t2.t120' (cl (not (= (not (= (op e3 e4) (op e4 e4))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op e0 e0) e0)))))) (not (not (= (op e3 e4) (op e4 e4)))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op e0 e0) e0))))) :rule or :premises (t2.t120))
(step t2.t125 (cl (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op e0 e0) e0) (op (op e0 e0) e0))))) :rule resolution :premises (t2.t120' t2.t122 t2.t124))
(step t.end (cl) :rule resolution :premises (nt2.t125.0 t2.t125))
