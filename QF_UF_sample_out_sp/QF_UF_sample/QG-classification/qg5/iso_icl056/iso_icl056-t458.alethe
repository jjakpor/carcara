(assume nt458.0 (not (not (= (op (op e1 (op e1 e1)) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))))))
(assume t454 (or (not (= (not (= (op e3 e3) (op e4 e3))) (not (= (op (op e1 (op e1 e1)) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1))))))) (not (not (= (op e3 e3) (op e4 e3)))) (not (= (op (op e1 (op e1 e1)) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))))))
(assume t456 (= (not (= (op e3 e3) (op e4 e3))) (not (= (op (op e1 (op e1 e1)) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))))))
(assume t457 (not (= (op e3 e3) (op e4 e3))))
(step t454' (cl (not (= (not (= (op e3 e3) (op e4 e3))) (not (= (op (op e1 (op e1 e1)) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1))))))) (not (not (= (op e3 e3) (op e4 e3)))) (not (= (op (op e1 (op e1 e1)) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))))) :rule or :premises (t454))
(step t458 (cl (not (= (op (op e1 (op e1 e1)) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))))) :rule resolution :premises (t454' t456 t457))
(step t.end (cl) :rule resolution :premises (nt458.0 t458))
