(assume nt182.0 (not (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))))
(assume nt182.1 (not (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))))
(assume nt182.2 (not (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 e1)))))
(assume nt182.3 (not (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))))))
(assume nt182.4 (not (= (op e1 e1) (op (op e1 e1) (op e1 (op e1 e1))))))
(assume t181 (or (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 (op e1 e1)) (op e1 (op e1 e1)))) (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 e1))) (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 e1) (op (op e1 e1) (op e1 (op e1 e1))))))
(step t182 (cl (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 (op e1 e1)) (op e1 (op e1 e1)))) (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 e1))) (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 e1) (op (op e1 e1) (op e1 (op e1 e1))))) :rule or :premises (t181))
(step t.end (cl) :rule resolution :premises (nt182.0 nt182.1 nt182.2 nt182.3 nt182.4 t182))
