(assume nt1088.0 (not (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1))))))
(assume t1087 (or (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))) (= (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))) (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))) (= (op e1 e1) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))) (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1))))))
(assume t660 (not (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1))))))
(assume t995 (not (= (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1))))))
(assume t963 (not (= (op e1 e1) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1))))))
(assume t461 (not (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1))))))
(step t1087' (cl (= (op (op e1 e1) (op e1 (op e1 e1))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))) (= (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))) (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))) (= (op e1 e1) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1)))) (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1))))) :rule or :premises (t1087))
(step t1088 (cl (= e1 (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 (op e1 e1))))) :rule resolution :premises (t1087' t660 t995 t963 t461))
(step t.end (cl) :rule resolution :premises (nt1088.0 t1088))
