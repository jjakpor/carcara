(assume nt588.0 (not (= (= (op (op e1 e3) e3) (op (op e1 e3) e1)) false)))
(assume nt588.1 (not (= (op (op e1 e3) e3) (op (op e1 e3) e1))))
(assume t586 (or (= (= (op (op e1 e3) e3) (op (op e1 e3) e1)) false) (not (not (= (op (op e1 e3) e3) (op (op e1 e3) e1))))))
(assume t587 (or (not (not (not (= (op (op e1 e3) e3) (op (op e1 e3) e1))))) (= (op (op e1 e3) e3) (op (op e1 e3) e1))))
(step t586' (cl (= (= (op (op e1 e3) e3) (op (op e1 e3) e1)) false) (not (not (= (op (op e1 e3) e3) (op (op e1 e3) e1))))) :rule or :premises (t586))
(step t587' (cl (not (not (not (= (op (op e1 e3) e3) (op (op e1 e3) e1))))) (= (op (op e1 e3) e3) (op (op e1 e3) e1))) :rule or :premises (t587))
(step t588 (cl (= (= (op (op e1 e3) e3) (op (op e1 e3) e1)) false) (= (op (op e1 e3) e3) (op (op e1 e3) e1))) :rule resolution :premises (t586' t587'))
(step t.end (cl) :rule resolution :premises (nt588.0 nt588.1 t588))
