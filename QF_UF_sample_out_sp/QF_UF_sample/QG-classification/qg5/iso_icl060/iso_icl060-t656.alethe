(assume nt656.0 (not (=> (and (not (= (op (op (op e1 e3) e1) (op (op e1 e3) e1)) (op (op (op e1 e3) e1) (op e1 e3)))) (= (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e1))) (= (op e1 e3) (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e3)))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))))))
(assume t655 (or (=> (and (not (= (op (op (op e1 e3) e1) (op (op e1 e3) e1)) (op (op (op e1 e3) e1) (op e1 e3)))) (= (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e1))) (= (op e1 e3) (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e3)))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) (op (op e1 e3) e3))))) (=> (and (not (= (op (op (op e1 e3) e1) (op (op e1 e3) e1)) (op (op (op e1 e3) e1) (op e1 e3)))) (= (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e1))) (= (op e1 e3) (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e3)))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))))))
(step t655' (cl (=> (and (not (= (op (op (op e1 e3) e1) (op (op e1 e3) e1)) (op (op (op e1 e3) e1) (op e1 e3)))) (= (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e1))) (= (op e1 e3) (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e3)))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) (op (op e1 e3) e3))))) (=> (and (not (= (op (op (op e1 e3) e1) (op (op e1 e3) e1)) (op (op (op e1 e3) e1) (op e1 e3)))) (= (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e1))) (= (op e1 e3) (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e3)))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))))) :rule or :premises (t655))
(step t656 (cl (=> (and (not (= (op (op (op e1 e3) e1) (op (op e1 e3) e1)) (op (op (op e1 e3) e1) (op e1 e3)))) (= (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e1))) (= (op e1 e3) (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op (op e1 e3) e1) (op (op e1 e3) e3)))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))))) :rule contraction :premises (t655'))
(step t.end (cl) :rule resolution :premises (nt656.0 t656))
