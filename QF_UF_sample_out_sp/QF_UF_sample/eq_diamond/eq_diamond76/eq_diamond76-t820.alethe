(assume nt820.0 (not (not (= (= (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (and (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (=> (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (= x73 x74)))) true))))
(assume nt820.1 (not (= (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (and (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (=> (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (= x73 x74))))))
(assume t819 (= (= (= (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (and (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (=> (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (= x73 x74)))) true) (= (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (and (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (=> (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (= x73 x74))))))
(step t820 (cl (not (= (= (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (and (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (=> (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (= x73 x74)))) true)) (= (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (and (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (=> (or (and (= x73 y73) (= y73 x74)) (and (= x73 z73) (= z73 x74))) (= x73 x74))))) :rule equiv1 :premises (t819))
(step t.end (cl) :rule resolution :premises (nt820.0 nt820.1 t820))
