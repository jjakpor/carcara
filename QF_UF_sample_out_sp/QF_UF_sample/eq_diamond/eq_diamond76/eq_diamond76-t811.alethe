(assume nt811.0 (not (= (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (and (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (=> (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (= x72 x73))))))
(assume t809 (or (not (= (= (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (and (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (=> (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (= x72 x73)))) true)) (= (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (and (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (=> (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (= x72 x73))))))
(assume t810 (= (= (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (and (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (=> (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (= x72 x73)))) true))
(step t809' (cl (not (= (= (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (and (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (=> (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (= x72 x73)))) true)) (= (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (and (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (=> (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (= x72 x73))))) :rule or :premises (t809))
(step t811 (cl (= (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (and (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (=> (or (and (= x72 y72) (= y72 x73)) (and (= x72 z72) (= z72 x73))) (= x72 x73))))) :rule resolution :premises (t809' t810))
(step t.end (cl) :rule resolution :premises (nt811.0 t811))
