(assume nt403.0 (not (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))))))
(assume nt403.1 (not (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))))))
(assume nt403.2 (not (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))))))
(assume nt403.3 (not (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))))))
(assume nt403.4 (not false))
(assume t402 (or false (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))))))
(step t402' (cl false (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1))))) :rule or :premises (t402))
(step t403 (cl (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) (not (and (p1 (f5 c_1) c_1) (= c_0 (f5 c_1)) (= c_0 (f7 c_1)) (not (p1 (f7 c_1) c_1)))) false) :rule reordering :premises (t402'))
(step t.end (cl) :rule resolution :premises (nt403.0 nt403.1 nt403.2 nt403.3 nt403.4 t403))
