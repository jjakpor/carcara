(assume nt402.0 (not (or (not (not (p1 (f7 c_1) c_1))) (not (= c_0 (f7 c_1))) (not (= c_0 (f5 c_1))) (not (p1 (f5 c_1) c_1)))))
(assume t401 (or (or (not (not (p1 (f7 c_1) c_1))) (not (= c_0 (f7 c_1))) (not (= c_0 (f5 c_1))) (not (p1 (f5 c_1) c_1))) (or (not (not (p1 (f7 c_1) c_1))) (not (= c_0 (f7 c_1))) (not (= c_0 (f5 c_1))) (not (p1 (f5 c_1) c_1))) (or (not (not (p1 (f7 c_1) c_1))) (not (= c_0 (f7 c_1))) (not (= c_0 (f5 c_1))) (not (p1 (f5 c_1) c_1))) (or (not (not (p1 (f7 c_1) c_1))) (not (= c_0 (f7 c_1))) (not (= c_0 (f5 c_1))) (not (p1 (f5 c_1) c_1)))))
(step t401' (cl (or (not (not (p1 (f7 c_1) c_1))) (not (= c_0 (f7 c_1))) (not (= c_0 (f5 c_1))) (not (p1 (f5 c_1) c_1))) (or (not (not (p1 (f7 c_1) c_1))) (not (= c_0 (f7 c_1))) (not (= c_0 (f5 c_1))) (not (p1 (f5 c_1) c_1))) (or (not (not (p1 (f7 c_1) c_1))) (not (= c_0 (f7 c_1))) (not (= c_0 (f5 c_1))) (not (p1 (f5 c_1) c_1))) (or (not (not (p1 (f7 c_1) c_1))) (not (= c_0 (f7 c_1))) (not (= c_0 (f5 c_1))) (not (p1 (f5 c_1) c_1)))) :rule or :premises (t401))
(step t402 (cl (or (not (not (p1 (f7 c_1) c_1))) (not (= c_0 (f7 c_1))) (not (= c_0 (f5 c_1))) (not (p1 (f5 c_1) c_1)))) :rule contraction :premises (t401'))
(step t.end (cl) :rule resolution :premises (nt402.0 t402))
