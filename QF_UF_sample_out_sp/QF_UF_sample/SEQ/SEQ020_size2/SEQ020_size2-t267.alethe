(assume nt267.0 (not (= (f6 c_0) (f5 c_0))))
(assume nt267.1 (not (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0))))))
(assume nt267.2 (not (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0))))))
(assume t264 (or (not (= c_0 (f5 c_0))) (not (= c_0 (f6 c_0))) (= (f6 c_0) (f5 c_0))))
(assume t265 (or (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0)))) (= c_0 (f5 c_0))))
(assume t266 (or (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0)))) (= c_0 (f6 c_0))))
(step t264' (cl (not (= c_0 (f5 c_0))) (not (= c_0 (f6 c_0))) (= (f6 c_0) (f5 c_0))) :rule or :premises (t264))
(step t265' (cl (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0)))) (= c_0 (f5 c_0))) :rule or :premises (t265))
(step t266' (cl (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0)))) (= c_0 (f6 c_0))) :rule or :premises (t266))
(step t267 (cl (= (f6 c_0) (f5 c_0)) (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0)))) (not (and (= c_0 (f5 c_0)) (= c_0 (f6 c_0))))) :rule resolution :premises (t264' t265' t266'))
(step t.end (cl) :rule resolution :premises (nt267.0 nt267.1 nt267.2 t267))
