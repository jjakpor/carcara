(assume nst679.0 (not (= (= (= (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (and (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (=> (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (= x60 x61)))) true) (= (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (and (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (=> (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (= x60 x61)))))))
(step st679 (cl (= (= (= (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (and (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (=> (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (= x60 x61)))) true) (= (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (and (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (=> (or (and (= x60 y60) (= y60 x61)) (and (= x60 z60) (= z60 x61))) (= x60 x61)))))) :rule equiv_simplify)
(step t.end (cl) :rule resolution :premises (nst679.0 st679))
