(assume nst765.0 (not (not (= (= (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (and (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (=> (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (= x68 x69)))) true))))
(assume nst765.1 (not (= (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (and (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (=> (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (= x68 x69))))))
(assume t764 (= (= (= (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (and (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (=> (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (= x68 x69)))) true) (= (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (and (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (=> (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (= x68 x69))))))
(step st765 (cl (not (= (= (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (and (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (=> (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (= x68 x69)))) true)) (= (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (and (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (=> (or (and (= x68 y68) (= y68 x69)) (and (= x68 z68) (= z68 x69))) (= x68 x69))))) :rule equiv1 :premises (t764))
(step t.end (cl) :rule resolution :premises (nst765.0 nst765.1 st765))
