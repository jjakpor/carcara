(assume nst83.0 (not (and (= e0 (op e5 (op e5 e0))) (not (= e0 (op e5 e0))))))
(assume nst83.1 (not (and (= e0 (op e4 (op e4 e0))) (not (= e0 (op e4 e0))))))
(assume nst83.2 (not (and (= e0 (op e3 (op e3 e0))) (not (= e0 (op e3 e0))))))
(assume nst83.3 (not (and (= e0 (op e2 (op e2 e0))) (not (= e0 (op e2 e0))))))
(assume nst83.4 (not (and (= e0 (op e0 (op e0 e0))) (not (= e0 (op e0 e0))))))
(assume nst83.5 (not (and (= e0 (op e1 (op e1 e0))) (not (= e0 (op e1 e0))))))
(assume t82 (or (and (= e0 (op e5 (op e5 e0))) (not (= e0 (op e5 e0)))) (and (= e0 (op e4 (op e4 e0))) (not (= e0 (op e4 e0)))) (and (= e0 (op e3 (op e3 e0))) (not (= e0 (op e3 e0)))) (and (= e0 (op e2 (op e2 e0))) (not (= e0 (op e2 e0)))) (and (= e0 (op e0 (op e0 e0))) (not (= e0 (op e0 e0)))) (and (= e0 (op e1 (op e1 e0))) (not (= e0 (op e1 e0))))))
(step st83 (cl (and (= e0 (op e5 (op e5 e0))) (not (= e0 (op e5 e0)))) (and (= e0 (op e4 (op e4 e0))) (not (= e0 (op e4 e0)))) (and (= e0 (op e3 (op e3 e0))) (not (= e0 (op e3 e0)))) (and (= e0 (op e2 (op e2 e0))) (not (= e0 (op e2 e0)))) (and (= e0 (op e0 (op e0 e0))) (not (= e0 (op e0 e0)))) (and (= e0 (op e1 (op e1 e0))) (not (= e0 (op e1 e0))))) :rule or :premises (t82))
(step t.end (cl) :rule resolution :premises (nst83.0 nst83.1 nst83.2 nst83.3 nst83.4 nst83.5 st83))
