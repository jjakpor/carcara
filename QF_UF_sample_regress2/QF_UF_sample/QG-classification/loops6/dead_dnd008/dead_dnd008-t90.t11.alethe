(assume nt90.0 (not (not (= e1 (op e1 e0)))))
(assume nt90.1 (not (not (= e0 (op e1 (op e1 e0))))))
(assume nt90.2 (not (= e1 (op e1 (op e1 e1)))))
(anchor :step t90)
(assume t90.a0 (= e1 (op e1 e0)))
(assume t90.a1 (= e0 (op e1 (op e1 e0))))
(step t90.t10 (cl (and (and (= (op unit e0) e0) (= (op e0 unit) e0)) (and (= (op unit e1) e1) (= (op e1 unit) e1)))) :rule trust :args (0))
(step st90.t11 (cl (and (= (op unit e1) e1) (= (op e1 unit) e1))) :rule and :premises (t90.t10) :args (1))
(step t90.t20 (cl (= e1 (op e1 (op e1 e1)))) :rule trust)
(step t90 (cl (not (= e1 (op e1 e0))) (not (= e0 (op e1 (op e1 e0)))) (= e1 (op e1 (op e1 e1)))) :rule subproof :discharge (t90.a0 t90.a1))
(step t.end (cl) :rule resolution :premises (nt90.0 nt90.1 nt90.2 t90))
