(assume nst17.0 (not (not (= (or (or (or (or (= (op e2 e0) e0) (= (op e2 e1) e0)) (= (op e2 e2) e0)) (= (op e2 e3) e0)) (= (op e2 e4) e0)) (or (= e0 (op (op e0 e0) (op (op e0 e0) e0))) (= e0 (op (op e0 e0) (op (op (op e0 e0) e0) e0))) (= e0 (op (op e0 e0) (op e0 e0))) (= e0 (op (op e0 e0) e0)) (= e0 (op (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)))))))))
(assume nst17.1 (not (not (or (or (or (or (= (op e2 e0) e0) (= (op e2 e1) e0)) (= (op e2 e2) e0)) (= (op e2 e3) e0)) (= (op e2 e4) e0)))))
(assume nst17.2 (not (or (= e0 (op (op e0 e0) (op (op e0 e0) e0))) (= e0 (op (op e0 e0) (op (op (op e0 e0) e0) e0))) (= e0 (op (op e0 e0) (op e0 e0))) (= e0 (op (op e0 e0) e0)) (= e0 (op (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)))))))
(step st17 (cl (not (= (or (or (or (or (= (op e2 e0) e0) (= (op e2 e1) e0)) (= (op e2 e2) e0)) (= (op e2 e3) e0)) (= (op e2 e4) e0)) (or (= e0 (op (op e0 e0) (op (op e0 e0) e0))) (= e0 (op (op e0 e0) (op (op (op e0 e0) e0) e0))) (= e0 (op (op e0 e0) (op e0 e0))) (= e0 (op (op e0 e0) e0)) (= e0 (op (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))))))) (not (or (or (or (or (= (op e2 e0) e0) (= (op e2 e1) e0)) (= (op e2 e2) e0)) (= (op e2 e3) e0)) (= (op e2 e4) e0))) (or (= e0 (op (op e0 e0) (op (op e0 e0) e0))) (= e0 (op (op e0 e0) (op (op (op e0 e0) e0) e0))) (= e0 (op (op e0 e0) (op e0 e0))) (= e0 (op (op e0 e0) e0)) (= e0 (op (op e0 e0) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst17.0 nst17.1 nst17.2 st17))
