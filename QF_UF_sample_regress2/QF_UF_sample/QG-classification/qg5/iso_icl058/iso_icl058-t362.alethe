(assume nst362.0 (not (= (or (or (or (or (= (op e0 e0) e3) (= (op e1 e1) e3)) (= (op e2 e2) e3)) (= (op e3 e3) e3)) (= (op e4 e4) e3)) (or (= (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) (op (op e0 e0) e0))) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))) (= (op (op (op e0 e0) e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 e0) (op (op (op e0 e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))))))))
(assume t350 (= (or (or (or (or (= (op e0 e0) e3) (= (op e1 e1) e3)) (= (op e2 e2) e3)) (= (op e3 e3) e3)) (= (op e4 e4) e3)) (or (= e3 (op e4 e4)) (= e3 (op e3 e3)) (= e3 (op e2 e2)) (= e3 (op e0 e0)) (= e3 (op e1 e1)))))
(assume t361 (= (or (= e3 (op e4 e4)) (= e3 (op e3 e3)) (= e3 (op e2 e2)) (= e3 (op e0 e0)) (= e3 (op e1 e1))) (or (= (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) (op (op e0 e0) e0))) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))) (= (op (op (op e0 e0) e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 e0) (op (op (op e0 e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)))))))
(step st362 (cl (= (or (or (or (or (= (op e0 e0) e3) (= (op e1 e1) e3)) (= (op e2 e2) e3)) (= (op e3 e3) e3)) (= (op e4 e4) e3)) (or (= (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) (op (op e0 e0) e0))) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0))) (= (op (op (op e0 e0) e0) e0) (op (op e0 e0) (op e0 e0))) (= (op e0 e0) (op (op (op e0 e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0))))))) :rule trans :premises (t350 t361))
(step t.end (cl) :rule resolution :premises (nst362.0 st362))
