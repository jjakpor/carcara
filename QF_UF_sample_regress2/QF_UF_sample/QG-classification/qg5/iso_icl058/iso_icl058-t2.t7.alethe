(assume nt2.0 (not (not (= e0 (op (op (op (op e0 e0) e0) e0) e0)))))
(assume nt2.1 (not (not (= e0 (op (op e0 e0) (op e0 e0))))))
(assume nt2.2 (not (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op e0 e0) (op e0 e0))))))
(assume nt2.3 (not (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) e0)))))
(assume nt2.4 (not (= (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) e0) (op (op (op (op e0 e0) e0) e0) e0))))
(anchor :step t2)
(assume t2.a0 (= e0 (op (op (op (op e0 e0) e0) e0) e0)))
(assume t2.a1 (= e0 (op (op e0 e0) (op e0 e0))))
(assume t2.a2 (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op e0 e0) (op e0 e0))))
(assume t2.a3 (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) e0)))
(step t2.t2 (cl (= (= (op e4 e0) e4) (= e4 (op e4 e0)))) :rule trust :args ("eq-symm" (op e4 e0) e4))
(step t2.t3 (cl (= (= (op e3 e0) e3) (= e3 (op e3 e0)))) :rule trust :args ("eq-symm" (op e3 e0) e3))
(step t2.t4 (cl (= (= (op e2 e0) e2) (= e2 (op e2 e0)))) :rule trust :args ("eq-symm" (op e2 e0) e2))
(step t2.t5 (cl (= (= (op e0 e0) e0) (= e0 (op e0 e0)))) :rule trust :args ("eq-symm" (op e0 e0) e0))
(step t2.t6 (cl (= (= (op e1 e0) e1) (= e1 (op e1 e0)))) :rule trust :args ("eq-symm" (op e1 e0) e1))
(step st2.t7 (cl (= (or (= (op e4 e0) e4) (= (op e3 e0) e3) (= (op e2 e0) e2) (= (op e0 e0) e0) (= (op e1 e0) e1)) (or (= e4 (op e4 e0)) (= e3 (op e3 e0)) (= e2 (op e2 e0)) (= e0 (op e0 e0)) (= e1 (op e1 e0))))) :rule cong :premises (t2.t2 t2.t3 t2.t4 t2.t5 t2.t6))
(step t2.t200 (cl (= (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) e0) (op (op (op (op e0 e0) e0) e0) e0))) :rule trust)
(step t2 (cl (not (= e0 (op (op (op (op e0 e0) e0) e0) e0))) (not (= e0 (op (op e0 e0) (op e0 e0)))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op e0 e0) (op e0 e0)))) (not (= (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) e0))) (= (op (op (op (op (op e0 e0) e0) e0) (op (op e0 e0) e0)) e0) (op (op (op (op e0 e0) e0) e0) e0))) :rule subproof :discharge (t2.a0 t2.a1 t2.a2 t2.a3))
(step t.end (cl) :rule resolution :premises (nt2.0 nt2.1 nt2.2 nt2.3 nt2.4 t2))
