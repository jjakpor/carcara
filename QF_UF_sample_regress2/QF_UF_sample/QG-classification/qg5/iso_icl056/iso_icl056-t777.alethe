(assume nst777.0 (not (= (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 e1)) (op (op e1 e1) (op (op e1 e1) (op e1 (op e1 e1)))))))
(assume t771 (or (not (= (= (op e2 e4) (op e4 e2)) (= (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 e1)) (op (op e1 e1) (op (op e1 e1) (op e1 (op e1 e1))))))) (not (= (op e2 e4) (op e4 e2))) (= (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 e1)) (op (op e1 e1) (op (op e1 e1) (op e1 (op e1 e1)))))))
(assume t774 (= (= (op e2 e4) (op e4 e2)) (= (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 e1)) (op (op e1 e1) (op (op e1 e1) (op e1 (op e1 e1)))))))
(assume t776 (= (op e2 e4) (op e4 e2)))
(step t771' (cl (not (= (= (op e2 e4) (op e4 e2)) (= (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 e1)) (op (op e1 e1) (op (op e1 e1) (op e1 (op e1 e1))))))) (not (= (op e2 e4) (op e4 e2))) (= (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 e1)) (op (op e1 e1) (op (op e1 e1) (op e1 (op e1 e1)))))) :rule or :premises (t771))
(step st777 (cl (= (op (op (op e1 e1) (op e1 (op e1 e1))) (op e1 e1)) (op (op e1 e1) (op (op e1 e1) (op e1 (op e1 e1)))))) :rule resolution :premises (t771' t774 t776))
(step t.end (cl) :rule resolution :premises (nst777.0 st777))
