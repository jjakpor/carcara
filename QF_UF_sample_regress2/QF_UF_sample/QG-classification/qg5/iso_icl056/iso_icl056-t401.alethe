(assume nst401.0 (not (= (op e1 (op e1 e1)) (op (op e1 e1) (op e1 e1)))))
(assume nst401.1 (not (= (op e1 e1) (op e1 (op e1 e1)))))
(assume nst401.2 (not (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))))
(assume nst401.3 (not (= (op e1 (op e1 e1)) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))))))
(assume nst401.4 (not (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))))
(assume t400 (or (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1)))) (= (op e1 (op e1 e1)) (op (op e1 e1) (op e1 e1))) (= (op e1 (op e1 e1)) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 e1) (op e1 (op e1 e1)))))
(step t400' (cl (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1)))) (= (op e1 (op e1 e1)) (op (op e1 e1) (op e1 e1))) (= (op e1 (op e1 e1)) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 e1) (op e1 (op e1 e1)))) :rule or :premises (t400))
(step st401 (cl (= (op e1 (op e1 e1)) (op (op e1 e1) (op e1 e1))) (= (op e1 e1) (op e1 (op e1 e1))) (= (op e1 (op e1 e1)) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1))))) (= (op e1 (op e1 e1)) (op (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))) (op (op (op e1 e1) (op e1 (op e1 e1))) (op (op e1 e1) (op e1 (op e1 e1)))))) (= (op e1 (op e1 e1)) (op (op e1 (op e1 e1)) (op e1 (op e1 e1))))) :rule reordering :premises (t400'))
(step t.end (cl) :rule resolution :premises (nst401.0 nst401.1 nst401.2 nst401.3 nst401.4 st401))
