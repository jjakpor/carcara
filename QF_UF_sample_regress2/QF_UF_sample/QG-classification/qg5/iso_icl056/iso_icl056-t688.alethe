(assume nst688.0 (not (not (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op e1 e1) (op e1 (op e1 e1))))))))
(assume t589 (or (not (= (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op e1 e1) (op e1 (op e1 e1))))) false)) (not (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op e1 e1) (op e1 (op e1 e1))))))))
(assume t687 (= (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op e1 e1) (op e1 (op e1 e1))))) false))
(step t589' (cl (not (= (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op e1 e1) (op e1 (op e1 e1))))) false)) (not (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op e1 e1) (op e1 (op e1 e1))))))) :rule or :premises (t589))
(step st688 (cl (not (= (op e1 e1) (op (op e1 (op e1 e1)) (op (op e1 e1) (op e1 (op e1 e1))))))) :rule resolution :premises (t589' t687))
(step t.end (cl) :rule resolution :premises (nst688.0 st688))
