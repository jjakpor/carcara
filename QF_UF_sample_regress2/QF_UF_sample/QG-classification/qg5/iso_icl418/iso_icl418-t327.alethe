(assume nst327.0 (not (and (and (and (and (= (op (op e3 e0) e3) e0) (= (op (op e3 e1) e3) e1)) (= (op (op e3 e2) e3) e2)) (= (op (op e3 e3) e3) e3)) (= (op (op e3 e4) e3) e4))))
(assume t326 (and (and (and (and (and (and (and (= (op (op e0 e0) e0) e0) (= (op (op e0 e1) e0) e1)) (= (op (op e0 e2) e0) e2)) (= (op (op e0 e3) e0) e3)) (= (op (op e0 e4) e0) e4)) (and (and (and (and (= (op (op e1 e0) e1) e0) (= (op (op e1 e1) e1) e1)) (= (op (op e1 e2) e1) e2)) (= (op (op e1 e3) e1) e3)) (= (op (op e1 e4) e1) e4))) (and (and (and (and (= (op (op e2 e0) e2) e0) (= (op (op e2 e1) e2) e1)) (= (op (op e2 e2) e2) e2)) (= (op (op e2 e3) e2) e3)) (= (op (op e2 e4) e2) e4))) (and (and (and (and (= (op (op e3 e0) e3) e0) (= (op (op e3 e1) e3) e1)) (= (op (op e3 e2) e3) e2)) (= (op (op e3 e3) e3) e3)) (= (op (op e3 e4) e3) e4))))
(step st327 (cl (and (and (and (and (= (op (op e3 e0) e3) e0) (= (op (op e3 e1) e3) e1)) (= (op (op e3 e2) e3) e2)) (= (op (op e3 e3) e3) e3)) (= (op (op e3 e4) e3) e4))) :rule and :premises (t326) :args (1))
(step t.end (cl) :rule resolution :premises (nst327.0 st327))
