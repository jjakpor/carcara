(assume nst933.0 (not (= (and (and (and (and (= (op e0 e0) (op e0 e0)) (= (op e0 e1) (op e1 e0))) (= (op e0 e2) (op e2 e0))) (= (op e0 e3) (op e3 e0))) (= (op e0 e4) (op e4 e0))) (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e1) (op e1 e0))))))
(assume t924 (= (and (and (and (and (= (op e0 e0) (op e0 e0)) (= (op e0 e1) (op e1 e0))) (= (op e0 e2) (op e2 e0))) (= (op e0 e3) (op e3 e0))) (= (op e0 e4) (op e4 e0))) (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e0) (op e0 e0)) (= (op e0 e1) (op e1 e0)))))
(assume t932 (= (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e0) (op e0 e0)) (= (op e0 e1) (op e1 e0))) (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e1) (op e1 e0)))))
(step st933 (cl (= (and (and (and (and (= (op e0 e0) (op e0 e0)) (= (op e0 e1) (op e1 e0))) (= (op e0 e2) (op e2 e0))) (= (op e0 e3) (op e3 e0))) (= (op e0 e4) (op e4 e0))) (and (= (op e0 e4) (op e4 e0)) (= (op e0 e3) (op e3 e0)) (= (op e0 e2) (op e2 e0)) (= (op e0 e1) (op e1 e0))))) :rule trans :premises (t924 t932))
(step t.end (cl) :rule resolution :premises (nst933.0 st933))
