(assume nst312.0 (not (= (= (op (op e4 e3) e4) (op (op e4 e3) e3)) false)))
(assume nst312.1 (not (= (op (op e4 e3) e4) (op (op e4 e3) e3))))
(assume t310 (or (= (= (op (op e4 e3) e4) (op (op e4 e3) e3)) false) (not (not (= (op (op e4 e3) e4) (op (op e4 e3) e3))))))
(assume t311 (or (not (not (not (= (op (op e4 e3) e4) (op (op e4 e3) e3))))) (= (op (op e4 e3) e4) (op (op e4 e3) e3))))
(step t310' (cl (= (= (op (op e4 e3) e4) (op (op e4 e3) e3)) false) (not (not (= (op (op e4 e3) e4) (op (op e4 e3) e3))))) :rule or :premises (t310))
(step t311' (cl (not (not (not (= (op (op e4 e3) e4) (op (op e4 e3) e3))))) (= (op (op e4 e3) e4) (op (op e4 e3) e3))) :rule or :premises (t311))
(step st312 (cl (= (= (op (op e4 e3) e4) (op (op e4 e3) e3)) false) (= (op (op e4 e3) e4) (op (op e4 e3) e3))) :rule resolution :premises (t310' t311'))
(step t.end (cl) :rule resolution :premises (nst312.0 nst312.1 st312))
