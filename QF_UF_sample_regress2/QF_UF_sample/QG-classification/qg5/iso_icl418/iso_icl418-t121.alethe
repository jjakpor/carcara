(assume nst121.0 (not (not (= (op e4 e4) (op (op e4 e3) (op e4 e3))))))
(assume nst121.1 (not (not (= e3 (op e4 (op e3 e4))))))
(assume nst121.2 (not (not (= (op e3 e4) (op e4 (op e4 e3))))))
(assume nst121.3 (not (not (= e4 (op e4 (op (op e4 e3) (op e4 e3)))))))
(assume nst121.4 (not (not (= (op e3 e3) (op (op e4 e3) (op e4 e3))))))
(assume nst121.5 (not (not (= (op e4 e3) (op e3 (op e3 e4))))))
(assume nst121.6 (not (not (= e4 (op e3 (op e4 e3))))))
(assume nst121.7 (not (not (= e3 (op e3 (op (op e4 e3) (op e4 e3)))))))
(assume nst121.8 (not (not (= (op e4 e3) (op (op e3 e4) e4)))))
(assume nst121.9 (not (not (= e4 (op (op e3 e4) e3)))))
(assume nst121.10 (not (not (= (op (op e4 e3) (op e4 e3)) (op (op e3 e4) (op e3 e4))))))
(assume nst121.11 (not (not (= e3 (op (op e3 e4) (op e4 e3))))))
(assume nst121.12 (not (not (= (op e3 e4) (op (op e3 e4) (op (op e4 e3) (op e4 e3)))))))
(assume nst121.13 (not (not (= e3 (op (op e4 e3) e4)))))
(assume nst121.14 (not (not (= (op e3 e4) (op (op e4 e3) e3)))))
(assume nst121.15 (not (not (= e4 (op (op e4 e3) (op e3 e4))))))
(assume nst121.16 (not (not (= (op e4 e3) (op (op e4 e3) (op (op e4 e3) (op e4 e3)))))))
(assume nst121.17 (not (not (= e4 (op (op (op e4 e3) (op e4 e3)) e4)))))
(assume nst121.18 (not (not (= e3 (op (op (op e4 e3) (op e4 e3)) e3)))))
(assume nst121.19 (not (not (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e3 e4))))))
(assume nst121.20 (not (not (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3)))))))
(assume nst121.21 (not (not (= (op e4 e3) (op (op (op e4 e3) (op e4 e3)) (op e4 e3))))))
(assume t120 (not (and (= (op e4 e4) (op (op e4 e3) (op e4 e3))) (= e3 (op e4 (op e3 e4))) (= (op e3 e4) (op e4 (op e4 e3))) (= e4 (op e4 (op (op e4 e3) (op e4 e3)))) (= (op e3 e3) (op (op e4 e3) (op e4 e3))) (= (op e4 e3) (op e3 (op e3 e4))) (= e4 (op e3 (op e4 e3))) (= e3 (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e4 e3) (op (op e3 e4) e4)) (= e4 (op (op e3 e4) e3)) (= (op (op e4 e3) (op e4 e3)) (op (op e3 e4) (op e3 e4))) (= e3 (op (op e3 e4) (op e4 e3))) (= (op e3 e4) (op (op e3 e4) (op (op e4 e3) (op e4 e3)))) (= e3 (op (op e4 e3) e4)) (= (op e3 e4) (op (op e4 e3) e3)) (= e4 (op (op e4 e3) (op e3 e4))) (= (op e4 e3) (op (op e4 e3) (op (op e4 e3) (op e4 e3)))) (= e4 (op (op (op e4 e3) (op e4 e3)) e4)) (= e3 (op (op (op e4 e3) (op e4 e3)) e3)) (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e3 e4))) (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3)))) (= (op e4 e3) (op (op (op e4 e3) (op e4 e3)) (op e4 e3))))))
(step st121 (cl (not (= (op e4 e4) (op (op e4 e3) (op e4 e3)))) (not (= e3 (op e4 (op e3 e4)))) (not (= (op e3 e4) (op e4 (op e4 e3)))) (not (= e4 (op e4 (op (op e4 e3) (op e4 e3))))) (not (= (op e3 e3) (op (op e4 e3) (op e4 e3)))) (not (= (op e4 e3) (op e3 (op e3 e4)))) (not (= e4 (op e3 (op e4 e3)))) (not (= e3 (op e3 (op (op e4 e3) (op e4 e3))))) (not (= (op e4 e3) (op (op e3 e4) e4))) (not (= e4 (op (op e3 e4) e3))) (not (= (op (op e4 e3) (op e4 e3)) (op (op e3 e4) (op e3 e4)))) (not (= e3 (op (op e3 e4) (op e4 e3)))) (not (= (op e3 e4) (op (op e3 e4) (op (op e4 e3) (op e4 e3))))) (not (= e3 (op (op e4 e3) e4))) (not (= (op e3 e4) (op (op e4 e3) e3))) (not (= e4 (op (op e4 e3) (op e3 e4)))) (not (= (op e4 e3) (op (op e4 e3) (op (op e4 e3) (op e4 e3))))) (not (= e4 (op (op (op e4 e3) (op e4 e3)) e4))) (not (= e3 (op (op (op e4 e3) (op e4 e3)) e3))) (not (= (op e3 e4) (op (op (op e4 e3) (op e4 e3)) (op e3 e4)))) (not (= (op (op e4 e3) (op e4 e3)) (op (op (op e4 e3) (op e4 e3)) (op (op e4 e3) (op e4 e3))))) (not (= (op e4 e3) (op (op (op e4 e3) (op e4 e3)) (op e4 e3))))) :rule not_and :premises (t120))
(step t.end (cl) :rule resolution :premises (nst121.0 nst121.1 nst121.2 nst121.3 nst121.4 nst121.5 nst121.6 nst121.7 nst121.8 nst121.9 nst121.10 nst121.11 nst121.12 nst121.13 nst121.14 nst121.15 nst121.16 nst121.17 nst121.18 nst121.19 nst121.20 nst121.21 st121))
