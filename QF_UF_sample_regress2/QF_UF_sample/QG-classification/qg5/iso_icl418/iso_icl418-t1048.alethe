(assume nst1048.0 (not (= (op e3 e3) (op (op e4 e3) (op e4 e3)))))
(assume t198 (not (= (op e3 e4) (op (op e4 e3) (op e4 e3)))))
(assume t828 (not (= (op e3 (op e3 e4)) (op (op e4 e3) (op e4 e3)))))
(assume t888 (not (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3))))))
(assume t1042 (or (= (op (op e4 e3) (op e4 e3)) (op e3 (op e4 e3))) (= (op e3 e4) (op (op e4 e3) (op e4 e3))) (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e3 (op e3 e4)) (op (op e4 e3) (op e4 e3))) (= (op e3 e3) (op (op e4 e3) (op e4 e3)))))
(assume t1047 (not (= (op (op e4 e3) (op e4 e3)) (op e3 (op e4 e3)))))
(step t1042' (cl (= (op (op e4 e3) (op e4 e3)) (op e3 (op e4 e3))) (= (op e3 e4) (op (op e4 e3) (op e4 e3))) (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e3 (op e3 e4)) (op (op e4 e3) (op e4 e3))) (= (op e3 e3) (op (op e4 e3) (op e4 e3)))) :rule or :premises (t1042))
(step st1048 (cl (= (op e3 e3) (op (op e4 e3) (op e4 e3)))) :rule resolution :premises (t1042' t1047 t198 t888 t828))
(step t.end (cl) :rule resolution :premises (nst1048.0 st1048))
