(assume nst873.0 (not (= (op e3 e4) (op e3 (op (op e4 e3) (op e4 e3))))))
(assume nst873.1 (not (= (op e4 e3) (op e3 (op (op e4 e3) (op e4 e3))))))
(assume nst873.2 (not (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3))))))
(assume nst873.3 (not (= e3 (op e3 (op (op e4 e3) (op e4 e3))))))
(assume nst873.4 (not (= e4 (op e3 (op (op e4 e3) (op e4 e3))))))
(assume t872 (or (= e4 (op e3 (op (op e4 e3) (op e4 e3)))) (= e3 (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e4 e3) (op e3 (op (op e4 e3) (op e4 e3))))))
(step t872' (cl (= e4 (op e3 (op (op e4 e3) (op e4 e3)))) (= e3 (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e3 e4) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e4 e3) (op e3 (op (op e4 e3) (op e4 e3))))) :rule or :premises (t872))
(step st873 (cl (= (op e3 e4) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op e4 e3) (op e3 (op (op e4 e3) (op e4 e3)))) (= (op (op e4 e3) (op e4 e3)) (op e3 (op (op e4 e3) (op e4 e3)))) (= e3 (op e3 (op (op e4 e3) (op e4 e3)))) (= e4 (op e3 (op (op e4 e3) (op e4 e3))))) :rule reordering :premises (t872'))
(step t.end (cl) :rule resolution :premises (nst873.0 nst873.1 nst873.2 nst873.3 nst873.4 st873))
