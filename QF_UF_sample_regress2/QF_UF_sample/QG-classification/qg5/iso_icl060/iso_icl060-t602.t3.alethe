(assume nt602.0 (not (not (= (op e1 e3) (op (op (op e1 e3) e3) e1)))))
(assume nt602.1 (not (not (= e1 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e1))))))
(assume nt602.2 (not (= e1 (op (op (op e1 e3) e3) (op e1 e3)))))
(assume t9 (= e1 e1))
(anchor :step t602)
(assume t602.a0 (= (op e1 e3) (op (op (op e1 e3) e3) e1)))
(assume t602.a1 (= e1 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e1))))
(step t602.t2 (cl (= (op e4 (op e4 e1)) (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e1)))) :rule trust)
(step st602.t3 (cl (= (= e1 (op e4 (op e4 e1))) (= e1 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e1))))) :rule cong :premises (t9 t602.t2))
(step t602.t13 (cl (= e1 (op (op (op e1 e3) e3) (op e1 e3)))) :rule trust)
(step t602 (cl (not (= (op e1 e3) (op (op (op e1 e3) e3) e1))) (not (= e1 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e1)))) (= e1 (op (op (op e1 e3) e3) (op e1 e3)))) :rule subproof :discharge (t602.a0 t602.a1))
(step t.end (cl) :rule resolution :premises (nt602.0 nt602.1 nt602.2 t602))
