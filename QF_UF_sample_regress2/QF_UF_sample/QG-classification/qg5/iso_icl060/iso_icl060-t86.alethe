(assume nst86.0 (not (= (op (op e1 e3) (op (op e1 e3) e1)) (op e3 (op (op e1 e3) e1)))))
(assume nst86.1 (not (not (= e1 (op (op e1 e3) (op (op e1 e3) e1))))))
(assume nst86.2 (not (not (= (op (op e1 e3) e1) (op e3 (op (op e1 e3) e3))))))
(assume nst86.3 (not (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))))))
(assume nst86.4 (not (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3))))))
(assume nst86.5 (not (not (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3))))))
(assume t85 (or (= (op (op e1 e3) (op (op e1 e3) e1)) (op e3 (op (op e1 e3) e1))) (not (= e1 (op (op e1 e3) (op (op e1 e3) e1)))) (not (= (op (op e1 e3) e1) (op e3 (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3))))) (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) (not (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3))))))
(step st86 (cl (= (op (op e1 e3) (op (op e1 e3) e1)) (op e3 (op (op e1 e3) e1))) (not (= e1 (op (op e1 e3) (op (op e1 e3) e1)))) (not (= (op (op e1 e3) e1) (op e3 (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3))))) (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) (not (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3))))) :rule or :premises (t85))
(step t.end (cl) :rule resolution :premises (nst86.0 nst86.1 nst86.2 nst86.3 nst86.4 nst86.5 st86))
