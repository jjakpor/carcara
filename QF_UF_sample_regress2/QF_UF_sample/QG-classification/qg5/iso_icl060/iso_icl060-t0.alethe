(assume nst0.0 (not (not (= (or (or (or (or (= (op e0 e4) e1) (= (op e1 e4) e1)) (= (op e2 e4) e1)) (= (op e3 e4) e1)) (= (op e4 e4) e1)) (or (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3))) (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op (op e1 e3) (op (op e1 e3) e3))) (= e1 (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= e1 (op e1 (op (op e1 e3) e3))))))))
(assume nst0.1 (not (not (or (or (or (or (= (op e0 e4) e1) (= (op e1 e4) e1)) (= (op e2 e4) e1)) (= (op e3 e4) e1)) (= (op e4 e4) e1)))))
(assume nst0.2 (not (or (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3))) (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op (op e1 e3) (op (op e1 e3) e3))) (= e1 (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= e1 (op e1 (op (op e1 e3) e3))))))
(step st0 (cl (not (= (or (or (or (or (= (op e0 e4) e1) (= (op e1 e4) e1)) (= (op e2 e4) e1)) (= (op e3 e4) e1)) (= (op e4 e4) e1)) (or (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3))) (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op (op e1 e3) (op (op e1 e3) e3))) (= e1 (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= e1 (op e1 (op (op e1 e3) e3)))))) (not (or (or (or (or (= (op e0 e4) e1) (= (op e1 e4) e1)) (= (op e2 e4) e1)) (= (op e3 e4) e1)) (= (op e4 e4) e1))) (or (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3))) (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op (op e1 e3) (op (op e1 e3) e3))) (= e1 (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= e1 (op e1 (op (op e1 e3) e3))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst0.0 nst0.1 nst0.2 st0))
