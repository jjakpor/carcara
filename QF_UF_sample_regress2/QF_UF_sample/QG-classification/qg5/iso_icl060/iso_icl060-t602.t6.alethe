(assume nt602.0 (not (not (= (op e1 e3) (op (op (op e1 e3) e3) e1)))))
(assume nt602.1 (not (not (= e1 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e1))))))
(assume nt602.2 (not (= e1 (op (op (op e1 e3) e3) (op e1 e3)))))
(anchor :step t602)
(assume t602.a0 (= (op e1 e3) (op (op (op e1 e3) e3) e1)))
(assume t602.a1 (= e1 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e1))))
(step t602.t5 (cl (and (and (and (and (= (op e4 (op e4 e0)) e0) (= (op e4 (op e4 e1)) e1)) (= (op e4 (op e4 e2)) e2)) (= (op e4 (op e4 e3)) e3)) (= (op e4 (op e4 e4)) e4))) :rule trust :args (1))
(step st602.t6 (cl (and (and (and (= (op e4 (op e4 e0)) e0) (= (op e4 (op e4 e1)) e1)) (= (op e4 (op e4 e2)) e2)) (= (op e4 (op e4 e3)) e3))) :rule and :premises (t602.t5) :args (0))
(step t602.t13 (cl (= e1 (op (op (op e1 e3) e3) (op e1 e3)))) :rule trust)
(step t602 (cl (not (= (op e1 e3) (op (op (op e1 e3) e3) e1))) (not (= e1 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e1)))) (= e1 (op (op (op e1 e3) e3) (op e1 e3)))) :rule subproof :discharge (t602.a0 t602.a1))
(step t.end (cl) :rule resolution :premises (nt602.0 nt602.1 nt602.2 t602))
