(assume nst42.0 (not (= e1 (op (op (op e1 e3) e1) (op (op e1 e3) e3)))))
(assume nst42.1 (not (= e1 (op e1 (op (op e1 e3) e3)))))
(assume nst42.2 (not (= e1 (op (op e1 e3) (op (op e1 e3) e3)))))
(assume nst42.3 (not (= e1 (op e3 (op (op e1 e3) e3)))))
(assume nst42.4 (not (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3)))))
(assume t41 (or (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3))) (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op (op e1 e3) (op (op e1 e3) e3))) (= e1 (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= e1 (op e1 (op (op e1 e3) e3)))))
(step t41' (cl (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3))) (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op (op e1 e3) (op (op e1 e3) e3))) (= e1 (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= e1 (op e1 (op (op e1 e3) e3)))) :rule or :premises (t41))
(step st42 (cl (= e1 (op (op (op e1 e3) e1) (op (op e1 e3) e3))) (= e1 (op e1 (op (op e1 e3) e3))) (= e1 (op (op e1 e3) (op (op e1 e3) e3))) (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op (op (op e1 e3) e3) (op (op e1 e3) e3)))) :rule reordering :premises (t41'))
(step t.end (cl) :rule resolution :premises (nst42.0 nst42.1 nst42.2 nst42.3 nst42.4 st42))
