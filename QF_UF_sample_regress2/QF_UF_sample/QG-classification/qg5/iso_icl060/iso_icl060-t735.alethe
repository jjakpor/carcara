(assume nst735.0 (not (= (op e3 e1) (op e3 (op (op e1 e3) e1)))))
(assume nst735.1 (not (not (= (op (op e1 e3) e3) (op e3 (op (op e1 e3) e1))))))
(assume nst735.2 (not (not (= e1 (op e3 (op (op e1 e3) e3))))))
(assume nst735.3 (not (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))))))
(assume t734 (or (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3))))) (not (= e1 (op e3 (op (op e1 e3) e3)))) (= (op e3 e1) (op e3 (op (op e1 e3) e1))) (not (= (op (op e1 e3) e3) (op e3 (op (op e1 e3) e1))))))
(step t734' (cl (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3))))) (not (= e1 (op e3 (op (op e1 e3) e3)))) (= (op e3 e1) (op e3 (op (op e1 e3) e1))) (not (= (op (op e1 e3) e3) (op e3 (op (op e1 e3) e1))))) :rule or :premises (t734))
(step st735 (cl (= (op e3 e1) (op e3 (op (op e1 e3) e1))) (not (= (op (op e1 e3) e3) (op e3 (op (op e1 e3) e1)))) (not (= e1 (op e3 (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))))) :rule reordering :premises (t734'))
(step t.end (cl) :rule resolution :premises (nst735.0 nst735.1 nst735.2 nst735.3 st735))
