(assume nst886.0 (not (= (or (or (or (or (= (op e0 e4) e2) (= (op e1 e4) e2)) (= (op e2 e4) e2)) (= (op e3 e4) e2)) (= (op e4 e4) e2)) (or (= e2 (op e4 e4)) (= e2 (op e3 e4)) (= e2 (op e2 e4)) (= e2 (op e0 e4)) (= e2 (op e1 e4))))))
(assume t881 (= (or (or (or (or (= (op e0 e4) e2) (= (op e1 e4) e2)) (= (op e2 e4) e2)) (= (op e3 e4) e2)) (= (op e4 e4) e2)) (or (= (op e4 e4) e2) (= (op e3 e4) e2) (= (op e2 e4) e2) (= (op e0 e4) e2) (= (op e1 e4) e2))))
(assume t885 (= (or (= (op e4 e4) e2) (= (op e3 e4) e2) (= (op e2 e4) e2) (= (op e0 e4) e2) (= (op e1 e4) e2)) (or (= e2 (op e4 e4)) (= e2 (op e3 e4)) (= e2 (op e2 e4)) (= e2 (op e0 e4)) (= e2 (op e1 e4)))))
(step st886 (cl (= (or (or (or (or (= (op e0 e4) e2) (= (op e1 e4) e2)) (= (op e2 e4) e2)) (= (op e3 e4) e2)) (= (op e4 e4) e2)) (or (= e2 (op e4 e4)) (= e2 (op e3 e4)) (= e2 (op e2 e4)) (= e2 (op e0 e4)) (= e2 (op e1 e4))))) :rule trans :premises (t881 t885))
(step t.end (cl) :rule resolution :premises (nst886.0 st886))
