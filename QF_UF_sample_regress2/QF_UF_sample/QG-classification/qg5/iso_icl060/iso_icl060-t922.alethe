(assume nst922.0 (not (or (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op e3 e3)) (= e1 (op e3 (op e1 e3))) (= e1 (op e3 (op (op e1 e3) e1))) (= e1 (op e3 e1)))))
(assume t902 (or (not (= (or (or (or (or (= (op e3 e0) e1) (= (op e3 e1) e1)) (= (op e3 e2) e1)) (= (op e3 e3) e1)) (= (op e3 e4) e1)) (or (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op e3 e3)) (= e1 (op e3 (op e1 e3))) (= e1 (op e3 (op (op e1 e3) e1))) (= e1 (op e3 e1))))) (not (or (or (or (or (= (op e3 e0) e1) (= (op e3 e1) e1)) (= (op e3 e2) e1)) (= (op e3 e3) e1)) (= (op e3 e4) e1))) (or (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op e3 e3)) (= e1 (op e3 (op e1 e3))) (= e1 (op e3 (op (op e1 e3) e1))) (= e1 (op e3 e1)))))
(assume t915 (= (or (or (or (or (= (op e3 e0) e1) (= (op e3 e1) e1)) (= (op e3 e2) e1)) (= (op e3 e3) e1)) (= (op e3 e4) e1)) (or (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op e3 e3)) (= e1 (op e3 (op e1 e3))) (= e1 (op e3 (op (op e1 e3) e1))) (= e1 (op e3 e1)))))
(assume t921 (or (or (or (or (= (op e3 e0) e1) (= (op e3 e1) e1)) (= (op e3 e2) e1)) (= (op e3 e3) e1)) (= (op e3 e4) e1)))
(step t902' (cl (not (= (or (or (or (or (= (op e3 e0) e1) (= (op e3 e1) e1)) (= (op e3 e2) e1)) (= (op e3 e3) e1)) (= (op e3 e4) e1)) (or (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op e3 e3)) (= e1 (op e3 (op e1 e3))) (= e1 (op e3 (op (op e1 e3) e1))) (= e1 (op e3 e1))))) (not (or (or (or (or (= (op e3 e0) e1) (= (op e3 e1) e1)) (= (op e3 e2) e1)) (= (op e3 e3) e1)) (= (op e3 e4) e1))) (or (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op e3 e3)) (= e1 (op e3 (op e1 e3))) (= e1 (op e3 (op (op e1 e3) e1))) (= e1 (op e3 e1)))) :rule or :premises (t902))
(step st922 (cl (or (= e1 (op e3 (op (op e1 e3) e3))) (= e1 (op e3 e3)) (= e1 (op e3 (op e1 e3))) (= e1 (op e3 (op (op e1 e3) e1))) (= e1 (op e3 e1)))) :rule resolution :premises (t902' t915 t921))
(step t.end (cl) :rule resolution :premises (nst922.0 st922))
