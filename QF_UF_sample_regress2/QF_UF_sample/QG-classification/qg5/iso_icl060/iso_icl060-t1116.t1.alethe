(assume nt1116.0 (not (not (not (= (op (op (op e1 e3) e1) e3) (op (op (op e1 e3) e3) e3))))))
(assume nt1116.1 (not (not (= e1 (op (op (op e1 e3) e1) e3)))))
(assume nt1116.2 (not (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)))))
(assume nt1116.3 (not (not (= (op (op e1 e3) e1) (op e3 (op e1 e3))))))
(assume nt1116.4 (not (not (= e1 (op e3 (op e1 e3))))))
(anchor :step t1116)
(assume t1116.a0 (not (= (op (op (op e1 e3) e1) e3) (op (op (op e1 e3) e3) e3))))
(assume t1116.a1 (= e1 (op (op (op e1 e3) e1) e3)))
(assume t1116.a2 (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)))
(assume t1116.a3 (= (op (op e1 e3) e1) (op e3 (op e1 e3))))
(step t1116.t0 (cl (= (= (= e1 (op e3 (op e1 e3))) false) (not (= e1 (op e3 (op e1 e3)))))) :rule trust)
(step st1116.t1 (cl (not (= (= e1 (op e3 (op e1 e3))) false)) (not (= e1 (op e3 (op e1 e3))))) :rule equiv1 :premises (t1116.t0))
(step t1116.t7 (cl (not (= e1 (op e3 (op e1 e3))))) :rule trust)
(step t1116 (cl (not (not (= (op (op (op e1 e3) e1) e3) (op (op (op e1 e3) e3) e3)))) (not (= e1 (op (op (op e1 e3) e1) e3))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3))) (not (= (op (op e1 e3) e1) (op e3 (op e1 e3)))) (not (= e1 (op e3 (op e1 e3))))) :rule subproof :discharge (t1116.a0 t1116.a1 t1116.a2 t1116.a3))
(step t.end (cl) :rule resolution :premises (nt1116.0 nt1116.1 nt1116.2 nt1116.3 nt1116.4 t1116))
