(assume nst778.0 (not (and (not (= (op e3 e1) (op e3 e3))) (= e1 (op e3 (op (op e1 e3) e3))) (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))) (= e3 (op e3 e3)) (= e3 (op (op e1 e3) (op (op e1 e3) e3))) (= e3 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3))) (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)))))
(assume nst778.1 (not (not (not (= (op e3 e1) (op e3 e3))))))
(assume nst778.2 (not (not (= e1 (op e3 (op (op e1 e3) e3))))))
(assume nst778.3 (not (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))))))
(assume nst778.4 (not (not (= e3 (op e3 e3)))))
(assume nst778.5 (not (not (= e3 (op (op e1 e3) (op (op e1 e3) e3))))))
(assume nst778.6 (not (not (= e3 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3))))))
(assume nst778.7 (not (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)))))
(step st778 (cl (and (not (= (op e3 e1) (op e3 e3))) (= e1 (op e3 (op (op e1 e3) e3))) (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3)))) (= e3 (op e3 e3)) (= e3 (op (op e1 e3) (op (op e1 e3) e3))) (= e3 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3))) (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3))) (not (not (= (op e3 e1) (op e3 e3)))) (not (= e1 (op e3 (op (op e1 e3) e3)))) (not (= (op (op e1 e3) e3) (op e3 (op e3 (op (op e1 e3) e3))))) (not (= e3 (op e3 e3))) (not (= e3 (op (op e1 e3) (op (op e1 e3) e3)))) (not (= e3 (op (op (op e1 e3) e3) (op (op (op e1 e3) e3) e3)))) (not (= (op (op e1 e3) e1) (op (op (op e1 e3) e3) e3)))) :rule and_neg)
(step t.end (cl) :rule resolution :premises (nst778.0 nst778.1 nst778.2 nst778.3 nst778.4 nst778.5 nst778.6 nst778.7 st778))
