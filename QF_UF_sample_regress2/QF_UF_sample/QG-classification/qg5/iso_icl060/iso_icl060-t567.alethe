(assume nst567.0 (not (= (op (op e1 e3) e3) (op (op e1 e3) (op (op e1 e3) e1)))))
(assume nst567.1 (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op e1 e3) e1)))))
(assume nst567.2 (not (= (op (op e1 e3) e3) (op e1 (op (op e1 e3) e1)))))
(assume nst567.3 (not (= (op (op e1 e3) e3) (op e3 (op (op e1 e3) e1)))))
(assume nst567.4 (not (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e1)))))
(assume t566 (or (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op e3 (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op (op e1 e3) (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op e1 (op (op e1 e3) e1)))))
(step t566' (cl (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op e3 (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op (op e1 e3) (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op e1 (op (op e1 e3) e1)))) :rule or :premises (t566))
(step st567 (cl (= (op (op e1 e3) e3) (op (op e1 e3) (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e1) (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op e1 (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op e3 (op (op e1 e3) e1))) (= (op (op e1 e3) e3) (op (op (op e1 e3) e3) (op (op e1 e3) e1)))) :rule reordering :premises (t566'))
(step t.end (cl) :rule resolution :premises (nst567.0 nst567.1 nst567.2 nst567.3 nst567.4 st567))
