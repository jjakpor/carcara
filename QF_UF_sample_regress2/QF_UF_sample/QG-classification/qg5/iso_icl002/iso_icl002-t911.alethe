(assume nst911.0 (not (not (= (or (or (or (or (= (op e0 e1) e4) (= (op e1 e1) e4)) (= (op e2 e1) e4)) (= (op e3 e1) e4)) (= (op e4 e1) e4)) (or (= (op e0 e0) (op (op e0 e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op e0 (op e0 (op e0 e0)))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))))))
(assume nst911.1 (not (not (or (or (or (or (= (op e0 e1) e4) (= (op e1 e1) e4)) (= (op e2 e1) e4)) (= (op e3 e1) e4)) (= (op e4 e1) e4)))))
(assume nst911.2 (not (or (= (op e0 e0) (op (op e0 e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op e0 (op e0 (op e0 e0)))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))))
(step st911 (cl (not (= (or (or (or (or (= (op e0 e1) e4) (= (op e1 e1) e4)) (= (op e2 e1) e4)) (= (op e3 e1) e4)) (= (op e4 e1) e4)) (or (= (op e0 e0) (op (op e0 e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op e0 (op e0 (op e0 e0)))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0))))))) (not (or (or (or (or (= (op e0 e1) e4) (= (op e1 e1) e4)) (= (op e2 e1) e4)) (= (op e3 e1) e4)) (= (op e4 e1) e4))) (or (= (op e0 e0) (op (op e0 e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0)))) (= (op e0 e0) (op e0 (op e0 (op e0 e0)))) (= (op e0 e0) (op (op e0 (op e0 e0)) (op e0 (op e0 e0)))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst911.0 nst911.1 nst911.2 st911))
