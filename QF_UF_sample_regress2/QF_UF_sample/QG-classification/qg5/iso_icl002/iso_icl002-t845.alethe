(assume nst845.0 (not (= (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))) false)))
(assume nst845.1 (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))))
(assume t843 (or (= (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))) false) (not (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))))))
(assume t844 (or (not (not (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))))) (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))))
(step t844' (cl (not (not (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))))) (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))) :rule or :premises (t844))
(step t843' (cl (= (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))) false) (not (not (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))))) :rule or :premises (t843))
(step st845 (cl (= (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0))) false) (= (op e0 (op e0 e0)) (op (op e0 e0) (op e0 e0)))) :rule resolution :premises (t843' t844'))
(step t.end (cl) :rule resolution :premises (nst845.0 nst845.1 st845))
