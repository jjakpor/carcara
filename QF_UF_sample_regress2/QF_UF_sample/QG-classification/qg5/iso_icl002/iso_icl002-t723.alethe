(assume nst723.0 (not (= e0 (op (op (op e0 (op e0 e0)) e0) e0))))
(assume nst723.1 (not (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0))))))
(assume nst723.2 (not (= e0 (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0)))))
(assume nst723.3 (not (= e0 (op (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) e0)))))
(assume nst723.4 (not (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 e0)))))
(assume t722 (or (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 e0))) (= e0 (op (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= e0 (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= e0 (op (op (op e0 (op e0 e0)) e0) e0)) (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0))))))
(step t722' (cl (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 e0))) (= e0 (op (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= e0 (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= e0 (op (op (op e0 (op e0 e0)) e0) e0)) (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0))))) :rule or :premises (t722))
(step st723 (cl (= e0 (op (op (op e0 (op e0 e0)) e0) e0)) (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 (op e0 e0)))) (= e0 (op (op (op e0 (op e0 e0)) e0) (op (op e0 (op e0 e0)) e0))) (= e0 (op (op (op e0 (op e0 e0)) e0) (op (op (op e0 (op e0 e0)) e0) e0))) (= e0 (op (op (op e0 (op e0 e0)) e0) (op e0 e0)))) :rule reordering :premises (t722'))
(step t.end (cl) :rule resolution :premises (nst723.0 nst723.1 nst723.2 nst723.3 nst723.4 st723))
