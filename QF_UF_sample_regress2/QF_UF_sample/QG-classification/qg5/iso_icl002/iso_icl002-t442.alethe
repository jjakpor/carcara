(assume nst442.0 (not (= (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0)) false)))
(assume nst442.1 (not (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0))))
(assume t440 (or (= (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0)) false) (not (not (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0))))))
(assume t441 (or (not (not (not (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0))))) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0))))
(step t441' (cl (not (not (not (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0))))) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0))) :rule or :premises (t441))
(step t440' (cl (= (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0)) false) (not (not (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0))))) :rule or :premises (t440))
(step st442 (cl (= (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0)) false) (= (op e0 e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0))) :rule resolution :premises (t440' t441'))
(step t.end (cl) :rule resolution :premises (nst442.0 nst442.1 st442))
