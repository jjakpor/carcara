(assume nst416.0 (not (not (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0)))))
(assume t412 (or (not (= (not (= (op e1 e0) (op e3 e0))) (not (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0))))) (not (not (= (op e1 e0) (op e3 e0)))) (not (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0)))))
(assume t414 (= (not (= (op e1 e0) (op e3 e0))) (not (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0)))))
(assume t415 (not (= (op e1 e0) (op e3 e0))))
(step t412' (cl (not (= (not (= (op e1 e0) (op e3 e0))) (not (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0))))) (not (not (= (op e1 e0) (op e3 e0)))) (not (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0)))) :rule or :premises (t412))
(step st416 (cl (not (= (op (op e0 (op e0 e0)) e0) (op (op (op (op e0 (op e0 e0)) e0) e0) e0)))) :rule resolution :premises (t412' t414 t415))
(step t.end (cl) :rule resolution :premises (nst416.0 st416))
