(assume nst321.0 (not (= e0 (op (op (op (op e0 e0) e0) e0) e0))))
(assume t281 (or (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op e0 e0) e0) e0) e0)) (= e0 (op (op (op (op e0 e0) e0) e0) e0))))
(assume t286 (not (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) e0))))
(assume t294 (not (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) e0))))
(assume t302 (not (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0))))
(assume t320 (not (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op e0 e0) e0) e0) e0))))
(step t281' (cl (= (op e0 e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op e0 e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op e0 e0) e0) e0) e0)) (= e0 (op (op (op (op e0 e0) e0) e0) e0))) :rule or :premises (t281))
(step st321 (cl (= e0 (op (op (op (op e0 e0) e0) e0) e0))) :rule resolution :premises (t281' t286 t294 t302 t320))
(step t.end (cl) :rule resolution :premises (nst321.0 st321))
