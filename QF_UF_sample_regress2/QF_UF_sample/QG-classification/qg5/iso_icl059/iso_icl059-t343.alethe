(assume nst343.0 (not (= e0 (op e0 e0))))
(assume nst343.1 (not (= (op e0 e0) (op (op e0 e0) e0))))
(assume nst343.2 (not (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0))))
(assume nst343.3 (not (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0))))
(assume nst343.4 (not (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) e0))))
(assume t342 (or (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) e0)) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0)) (= (op e0 e0) (op (op e0 e0) e0)) (= e0 (op e0 e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0))))
(step t342' (cl (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) e0)) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0)) (= (op e0 e0) (op (op e0 e0) e0)) (= e0 (op e0 e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0))) :rule or :premises (t342))
(step st343 (cl (= e0 (op e0 e0)) (= (op e0 e0) (op (op e0 e0) e0)) (= (op (op (op e0 e0) e0) e0) (op (op (op (op e0 e0) e0) e0) e0)) (= (op (op e0 e0) e0) (op (op (op e0 e0) e0) e0)) (= (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) (op (op (op (op (op e0 e0) e0) e0) (op (op (op e0 e0) e0) e0)) e0))) :rule reordering :premises (t342'))
(step t.end (cl) :rule resolution :premises (nst343.0 nst343.1 nst343.2 nst343.3 nst343.4 st343))
