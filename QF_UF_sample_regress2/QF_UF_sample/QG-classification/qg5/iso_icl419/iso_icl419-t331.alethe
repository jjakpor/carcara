(assume nst331.0 (not (= (or (not (= (op e1 e4) e1)) (= (op e4 e1) e1)) (or (not (= (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3))))) (= (op (op e3 e3) (op e3 e3)) (op (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3)) (op (op e3 e3) (op e3 e3))))))))
(assume t327 (= (or (not (= (op e1 e4) e1)) (= (op e4 e1) e1)) (or (not (= e1 (op e1 e4))) (= e1 (op e4 e1)))))
(assume t330 (= (or (not (= e1 (op e1 e4))) (= e1 (op e4 e1))) (or (not (= (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3))))) (= (op (op e3 e3) (op e3 e3)) (op (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3)) (op (op e3 e3) (op e3 e3)))))))
(step st331 (cl (= (or (not (= (op e1 e4) e1)) (= (op e4 e1) e1)) (or (not (= (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3))))) (= (op (op e3 e3) (op e3 e3)) (op (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3)) (op (op e3 e3) (op e3 e3))))))) :rule trans :premises (t327 t330))
(step t.end (cl) :rule resolution :premises (nst331.0 st331))
