(assume nst160.0 (not (= (or (= e4 (op e0 e2)) (= e3 (op e0 e2)) (= e2 (op e0 e2)) (= e0 (op e0 e2)) (= e1 (op e0 e2))) (or (= (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3)) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3))) (= e3 (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3))) (= (op (op (op e3 e3) (op e3 e3)) e3) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3))) (= (op e3 e3) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3))) (= (op (op e3 e3) (op e3 e3)) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3)))))))
(assume t95 (= (= e2 (op e0 e2)) (= (op (op (op e3 e3) (op e3 e3)) e3) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3)))))
(assume t156 (= (= e4 (op e0 e2)) (= (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3)) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3)))))
(assume t157 (= (= e3 (op e0 e2)) (= e3 (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3)))))
(assume t158 (= (= e0 (op e0 e2)) (= (op e3 e3) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3)))))
(assume t159 (= (= e1 (op e0 e2)) (= (op (op e3 e3) (op e3 e3)) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3)))))
(step st160 (cl (= (or (= e4 (op e0 e2)) (= e3 (op e0 e2)) (= e2 (op e0 e2)) (= e0 (op e0 e2)) (= e1 (op e0 e2))) (or (= (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3)) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3))) (= e3 (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3))) (= (op (op (op e3 e3) (op e3 e3)) e3) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3))) (= (op e3 e3) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3))) (= (op (op e3 e3) (op e3 e3)) (op (op e3 e3) (op (op (op e3 e3) (op e3 e3)) e3)))))) :rule cong :premises (t156 t157 t95 t158 t159))
(step t.end (cl) :rule resolution :premises (nst160.0 st160))
