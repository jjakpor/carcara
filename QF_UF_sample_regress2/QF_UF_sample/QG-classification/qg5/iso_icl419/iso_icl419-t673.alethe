(assume nst673.0 (not (not (= (not (= (op e0 e0) (op e4 e0))) (not (= (op (op e3 e3) (op e3 e3)) (op (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3)) (op e3 e3))))))))
(assume nst673.1 (not (not (not (= (op e0 e0) (op e4 e0))))))
(assume nst673.2 (not (not (= (op (op e3 e3) (op e3 e3)) (op (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3)) (op e3 e3))))))
(step st673 (cl (not (= (not (= (op e0 e0) (op e4 e0))) (not (= (op (op e3 e3) (op e3 e3)) (op (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3)) (op e3 e3)))))) (not (not (= (op e0 e0) (op e4 e0)))) (not (= (op (op e3 e3) (op e3 e3)) (op (op (op (op e3 e3) (op e3 e3)) (op (op (op e3 e3) (op e3 e3)) e3)) (op e3 e3))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst673.0 nst673.1 nst673.2 st673))
