(assume nt54.0 (not (not (p1 (f6 c_1) c_1))))
(assume nt54.1 (not (not (= c_0 (f6 c_1)))))
(assume nt54.2 (not (not (= c_0 (f7 c_1)))))
(assume nt54.3 (not (not (not (p1 (f7 c_1) c_1)))))
(assume nt54.4 (not false))
(anchor :step t54)
(assume t54.a0 (p1 (f6 c_1) c_1))
(assume t54.a1 (= c_0 (f6 c_1)))
(assume t54.a2 (= c_0 (f7 c_1)))
(assume t54.a3 (not (p1 (f7 c_1) c_1)))
(step t54.t7 (cl (= false (p1 (f7 c_1) c_1))) :rule trust)
(step t54.t10 (cl (= (p1 (f7 c_1) c_1) (p1 c_0 c_1))) :rule trust)
(step t54.t13 (cl (= (p1 c_0 c_1) (p1 (f6 c_1) c_1))) :rule trust)
(step t54.t16 (cl (= (p1 (f6 c_1) c_1) true)) :rule trust)
(step st54.t17 (cl (= false true)) :rule trans :premises (t54.t7 t54.t10 t54.t13 t54.t16))
(step t54.t18 (cl false) :rule trust)
(step t54 (cl (not (p1 (f6 c_1) c_1)) (not (= c_0 (f6 c_1))) (not (= c_0 (f7 c_1))) (not (not (p1 (f7 c_1) c_1))) false) :rule subproof :discharge (t54.a0 t54.a1 t54.a2 t54.a3))
(step t.end (cl) :rule resolution :premises (nt54.0 nt54.1 nt54.2 nt54.3 nt54.4 t54))
