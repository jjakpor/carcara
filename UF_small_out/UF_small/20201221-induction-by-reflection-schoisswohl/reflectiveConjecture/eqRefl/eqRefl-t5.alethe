(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))))))
(assume nst5.0 (not (= (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) true) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))))))
(step st5 (cl (= (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))) true) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (eq_alpha (inj_alpha v0_alpha) (inj_alpha v0_alpha))))) :rule hole)
(step t.end (cl) :rule resolution :premises (nst5.0 st5))
