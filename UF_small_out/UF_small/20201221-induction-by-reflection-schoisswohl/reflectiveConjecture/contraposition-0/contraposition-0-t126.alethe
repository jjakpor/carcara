(assume nst126.0 (not (not (models empty (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))))))
(assume nst126.1 (not (or (models empty (notR (orR (notR (pR aR)) (qR bR)))) (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))
(assume nst126.2 (not (not (= (models empty (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (or (models empty (notR (orR (notR (pR aR)) (qR bR)))) (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))))
(assume t125 (or (not (= (models empty (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (or (models empty (notR (orR (notR (pR aR)) (qR bR)))) (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))))) (not (models empty (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (or (models empty (notR (orR (notR (pR aR)) (qR bR)))) (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))
(step t125' (cl (not (= (models empty (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (or (models empty (notR (orR (notR (pR aR)) (qR bR)))) (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))))) (not (models empty (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (or (models empty (notR (orR (notR (pR aR)) (qR bR)))) (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) :rule or :premises (t125))
(step st126 (cl (not (models empty (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (or (models empty (notR (orR (notR (pR aR)) (qR bR)))) (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (not (= (models empty (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (or (models empty (notR (orR (notR (pR aR)) (qR bR)))) (models empty (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))) :rule reordering :premises (t125'))
(step t.end (cl) :rule resolution :premises (nst126.0 nst126.1 nst126.2 st126))
