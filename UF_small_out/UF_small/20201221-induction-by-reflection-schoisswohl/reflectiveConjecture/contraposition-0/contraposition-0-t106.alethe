(assume nst106.0 (not (or (not (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) (= (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))))) (not (models empty (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))))))
(step st106 (cl (or (not (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi))))) (= (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))))) (not (models empty (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))))) :rule forall_inst :args (empty (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))
(step t.end (cl) :rule resolution :premises (nst106.0 st106))
