(assume nst34.0 (not (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR))))))
(assume t33 (or (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR)))) (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR)))) (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR))))))
(step t33' (cl (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR)))) (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR)))) (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR))))) :rule or :premises (t33))
(step st34 (cl (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR))))) :rule contraction :premises (t33'))
(step t.end (cl) :rule resolution :premises (nst34.0 st34))
