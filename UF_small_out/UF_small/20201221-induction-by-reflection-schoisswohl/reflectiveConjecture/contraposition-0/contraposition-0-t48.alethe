(assume nst48.0 (not (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR)))))))
(assume t38 (or (not (= (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models empty (notR (qR bR))) (not (models empty (qR bR))))) (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR))))))) (not (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models empty (notR (qR bR))) (not (models empty (qR bR)))))) (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR)))))))
(assume t41 (= (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models empty (notR (qR bR))) (not (models empty (qR bR))))) (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR)))))))
(assume t47 (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models empty (notR (qR bR))) (not (models empty (qR bR))))))
(step t38' (cl (not (= (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models empty (notR (qR bR))) (not (models empty (qR bR))))) (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR))))))) (not (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (models empty (notR (qR bR))) (not (models empty (qR bR)))))) (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR)))))) :rule or :premises (t38))
(step st48 (cl (=> (forall ((env env) (phi form)) (= (models env (notR phi)) (not (models env phi)))) (= (not (models empty (qR bR))) (models empty (notR (qR bR)))))) :rule resolution :premises (t38' t41 t47))
(step t.end (cl) :rule resolution :premises (nst48.0 st48))
