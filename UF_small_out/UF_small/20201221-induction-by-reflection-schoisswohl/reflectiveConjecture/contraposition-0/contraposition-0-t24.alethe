(assume nst24.0 (not (not (= (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR)))) (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (models empty (qR bR)) (models empty (notR (qR bR))))))))
(assume nst24.1 (not (not (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR)))))))
(assume nst24.2 (not (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (models empty (qR bR)) (models empty (notR (qR bR))))))
(step st24 (cl (not (= (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR)))) (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (models empty (qR bR)) (models empty (notR (qR bR)))))) (not (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (not (not (models empty (qR bR)))) (models empty (notR (qR bR))))) (or (not (= (not (models empty (qR bR))) (models empty (notR (qR bR))))) (models empty (qR bR)) (models empty (notR (qR bR))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst24.0 nst24.1 nst24.2 st24))
