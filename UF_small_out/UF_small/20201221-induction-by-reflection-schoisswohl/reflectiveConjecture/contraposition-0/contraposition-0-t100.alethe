(assume nst100.0 (not (models empty (orR (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))))))))
(assume nst100.1 (not (not (or (models empty (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))))))
(assume nst100.2 (not (not (= (models empty (orR (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))) (or (models empty (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))))))))))
(assume t99 (or (not (= (models empty (orR (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))) (or (models empty (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))))) (models empty (orR (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))) (not (or (models empty (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))))))
(step t99' (cl (not (= (models empty (orR (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))) (or (models empty (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))))) (models empty (orR (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))) (not (or (models empty (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))))) :rule or :premises (t99))
(step st100 (cl (models empty (orR (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))) (not (or (models empty (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))))))) (not (= (models empty (orR (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))) (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))))) (or (models empty (notR (orR (notR (orR (notR (pR aR)) (qR bR))) (notR (orR (notR (notR (qR bR))) (notR (pR aR))))))) (models empty (notR (orR (notR (notR (orR (notR (pR aR)) (qR bR)))) (notR (notR (orR (notR (notR (qR bR))) (notR (pR aR)))))))))))) :rule reordering :premises (t99'))
(step t.end (cl) :rule resolution :premises (nst100.0 nst100.1 nst100.2 st100))
