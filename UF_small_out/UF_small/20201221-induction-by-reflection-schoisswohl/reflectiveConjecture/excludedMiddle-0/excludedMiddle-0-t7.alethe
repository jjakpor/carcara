(assume nst7.0 (not (not (= (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR))))) (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (models empty (pR aR)))))))
(assume nst7.1 (not (not (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR))))))))
(assume nst7.2 (not (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (models empty (pR aR)))))
(step st7 (cl (not (= (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR))))) (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (models empty (pR aR))))) (not (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (not (not (models empty (pR aR)))))) (or (not (= (models empty (notR (pR aR))) (not (models empty (pR aR))))) (models empty (notR (pR aR))) (models empty (pR aR)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst7.0 nst7.1 nst7.2 st7))
