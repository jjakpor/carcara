(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (forallR_alpha (next_alpha v0_alpha) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (notR (orR (notR (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha v0_alpha)))) (notR (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))) (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))))))
(define-fun @quantifiers_skolemize_4 () alpha (choice ((x alpha)) (not (models (push_alpha (push_alpha empty v0_alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (forallR_alpha (next_alpha v0_alpha) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (notR (orR (notR (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha v0_alpha)))) (notR (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))) (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha (next_alpha v0_alpha))))))))))) (next_alpha v0_alpha) x) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (notR (orR (notR (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha v0_alpha)))) (notR (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))) (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha (next_alpha v0_alpha))))))))))
(define-fun @quantifiers_skolemize_5 () alpha (choice ((x alpha)) (not (models (push_alpha (push_alpha (push_alpha empty v0_alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (forallR_alpha (next_alpha v0_alpha) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (notR (orR (notR (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha v0_alpha)))) (notR (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))) (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha (next_alpha v0_alpha))))))))))) (next_alpha v0_alpha) (choice ((x alpha)) (not (models (push_alpha (push_alpha empty v0_alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (forallR_alpha (next_alpha v0_alpha) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (notR (orR (notR (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha v0_alpha)))) (notR (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))) (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha (next_alpha v0_alpha))))))))))) (next_alpha v0_alpha) x) (forallR_alpha (next_alpha (next_alpha v0_alpha)) (orR (notR (notR (orR (notR (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha v0_alpha)))) (notR (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))) (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))))) (next_alpha (next_alpha v0_alpha)) x) (orR (notR (notR (orR (notR (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha v0_alpha)))) (notR (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))) (eq_alpha (inj_alpha v0_alpha) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))))
(assume nt30.t99.0 (not (not (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))))))
(assume nt30.t99.1 (not (= (models (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha))))) (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha v0_alpha))) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha (next_alpha v0_alpha))))))))
(anchor :step t30.t99)
(assume t30.a0 (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha v0_alpha)) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha v0_alpha)))))
(assume t30.a1 (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha (next_alpha v0_alpha)))) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha v0_alpha)))))
(step t30.t109 (cl (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha (next_alpha v0_alpha)))) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha v0_alpha)))) :rule trust)
(step t30 (cl (not (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha v0_alpha)) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha v0_alpha))))) (not (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha (next_alpha v0_alpha)))) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha v0_alpha))))) (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha (next_alpha v0_alpha)))) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha v0_alpha)))) :rule subproof :discharge (t30.a0 t30.a1))
(anchor :step t30.t99)
(assume t30.t99.a0 (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y)))))
(step t30.t99.t0 (cl (or (not (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y))))) (= (models (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha))))) (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha v0_alpha))) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha (next_alpha v0_alpha)))))))) :rule trust :args ((push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha)))))
(step st30.t99.t1 (cl (not (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y))))) (= (models (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha))))) (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha v0_alpha))) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha (next_alpha v0_alpha))))))) :rule or :premises (t30.t99.t0))
(step t30.t99.t2 (cl (= (models (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha))))) (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha v0_alpha))) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha (next_alpha v0_alpha))))))) :rule trust)
(step t30.t99 (cl (not (forall ((env env) (x term_alpha) (y term_alpha)) (= (models env (eq_alpha x y)) (= (eval_alpha env x) (eval_alpha env y))))) (= (models (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (eq_alpha (inj_alpha (next_alpha v0_alpha)) (inj_alpha (next_alpha (next_alpha v0_alpha))))) (= (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha v0_alpha))) (eval_alpha (push_alpha (push_alpha (push_alpha empty v0_alpha @quantifiers_skolemize_3) (next_alpha v0_alpha) @quantifiers_skolemize_4) (next_alpha (next_alpha v0_alpha)) @quantifiers_skolemize_5) (inj_alpha (next_alpha (next_alpha v0_alpha))))))) :rule subproof :discharge (t30.t99.a0))
(step t.end (cl) :rule resolution :premises (nt30.t99.0 nt30.t99.1 t30.t99))
