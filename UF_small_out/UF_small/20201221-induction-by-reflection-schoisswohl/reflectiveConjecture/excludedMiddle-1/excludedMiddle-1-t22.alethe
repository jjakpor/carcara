(define-fun @quantifiers_skolemize_3 () alpha (choice ((x alpha)) (not (models (push_alpha empty v0_alpha x) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))))))
(assume nst22.0 (not (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))) (or (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha)))))))))
(assume nst22.1 (not (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha)))))))
(assume nst22.2 (not (not (or (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha))))))))
(step st22 (cl (not (= (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))) (or (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha))))))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (orR (pR (inj_alpha v0_alpha)) (notR (pR (inj_alpha v0_alpha))))) (not (or (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (pR (inj_alpha v0_alpha))) (models (push_alpha empty v0_alpha @quantifiers_skolemize_3) (notR (pR (inj_alpha v0_alpha))))))) :rule equiv_pos1)
(step t.end (cl) :rule resolution :premises (nst22.0 nst22.1 nst22.2 st22))
