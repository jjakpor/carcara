(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst43.0 (not (not (or (not (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat)))) (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))) (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst43.1 (not (not (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat))))))
(assume nst43.2 (not (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat))))))))
(assume nst43.3 (not (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat)))))
(step st43 (cl (not (or (not (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat)))) (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))) (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat))))) (not (models (push_nat empty v0_nat zero) (leqR zeroR (inj_nat v0_nat)))) (not (forall ((x0 nat)) (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))) (models (push_nat empty v0_nat @quantifiers_skolemize_1) (leqR zeroR (inj_nat v0_nat)))) :rule or_pos)
(step t.end (cl) :rule resolution :premises (nst43.0 nst43.1 nst43.2 nst43.3 st43))
