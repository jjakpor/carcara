(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst103.0 (not (= (not (= (s @quantifiers_skolemize_15) (evalV_nat (push_nat empty v0_nat (s @quantifiers_skolemize_15)) v0_nat))) (not (= (s @quantifiers_skolemize_15) (evalV_nat (push_nat empty v0_nat (s @quantifiers_skolemize_15)) v0_nat))))))
(step st103 (cl (= (not (= (s @quantifiers_skolemize_15) (evalV_nat (push_nat empty v0_nat (s @quantifiers_skolemize_15)) v0_nat))) (not (= (s @quantifiers_skolemize_15) (evalV_nat (push_nat empty v0_nat (s @quantifiers_skolemize_15)) v0_nat))))) :rule refl)
(step t.end (cl) :rule resolution :premises (nst103.0 st103))
