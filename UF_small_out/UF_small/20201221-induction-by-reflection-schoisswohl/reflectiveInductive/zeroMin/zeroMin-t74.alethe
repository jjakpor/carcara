(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (leq zero x))))
(define-fun @quantifiers_skolemize_15 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (leqR zeroR (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (leqR zeroR (inj_nat v0_nat)))))))
(assume nst74.0 (not (= (leq zero zero) true)))
(assume t70 (or (= (leq zero zero) true) (not (leq zero zero))))
(assume t73 (leq zero zero))
(step t70' (cl (= (leq zero zero) true) (not (leq zero zero))) :rule or :premises (t70))
(step st74 (cl (= (leq zero zero) true)) :rule resolution :premises (t70' t73))
(step t.end (cl) :rule resolution :premises (nst74.0 st74))
