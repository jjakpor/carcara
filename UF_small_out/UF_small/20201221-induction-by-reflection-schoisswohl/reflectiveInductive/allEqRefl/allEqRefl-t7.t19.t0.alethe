(define-fun @quantifiers_skolemize_1 () nat (choice ((x nat)) (not (equal x x x))))
(define-fun @quantifiers_skolemize_7 () nat (choice ((x0 nat)) (not (or (not (models (push_nat empty v0_nat x0) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))) (models (push_nat empty v0_nat (s x0)) (equalR (inj_nat v0_nat) (inj_nat v0_nat) (inj_nat v0_nat)))))))
(assume nt7.t19.0 (not (= (forall ((env env) (v var_nat)) (= (eval_nat env (inj_nat v)) (evalV_nat env v))) (forall ((env env) (v var_nat)) (= (evalV_nat env v) (eval_nat env (inj_nat v)))))))
(anchor :step t7.t19)
(assume t7.a0 (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1)))
(assume t7.a1 (= @quantifiers_skolemize_1 (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat)))
(assume t7.a2 (= (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat)))
(assume t7.a3 (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat))))
(step t7.t41 (cl false) :rule trust)
(step t7 (cl (not (not (equal @quantifiers_skolemize_1 @quantifiers_skolemize_1 @quantifiers_skolemize_1))) (not (= @quantifiers_skolemize_1 (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat))) (not (= (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (evalV_nat (push_nat empty v0_nat @quantifiers_skolemize_1) v0_nat))) (not (equal (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)) (eval_nat (push_nat empty v0_nat @quantifiers_skolemize_1) (inj_nat v0_nat)))) false) :rule subproof :discharge (t7.a0 t7.a1 t7.a2 t7.a3))
(anchor :step t7.t19 :args ((env env) (v var_nat) (:= (env env) env) (:= (v var_nat) v)))
(step st7.t19.t0 (cl (= (= (eval_nat env (inj_nat v)) (evalV_nat env v)) (= (evalV_nat env v) (eval_nat env (inj_nat v))))) :rule hole)
(step t7.t19.t0 (cl (= (= (eval_nat env (inj_nat v)) (evalV_nat env v)) (= (evalV_nat env v) (eval_nat env (inj_nat v))))) :rule trust)
(step t7.t19 (cl (= (forall ((env env) (v var_nat)) (= (eval_nat env (inj_nat v)) (evalV_nat env v))) (forall ((env env) (v var_nat)) (= (evalV_nat env v) (eval_nat env (inj_nat v)))))) :rule bind)
(step t.end (cl) :rule resolution :premises (nt7.t19.0 t7.t19))
