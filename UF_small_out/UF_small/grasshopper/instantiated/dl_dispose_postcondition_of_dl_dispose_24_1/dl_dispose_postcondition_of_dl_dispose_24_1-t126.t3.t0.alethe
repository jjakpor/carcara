(assume nt126.t3.0 (not (= (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y))) (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x))))))
(anchor :step t126.t3)
(assume t126.a0 (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x))))
(step t126.t5 (cl (or (not (Btwn$0 next$0 prv_2$0 sk_?e$0 prv_2$0)) (= sk_?e$0 prv_2$0))) :rule trust)
(step t126 (cl (not (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x)))) (or (not (Btwn$0 next$0 prv_2$0 sk_?e$0 prv_2$0)) (= sk_?e$0 prv_2$0))) :rule subproof :discharge (t126.a0))
(anchor :step t126.t3 :args ((?x Loc) (?y Loc) (:= (?x Loc) ?x) (:= (?y Loc) ?y)))
(step st126.t3.t0 (cl (= (not (Btwn$0 next$0 ?x ?y ?x)) (not (Btwn$0 next$0 ?x ?y ?x)))) :rule refl)
(step t126.t3.t2 (cl (= (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x)))) :rule trust)
(step t126.t3 (cl (= (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y))) (forall ((?x Loc) (?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?y ?x))))) :rule bind)
(step t.end (cl) :rule resolution :premises (nt126.t3.0 t126.t3))
