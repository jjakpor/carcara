(assume nst6.0 (not (not (or (and (= end1$0 (read$0 next$0 end1$0)) (= start1$0 (read$0 next$0 end1$0))) (and (= (read$0 next$0 end1$0) (read$0 prev$0 start1$0)) (in$0 end1$0 (dlseg_domain$0 next$0 prev$0 start1$0 (read$0 next$0 end1$0) (read$0 next$0 end1$0) end1$0)))))))
(assume nst6.1 (not (and (= end1$0 (read$0 next$0 end1$0)) (= start1$0 (read$0 next$0 end1$0)))))
(assume nst6.2 (not (and (= (read$0 next$0 end1$0) (read$0 prev$0 start1$0)) (in$0 end1$0 (dlseg_domain$0 next$0 prev$0 start1$0 (read$0 next$0 end1$0) (read$0 next$0 end1$0) end1$0)))))
(step st6 (cl (not (or (and (= end1$0 (read$0 next$0 end1$0)) (= start1$0 (read$0 next$0 end1$0))) (and (= (read$0 next$0 end1$0) (read$0 prev$0 start1$0)) (in$0 end1$0 (dlseg_domain$0 next$0 prev$0 start1$0 (read$0 next$0 end1$0) (read$0 next$0 end1$0) end1$0))))) (and (= end1$0 (read$0 next$0 end1$0)) (= start1$0 (read$0 next$0 end1$0))) (and (= (read$0 next$0 end1$0) (read$0 prev$0 start1$0)) (in$0 end1$0 (dlseg_domain$0 next$0 prev$0 start1$0 (read$0 next$0 end1$0) (read$0 next$0 end1$0) end1$0)))) :rule or_pos)
(step t.end (cl) :rule resolution :premises (nst6.0 nst6.1 nst6.2 st6))
