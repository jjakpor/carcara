(assume nt65.0 (not (= (forall ((?v0 S51)) (or (not (= f1 (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0))) (not (= f1 (f75 f65 ?v0 f76))))) (forall ((?v0 S51)) (or (not (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0))) (not (= (f64 f65 f66 f67 f72 f78) (f75 f65 ?v0 f76))))))))
(assume a11 (= f77 f78))
(anchor :step t65 :args ((?v0 S51) (:= (?v0 S51) ?v0)))
(step t65.t2 (cl (= f65 f65)) :rule trust)
(step t65.t3 (cl (= f66 f66)) :rule trust)
(step t65.t4 (cl (= f67 f67)) :rule trust)
(step t65.t5 (cl (= f72 f72)) :rule trust)
(step st65.t6 (cl (= (f64 f65 f66 f67 f72 f77) (f64 f65 f66 f67 f72 f78))) :rule cong :premises (t65.t2 t65.t3 t65.t4 t65.t5 a11))
(step t65.t16 (cl (= (or (not (= f1 (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0))) (not (= f1 (f75 f65 ?v0 f76)))) (or (not (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0))) (not (= (f64 f65 f66 f67 f72 f78) (f75 f65 ?v0 f76)))))) :rule trust)
(step t65 (cl (= (forall ((?v0 S51)) (or (not (= f1 (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0))) (not (= f1 (f75 f65 ?v0 f76))))) (forall ((?v0 S51)) (or (not (= (f64 f65 f66 f67 f72 f78) (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0))) (not (= (f64 f65 f66 f67 f72 f78) (f75 f65 ?v0 f76))))))) :rule bind)
(step t.end (cl) :rule resolution :premises (nt65.0 t65))
