(assume nt48.t3.0 (not (= (exists ((?v0 S51)) (and (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0) f1) (= (f75 f65 ?v0 f76) f1))) (exists ((?v0 S51)) (and (= f1 (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0)) (= f1 (f75 f65 ?v0 f76)))))))
(anchor :step t48.t3)
(assume t48.a0 (forall ((?v0 S51)) (or (not (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0) (f64 f65 f66 f67 f72 f78))) (not (= (f75 f65 ?v0 f76) (f64 f65 f66 f67 f72 f78))))))
(step t48.t17 (cl (or (not (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76) (f64 f65 f66 f67 f72 f78))) (not (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78))))) :rule trust)
(step t48 (cl (not (forall ((?v0 S51)) (or (not (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0) (f64 f65 f66 f67 f72 f78))) (not (= (f75 f65 ?v0 f76) (f64 f65 f66 f67 f72 f78)))))) (or (not (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) f76) (f64 f65 f66 f67 f72 f78))) (not (= (f75 f65 f76 f76) (f64 f65 f66 f67 f72 f78))))) :rule subproof :discharge (t48.a0))
(anchor :step t48.t3 :args ((?v0 S51) (:= (?v0 S51) ?v0)))
(step t48.t3.t0 (cl (= (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0) f1) (= f1 (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0)))) :rule trust)
(step t48.t3.t1 (cl (= (= (f75 f65 ?v0 f76) f1) (= f1 (f75 f65 ?v0 f76)))) :rule trust)
(step st48.t3.t2 (cl (= (and (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0) f1) (= (f75 f65 ?v0 f76) f1)) (and (= f1 (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0)) (= f1 (f75 f65 ?v0 f76))))) :rule cong :premises (t48.t3.t0 t48.t3.t1))
(step t48.t3.t2 (cl (= (and (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0) f1) (= (f75 f65 ?v0 f76) f1)) (and (= f1 (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0)) (= f1 (f75 f65 ?v0 f76))))) :rule trust)
(step t48.t3 (cl (= (exists ((?v0 S51)) (and (= (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0) f1) (= (f75 f65 ?v0 f76) f1))) (exists ((?v0 S51)) (and (= f1 (f64 f65 f66 f67 (f68 (f69 (f70 f71 f72) f73) f74) ?v0)) (= f1 (f75 f65 ?v0 f76)))))) :rule bind)
(step t.end (cl) :rule resolution :premises (nt48.t3.0 t48.t3))
