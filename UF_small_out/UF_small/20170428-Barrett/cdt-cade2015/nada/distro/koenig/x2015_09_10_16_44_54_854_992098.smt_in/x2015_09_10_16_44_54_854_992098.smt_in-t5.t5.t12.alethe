(assume nt5.t5.0 (not (= (forall ((?v4 A_treeFI$)) (or (not (= ?v0 ?v0)) (not (= ?v1 ?v1)) (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4)))) (forall ((?v4 A_treeFI$)) (or (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4)))))))
(anchor :step t5.t5 :args ((?v0 A_stream$) (?v1 A_treeFI$) (:= (?v0 A_stream$) ?v0) (:= (?v1 A_treeFI$) ?v1)))
(step t5.t13 (cl (= (= (fun_app$a (properPath$ ?v0) ?v1) (exists ((?v2 A_stream$) (?v3 A_treeFI$) (?v4 A_treeFI$)) (and (= ?v0 ?v2) (and (= ?v1 ?v3) (and (= (shd$ ?v2) (lab$ ?v3)) (and (member$ ?v4 (set$ (sub$ ?v3))) (fun_app$a (properPath$ (stl$ ?v2)) ?v4))))))) (= (fun_app$a (properPath$ ?v0) ?v1) (not (or (not (= (shd$ ?v0) (lab$ ?v1))) (forall ((?v4 A_treeFI$)) (or (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4))))))))) :rule trust)
(step t5 (cl (= (forall ((?v0 A_stream$) (?v1 A_treeFI$)) (= (fun_app$a (properPath$ ?v0) ?v1) (exists ((?v2 A_stream$) (?v3 A_treeFI$) (?v4 A_treeFI$)) (and (= ?v0 ?v2) (and (= ?v1 ?v3) (and (= (shd$ ?v2) (lab$ ?v3)) (and (member$ ?v4 (set$ (sub$ ?v3))) (fun_app$a (properPath$ (stl$ ?v2)) ?v4)))))))) (forall ((?v0 A_stream$) (?v1 A_treeFI$)) (= (fun_app$a (properPath$ ?v0) ?v1) (not (or (not (= (shd$ ?v0) (lab$ ?v1))) (forall ((?v4 A_treeFI$)) (or (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4)))))))))) :rule bind)
(anchor :step t5.t5 :args ((?v4 A_treeFI$) (:= (?v4 A_treeFI$) ?v4)))
(step t5.t5.t10 (cl (= (or (not (= ?v0 ?v0)) (not (= ?v1 ?v1)) (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4))) (or false false (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4))))) :rule trust)
(step t5.t5.t11 (cl (= (or false false (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4))) (or (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4))))) :rule trust)
(step st5.t5.t12 (cl (= (or (not (= ?v0 ?v0)) (not (= ?v1 ?v1)) (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4))) (or (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4))))) :rule trans :premises (t5.t5.t10 t5.t5.t11))
(step t5.t5.t12 (cl (= (or (not (= ?v0 ?v0)) (not (= ?v1 ?v1)) (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4))) (or (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4))))) :rule trust)
(step t5.t5 (cl (= (forall ((?v4 A_treeFI$)) (or (not (= ?v0 ?v0)) (not (= ?v1 ?v1)) (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4)))) (forall ((?v4 A_treeFI$)) (or (not (= (shd$ ?v0) (lab$ ?v1))) (not (member$ ?v4 (set$ (sub$ ?v1)))) (not (fun_app$a (properPath$ (stl$ ?v0)) ?v4)))))) :rule bind)
(step t.end (cl) :rule resolution :premises (nt5.t5.0 t5.t5))
