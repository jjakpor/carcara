(set-logic UF)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort A_set$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort A_list_set$ 0)
(declare-sort A_a_list_fun$ 0)
(declare-sort A_b_option_fun$ 0)
(declare-sort A_set_bool_fun$ 0)
(declare-sort A_list_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_b_rbt_bool_fun$ 0)
(declare-sort A_a_list_list_fun$ 0)
(declare-sort A_b_prod_bool_fun$ 0)
(declare-sort A_list_a_list_fun$ 0)
(declare-sort A_a_b_prod_list_fun$ 0)
(declare-sort A_b_prod_a_list_fun$ 0)
(declare-sort A_list_list_bool_fun$ 0)
(declare-sort A_b_prod_list_bool_fun$ 0)
(declare-sort A_list_a_list_list_fun$ 0)
(declare-sort A_b_prod_a_list_list_fun$ 0)
(declare-sort A_list_a_b_prod_list_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun$ 0)
(declare-sort A_b_prod_a_b_prod_list_fun$ 0)
(declare-sort A_b_rbt_a_b_option_fun_fun$ 0)
(declare-sort A_list_a_list_bool_fun_fun$ 0)
(declare-sort A_list_list_a_list_list_fun$ 0)
(declare-sort A_b_prod_a_b_prod_bool_fun_fun$ 0)
(declare-sort A_b_prod_list_a_b_prod_list_fun$ 0)
(declare-sort A_list_a_list_list_bool_fun_fun$ 0)
(declare-sort A_list_list_a_list_bool_fun_fun$ 0)
(declare-sort A_b_prod_list_a_list_bool_fun_fun$ 0)
(declare-sort A_list_a_b_prod_list_bool_fun_fun$ 0)
(declare-sort A_list_list_a_list_list_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_b_prod_list_a_list_list_bool_fun_fun$ 0)
(declare-sort A_list_list_a_b_prod_list_bool_fun_fun$ 0)
(declare-sort A_b_prod_list_a_b_prod_list_bool_fun_fun$ 0)
(declare-sort Color$ 0)
(declare-sort A_b_rbt$ 0)
(declare-sort A_list$ 0)
(declare-sort A_list_list$ 0)
(declare-sort A_b_prod$ 0)
(declare-sort A_b_prod_list$ 0)
(declare-sort A_b_prod_list_list$ 0)
(declare-sort A_list_list_list$ 0)
(declare-sort B_option$ 0)
(declare-fun r$ () Color$)
(declare-fun b$ () Color$)
(declare-fun empty$ () A_b_rbt$)
(declare-fun select$ (A_b_rbt$) Color$)
(declare-fun selecta$ (A_b_rbt$) A_b_rbt$)
(declare-fun selectb$ (A_b_rbt$) A$)
(declare-fun selectc$ (A_b_rbt$) B$)
(declare-fun selectd$ (A_b_rbt$) A_b_rbt$)
(declare-fun branch$ (Color$ A_b_rbt$ A$ B$ A_b_rbt$) A_b_rbt$)
(declare-fun nil$ () A_list$)
(declare-fun hd$ (A_list$) A$)
(declare-fun tl$ (A_list$) A_list$)
(declare-fun cons$ (A$ A_list$) A_list$)
(declare-fun nil$a () A_list_list$)
(declare-fun hd$a (A_list_list$) A_list$)
(declare-fun tl$a (A_list_list$) A_list_list$)
(declare-fun cons$a (A_list$ A_list_list$) A_list_list$)
(declare-fun fst$ (A_b_prod$) A$)
(declare-fun snd$ (A_b_prod$) B$)
(declare-fun pair$ (A$ B$) A_b_prod$)
(declare-fun nil$b () A_b_prod_list$)
(declare-fun hd$b (A_b_prod_list$) A_b_prod$)
(declare-fun tl$b (A_b_prod_list$) A_b_prod_list$)
(declare-fun cons$b (A_b_prod$ A_b_prod_list$) A_b_prod_list$)
(declare-fun nil$c () A_b_prod_list_list$)
(declare-fun hd$c (A_b_prod_list_list$) A_b_prod_list$)
(declare-fun tl$c (A_b_prod_list_list$) A_b_prod_list_list$)
(declare-fun cons$c (A_b_prod_list$ A_b_prod_list_list$) A_b_prod_list_list$)
(declare-fun nil$d () A_list_list_list$)
(declare-fun hd$d (A_list_list_list$) A_list_list$)
(declare-fun tl$d (A_list_list_list$) A_list_list_list$)
(declare-fun cons$d (A_list_list$ A_list_list_list$) A_list_list_list$)
(declare-fun none$ () B_option$)
(declare-fun the$ (B_option$) B$)
(declare-fun some$ (B$) B_option$)
(declare-fun c$ () Color$)
(declare-fun k$ () A$)
(declare-fun v$ () B$)
(declare-fun t1$ () A_b_rbt$)
(declare-fun t2$ () A_b_rbt$)
(declare-fun uu$ (A_set$) A_bool_fun$)
(declare-fun bot$ () A_set$)
(declare-fun dom$ (A_b_option_fun$) A_set$)
(declare-fun set$ (A_list$) A_set$)
(declare-fun sup$ (A_set$ A_set$) A_set$)
(declare-fun uua$ (A$) A_bool_fun$)
(declare-fun uub$ (A_a_bool_fun_fun$) A_a_bool_fun_fun$)
(declare-fun uuc$ (A_b_option_fun$) A_bool_fun$)
(declare-fun uud$ (A_bool_fun$) A_bool_fun_a_bool_fun_fun$)
(declare-fun uue$ (A_bool_fun$) A_bool_fun_a_bool_fun_fun$)
(declare-fun uuf$ (A_set$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun uug$ () A_b_option_fun$)
(declare-fun bind$ (A_list_list$ A_list_a_list_fun$) A_list$)
(declare-fun keys$ (A_b_rbt$) A_list$)
(declare-fun less$ () A_a_bool_fun_fun$)
(declare-fun maps$ (A_a_list_fun$) A_list_a_list_fun$)
(declare-fun set$a (A_list_list$) A_list_set$)
(declare-fun bind$a (A_list$ A_a_list_fun$) A_list$)
(declare-fun bind$b (A_list$ A_a_list_list_fun$) A_list_list$)
(declare-fun bind$c (A_list$ A_a_b_prod_list_fun$) A_b_prod_list$)
(declare-fun bind$d (A_list_list$ A_list_a_list_list_fun$) A_list_list$)
(declare-fun bind$e (A_list_list$ A_list_a_b_prod_list_fun$) A_b_prod_list$)
(declare-fun bind$f (A_b_prod_list$ A_b_prod_a_list_fun$) A_list$)
(declare-fun bind$g (A_b_prod_list$ A_b_prod_a_list_list_fun$) A_list_list$)
(declare-fun bind$h (A_b_prod_list$ A_b_prod_a_b_prod_list_fun$) A_b_prod_list$)
(declare-fun append$ (A_list$) A_list_a_list_fun$)
(declare-fun finite$ (A_set$) Bool)
(declare-fun insert$ (A$) A_list_a_list_fun$)
(declare-fun map_of$ (A_b_prod_list$) A_b_option_fun$)
(declare-fun member$ (A$) A_set_bool_fun$)
(declare-fun append$a (A_list_list$) A_list_list_a_list_list_fun$)
(declare-fun append$b (A_b_prod_list$) A_b_prod_list_a_b_prod_list_fun$)
(declare-fun collect$ (A_bool_fun$) A_set$)
(declare-fun entries$ (A_b_rbt$) A_b_prod_list$)
(declare-fun fun_app$ (A_bool_fun$ A$) Bool)
(declare-fun insert$a (A$ A_set$) A_set$)
(declare-fun lexordp$ (A_a_bool_fun_fun$) A_list_a_list_bool_fun_fun$)
(declare-fun member$a (A_list$ A_list_set$) Bool)
(declare-fun distinct$ (A_list$) Bool)
(declare-fun fun_app$a (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$b (A_set_bool_fun$ A_set$) Bool)
(declare-fun fun_app$c (A_b_option_fun$ A$) B_option$)
(declare-fun fun_app$d (A_bool_fun_a_bool_fun_fun$ A_bool_fun$) A_bool_fun$)
(declare-fun fun_app$e (A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ A_a_bool_fun_fun$) A_a_bool_fun_fun$)
(declare-fun fun_app$f (A_b_rbt_bool_fun$ A_b_rbt$) Bool)
(declare-fun fun_app$g (A_list_bool_fun$ A_list$) Bool)
(declare-fun fun_app$h (A_list_a_list_bool_fun_fun$ A_list$) A_list_bool_fun$)
(declare-fun fun_app$i (A_list_list_bool_fun$ A_list_list$) Bool)
(declare-fun fun_app$j (A_list_list_a_list_list_bool_fun_fun$ A_list_list$) A_list_list_bool_fun$)
(declare-fun fun_app$k (A_b_prod_list_a_b_prod_list_bool_fun_fun$ A_b_prod_list$) A_b_prod_list_bool_fun$)
(declare-fun fun_app$l (A_b_prod_list_bool_fun$ A_b_prod_list$) Bool)
(declare-fun fun_app$m (A_b_prod_bool_fun$ A_b_prod$) Bool)
(declare-fun fun_app$n (A_b_prod_a_b_prod_bool_fun_fun$ A_b_prod$) A_b_prod_bool_fun$)
(declare-fun fun_app$o (A_b_prod_list_a_list_bool_fun_fun$ A_b_prod_list$) A_list_bool_fun$)
(declare-fun fun_app$p (A_b_prod_list_a_list_list_bool_fun_fun$ A_b_prod_list$) A_list_list_bool_fun$)
(declare-fun fun_app$q (A_list_a_b_prod_list_bool_fun_fun$ A_list$) A_b_prod_list_bool_fun$)
(declare-fun fun_app$r (A_list_a_list_list_bool_fun_fun$ A_list$) A_list_list_bool_fun$)
(declare-fun fun_app$s (A_list_list_a_b_prod_list_bool_fun_fun$ A_list_list$) A_b_prod_list_bool_fun$)
(declare-fun fun_app$t (A_list_list_a_list_bool_fun_fun$ A_list_list$) A_list_bool_fun$)
(declare-fun fun_app$u (A_list_a_list_fun$ A_list$) A_list$)
(declare-fun fun_app$v (A_list_list_a_list_list_fun$ A_list_list$) A_list_list$)
(declare-fun fun_app$w (A_b_prod_list_a_b_prod_list_fun$ A_b_prod_list$) A_b_prod_list$)
(declare-fun fun_app$x (A_a_list_fun$ A$) A_list$)
(declare-fun fun_app$y (A_b_rbt_a_b_option_fun_fun$ A_b_rbt$) A_b_option_fun$)
(declare-fun lessThan$ (A_a_bool_fun_fun$ A$) A_set$)
(declare-fun lexordp$a (A_list_a_list_bool_fun_fun$) A_list_list_a_list_list_bool_fun_fun$)
(declare-fun lexordp$b (A_b_prod_a_b_prod_bool_fun_fun$) A_b_prod_list_a_b_prod_list_bool_fun_fun$)
(declare-fun rbt_less$ (A_a_bool_fun_fun$ A$) A_b_rbt_bool_fun$)
(declare-fun sublists$ (A_list_list$) A_list_list_list$)
(declare-fun the_elem$ (A_set$) A$)
(declare-fun distinct$a (A_list_list$) Bool)
(declare-fun distinct$b (A_b_prod_list$) Bool)
(declare-fun sublists$a (A_b_prod_list$) A_b_prod_list_list$)
(declare-fun sublists$b (A_list$) A_list_list$)
(declare-fun lexordp_eq$ (A_a_bool_fun_fun$) A_list_a_list_bool_fun_fun$)
(declare-fun rbt_lookup$ (A_a_bool_fun_fun$) A_b_rbt_a_b_option_fun_fun$)
(declare-fun rbt_sorted$ (A_a_bool_fun_fun$) A_b_rbt_bool_fun$)
(declare-fun greaterThan$ (A_a_bool_fun_fun$ A$) A_set$)
(declare-fun lexordp_eq$a (A_list_a_list_bool_fun_fun$) A_list_list_a_list_list_bool_fun_fun$)
(declare-fun lexordp_eq$b (A_b_prod_a_b_prod_bool_fun_fun$) A_b_prod_list_a_b_prod_list_bool_fun_fun$)
(declare-fun rbt_greater$ (A_a_bool_fun_fun$ A$) A_b_rbt_bool_fun$)
(declare-fun product_lists$ (A_list_list_list$) A_list_list_list$)
(declare-fun product_lists$a (A_b_prod_list_list$) A_b_prod_list_list$)
(declare-fun product_lists$b (A_list_list$) A_list_list$)
(assert (not (not (= (fun_app$f (rbt_sorted$ less$) (branch$ c$ t1$ k$ v$ t2$)) (and (fun_app$f (rbt_less$ less$ k$) t1$) (fun_app$f (rbt_greater$ less$ k$) t2$) (fun_app$f (rbt_sorted$ less$) t1$) (fun_app$f (rbt_sorted$ less$) t2$))))))
(assert (not (not (fun_app$f (rbt_sorted$ less$) (branch$ c$ t1$ k$ v$ t2$)))))
(assert (not (and (fun_app$f (rbt_less$ less$ k$) t1$) (fun_app$f (rbt_greater$ less$ k$) t2$) (fun_app$f (rbt_sorted$ less$) t1$) (fun_app$f (rbt_sorted$ less$) t2$))))
(check-sat)
(exit)
