(set-logic UF)
(declare-sort A$ 0)
(declare-sort Nat$ 0)
(declare-sort Unit$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort Bool_nat_fun$ 0)
(declare-sort Unit_nat_fun$ 0)
(declare-sort A_llist_a_fun$ 0)
(declare-sort Enat_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_llist_bool_fun$ 0)
(declare-sort A_llist_enat_fun$ 0)
(declare-sort Natural_bool_fun$ 0)
(declare-sort A_a_prod_bool_fun$ 0)
(declare-sort Natural_llist_set$ 0)
(declare-sort A_a_prod_llist_set$ 0)
(declare-sort A_llist_a_llist_fun$ 0)
(declare-sort Natural_natural_fun$ 0)
(declare-sort A_a_prod_a_a_prod_fun$ 0)
(declare-sort Nat_nat_prod_bool_fun$ 0)
(declare-sort Enat_enat_bool_fun_fun$ 0)
(declare-sort Natural_llist_bool_fun$ 0)
(declare-sort Natural_llist_enat_fun$ 0)
(declare-sort A_a_prod_llist_bool_fun$ 0)
(declare-sort A_a_prod_llist_enat_fun$ 0)
(declare-sort A_llist_a_llist_prod_set$ 0)
(declare-sort Natural_llist_natural_fun$ 0)
(declare-sort A_a_prod_llist_a_a_prod_fun$ 0)
(declare-sort A_llist_a_llist_bool_fun_fun$ 0)
(declare-sort A_llist_a_llist_prod_bool_fun$ 0)
(declare-sort Natural_natural_prod_bool_fun$ 0)
(declare-sort Natural_llist_natural_llist_fun$ 0)
(declare-sort A_a_prod_llist_a_a_prod_llist_fun$ 0)
(declare-sort Natural_natural_prod_llist_bool_fun$ 0)
(declare-sort Natural_llist_natural_llist_bool_fun_fun$ 0)
(declare-sort A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ 0)
(declare-sort Natural_natural_prod_natural_natural_prod_fun$ 0)
(declare-sort Natural_natural_prod_llist_natural_natural_prod_fun$ 0)
(declare-sort Natural_natural_prod_llist_natural_natural_prod_llist_fun$ 0)
(declare-sort Natural_natural_prod_llist_natural_natural_prod_llist_bool_fun_fun$ 0)
(declare-sort A_llist$ 0)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-sort A_a_prod$ 0)
(declare-sort A_a_prod_llist$ 0)
(declare-sort Natural$ 0)
(declare-sort Natural_llist$ 0)
(declare-sort Natural_natural_prod$ 0)
(declare-sort Natural_natural_prod_llist$ 0)
(declare-sort A_a_a_prod_prod$ 0)
(declare-sort A_a_a_prod_prod_llist$ 0)
(declare-sort A_natural_prod$ 0)
(declare-sort A_natural_prod_llist$ 0)
(declare-sort A_a_prod_a_prod$ 0)
(declare-sort A_a_prod_a_prod_llist$ 0)
(declare-sort A_a_prod_a_a_prod_prod$ 0)
(declare-sort A_a_prod_a_a_prod_prod_llist$ 0)
(declare-sort A_a_prod_natural_prod$ 0)
(declare-sort A_a_prod_natural_prod_llist$ 0)
(declare-sort Natural_a_prod$ 0)
(declare-sort Natural_a_prod_llist$ 0)
(declare-sort Natural_a_a_prod_prod$ 0)
(declare-sort Natural_a_a_prod_prod_llist$ 0)
(declare-sort A_llist_a_llist_prod$ 0)
(declare-sort Nat_llist$ 0)
(declare-sort Nat_nat_prod$ 0)
(declare-sort Nat_nat_prod_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_a_llist_prod_llist$ 0)
(declare-sort Natural_natural_prod_a_prod$ 0)
(declare-sort Natural_natural_prod_a_prod_llist$ 0)
(declare-sort Natural_natural_prod_natural_prod$ 0)
(declare-sort Natural_natural_prod_natural_prod_llist$ 0)
(declare-sort A_natural_natural_prod_prod$ 0)
(declare-sort A_natural_natural_prod_prod_llist$ 0)
(declare-sort Typerep_list$ 0)
(declare-sort Nibble$ 0)
(declare-sort Char$ 0)
(declare-sort Char_list$ 0)
(declare-sort Literal$ 0)
(declare-sort Typerep$ 0)
(declare-fun lNil$ () A_llist$)
(declare-fun lhd$ (A_llist$) A$)
(declare-fun ltl$ (A_llist$) A_llist$)
(declare-fun lCons$ (A$ A_llist$) A_llist$)
(declare-fun none$ () Nat_option$)
(declare-fun the$ (Nat_option$) Nat$)
(declare-fun some$ (Nat$) Nat_option$)
(declare-fun rep_enat$ (Enat$) Nat_option$)
(declare-fun abs_enat$ (Nat_option$) Enat$)
(declare-fun fst$ (A_a_prod$) A$)
(declare-fun snd$ (A_a_prod$) A$)
(declare-fun pair$ (A$ A$) A_a_prod$)
(declare-fun lNil$a () A_a_prod_llist$)
(declare-fun lhd$a (A_a_prod_llist$) A_a_prod$)
(declare-fun ltl$a (A_a_prod_llist$) A_a_prod_llist$)
(declare-fun lCons$a (A_a_prod$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun nat_of_natural$ (Natural$) Nat$)
(declare-fun natural_of_nat$ (Nat$) Natural$)
(declare-fun lNil$b () Natural_llist$)
(declare-fun lhd$b (Natural_llist$) Natural$)
(declare-fun ltl$b (Natural_llist$) Natural_llist$)
(declare-fun lCons$b (Natural$ Natural_llist$) Natural_llist$)
(declare-fun fst$a (Natural_natural_prod$) Natural$)
(declare-fun snd$a (Natural_natural_prod$) Natural$)
(declare-fun pair$a (Natural$ Natural$) Natural_natural_prod$)
(declare-fun lNil$c () Natural_natural_prod_llist$)
(declare-fun lhd$c (Natural_natural_prod_llist$) Natural_natural_prod$)
(declare-fun ltl$c (Natural_natural_prod_llist$) Natural_natural_prod_llist$)
(declare-fun lCons$c (Natural_natural_prod$ Natural_natural_prod_llist$) Natural_natural_prod_llist$)
(declare-fun fst$b (A_a_a_prod_prod$) A$)
(declare-fun snd$b (A_a_a_prod_prod$) A_a_prod$)
(declare-fun pair$b (A$ A_a_prod$) A_a_a_prod_prod$)
(declare-fun lNil$d () A_a_a_prod_prod_llist$)
(declare-fun lhd$d (A_a_a_prod_prod_llist$) A_a_a_prod_prod$)
(declare-fun ltl$d (A_a_a_prod_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun lCons$d (A_a_a_prod_prod$ A_a_a_prod_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun fst$c (A_natural_prod$) A$)
(declare-fun snd$c (A_natural_prod$) Natural$)
(declare-fun pair$c (A$ Natural$) A_natural_prod$)
(declare-fun lNil$e () A_natural_prod_llist$)
(declare-fun lhd$e (A_natural_prod_llist$) A_natural_prod$)
(declare-fun ltl$e (A_natural_prod_llist$) A_natural_prod_llist$)
(declare-fun lCons$e (A_natural_prod$ A_natural_prod_llist$) A_natural_prod_llist$)
(declare-fun fst$d (A_a_prod_a_prod$) A_a_prod$)
(declare-fun snd$d (A_a_prod_a_prod$) A$)
(declare-fun pair$d (A_a_prod$ A$) A_a_prod_a_prod$)
(declare-fun lNil$f () A_a_prod_a_prod_llist$)
(declare-fun lhd$f (A_a_prod_a_prod_llist$) A_a_prod_a_prod$)
(declare-fun ltl$f (A_a_prod_a_prod_llist$) A_a_prod_a_prod_llist$)
(declare-fun lCons$f (A_a_prod_a_prod$ A_a_prod_a_prod_llist$) A_a_prod_a_prod_llist$)
(declare-fun fst$e (A_a_prod_a_a_prod_prod$) A_a_prod$)
(declare-fun snd$e (A_a_prod_a_a_prod_prod$) A_a_prod$)
(declare-fun pair$e (A_a_prod$ A_a_prod$) A_a_prod_a_a_prod_prod$)
(declare-fun lNil$g () A_a_prod_a_a_prod_prod_llist$)
(declare-fun lhd$g (A_a_prod_a_a_prod_prod_llist$) A_a_prod_a_a_prod_prod$)
(declare-fun ltl$g (A_a_prod_a_a_prod_prod_llist$) A_a_prod_a_a_prod_prod_llist$)
(declare-fun lCons$g (A_a_prod_a_a_prod_prod$ A_a_prod_a_a_prod_prod_llist$) A_a_prod_a_a_prod_prod_llist$)
(declare-fun fst$f (A_a_prod_natural_prod$) A_a_prod$)
(declare-fun snd$f (A_a_prod_natural_prod$) Natural$)
(declare-fun pair$f (A_a_prod$ Natural$) A_a_prod_natural_prod$)
(declare-fun lNil$h () A_a_prod_natural_prod_llist$)
(declare-fun lhd$h (A_a_prod_natural_prod_llist$) A_a_prod_natural_prod$)
(declare-fun ltl$h (A_a_prod_natural_prod_llist$) A_a_prod_natural_prod_llist$)
(declare-fun lCons$h (A_a_prod_natural_prod$ A_a_prod_natural_prod_llist$) A_a_prod_natural_prod_llist$)
(declare-fun fst$g (Natural_a_prod$) Natural$)
(declare-fun snd$g (Natural_a_prod$) A$)
(declare-fun pair$g (Natural$ A$) Natural_a_prod$)
(declare-fun lNil$i () Natural_a_prod_llist$)
(declare-fun lhd$i (Natural_a_prod_llist$) Natural_a_prod$)
(declare-fun ltl$i (Natural_a_prod_llist$) Natural_a_prod_llist$)
(declare-fun lCons$i (Natural_a_prod$ Natural_a_prod_llist$) Natural_a_prod_llist$)
(declare-fun fst$h (Natural_a_a_prod_prod$) Natural$)
(declare-fun snd$h (Natural_a_a_prod_prod$) A_a_prod$)
(declare-fun pair$h (Natural$ A_a_prod$) Natural_a_a_prod_prod$)
(declare-fun lNil$j () Natural_a_a_prod_prod_llist$)
(declare-fun lhd$j (Natural_a_a_prod_prod_llist$) Natural_a_a_prod_prod$)
(declare-fun ltl$j (Natural_a_a_prod_prod_llist$) Natural_a_a_prod_prod_llist$)
(declare-fun lCons$j (Natural_a_a_prod_prod$ Natural_a_a_prod_prod_llist$) Natural_a_a_prod_prod_llist$)
(declare-fun fst$i (A_llist_a_llist_prod$) A_llist$)
(declare-fun snd$i (A_llist_a_llist_prod$) A_llist$)
(declare-fun pair$i (A_llist$ A_llist$) A_llist_a_llist_prod$)
(declare-fun lNil$k () Nat_llist$)
(declare-fun lhd$k (Nat_llist$) Nat$)
(declare-fun ltl$k (Nat_llist$) Nat_llist$)
(declare-fun lCons$k (Nat$ Nat_llist$) Nat_llist$)
(declare-fun fst$j (Nat_nat_prod$) Nat$)
(declare-fun snd$j (Nat_nat_prod$) Nat$)
(declare-fun pair$j (Nat$ Nat$) Nat_nat_prod$)
(declare-fun lNil$l () Nat_nat_prod_llist$)
(declare-fun lhd$l (Nat_nat_prod_llist$) Nat_nat_prod$)
(declare-fun ltl$l (Nat_nat_prod_llist$) Nat_nat_prod_llist$)
(declare-fun lCons$l (Nat_nat_prod$ Nat_nat_prod_llist$) Nat_nat_prod_llist$)
(declare-fun lNil$m () A_llist_llist$)
(declare-fun lhd$m (A_llist_llist$) A_llist$)
(declare-fun ltl$m (A_llist_llist$) A_llist_llist$)
(declare-fun lCons$m (A_llist$ A_llist_llist$) A_llist_llist$)
(declare-fun lNil$n () A_llist_a_llist_prod_llist$)
(declare-fun lhd$n (A_llist_a_llist_prod_llist$) A_llist_a_llist_prod$)
(declare-fun ltl$n (A_llist_a_llist_prod_llist$) A_llist_a_llist_prod_llist$)
(declare-fun lCons$n (A_llist_a_llist_prod$ A_llist_a_llist_prod_llist$) A_llist_a_llist_prod_llist$)
(declare-fun fst$k (Natural_natural_prod_a_prod$) Natural_natural_prod$)
(declare-fun snd$k (Natural_natural_prod_a_prod$) A$)
(declare-fun pair$k (Natural_natural_prod$ A$) Natural_natural_prod_a_prod$)
(declare-fun lNil$o () Natural_natural_prod_a_prod_llist$)
(declare-fun lhd$o (Natural_natural_prod_a_prod_llist$) Natural_natural_prod_a_prod$)
(declare-fun ltl$o (Natural_natural_prod_a_prod_llist$) Natural_natural_prod_a_prod_llist$)
(declare-fun lCons$o (Natural_natural_prod_a_prod$ Natural_natural_prod_a_prod_llist$) Natural_natural_prod_a_prod_llist$)
(declare-fun fst$l (Natural_natural_prod_natural_prod$) Natural_natural_prod$)
(declare-fun snd$l (Natural_natural_prod_natural_prod$) Natural$)
(declare-fun pair$l (Natural_natural_prod$ Natural$) Natural_natural_prod_natural_prod$)
(declare-fun lNil$p () Natural_natural_prod_natural_prod_llist$)
(declare-fun lhd$p (Natural_natural_prod_natural_prod_llist$) Natural_natural_prod_natural_prod$)
(declare-fun ltl$p (Natural_natural_prod_natural_prod_llist$) Natural_natural_prod_natural_prod_llist$)
(declare-fun lCons$p (Natural_natural_prod_natural_prod$ Natural_natural_prod_natural_prod_llist$) Natural_natural_prod_natural_prod_llist$)
(declare-fun fst$m (A_natural_natural_prod_prod$) A$)
(declare-fun snd$m (A_natural_natural_prod_prod$) Natural_natural_prod$)
(declare-fun pair$m (A$ Natural_natural_prod$) A_natural_natural_prod_prod$)
(declare-fun lNil$q () A_natural_natural_prod_prod_llist$)
(declare-fun lhd$q (A_natural_natural_prod_prod_llist$) A_natural_natural_prod_prod$)
(declare-fun ltl$q (A_natural_natural_prod_prod_llist$) A_natural_natural_prod_prod_llist$)
(declare-fun lCons$q (A_natural_natural_prod_prod$ A_natural_natural_prod_prod_llist$) A_natural_natural_prod_prod_llist$)
(declare-fun nil$ () Typerep_list$)
(declare-fun hd$ (Typerep_list$) Typerep$)
(declare-fun tl$ (Typerep_list$) Typerep_list$)
(declare-fun cons$ (Typerep$ Typerep_list$) Typerep_list$)
(declare-fun nibble0$ () Nibble$)
(declare-fun nibble1$ () Nibble$)
(declare-fun nibble2$ () Nibble$)
(declare-fun nibble3$ () Nibble$)
(declare-fun nibble4$ () Nibble$)
(declare-fun nibble5$ () Nibble$)
(declare-fun nibble6$ () Nibble$)
(declare-fun nibble7$ () Nibble$)
(declare-fun nibble8$ () Nibble$)
(declare-fun nibble9$ () Nibble$)
(declare-fun nibbleA$ () Nibble$)
(declare-fun nibbleB$ () Nibble$)
(declare-fun nibbleC$ () Nibble$)
(declare-fun nibbleD$ () Nibble$)
(declare-fun nibbleE$ () Nibble$)
(declare-fun nibbleF$ () Nibble$)
(declare-fun selectb$ (Char$) Nibble$)
(declare-fun selectc$ (Char$) Nibble$)
(declare-fun char$ (Nibble$ Nibble$) Char$)
(declare-fun nil$a () Char_list$)
(declare-fun hd$a (Char_list$) Char$)
(declare-fun tl$a (Char_list$) Char_list$)
(declare-fun cons$a (Char$ Char_list$) Char_list$)
(declare-fun explode$ (Literal$) Char_list$)
(declare-fun str$ (Char_list$) Literal$)
(declare-fun select$ (Typerep$) Literal$)
(declare-fun selecta$ (Typerep$) Typerep_list$)
(declare-fun typerep$ (Literal$ Typerep_list$) Typerep$)
(declare-fun n$ () Enat$)
(declare-fun uu$ (A_llist_set$) A_llist_bool_fun$)
(declare-fun xs$ () A_llist$)
(declare-fun suc$ (Natural$) Natural$)
(declare-fun uua$ (A_llist_a_llist_prod_set$) A_llist_a_llist_prod_bool_fun$)
(declare-fun uub$ () A_a_prod_llist_a_a_prod_llist_fun$)
(declare-fun uuc$ () Natural_llist_natural_llist_fun$)
(declare-fun uud$ () A_llist_a_llist_fun$)
(declare-fun uue$ () Natural_natural_prod_llist_natural_natural_prod_fun$)
(declare-fun uuf$ () Natural_natural_prod_llist_natural_natural_prod_llist_fun$)
(declare-fun uug$ () A_a_prod_llist_a_a_prod_fun$)
(declare-fun uuh$ () Natural_llist_natural_fun$)
(declare-fun uui$ () A_llist_a_fun$)
(declare-fun lzip$ (A_llist$ A_a_prod_llist$) A_a_a_prod_prod_llist$)
(declare-fun size$ (Natural$) Nat$)
(declare-fun zero$ () Enat$)
(declare-fun epred$ (Enat$) Enat$)
(declare-fun lnull$ () A_llist_bool_fun$)
(declare-fun ltake$ (Enat$) A_llist_a_llist_fun$)
(declare-fun lzip$a (A_llist$ Natural_llist$) A_natural_prod_llist$)
(declare-fun lzip$b (A_a_prod_llist$ A_llist$) A_a_prod_a_prod_llist$)
(declare-fun lzip$c (A_a_prod_llist$ A_a_prod_llist$) A_a_prod_a_a_prod_prod_llist$)
(declare-fun lzip$d (A_a_prod_llist$ Natural_llist$) A_a_prod_natural_prod_llist$)
(declare-fun lzip$e (Natural_llist$ A_llist$) Natural_a_prod_llist$)
(declare-fun lzip$f (Natural_llist$ A_a_prod_llist$) Natural_a_a_prod_prod_llist$)
(declare-fun lzip$g (Natural_llist$ Natural_llist$) Natural_natural_prod_llist$)
(declare-fun lzip$h (A_llist$ A_llist$) A_a_prod_llist$)
(declare-fun lzip$i (Nat_llist$ Nat_llist$) Nat_nat_prod_llist$)
(declare-fun lzip$j (A_llist_llist$ A_llist_llist$) A_llist_a_llist_prod_llist$)
(declare-fun lzip$k (Natural_natural_prod_llist$ A_llist$) Natural_natural_prod_a_prod_llist$)
(declare-fun lzip$l (Natural_natural_prod_llist$ Natural_llist$) Natural_natural_prod_natural_prod_llist$)
(declare-fun lzip$m (A_llist$ Natural_natural_prod_llist$) A_natural_natural_prod_prod_llist$)
(declare-fun size$a (Typerep$) Nat$)
(declare-fun size$b (Literal$) Nat$)
(declare-fun size$c (Nibble$) Nat$)
(declare-fun size$d (Char$) Nat$)
(declare-fun size$e () Bool_nat_fun$)
(declare-fun size$f () Unit_nat_fun$)
(declare-fun unity$ () Unit$)
(declare-fun zero$a () Nat$)
(declare-fun zero$b () Natural$)
(declare-fun lnull$a () A_a_prod_llist_bool_fun$)
(declare-fun lnull$b () Natural_llist_bool_fun$)
(declare-fun lnull$c () Natural_natural_prod_llist_bool_fun$)
(declare-fun lnull$d (A_a_a_prod_prod_llist$) Bool)
(declare-fun lnull$e (A_natural_prod_llist$) Bool)
(declare-fun lnull$f (A_a_prod_a_prod_llist$) Bool)
(declare-fun lnull$g (A_a_prod_a_a_prod_prod_llist$) Bool)
(declare-fun lnull$h (A_a_prod_natural_prod_llist$) Bool)
(declare-fun lnull$i (Natural_a_prod_llist$) Bool)
(declare-fun lnull$j (Natural_a_a_prod_prod_llist$) Bool)
(declare-fun lnull$k (Nat_llist$) Bool)
(declare-fun lnull$l (A_llist_llist$) Bool)
(declare-fun ltake$a (Enat$) A_a_prod_llist_a_a_prod_llist_fun$)
(declare-fun ltake$b (Enat$ Natural_llist$) Natural_llist$)
(declare-fun ltake$c (Enat$) Natural_natural_prod_llist_natural_natural_prod_llist_fun$)
(declare-fun member$ (A_llist$ A_llist_set$) Bool)
(declare-fun collect$ (A_llist_bool_fun$) A_llist_set$)
(declare-fun default$ () Unit$)
(declare-fun fun_app$ (Natural_llist_natural_llist_fun$ Natural_llist$) Natural_llist$)
(declare-fun llength$ () A_a_prod_llist_enat_fun$)
(declare-fun lmember$ (A$) A_llist_bool_fun$)
(declare-fun lprefix$ (A_llist$) A_llist_bool_fun$)
(declare-fun member$a (A_llist_a_llist_prod$ A_llist_a_llist_prod_set$) Bool)
(declare-fun member$b (A_a_prod_llist$ A_a_prod_llist_set$) Bool)
(declare-fun member$c (Natural_llist$ Natural_llist_set$) Bool)
(declare-fun collect$a (A_llist_a_llist_prod_bool_fun$) A_llist_a_llist_prod_set$)
(declare-fun fun_app$a (Natural_natural_prod_llist_natural_natural_prod_llist_fun$ Natural_natural_prod_llist$) Natural_natural_prod_llist$)
(declare-fun fun_app$b (A_a_prod_llist_a_a_prod_llist_fun$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun fun_app$c (A_llist_a_llist_fun$ A_llist$) A_llist$)
(declare-fun fun_app$d (Natural_llist_natural_fun$ Natural_llist$) Natural$)
(declare-fun fun_app$e (Natural_natural_prod_llist_natural_natural_prod_fun$ Natural_natural_prod_llist$) Natural_natural_prod$)
(declare-fun fun_app$f (A_a_prod_llist_a_a_prod_fun$ A_a_prod_llist$) A_a_prod$)
(declare-fun fun_app$g (A_llist_a_fun$ A_llist$) A$)
(declare-fun fun_app$h (A_llist_bool_fun$ A_llist$) Bool)
(declare-fun fun_app$i (A_llist_a_llist_prod_bool_fun$ A_llist_a_llist_prod$) Bool)
(declare-fun fun_app$j (A_a_prod_llist_bool_fun$ A_a_prod_llist$) Bool)
(declare-fun fun_app$k (Natural_llist_bool_fun$ Natural_llist$) Bool)
(declare-fun fun_app$l (A_a_prod_llist_enat_fun$ A_a_prod_llist$) Enat$)
(declare-fun fun_app$m (Natural_llist_enat_fun$ Natural_llist$) Enat$)
(declare-fun fun_app$n (A_llist_enat_fun$ A_llist$) Enat$)
(declare-fun fun_app$o (Natural_natural_prod_llist_bool_fun$ Natural_natural_prod_llist$) Bool)
(declare-fun fun_app$p (Natural_natural_prod_bool_fun$ Natural_natural_prod$) Bool)
(declare-fun fun_app$q (A_a_prod_bool_fun$ A_a_prod$) Bool)
(declare-fun fun_app$r (Natural_bool_fun$ Natural$) Bool)
(declare-fun fun_app$s (A_bool_fun$ A$) Bool)
(declare-fun fun_app$t (A_a_fun$ A$) A$)
(declare-fun fun_app$u (A_a_prod_a_a_prod_fun$ A_a_prod$) A_a_prod$)
(declare-fun fun_app$v (Natural_natural_fun$ Natural$) Natural$)
(declare-fun fun_app$w (Natural_natural_prod_llist_natural_natural_prod_llist_bool_fun_fun$ Natural_natural_prod_llist$) Natural_natural_prod_llist_bool_fun$)
(declare-fun fun_app$x (A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ A_a_prod_llist$) A_a_prod_llist_bool_fun$)
(declare-fun fun_app$y (Natural_llist_natural_llist_bool_fun_fun$ Natural_llist$) Natural_llist_bool_fun$)
(declare-fun fun_app$z (A_llist_a_llist_bool_fun_fun$ A_llist$) A_llist_bool_fun$)
(declare-fun iterates$ (A_a_prod_a_a_prod_fun$ A_a_prod$) A_a_prod_llist$)
(declare-fun llength$a () Natural_llist_enat_fun$)
(declare-fun llength$b () A_llist_enat_fun$)
(declare-fun llength$c (Natural_natural_prod_llist$) Enat$)
(declare-fun lmember$a (A_a_prod$) A_a_prod_llist_bool_fun$)
(declare-fun lmember$b (Natural_natural_prod$) Natural_natural_prod_llist_bool_fun$)
(declare-fun rec_bool$ (Nat$ Nat$) Bool_nat_fun$)
(declare-fun rec_unit$ (Nat$) Unit_nat_fun$)
(declare-fun the_enat$ (Enat$) Nat$)
(declare-fun fun_app$aa (Nat_nat_prod_bool_fun$ Nat_nat_prod$) Bool)
(declare-fun fun_app$ab (Enat_bool_fun$ Enat$) Bool)
(declare-fun fun_app$ac (Enat_enat_bool_fun_fun$ Enat$) Enat_bool_fun$)
(declare-fun fun_app$ad (Bool_nat_fun$ Bool) Nat$)
(declare-fun fun_app$ae (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$af (Unit_nat_fun$ Unit$) Nat$)
(declare-fun iterates$a (Natural_natural_fun$ Natural$) Natural_llist$)
(declare-fun iterates$b (A_a_fun$ A$) A_llist$)
(declare-fun iterates$c (Natural_natural_prod_natural_natural_prod_fun$ Natural_natural_prod$) Natural_natural_prod_llist$)
(declare-fun size_bool$ () Bool_nat_fun$)
(declare-fun size_char$ (Char$) Nat$)
(declare-fun size_unit$ () Unit_nat_fun$)
(declare-fun llist_all2$ (A_a_bool_fun_fun$) A_llist_a_llist_bool_fun_fun$)
(declare-fun ltakeWhile$ (Natural_natural_prod_bool_fun$ Natural_natural_prod_llist$) Natural_natural_prod_llist$)
(declare-fun divides_aux$ (Nat_nat_prod$) Bool)
(declare-fun enat_unfold$ (A_a_prod_llist_bool_fun$ A_a_prod_llist_a_a_prod_llist_fun$) A_a_prod_llist_enat_fun$)
(declare-fun gen_llength$ (Nat$) A_llist_enat_fun$)
(declare-fun ltakeWhile$a (A_a_prod_bool_fun$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun ltakeWhile$b (Natural_bool_fun$ Natural_llist$) Natural_llist$)
(declare-fun ltakeWhile$c (A_bool_fun$ A_llist$) A_llist$)
(declare-fun size_nibble$ (Nibble$) Nat$)
(declare-fun enat_unfold$a (Natural_llist_bool_fun$ Natural_llist_natural_llist_fun$) Natural_llist_enat_fun$)
(declare-fun enat_unfold$b (A_llist_bool_fun$ A_llist_a_llist_fun$) A_llist_enat_fun$)
(declare-fun size_natural$ (Natural$) Nat$)
(declare-fun unfold_llist$ (Natural_natural_prod_llist_bool_fun$ Natural_natural_prod_llist_natural_natural_prod_fun$ Natural_natural_prod_llist_natural_natural_prod_llist_fun$ Natural_natural_prod_llist$) Natural_natural_prod_llist$)
(declare-fun nibble_of_nat$ (Nat$) Nibble$)
(declare-fun unfold_llist$a (A_a_prod_llist_bool_fun$ A_a_prod_llist_a_a_prod_fun$ A_a_prod_llist_a_a_prod_llist_fun$ A_a_prod_llist$) A_a_prod_llist$)
(declare-fun unfold_llist$b (Natural_llist_bool_fun$ Natural_llist_natural_fun$ Natural_llist_natural_llist_fun$ Natural_llist$) Natural_llist$)
(declare-fun unfold_llist$c (A_llist_bool_fun$ A_llist_a_fun$ A_llist_a_llist_fun$ A_llist$) A_llist$)
(assert (not (= (= n$ zero$) (= n$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)))))
(assert (= n$ n$))
(assert (= zero$ (fun_app$n (enat_unfold$b lnull$ uud$) lNil$)))
(check-sat)
(exit)
