(assume nst61.0 (not (or (not (forall ((?v0 Nat$) (?v1 A$) (?v2 A_llist$)) (= (fun_app$c (ldropn$ ?v0) (lCons$ ?v1 ?v2)) (fun_app$h (fun_app$o (case_nat$ (lCons$ ?v1 ?v2)) (uvn$ ?v2)) ?v0)))) (= (fun_app$c (ldropn$ (suc$ n$)) (lCons$ (lhd$ xs$) (ltl$ xs$))) (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$))))))
(step st61 (cl (or (not (forall ((?v0 Nat$) (?v1 A$) (?v2 A_llist$)) (= (fun_app$c (ldropn$ ?v0) (lCons$ ?v1 ?v2)) (fun_app$h (fun_app$o (case_nat$ (lCons$ ?v1 ?v2)) (uvn$ ?v2)) ?v0)))) (= (fun_app$c (ldropn$ (suc$ n$)) (lCons$ (lhd$ xs$) (ltl$ xs$))) (fun_app$h (fun_app$o (case_nat$ (lCons$ (lhd$ xs$) (ltl$ xs$))) (uvn$ (ltl$ xs$))) (suc$ n$))))) :rule forall_inst :args ((suc$ n$) (lhd$ xs$) (ltl$ xs$)))
(step t.end (cl) :rule resolution :premises (nst61.0 st61))
