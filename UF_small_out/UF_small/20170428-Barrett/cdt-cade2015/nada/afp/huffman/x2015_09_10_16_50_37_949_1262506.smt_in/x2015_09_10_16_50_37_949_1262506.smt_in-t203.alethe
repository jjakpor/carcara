(assume nst203.0 (not (not (= (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$)) (and (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ t$)) (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))))))))
(assume nst203.1 (not (not (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$)))))
(assume nst203.2 (not (and (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ t$)) (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))))))
(step st203 (cl (not (= (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$)) (and (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ t$)) (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)))))) (not (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$))) (and (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ t$)) (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst203.0 nst203.1 nst203.2 st203))
