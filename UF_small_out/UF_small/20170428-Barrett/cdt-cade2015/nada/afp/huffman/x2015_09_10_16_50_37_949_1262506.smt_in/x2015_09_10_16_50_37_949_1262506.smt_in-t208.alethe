(assume nst208.0 (not (or (not (forall ((?v0 Nat$) (?v1 Nat$)) (= (= ?v0 ?v1) (and (fun_app$b (less_eq$ ?v0) ?v1) (fun_app$b (less_eq$ ?v1) ?v0))))) (= (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$)) (and (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ t$)) (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))))))))
(step st208 (cl (or (not (forall ((?v0 Nat$) (?v1 Nat$)) (= (= ?v0 ?v1) (and (fun_app$b (less_eq$ ?v0) ?v1) (fun_app$b (less_eq$ ?v1) ?v0))))) (= (= (cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$)) (and (fun_app$b (less_eq$ (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))) (cost$ t$)) (fun_app$b (less_eq$ (cost$ t$)) (cost$ (swapFourSyms$ t$ a$ b$ c$ d$))))))) :rule forall_inst :args ((cost$ (swapFourSyms$ t$ a$ b$ c$ d$)) (cost$ t$)))
(step t.end (cl) :rule resolution :premises (nst208.0 st208))
