(assume nst262.0 (not (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$)))))
(assume a3 (consistent$ t$))
(assume a6 (member$ d$ (alphabet$ t$)))
(assume t3 (or (not (consistent$ t$)) (not (member$ d$ (alphabet$ t$))) (not (member$ a$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$))) (not (fun_app$b (less_eq$ (depth$ t$ a$)) (depth$ t$ d$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$)) (not (or (not (consistent$ t$)) (not (member$ a$ (alphabet$ t$))) (not (member$ d$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$))) (not (fun_app$b (less_eq$ (depth$ t$ a$)) (depth$ t$ d$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$))))))
(assume t15 (member$ a$ (alphabet$ t$)))
(assume t27 (fun_app$b (less_eq$ (depth$ t$ a$)) (depth$ t$ d$)))
(assume t258 (not (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$))))
(assume t261 (or (not (consistent$ t$)) (not (member$ a$ (alphabet$ t$))) (not (member$ d$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$))) (not (fun_app$b (less_eq$ (depth$ t$ a$)) (depth$ t$ d$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$))))
(step t3' (cl (not (consistent$ t$)) (not (member$ d$ (alphabet$ t$))) (not (member$ a$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$))) (not (fun_app$b (less_eq$ (depth$ t$ a$)) (depth$ t$ d$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$)) (not (or (not (consistent$ t$)) (not (member$ a$ (alphabet$ t$))) (not (member$ d$ (alphabet$ t$))) (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$))) (not (fun_app$b (less_eq$ (depth$ t$ a$)) (depth$ t$ d$))) (fun_app$b (less_eq$ (cost$ (fun_app$f (swapSyms$ t$ a$) d$))) (cost$ t$))))) :rule or :premises (t3))
(step st262 (cl (not (fun_app$b (less_eq$ (fun_app$a (freq$ t$) a$)) (fun_app$a (freq$ t$) d$)))) :rule resolution :premises (t3' a3 a6 t15 t27 t258 t261))
(step t.end (cl) :rule resolution :premises (nst262.0 st262))
