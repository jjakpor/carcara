(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst39.0 (not (seteq (intersection a b) (intersection b a))))
(assume nst39.1 (not (not (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b))))))
(assume nst39.2 (not (not (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b)))))))
(assume t38 (or (not (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b))))) (seteq (intersection a b) (intersection b a)) (not (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b))))))
(step t38' (cl (not (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b))))) (seteq (intersection a b) (intersection b a)) (not (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b))))) :rule or :premises (t38))
(step st39 (cl (seteq (intersection a b) (intersection b a)) (not (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b)))) (not (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b)))))) :rule reordering :premises (t38'))
(step t.end (cl) :rule resolution :premises (nst39.0 nst39.1 nst39.2 st39))
