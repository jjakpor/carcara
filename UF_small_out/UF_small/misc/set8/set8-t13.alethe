(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nst13.0 (not (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a)))))))
(assume nst13.1 (not (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a)))))))
(assume t10 (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))))
(assume t11 (or (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))) (not (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))))))
(assume t12 (or (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))) (not (not (not (member @quantifiers_skolemize_4 (intersection b a)))))))
(step t10' (cl (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))) :rule or :premises (t10))
(step t11' (cl (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))) (not (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))))) :rule or :premises (t11))
(step t12' (cl (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))) (not (not (not (member @quantifiers_skolemize_4 (intersection b a)))))) :rule or :premises (t12))
(step st13 (cl (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a))))) (or (or (not (member @quantifiers_skolemize_4 (intersection b a))) (member @quantifiers_skolemize_4 (intersection a b))) (not (not (member @quantifiers_skolemize_4 (intersection b a)))))) :rule resolution :premises (t10' t11' t12'))
(step t.end (cl) :rule resolution :premises (nst13.0 nst13.1 st13))
