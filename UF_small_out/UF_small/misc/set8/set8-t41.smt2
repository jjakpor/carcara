(set-logic UF)
(declare-sort Set 0)
(declare-sort Elem 0)
(declare-fun member (Elem Set) Bool)
(declare-fun subset (Set Set) Bool)
(declare-fun seteq (Set Set) Bool)
(declare-fun union (Set Set) Set)
(declare-fun intersection (Set Set) Set)
(declare-fun difference (Set Set) Set)
(declare-fun a () Set)
(declare-fun b () Set)
(assert (not (not (forall ((?s1 Set) (?s2 Set)) (= (seteq ?s1 ?s2) (and (subset ?s1 ?s2) (subset ?s2 ?s1)))))))
(assert (not (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b))))))
(assert (or (not (forall ((?s1 Set) (?s2 Set)) (= (seteq ?s1 ?s2) (and (subset ?s1 ?s2) (subset ?s2 ?s1))))) (= (seteq (intersection a b) (intersection b a)) (and (subset (intersection a b) (intersection b a)) (subset (intersection b a) (intersection a b))))))
(check-sat)
(exit)
