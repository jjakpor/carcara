(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (intersection b a))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection b a))) (member ?x (intersection a b))))))
(assume nt51.t1.0 (not (= (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))) (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))))
(anchor :step t51.t1 :args ((:= (?x Elem) @quantifiers_skolemize_3)))
(step t51.t1.t0 (cl (= (or (not (member ?x (intersection a b))) (member ?x (intersection b a))) (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) :rule trust)
(step t51.t1 (cl (= (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (intersection b a)))) (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (intersection b a))))) :rule sko_forall)
(step t.end (cl) :rule resolution :premises (nt51.t1.0 t51.t1))
