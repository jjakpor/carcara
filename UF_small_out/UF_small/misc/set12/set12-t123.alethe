(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst123.0 (not (not (subset (intersection (intersection a b) c) (intersection a (intersection b c))))))
(assume t42 (or (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c)))) (not (subset (intersection a (intersection b c)) (intersection (intersection a b) c))) (not (subset (intersection (intersection a b) c) (intersection a (intersection b c))))))
(assume t48 (not (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c))))))
(assume t122 (subset (intersection a (intersection b c)) (intersection (intersection a b) c)))
(step t42' (cl (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c)))) (not (subset (intersection a (intersection b c)) (intersection (intersection a b) c))) (not (subset (intersection (intersection a b) c) (intersection a (intersection b c))))) :rule or :premises (t42))
(step st123 (cl (not (subset (intersection (intersection a b) c) (intersection a (intersection b c))))) :rule resolution :premises (t42' t48 t122))
(step t.end (cl) :rule resolution :premises (nst123.0 st123))
