(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst42.0 (not (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c))))))
(assume nst42.1 (not (not (subset (intersection a (intersection b c)) (intersection (intersection a b) c)))))
(assume nst42.2 (not (not (subset (intersection (intersection a b) c) (intersection a (intersection b c))))))
(step st42 (cl (and (subset (intersection a (intersection b c)) (intersection (intersection a b) c)) (subset (intersection (intersection a b) c) (intersection a (intersection b c)))) (not (subset (intersection a (intersection b c)) (intersection (intersection a b) c))) (not (subset (intersection (intersection a b) c) (intersection a (intersection b c))))) :rule and_neg)
(step t.end (cl) :rule resolution :premises (nst42.0 nst42.1 nst42.2 st42))
