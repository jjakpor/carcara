(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (intersection b c)))) (member ?x (intersection (intersection a b) c))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection (intersection a b) c))) (member ?x (intersection a (intersection b c)))))))
(assume nst103.0 (not (= (or (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (not (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))))) (or (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (member @quantifiers_skolemize_3 (intersection a (intersection b c)))))))
(assume t101 (= (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c)))))
(assume t102 (= (not (not (member @quantifiers_skolemize_3 (intersection a (intersection b c))))) (member @quantifiers_skolemize_3 (intersection a (intersection b c)))))
(step st103 (cl (= (or (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (not (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))))) (or (or (not (member @quantifiers_skolemize_3 (intersection a (intersection b c)))) (member @quantifiers_skolemize_3 (intersection (intersection a b) c))) (member @quantifiers_skolemize_3 (intersection a (intersection b c)))))) :rule cong :premises (t101 t102))
(step t.end (cl) :rule resolution :premises (nst103.0 st103))
