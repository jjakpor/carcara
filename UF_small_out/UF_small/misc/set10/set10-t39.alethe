(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union a b))) (member ?x c)))))
(assume nst39.0 (not (not (= (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (union a b))))) (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (member @quantifiers_skolemize_3 (union a b)))))))
(assume nst39.1 (not (not (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (union a b))))))))
(assume nst39.2 (not (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (member @quantifiers_skolemize_3 (union a b)))))
(step st39 (cl (not (= (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (union a b))))) (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (member @quantifiers_skolemize_3 (union a b))))) (not (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (not (not (member @quantifiers_skolemize_3 (union a b)))))) (or (or (not (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 c)) (member @quantifiers_skolemize_3 (union a b)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst39.0 nst39.1 nst39.2 st39))
