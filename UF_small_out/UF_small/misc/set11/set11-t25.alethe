(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x b)) (member ?x (union a b))))))
(assume nst25.0 (not (not (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2)))))))))
(assume nst25.1 (not (or (subset b (union a b)) (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))))))
(assume t24 (or (not (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) (or (subset b (union a b)) (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))))))
(step st25 (cl (not (forall ((?s1 Set) (?s2 Set)) (or (subset ?s1 ?s2) (not (forall ((?x Elem)) (or (not (member ?x ?s1)) (member ?x ?s2))))))) (or (subset b (union a b)) (not (forall ((?x Elem)) (or (not (member ?x b)) (member ?x (union a b))))))) :rule or :premises (t24))
(step t.end (cl) :rule resolution :premises (nst25.0 nst25.1 st25))
