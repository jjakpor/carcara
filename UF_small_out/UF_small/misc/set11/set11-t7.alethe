(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x b)) (member ?x (union a b))))))
(assume nst7.0 (not (not (= (or (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))) (not (not (member @quantifiers_skolemize_3 b)))) (or (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 b))))))
(assume nst7.1 (not (not (or (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))) (not (not (member @quantifiers_skolemize_3 b)))))))
(assume nst7.2 (not (or (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 b))))
(step st7 (cl (not (= (or (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))) (not (not (member @quantifiers_skolemize_3 b)))) (or (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 b)))) (not (or (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))) (not (not (member @quantifiers_skolemize_3 b))))) (or (or (not (member @quantifiers_skolemize_3 b)) (member @quantifiers_skolemize_3 (union a b))) (member @quantifiers_skolemize_3 b))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst7.0 nst7.1 nst7.2 st7))
