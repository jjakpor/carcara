(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x b)) (member ?x (union a b))))))
(assume t1 (or (member @quantifiers_skolemize_3 (union a b)) (not (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) (not (= (member @quantifiers_skolemize_3 (union a b)) (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))))))
(assume t4 (= (member @quantifiers_skolemize_3 (union a b)) (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))))
(assume t35 (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)))
(assume t37 (not (member @quantifiers_skolemize_3 (union a b))))
(step t1' (cl (member @quantifiers_skolemize_3 (union a b)) (not (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) (not (= (member @quantifiers_skolemize_3 (union a b)) (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))))) :rule or :premises (t1))
(step st38 (cl) :rule resolution :premises (t1' t4 t35 t37))
