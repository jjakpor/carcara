(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x b)) (member ?x (union a b))))))
(assume nst0.0 (not (not (= (member @quantifiers_skolemize_3 (union a b)) (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))))))
(assume nst0.1 (not (member @quantifiers_skolemize_3 (union a b))))
(assume nst0.2 (not (not (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)))))
(step st0 (cl (not (= (member @quantifiers_skolemize_3 (union a b)) (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)))) (member @quantifiers_skolemize_3 (union a b)) (not (or (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)))) :rule equiv_pos1)
(step t.end (cl) :rule resolution :premises (nst0.0 nst0.1 nst0.2 st0))
