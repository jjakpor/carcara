(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst82.0 (not (not (member @quantifiers_skolemize_3 (difference a b)))))
(assume nst82.1 (not (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b)))))
(assume nst82.2 (not (not (= (member @quantifiers_skolemize_3 (difference a b)) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b)))))))
(assume t81 (or (not (= (member @quantifiers_skolemize_3 (difference a b)) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))))) (not (member @quantifiers_skolemize_3 (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b)))))
(step t81' (cl (not (= (member @quantifiers_skolemize_3 (difference a b)) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))))) (not (member @quantifiers_skolemize_3 (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b)))) :rule or :premises (t81))
(step st82 (cl (not (member @quantifiers_skolemize_3 (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))) (not (= (member @quantifiers_skolemize_3 (difference a b)) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b)))))) :rule reordering :premises (t81'))
(step t.end (cl) :rule resolution :premises (nst82.0 nst82.1 nst82.2 st82))
