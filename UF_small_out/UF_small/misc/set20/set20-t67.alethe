(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst67.0 (not (= (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b))))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))) (or (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))))))
(assume t65 (= (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b))))))) (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(assume t66 (= (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))))
(step st67 (cl (= (or (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b))))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))) (or (forall ((?x Elem)) (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b))))) (not (or (not (member @quantifiers_skolemize_3 (intersection a b))) (member @quantifiers_skolemize_3 (difference a (difference a b)))))))) :rule cong :premises (t65 t66))
(step t.end (cl) :rule resolution :premises (nst67.0 st67))
