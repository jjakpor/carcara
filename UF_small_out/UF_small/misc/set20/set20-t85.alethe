(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst85.0 (not (= (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))) (member @quantifiers_skolemize_3 (difference a b)))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference a b)) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))))))))
(assume t3 (= (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2))))))
(assume t84 (= (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))) (member @quantifiers_skolemize_3 (difference a b))) (= (member @quantifiers_skolemize_3 (difference a b)) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))))))
(step st85 (cl (= (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))) (member @quantifiers_skolemize_3 (difference a b)))) (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference a b)) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 b))))))) :rule cong :premises (t3 t84))
(step t.end (cl) :rule resolution :premises (nst85.0 st85))
