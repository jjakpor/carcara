(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a b))) (member ?x (difference a (difference a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference a (difference a b)))) (member ?x (intersection a b))))))
(assume nst116.0 (not (member @quantifiers_skolemize_3 (difference a (difference a b)))))
(assume nst116.1 (not (not (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))))))
(assume nst116.2 (not (not (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b))))))))
(assume t115 (or (not (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))))) (member @quantifiers_skolemize_3 (difference a (difference a b))) (not (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))))))
(step t115' (cl (not (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))))) (member @quantifiers_skolemize_3 (difference a (difference a b))) (not (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b)))))) :rule or :premises (t115))
(step st116 (cl (member @quantifiers_skolemize_3 (difference a (difference a b))) (not (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b))))) (not (= (member @quantifiers_skolemize_3 (difference a (difference a b))) (and (member @quantifiers_skolemize_3 a) (not (member @quantifiers_skolemize_3 (difference a b))))))) :rule reordering :premises (t115'))
(step t.end (cl) :rule resolution :premises (nst116.0 nst116.1 nst116.2 st116))
