(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst31.0 (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))))
(assume nst31.1 (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b))))))
(assume t30 (or (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_4 (difference c (intersection a b)))))
(step t30' (cl (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_4 (difference c (intersection a b)))) :rule or :premises (t30))
(step st31 (cl (member @quantifiers_skolemize_4 (difference c (intersection a b))) (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b))))) :rule reordering :premises (t30'))
(step t.end (cl) :rule resolution :premises (nst31.0 nst31.1 st31))
