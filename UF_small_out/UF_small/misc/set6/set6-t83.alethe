(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst83.0 (not (member @quantifiers_skolemize_3 b)))
(assume nst83.1 (not (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)))))
(assume t82 (or (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) (member @quantifiers_skolemize_3 b)))
(step t82' (cl (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b))) (member @quantifiers_skolemize_3 b)) :rule or :premises (t82))
(step st83 (cl (member @quantifiers_skolemize_3 b) (not (and (member @quantifiers_skolemize_3 a) (member @quantifiers_skolemize_3 b)))) :rule reordering :premises (t82'))
(step t.end (cl) :rule resolution :premises (nst83.0 nst83.1 st83))
