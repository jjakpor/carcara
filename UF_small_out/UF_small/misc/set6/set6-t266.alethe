(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst266.0 (not (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))))))
(assume nst266.1 (not (not (member @quantifiers_skolemize_4 (intersection a b)))))
(step st266 (cl (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))) (not (member @quantifiers_skolemize_4 (intersection a b)))) :rule and_pos :args (1))
(step t.end (cl) :rule resolution :premises (nst266.0 nst266.1 st266))
