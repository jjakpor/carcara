(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst103.0 (not (not (member @quantifiers_skolemize_3 (difference c b)))))
(assume nst103.1 (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b)))))
(assume nst103.2 (not (not (= (member @quantifiers_skolemize_3 (difference c b)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b)))))))
(assume t102 (or (not (= (member @quantifiers_skolemize_3 (difference c b)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b))))) (not (member @quantifiers_skolemize_3 (difference c b))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b)))))
(step t102' (cl (not (= (member @quantifiers_skolemize_3 (difference c b)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b))))) (not (member @quantifiers_skolemize_3 (difference c b))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b)))) :rule or :premises (t102))
(step st103 (cl (not (member @quantifiers_skolemize_3 (difference c b))) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b))) (not (= (member @quantifiers_skolemize_3 (difference c b)) (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 b)))))) :rule reordering :premises (t102'))
(step t.end (cl) :rule resolution :premises (nst103.0 nst103.1 nst103.2 st103))
