(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst14.0 (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a)))))
(assume nst14.1 (not (not (member @quantifiers_skolemize_4 c))))
(assume nst14.2 (not (member @quantifiers_skolemize_4 a)))
(assume t13 (or (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a))) (not (member @quantifiers_skolemize_4 c)) (member @quantifiers_skolemize_4 a)))
(step st14 (cl (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 a))) (not (member @quantifiers_skolemize_4 c)) (member @quantifiers_skolemize_4 a)) :rule or :premises (t13))
(step t.end (cl) :rule resolution :premises (nst14.0 nst14.1 nst14.2 st14))
