(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst139.0 (not (not (member @quantifiers_skolemize_3 a))))
(assume nst139.1 (not (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))))))
(assume t138 (or (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))) (not (member @quantifiers_skolemize_3 a))))
(step t138' (cl (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a)))) (not (member @quantifiers_skolemize_3 a))) :rule or :premises (t138))
(step st139 (cl (not (member @quantifiers_skolemize_3 a)) (not (and (member @quantifiers_skolemize_3 c) (not (member @quantifiers_skolemize_3 a))))) :rule reordering :premises (t138'))
(step t.end (cl) :rule resolution :premises (nst139.0 nst139.1 st139))
