(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst237.0 (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b)))))
(assume nst237.1 (not (not (member @quantifiers_skolemize_4 c))))
(assume nst237.2 (not (not (not (member @quantifiers_skolemize_4 b)))))
(step st237 (cl (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 b))) (not (member @quantifiers_skolemize_4 c)) (not (not (member @quantifiers_skolemize_4 b)))) :rule and_neg)
(step t.end (cl) :rule resolution :premises (nst237.0 nst237.1 nst237.2 st237))
