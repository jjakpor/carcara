(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst205.0 (not (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))))
(assume t19 (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))) (not (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))))))
(assume t192 (member @quantifiers_skolemize_4 (difference c (intersection a b))))
(assume t204 (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))))
(step t19' (cl (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))) (not (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))))) :rule or :premises (t19))
(step st205 (cl (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b))))) :rule resolution :premises (t19' t192 t204))
(step t.end (cl) :rule resolution :premises (nst205.0 st205))
