(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst24.0 (not (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b))))))
(assume nst24.1 (not (not (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))))))
(step st24 (cl (or (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))) (member @quantifiers_skolemize_4 (union (difference c a) (difference c b)))) (not (not (member @quantifiers_skolemize_4 (difference c (intersection a b)))))) :rule or_neg :args (0))
(step t.end (cl) :rule resolution :premises (nst24.0 nst24.1 st24))
