(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst204.0 (not (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))))))
(assume t118 (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))))
(assume t203 (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2))))) (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))))))
(step t203' (cl (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2))))) (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))))) :rule or :premises (t203))
(step st204 (cl (= (member @quantifiers_skolemize_4 (difference c (intersection a b))) (and (member @quantifiers_skolemize_4 c) (not (member @quantifiers_skolemize_4 (intersection a b)))))) :rule resolution :premises (t203' t118))
(step t.end (cl) :rule resolution :premises (nst204.0 st204))
