(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst121.0 (not (member @quantifiers_skolemize_3 (difference c a))))
(assume nst121.1 (not (member @quantifiers_skolemize_3 (difference c b))))
(assume nst121.2 (not (not (or (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b))))))
(assume t120 (or (not (or (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b)))) (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b))))
(step t120' (cl (not (or (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b)))) (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b))) :rule or :premises (t120))
(step st121 (cl (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b)) (not (or (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b))))) :rule reordering :premises (t120'))
(step t.end (cl) :rule resolution :premises (nst121.0 nst121.1 nst121.2 st121))
