(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst163.0 (not (not (= (or (or (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_3 (difference c (intersection a b)))) (not (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))))) (or (or (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_3 (difference c (intersection a b)))) (member @quantifiers_skolemize_3 (union (difference c a) (difference c b))))))))
(assume nst163.1 (not (not (or (or (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_3 (difference c (intersection a b)))) (not (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))))))))
(assume nst163.2 (not (or (or (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_3 (difference c (intersection a b)))) (member @quantifiers_skolemize_3 (union (difference c a) (difference c b))))))
(step st163 (cl (not (= (or (or (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_3 (difference c (intersection a b)))) (not (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))))) (or (or (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_3 (difference c (intersection a b)))) (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))))) (not (or (or (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_3 (difference c (intersection a b)))) (not (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b))))))) (or (or (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))) (member @quantifiers_skolemize_3 (difference c (intersection a b)))) (member @quantifiers_skolemize_3 (union (difference c a) (difference c b))))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst163.0 nst163.1 nst163.2 st163))
