(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst157.0 (not (not (= (member @quantifiers_skolemize_3 (union (difference c a) (difference c b))) (or (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b)))))))
(assume nst157.1 (not (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b))))))
(assume nst157.2 (not (or (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b)))))
(step st157 (cl (not (= (member @quantifiers_skolemize_3 (union (difference c a) (difference c b))) (or (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b))))) (not (member @quantifiers_skolemize_3 (union (difference c a) (difference c b)))) (or (member @quantifiers_skolemize_3 (difference c a)) (member @quantifiers_skolemize_3 (difference c b)))) :rule equiv_pos2)
(step t.end (cl) :rule resolution :premises (nst157.0 nst157.1 nst157.2 st157))
