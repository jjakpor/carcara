(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (difference c a) (difference c b)))) (member ?x (difference c (intersection a b)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference c (intersection a b)))) (member ?x (union (difference c a) (difference c b)))))))
(assume nst269.0 (not (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (member ?x (intersection ?s1 ?s2)) (and (member ?x ?s1) (member ?x ?s2))))) (= (member @quantifiers_skolemize_4 (intersection a b)) (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b))))))
(step st269 (cl (or (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (member ?x (intersection ?s1 ?s2)) (and (member ?x ?s1) (member ?x ?s2))))) (= (member @quantifiers_skolemize_4 (intersection a b)) (and (member @quantifiers_skolemize_4 a) (member @quantifiers_skolemize_4 b))))) :rule forall_inst :args (@quantifiers_skolemize_4 a b))
(step t.end (cl) :rule resolution :premises (nst269.0 st269))
