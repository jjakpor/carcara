(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference b a))) (member ?x (difference b d))))))
(assume nst58.0 (not (not (member @quantifiers_skolemize_3 a))))
(assume t10 (or (not (member @quantifiers_skolemize_3 a)) (not (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))))))
(assume t57 (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))))
(step t10' (cl (not (member @quantifiers_skolemize_3 a)) (not (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 a))))) :rule or :premises (t10))
(step st58 (cl (not (member @quantifiers_skolemize_3 a))) :rule resolution :premises (t10' t57))
(step t.end (cl) :rule resolution :premises (nst58.0 st58))
