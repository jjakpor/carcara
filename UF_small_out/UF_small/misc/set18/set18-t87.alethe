(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (difference b a))) (member ?x (difference b d))))))
(assume nst87.0 (not (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))))))
(assume nst87.1 (not (= (member @quantifiers_skolemize_3 (difference b d)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))))))
(assume t86 (=> (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2)))) (= (member @quantifiers_skolemize_3 (difference b d)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))))))
(step st87 (cl (not (forall ((?x Elem) (?s1 Set) (?s2 Set)) (= (and (member ?x ?s1) (not (member ?x ?s2))) (member ?x (difference ?s1 ?s2))))) (= (member @quantifiers_skolemize_3 (difference b d)) (and (member @quantifiers_skolemize_3 b) (not (member @quantifiers_skolemize_3 d))))) :rule implies :premises (t86))
(step t.end (cl) :rule resolution :premises (nst87.0 nst87.1 st87))
