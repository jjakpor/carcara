(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst7.0 (not (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b))))))
(assume nst7.1 (not (member @quantifiers_skolemize_4 (intersection a b))))
(assume t6 (or (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (member @quantifiers_skolemize_4 (intersection a b))))
(step t6' (cl (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (member @quantifiers_skolemize_4 (intersection a b))) :rule or :premises (t6))
(step st7 (cl (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (member @quantifiers_skolemize_4 (intersection a b))) :rule contraction :premises (t6'))
(step t.end (cl) :rule resolution :premises (nst7.0 nst7.1 st7))
