(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst15.0 (not (or (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 (intersection a c)))))
(assume nst15.1 (not (not (member @quantifiers_skolemize_4 (intersection a b)))))
(step st15 (cl (or (member @quantifiers_skolemize_4 (intersection a b)) (member @quantifiers_skolemize_4 (intersection a c))) (not (member @quantifiers_skolemize_4 (intersection a b)))) :rule or_neg :args (0))
(step t.end (cl) :rule resolution :premises (nst15.0 nst15.1 st15))
