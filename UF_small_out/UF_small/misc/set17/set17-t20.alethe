(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst20.0 (not (= (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))))
(step st20 (cl (= (not (not (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) (forall ((?x Elem)) (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c))))))) :rule hole)
(step t.end (cl) :rule resolution :premises (nst20.0 st20))
