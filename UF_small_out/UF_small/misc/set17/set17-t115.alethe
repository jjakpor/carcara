(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst115.0 (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))))
(assume nst115.1 (not (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c))))))
(assume t114 (or (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))) (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))))
(step t114' (cl (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c)))) (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) :rule or :premises (t114))
(step st115 (cl (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c))) (or (not (member @quantifiers_skolemize_3 (union (intersection a b) (intersection a c)))) (member @quantifiers_skolemize_3 (intersection a (union b c))))) :rule reordering :premises (t114'))
(step t.end (cl) :rule resolution :premises (nst115.0 nst115.1 st115))
