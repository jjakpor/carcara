(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x Elem)) (not (or (not (member ?x (union (intersection a b) (intersection a c)))) (member ?x (intersection a (union b c)))))))
(define-fun @quantifiers_skolemize_4 () Elem (choice ((?x Elem)) (not (or (not (member ?x (intersection a (union b c)))) (member ?x (union (intersection a b) (intersection a c)))))))
(assume nst13.0 (not (not (member @quantifiers_skolemize_4 a))))
(assume nst13.1 (not (not (= a (intersection a b)))))
(assume nst13.2 (not (member @quantifiers_skolemize_4 (intersection a b))))
(assume t0 (or (and (member @quantifiers_skolemize_4 a) (= a (intersection a b))) (not (member @quantifiers_skolemize_4 a)) (not (= a (intersection a b)))))
(assume t12 (or (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (member @quantifiers_skolemize_4 (intersection a b))))
(step t12' (cl (not (and (member @quantifiers_skolemize_4 a) (= a (intersection a b)))) (member @quantifiers_skolemize_4 (intersection a b))) :rule or :premises (t12))
(step t0' (cl (and (member @quantifiers_skolemize_4 a) (= a (intersection a b))) (not (member @quantifiers_skolemize_4 a)) (not (= a (intersection a b)))) :rule or :premises (t0))
(step st13 (cl (not (member @quantifiers_skolemize_4 a)) (not (= a (intersection a b))) (member @quantifiers_skolemize_4 (intersection a b))) :rule resolution :premises (t0' t12'))
(step t.end (cl) :rule resolution :premises (nst13.0 nst13.1 nst13.2 st13))
