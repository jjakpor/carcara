(define-fun @quantifiers_skolemize_1 () Elem (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))))
(define-fun @quantifiers_skolemize_2 () List (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))))
(define-fun @quantifiers_skolemize_3 () Elem (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2)))))))
(define-fun @quantifiers_skolemize_4 () List (choice ((?y2 List)) (not (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2)))))) ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?x2 Elem)) (not (forall ((?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2))))))) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2))))))) (= (choice ((?y1 List)) (not (forall ((?x2 Elem) (?y2 List)) (or (not (= (cons (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?y1) (cons ?x2 ?y2))) (and (= (choice ((?x1 Elem)) (not (forall ((?y1 List) (?x2 Elem) (?y2 List)) (or (not (= (cons ?x1 ?y1) (cons ?x2 ?y2))) (and (= ?x1 ?x2) (= ?y1 ?y2)))))) ?x2) (= ?y1 ?y2)))))) ?y2))))))
(assume nst0.0 (not (and (= @quantifiers_skolemize_1 @quantifiers_skolemize_3) (= @quantifiers_skolemize_2 @quantifiers_skolemize_4))))
(assume nst0.1 (not (not (= @quantifiers_skolemize_1 @quantifiers_skolemize_3))))
(assume nst0.2 (not (not (= @quantifiers_skolemize_2 @quantifiers_skolemize_4))))
(step st0 (cl (and (= @quantifiers_skolemize_1 @quantifiers_skolemize_3) (= @quantifiers_skolemize_2 @quantifiers_skolemize_4)) (not (= @quantifiers_skolemize_1 @quantifiers_skolemize_3)) (not (= @quantifiers_skolemize_2 @quantifiers_skolemize_4))) :rule and_neg)
(step t.end (cl) :rule resolution :premises (nst0.0 nst0.1 nst0.2 st0))
