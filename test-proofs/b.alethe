(assume a0 (! (>= n 1/1) :named @p_1))
(assume a1 (! (<= n 1/1) :named @p_2))
(assume a2 (! (<= x 1/1) :named @p_3))
(assume a3 (! (>= x 1/1) :named @p_4))
(assume a4 (! (not (! (= (! (* x n) :named @p_5) 1/1) :named @p_6)) :named @p_7))
(step t0 (cl (not (! (= (! (or (! (not (! (>= n 1) :named @p_8)) :named @p_40) (! (not (! (>= (* -1 n) -1) :named @p_11)) :named @p_41) (! (not (! (not (! (= n 1/1) :named @p_14)) :named @p_15)) :named @p_43)) :named @p_44) (! (or @p_40 @p_41 @p_14) :named @p_42)) :named @p_51)) (not @p_44) @p_42) :rule equiv_pos2)
(step t1 (cl (= @p_40 @p_40)) :rule refl)
(step t2 (cl (= @p_41 @p_41)) :rule refl)
(step t3 (cl (! (= @p_43 @p_14) :named @p_52)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_52 1 6))
(step t4 (cl @p_51) :rule cong :premises (t1 t2 t3))
(step t5 (cl (! (=> (! (and @p_8 @p_11 @p_15) :named @p_45) (! (and @p_15 @p_11 @p_8) :named @p_47)) :named @p_50) @p_45) :rule implies_neg1)
(anchor :step t6)
(assume t6.a0 @p_8)
(assume t6.a1 @p_11)
(assume t6.a2 @p_15)
(step t6.t0 (cl @p_47 @p_43 @p_41 @p_40) :rule and_neg)
(step t6.t1 (cl (not (! (= @p_2 @p_11) :named @p_12)) (! (not @p_2) :named @p_13) @p_11) :rule equiv_pos2)
(step t6.t2 (cl @p_12) :rule hole :args ("TRUST_THEORY_REWRITE" @p_12 3 7))
(step t6.t3 (cl @p_11) :rule resolution :premises (t6.t1 t6.t2 a1))
(step t6.t4 (cl (not (! (= @p_1 @p_8) :named @p_9)) (! (not @p_1) :named @p_10) @p_8) :rule equiv_pos2)
(step t6.t5 (cl @p_9) :rule hole :args ("TRUST_THEORY_REWRITE" @p_9 3 7))
(step t6.t6 (cl @p_8) :rule resolution :premises (t6.t4 t6.t5 a0))
(step t6.t7 (cl @p_47) :rule resolution :premises (t6.t0 t6.a2 t6.t3 t6.t6))
(step t6 (cl @p_40 @p_41 @p_43 @p_47) :rule subproof :discharge (t6.a0 t6.a1 t6.a2))
(step t7 (cl (! (not @p_45) :named @p_46) @p_8) :rule and_pos :args (0))
(step t8 (cl @p_46 @p_11) :rule and_pos :args (1))
(step t9 (cl @p_46 @p_15) :rule and_pos :args (2))
(step t10 (cl @p_47 @p_46 @p_46 @p_46) :rule resolution :premises (t6 t7 t8 t9))
(step t11 (cl @p_46 @p_46 @p_46 @p_47) :rule reordering :premises (t10))
(step t12 (cl @p_46 @p_47) :rule contraction :premises (t11))
(step t13 (cl @p_50 @p_47) :rule resolution :premises (t5 t12))
(step t14 (cl @p_50 (! (not @p_47) :named @p_48)) :rule implies_neg2)
(step t15 (cl @p_50 @p_50) :rule resolution :premises (t13 t14))
(step t16 (cl @p_50) :rule contraction :premises (t15))
(step t17 (cl @p_46 @p_47) :rule implies :premises (t16))
(step t18 (cl (! (=> @p_47 false) :named @p_49) @p_47) :rule implies_neg1)
(anchor :step t19)
(assume t19.a0 @p_15)
(assume t19.a1 @p_11)
(assume t19.a2 @p_8)
(step t19.t0 (cl (! (or @p_14 @p_13 (! (not (! (<= 1/1 n) :named @p_35)) :named @p_38)) :named @p_39)) :rule la_disequality)
(step t19.t1 (cl @p_14 @p_13 @p_38) :rule or :premises (t19.t0))
(step t19.t2 (cl (! (= @p_1 @p_35) :named @p_36)) :rule comp_simplify)
(step t19.t3 (cl (! (not @p_36) :named @p_37) @p_10 @p_35) :rule equiv_pos2)
(step t19.t4 (cl @p_35) :rule resolution :premises (t19.t2 t19.t3 a0))
(step t19.t5 (cl @p_14) :rule resolution :premises (a1 t19.t1 t19.t4))
(step t19.t6 (cl) :rule resolution :premises (t19.t5 t19.a0))
(step t19 (cl @p_43 @p_41 @p_40 false) :rule subproof :discharge (t19.a0 t19.a1 t19.a2))
(step t20 (cl @p_48 @p_15) :rule and_pos :args (0))
(step t21 (cl @p_48 @p_11) :rule and_pos :args (1))
(step t22 (cl @p_48 @p_8) :rule and_pos :args (2))
(step t23 (cl false @p_48 @p_48 @p_48) :rule resolution :premises (t19 t20 t21 t22))
(step t24 (cl @p_48 @p_48 @p_48 false) :rule reordering :premises (t23))
(step t25 (cl @p_48 false) :rule contraction :premises (t24))
(step t26 (cl @p_49 false) :rule resolution :premises (t18 t25))
(step t27 (cl @p_49 (not false)) :rule implies_neg2)
(step t28 (cl @p_49 @p_49) :rule resolution :premises (t26 t27))
(step t29 (cl @p_49) :rule contraction :premises (t28))
(step t30 (cl (= @p_49 @p_48)) :rule implies_simplify)
(step t31 (cl (not @p_49) @p_48) :rule equiv1 :premises (t30))
(step t32 (cl @p_48) :rule resolution :premises (t29 t31))
(step t33 (cl @p_46) :rule resolution :premises (t17 t32))
(step t34 (cl @p_40 @p_41 @p_43) :rule not_and :premises (t33))
(step t35 (cl @p_44 (not @p_40)) :rule or_neg :args (0))
(step t36 (cl @p_44 (not @p_41)) :rule or_neg :args (1))
(step t37 (cl @p_44 (not @p_43)) :rule or_neg :args (2))
(step t38 (cl @p_44 @p_44 @p_44) :rule resolution :premises (t34 t35 t36 t37))
(step t39 (cl @p_44) :rule contraction :premises (t38))
(step t40 (cl @p_42) :rule resolution :premises (t0 t4 t39))
(step t41 (cl @p_40 @p_41 @p_14) :rule or :premises (t40))
(step t42 (cl (! (and (! (= x 1/1) :named @p_16) @p_14) :named @p_21) (! (not @p_16) :named @p_30) @p_15) :rule and_neg)
(step t43 (cl (! (=> @p_21 (! (= (! (* n x) :named @p_23) 1/1) :named @p_24)) :named @p_29) @p_21) :rule implies_neg1)
(anchor :step t44)
(assume t44.a0 @p_16)
(assume t44.a1 @p_14)
(step t44.t0 (cl (= (! (= @p_24 true) :named @p_31) @p_24)) :rule equiv_simplify)
(step t44.t1 (cl (not @p_31) @p_24) :rule equiv1 :premises (t44.t0))
(step t44.t2 (cl @p_39) :rule la_disequality)
(step t44.t3 (cl @p_14 @p_13 @p_38) :rule or :premises (t44.t2))
(step t44.t4 (cl @p_36) :rule comp_simplify)
(step t44.t5 (cl @p_37 @p_10 @p_35) :rule equiv_pos2)
(step t44.t6 (cl @p_35) :rule resolution :premises (t44.t4 t44.t5 a0))
(step t44.t7 (cl @p_14) :rule resolution :premises (a1 t44.t3 t44.t6))
(step t44.t8 (cl (or @p_16 (! (not @p_3) :named @p_19) (! (not (! (<= 1/1 x) :named @p_17)) :named @p_20))) :rule la_disequality)
(step t44.t9 (cl @p_16 @p_19 @p_20) :rule or :premises (t44.t8))
(step t44.t10 (cl (! (= @p_4 @p_17) :named @p_18)) :rule comp_simplify)
(step t44.t11 (cl (not @p_18) (not @p_4) @p_17) :rule equiv_pos2)
(step t44.t12 (cl @p_17) :rule resolution :premises (t44.t10 t44.t11 a3))
(step t44.t13 (cl @p_16) :rule resolution :premises (a2 t44.t9 t44.t12))
(step t44.t14 (cl (= @p_23 (! (* 1/1 1/1) :named @p_32))) :rule cong :premises (t44.t7 t44.t13))
(step t44.t15 (cl (! (= 1/1 1/1) :named @p_27)) :rule refl)
(step t44.t16 (cl (= @p_24 (! (= @p_32 1/1) :named @p_33))) :rule cong :premises (t44.t14 t44.t15))
(step t44.t17 (cl @p_33) :rule hole :args ("TRUST_THEORY_REWRITE" @p_33 3 7))
(step t44.t18 (cl (= @p_33 @p_27)) :rule cong :premises (t44.t17 t44.t15))
(step t44.t19 (cl (! (= @p_27 true) :named @p_34)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_34 3 7))
(step t44.t20 (cl (= @p_33 true)) :rule trans :premises (t44.t18 t44.t19))
(step t44.t21 (cl @p_31) :rule trans :premises (t44.t16 t44.t20))
(step t44.t22 (cl @p_24) :rule resolution :premises (t44.t1 t44.t21))
(step t44 (cl @p_30 @p_15 @p_24) :rule subproof :discharge (t44.a0 t44.a1))
(step t45 (cl (! (not @p_21) :named @p_22) @p_16) :rule and_pos :args (0))
(step t46 (cl @p_22 @p_14) :rule and_pos :args (1))
(step t47 (cl @p_24 @p_22 @p_22) :rule resolution :premises (t44 t45 t46))
(step t48 (cl @p_22 @p_22 @p_24) :rule reordering :premises (t47))
(step t49 (cl @p_22 @p_24) :rule contraction :premises (t48))
(step t50 (cl @p_29 @p_24) :rule resolution :premises (t43 t49))
(step t51 (cl @p_29 (! (not @p_24) :named @p_25)) :rule implies_neg2)
(step t52 (cl @p_29 @p_29) :rule resolution :premises (t50 t51))
(step t53 (cl @p_29) :rule contraction :premises (t52))
(step t54 (cl @p_22 @p_24) :rule implies :premises (t53))
(step t55 (cl @p_24 @p_22) :rule reordering :premises (t54))
(step t56 (cl (not (! (= @p_7 @p_25) :named @p_26)) (not @p_7) @p_25) :rule equiv_pos2)
(step t57 (cl (! (= @p_5 @p_23) :named @p_28)) :rule hole :args ("TRUST_THEORY_REWRITE" @p_28 3 7))
(step t58 (cl @p_27) :rule refl)
(step t59 (cl (= @p_6 @p_24)) :rule cong :premises (t57 t58))
(step t60 (cl @p_26) :rule cong :premises (t59))
(step t61 (cl @p_25) :rule resolution :premises (t56 t60 a4))
(step t62 (cl @p_22) :rule resolution :premises (t55 t61))
(step t63 (cl (or @p_16 @p_19 @p_20)) :rule la_disequality)
(step t64 (cl @p_16 @p_19 @p_20) :rule or :premises (t63))
(step t65 (cl @p_18) :rule comp_simplify)
(step t66 (cl (not @p_18) (not @p_4) @p_17) :rule equiv_pos2)
(step t67 (cl @p_17) :rule resolution :premises (t65 t66 a3))
(step t68 (cl @p_16) :rule resolution :premises (a2 t64 t67))
(step t69 (cl @p_15) :rule resolution :premises (t42 t62 t68))
(step t70 (cl (not @p_12) @p_13 @p_11) :rule equiv_pos2)
(step t71 (cl @p_12) :rule hole :args ("TRUST_THEORY_REWRITE" @p_12 3 7))
(step t72 (cl @p_11) :rule resolution :premises (t70 t71 a1))
(step t73 (cl (not @p_9) @p_10 @p_8) :rule equiv_pos2)
(step t74 (cl @p_9) :rule hole :args ("TRUST_THEORY_REWRITE" @p_9 3 7))
(step t75 (cl @p_8) :rule resolution :premises (t73 t74 a0))
(step t76 (cl) :rule resolution :premises (t41 t69 t72 t75))