unsat
(assume a0 (distinct y$n0s8 y$n1s8 y$n255s8 y$n5s8))
(assume a1 (distinct y$n1s32 y$n5s32 y$n0s32))
(assume a2 (= y$a_Apress (not y$1)))
(assume a3 (= y$a_Atable (not y$3)))
(assume a4 (= y$a_Bdeposit (not y$5)))
(assume a5 (= y$a_Bpress (not y$7)))
(assume a6 (= y$a_done (not y$9)))
(assume a7 (= y$a_down_empty (not y$11)))
(assume a8 (= y$a_down_full (not y$13)))
(assume a9 (= y$a_got_new (not y$15)))
(assume a10 (= y$a_loaded (not y$17)))
(assume a11 (= y$a_new_Plate_0 (not y$19)))
(assume a12 (= y$a_new_Plate_1 (not y$21)))
(assume a13 (= y$a_pressing (not y$23)))
(assume a14 (= y$a_q (not y$25)))
(assume a15 (= y$a_q1 (not y$27)))
(assume a16 (= y$a_q2 (not y$29)))
(assume a17 (= y$a_up_empty (not y$31)))
(assume a18 (= y$a_up_full (not y$33)))
(assume a19 (= y$a_wait_Belt (not y$35)))
(assume a20 (= y$a_wait_Deposit (not y$37)))
(assume a21 (= y$a_wait_Press (not y$39)))
(assume a22 (= y$a_wait_Robot (not y$41)))
(assume a23 (= y$a_wait_belt_Plate_0 (not y$43)))
(assume a24 (= y$a_wait_belt_Plate_1 (not y$45)))
(assume a25 (= y$a_wait_deposit_Plate_0 (not y$47)))
(assume a26 (= y$a_wait_deposit_Plate_1 (not y$49)))
(assume a27 (= y$a_wait_press_Plate_0 (not y$51)))
(assume a28 (= y$a_wait_press_Plate_1 (not y$53)))
(assume a29 (= y$a_wait_table_Plate_0 (not y$55)))
(assume a30 (= y$a_wait_table_Plate_1 (not y$57)))
(assume a31 (= y$dve_invalid (not y$59)))
(assume a32 (= y$62 (= y$n0s8 y$v_A)))
(assume a33 (= y$64 (= y$n0s8 y$v_B)))
(assume a34 (= y$66 (= y$n0s8 y$v_at_press)))
(assume a35 (= y$68 (= y$n0s8 y$v_at_table)))
(assume a36 (= y$70 (= y$n0s8 y$v_count)))
(assume a37 (= y$72 (= y$n0s8 y$v_done)))
(assume a38 (= y$74 (= y$n0s8 y$v_k_Belt)))
(assume a39 (= y$76 (= y$n0s8 y$v_k_Deposit)))
(assume a40 (= y$78 (= y$n0s8 y$v_k_Press)))
(assume a41 (= y$80 (= y$n0s8 y$v_k_Table)))
(assume a42 (= y$prop (not y$1559)))
(assume a43 (= y$1522 (= y$n5s8 y$v_done)))
(assume a44 (= y$id44_op (and y$59 y$1522)))
(assume a45 (= y$id44_op (not y$1525)))
(assume a46 (= y$1526 (= y$prop y$1525)))
(assume a47 (= y$1567 (and y$1 y$3 y$5 y$7 y$9 y$11 y$13 y$15 y$17 y$19 y$21 y$23 y$25 y$27 y$29 y$31 y$33 y$35 y$37 y$39 y$41 y$43 y$45 y$47 y$49 y$51 y$53 y$55 y$57 y$59 y$62 y$64 y$66 y$68 y$70 y$72 y$74 y$76 y$78 y$80 y$1559 y$1526)))
(assume a48 y$1567)
(step t0 (cl (not (= (distinct y$n0s8 y$n1s8 y$n255s8 y$n5s8) false)) (not (distinct y$n0s8 y$n1s8 y$n255s8 y$n5s8)) false) :rule equiv_pos2)
(step t1 (cl (= (distinct y$n0s8 y$n1s8 y$n255s8 y$n5s8) (and (not (= y$n0s8 y$n1s8)) (not (= y$n0s8 y$n255s8)) (not (= y$n0s8 y$n5s8)) (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$n5s8)) (not (= y$n255s8 y$n5s8))))) :rule hole :args ("THEORY_REWRITE" 1 (= (distinct y$n0s8 y$n1s8 y$n255s8 y$n5s8) (and (not (= y$n0s8 y$n1s8)) (not (= y$n0s8 y$n255s8)) (not (= y$n0s8 y$n5s8)) (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$n5s8)) (not (= y$n255s8 y$n5s8))))))
(step t2 (cl (not (= y$62 (= y$n0s8 y$v_A))) (not y$62) (= y$n0s8 y$v_A)) :rule equiv_pos2)
(step t3 (cl (not (= y$1567 (and y$1 y$3 y$5 y$7 y$9 y$11 y$13 y$15 y$17 y$19 y$21 y$23 y$25 y$27 y$29 y$31 y$33 y$35 y$37 y$39 y$41 y$43 y$45 y$47 y$49 y$51 y$53 y$55 y$57 y$59 y$62 y$64 y$66 y$68 y$70 y$72 y$74 y$76 y$78 y$80 y$1559 y$1526))) (not y$1567) (and y$1 y$3 y$5 y$7 y$9 y$11 y$13 y$15 y$17 y$19 y$21 y$23 y$25 y$27 y$29 y$31 y$33 y$35 y$37 y$39 y$41 y$43 y$45 y$47 y$49 y$51 y$53 y$55 y$57 y$59 y$62 y$64 y$66 y$68 y$70 y$72 y$74 y$76 y$78 y$80 y$1559 y$1526)) :rule equiv_pos2)
(step t4 (cl (and y$1 y$3 y$5 y$7 y$9 y$11 y$13 y$15 y$17 y$19 y$21 y$23 y$25 y$27 y$29 y$31 y$33 y$35 y$37 y$39 y$41 y$43 y$45 y$47 y$49 y$51 y$53 y$55 y$57 y$59 y$62 y$64 y$66 y$68 y$70 y$72 y$74 y$76 y$78 y$80 y$1559 y$1526)) :rule resolution :premises (t3 a47 a48))
(step t5 (cl y$62) :rule and :premises (t4) :args (30))
(step t6 (cl (= y$n0s8 y$v_A)) :rule resolution :premises (t2 a32 t5))
(step t7 (cl (not (= y$64 (= y$v_A y$v_B))) (not y$64) (= y$v_A y$v_B)) :rule equiv_pos2)
(step t8 (cl (= y$v_B y$v_B)) :rule refl)
(step t9 (cl (= (= y$n0s8 y$v_B) (= y$v_A y$v_B))) :rule cong :premises (t6 t8))
(step t10 (cl (= y$64 (= y$v_A y$v_B))) :rule trans :premises (a33 t9))
(step t11 (cl y$64) :rule and :premises (t4) :args (31))
(step t12 (cl (= y$v_A y$v_B)) :rule resolution :premises (t7 t10 t11))
(step t13 (cl (not (= y$66 (= y$v_B y$v_at_press))) (not y$66) (= y$v_B y$v_at_press)) :rule equiv_pos2)
(step t14 (cl (= y$n0s8 y$v_B)) :rule trans :premises (t6 t12))
(step t15 (cl (= y$v_at_press y$v_at_press)) :rule refl)
(step t16 (cl (= (= y$n0s8 y$v_at_press) (= y$v_B y$v_at_press))) :rule cong :premises (t14 t15))
(step t17 (cl (= y$66 (= y$v_B y$v_at_press))) :rule trans :premises (a34 t16))
(step t18 (cl y$66) :rule and :premises (t4) :args (32))
(step t19 (cl (= y$v_B y$v_at_press)) :rule resolution :premises (t13 t17 t18))
(step t20 (cl (not (= y$68 (= y$v_at_press y$v_at_table))) (not y$68) (= y$v_at_press y$v_at_table)) :rule equiv_pos2)
(step t21 (cl (= y$v_A y$v_at_press)) :rule trans :premises (t12 t19))
(step t22 (cl (= y$n0s8 y$v_at_press)) :rule trans :premises (t6 t21))
(step t23 (cl (= y$v_at_table y$v_at_table)) :rule refl)
(step t24 (cl (= (= y$n0s8 y$v_at_table) (= y$v_at_press y$v_at_table))) :rule cong :premises (t22 t23))
(step t25 (cl (= y$68 (= y$v_at_press y$v_at_table))) :rule trans :premises (a35 t24))
(step t26 (cl y$68) :rule and :premises (t4) :args (33))
(step t27 (cl (= y$v_at_press y$v_at_table)) :rule resolution :premises (t20 t25 t26))
(step t28 (cl (not (= y$70 (= y$v_at_table y$v_count))) (not y$70) (= y$v_at_table y$v_count)) :rule equiv_pos2)
(step t29 (cl (= y$v_B y$v_at_table)) :rule trans :premises (t19 t27))
(step t30 (cl (= y$v_A y$v_at_table)) :rule trans :premises (t12 t29))
(step t31 (cl (= y$n0s8 y$v_at_table)) :rule trans :premises (t6 t30))
(step t32 (cl (= y$v_count y$v_count)) :rule refl)
(step t33 (cl (= (= y$n0s8 y$v_count) (= y$v_at_table y$v_count))) :rule cong :premises (t31 t32))
(step t34 (cl (= y$70 (= y$v_at_table y$v_count))) :rule trans :premises (a36 t33))
(step t35 (cl y$70) :rule and :premises (t4) :args (34))
(step t36 (cl (= y$v_at_table y$v_count)) :rule resolution :premises (t28 t34 t35))
(step t37 (cl (not (= y$72 (= y$v_count y$v_done))) (not y$72) (= y$v_count y$v_done)) :rule equiv_pos2)
(step t38 (cl (= y$v_at_press y$v_count)) :rule trans :premises (t27 t36))
(step t39 (cl (= y$v_B y$v_count)) :rule trans :premises (t19 t38))
(step t40 (cl (= y$v_A y$v_count)) :rule trans :premises (t12 t39))
(step t41 (cl (= y$n0s8 y$v_count)) :rule trans :premises (t6 t40))
(step t42 (cl (= y$v_done y$v_done)) :rule refl)
(step t43 (cl (= (= y$n0s8 y$v_done) (= y$v_count y$v_done))) :rule cong :premises (t41 t42))
(step t44 (cl (= y$72 (= y$v_count y$v_done))) :rule trans :premises (a37 t43))
(step t45 (cl y$72) :rule and :premises (t4) :args (35))
(step t46 (cl (= y$v_count y$v_done)) :rule resolution :premises (t37 t44 t45))
(step t47 (cl (not (= y$74 (= y$v_done y$v_k_Belt))) (not y$74) (= y$v_done y$v_k_Belt)) :rule equiv_pos2)
(step t48 (cl (= y$v_at_table y$v_done)) :rule trans :premises (t36 t46))
(step t49 (cl (= y$v_at_press y$v_done)) :rule trans :premises (t27 t48))
(step t50 (cl (= y$v_B y$v_done)) :rule trans :premises (t19 t49))
(step t51 (cl (= y$v_A y$v_done)) :rule trans :premises (t12 t50))
(step t52 (cl (= y$n0s8 y$v_done)) :rule trans :premises (t6 t51))
(step t53 (cl (= y$v_k_Belt y$v_k_Belt)) :rule refl)
(step t54 (cl (= (= y$n0s8 y$v_k_Belt) (= y$v_done y$v_k_Belt))) :rule cong :premises (t52 t53))
(step t55 (cl (= y$74 (= y$v_done y$v_k_Belt))) :rule trans :premises (a38 t54))
(step t56 (cl y$74) :rule and :premises (t4) :args (36))
(step t57 (cl (= y$v_done y$v_k_Belt)) :rule resolution :premises (t47 t55 t56))
(step t58 (cl (not (= y$76 (= y$v_k_Belt y$v_k_Deposit))) (not y$76) (= y$v_k_Belt y$v_k_Deposit)) :rule equiv_pos2)
(step t59 (cl (= y$v_count y$v_k_Belt)) :rule trans :premises (t46 t57))
(step t60 (cl (= y$v_at_table y$v_k_Belt)) :rule trans :premises (t36 t59))
(step t61 (cl (= y$v_at_press y$v_k_Belt)) :rule trans :premises (t27 t60))
(step t62 (cl (= y$v_B y$v_k_Belt)) :rule trans :premises (t19 t61))
(step t63 (cl (= y$v_A y$v_k_Belt)) :rule trans :premises (t12 t62))
(step t64 (cl (= y$n0s8 y$v_k_Belt)) :rule trans :premises (t6 t63))
(step t65 (cl (= y$v_k_Deposit y$v_k_Deposit)) :rule refl)
(step t66 (cl (= (= y$n0s8 y$v_k_Deposit) (= y$v_k_Belt y$v_k_Deposit))) :rule cong :premises (t64 t65))
(step t67 (cl (= y$76 (= y$v_k_Belt y$v_k_Deposit))) :rule trans :premises (a39 t66))
(step t68 (cl y$76) :rule and :premises (t4) :args (37))
(step t69 (cl (= y$v_k_Belt y$v_k_Deposit)) :rule resolution :premises (t58 t67 t68))
(step t70 (cl (not (= y$78 (= y$v_k_Deposit y$v_k_Press))) (not y$78) (= y$v_k_Deposit y$v_k_Press)) :rule equiv_pos2)
(step t71 (cl (= y$v_done y$v_k_Deposit)) :rule trans :premises (t57 t69))
(step t72 (cl (= y$v_count y$v_k_Deposit)) :rule trans :premises (t46 t71))
(step t73 (cl (= y$v_at_table y$v_k_Deposit)) :rule trans :premises (t36 t72))
(step t74 (cl (= y$v_at_press y$v_k_Deposit)) :rule trans :premises (t27 t73))
(step t75 (cl (= y$v_B y$v_k_Deposit)) :rule trans :premises (t19 t74))
(step t76 (cl (= y$v_A y$v_k_Deposit)) :rule trans :premises (t12 t75))
(step t77 (cl (= y$n0s8 y$v_k_Deposit)) :rule trans :premises (t6 t76))
(step t78 (cl (= y$v_k_Press y$v_k_Press)) :rule refl)
(step t79 (cl (= (= y$n0s8 y$v_k_Press) (= y$v_k_Deposit y$v_k_Press))) :rule cong :premises (t77 t78))
(step t80 (cl (= y$78 (= y$v_k_Deposit y$v_k_Press))) :rule trans :premises (a40 t79))
(step t81 (cl y$78) :rule and :premises (t4) :args (38))
(step t82 (cl (= y$v_k_Deposit y$v_k_Press)) :rule resolution :premises (t70 t80 t81))
(step t83 (cl (not (= y$80 (= y$v_k_Press y$v_k_Table))) (not y$80) (= y$v_k_Press y$v_k_Table)) :rule equiv_pos2)
(step t84 (cl (= y$v_k_Belt y$v_k_Press)) :rule trans :premises (t69 t82))
(step t85 (cl (= y$v_done y$v_k_Press)) :rule trans :premises (t57 t84))
(step t86 (cl (= y$v_count y$v_k_Press)) :rule trans :premises (t46 t85))
(step t87 (cl (= y$v_at_table y$v_k_Press)) :rule trans :premises (t36 t86))
(step t88 (cl (= y$v_at_press y$v_k_Press)) :rule trans :premises (t27 t87))
(step t89 (cl (= y$v_B y$v_k_Press)) :rule trans :premises (t19 t88))
(step t90 (cl (= y$v_A y$v_k_Press)) :rule trans :premises (t12 t89))
(step t91 (cl (= y$n0s8 y$v_k_Press)) :rule trans :premises (t6 t90))
(step t92 (cl (= y$v_k_Table y$v_k_Table)) :rule refl)
(step t93 (cl (= (= y$n0s8 y$v_k_Table) (= y$v_k_Press y$v_k_Table))) :rule cong :premises (t91 t92))
(step t94 (cl (= y$80 (= y$v_k_Press y$v_k_Table))) :rule trans :premises (a41 t93))
(step t95 (cl y$80) :rule and :premises (t4) :args (39))
(step t96 (cl (= y$v_k_Press y$v_k_Table)) :rule resolution :premises (t83 t94 t95))
(step t97 (cl (= y$v_k_Deposit y$v_k_Table)) :rule trans :premises (t82 t96))
(step t98 (cl (= y$v_k_Belt y$v_k_Table)) :rule trans :premises (t69 t97))
(step t99 (cl (= y$v_done y$v_k_Table)) :rule trans :premises (t57 t98))
(step t100 (cl (= y$v_count y$v_k_Table)) :rule trans :premises (t46 t99))
(step t101 (cl (= y$v_at_table y$v_k_Table)) :rule trans :premises (t36 t100))
(step t102 (cl (= y$v_at_press y$v_k_Table)) :rule trans :premises (t27 t101))
(step t103 (cl (= y$v_B y$v_k_Table)) :rule trans :premises (t19 t102))
(step t104 (cl (= y$v_A y$v_k_Table)) :rule trans :premises (t12 t103))
(step t105 (cl (= y$n0s8 y$v_k_Table)) :rule trans :premises (t6 t104))
(step t106 (cl (= y$n1s8 y$n1s8)) :rule refl)
(step t107 (cl (= (= y$n0s8 y$n1s8) (= y$v_k_Table y$n1s8))) :rule cong :premises (t105 t106))
(step t108 (cl (= (not (= y$n0s8 y$n1s8)) (not (= y$v_k_Table y$n1s8)))) :rule cong :premises (t107))
(step t109 (cl (= y$n255s8 y$n255s8)) :rule refl)
(step t110 (cl (= (= y$n0s8 y$n255s8) (= y$v_k_Table y$n255s8))) :rule cong :premises (t105 t109))
(step t111 (cl (= (not (= y$n0s8 y$n255s8)) (not (= y$v_k_Table y$n255s8)))) :rule cong :premises (t110))
(step t112 (cl (not (= y$id44_op (= y$n5s8 y$v_k_Table))) (not y$id44_op) (= y$n5s8 y$v_k_Table)) :rule equiv_pos2)
(step t113 (cl (not (= (= y$id44_op (and y$59 y$1522)) (= y$id44_op (and y$59 (= y$n5s8 y$v_done))))) (not (= y$id44_op (and y$59 y$1522))) (= y$id44_op (and y$59 (= y$n5s8 y$v_done)))) :rule equiv_pos2)
(step t114 (cl (= y$id44_op y$id44_op)) :rule refl)
(step t115 (cl (= y$59 y$59)) :rule refl)
(step t116 (cl (= (and y$59 y$1522) (and y$59 (= y$n5s8 y$v_done)))) :rule cong :premises (t115 a43))
(step t117 (cl (= (= y$id44_op (and y$59 y$1522)) (= y$id44_op (and y$59 (= y$n5s8 y$v_done))))) :rule cong :premises (t114 t116))
(step t118 (cl (= y$id44_op (and y$59 (= y$n5s8 y$v_done)))) :rule resolution :premises (t113 t117 a44))
(step t119 (cl (not (= y$59 (= y$59 true))) (not y$59) (= y$59 true)) :rule equiv_pos2)
(step t120 (cl (= (= y$59 true) y$59)) :rule rare_rewrite :args ("bool-eq-true" y$59))
(step t121 (cl (= y$59 (= y$59 true))) :rule symm :premises (t120))
(step t122 (cl y$59) :rule and :premises (t4) :args (29))
(step t123 (cl (= y$59 true)) :rule resolution :premises (t119 t121 t122))
(step t124 (cl (= y$n5s8 y$n5s8)) :rule refl)
(step t125 (cl (= (= y$n5s8 y$v_done) (= y$n5s8 y$v_k_Table))) :rule cong :premises (t124 t99))
(step t126 (cl (= (and y$59 (= y$n5s8 y$v_done)) (and true (= y$n5s8 y$v_k_Table)))) :rule cong :premises (t123 t125))
(step t127 (cl (= y$id44_op (and true (= y$n5s8 y$v_k_Table)))) :rule trans :premises (t118 t126))
(step t128 (cl (= (and true (= y$n5s8 y$v_k_Table)) (= y$n5s8 y$v_k_Table))) :rule hole :args ("ACI_NORM" (= (and true (= y$n5s8 y$v_k_Table)) (= y$n5s8 y$v_k_Table))))
(step t129 (cl (= y$id44_op (= y$n5s8 y$v_k_Table))) :rule trans :premises (t127 t128))
(step t130 (cl (not (= (not y$1525) y$id44_op)) (not (not y$1525)) y$id44_op) :rule equiv_pos2)
(step t131 (cl (= (not y$1525) y$id44_op)) :rule symm :premises (a45))
(step t132 (cl (not (= y$1526 (= y$1525 y$prop))) (not y$1526) (= y$1525 y$prop)) :rule equiv_pos2)
(step t133 (cl (not (= (= y$1526 (= y$prop y$1525)) (= y$1526 (= y$1525 y$prop)))) (not (= y$1526 (= y$prop y$1525))) (= y$1526 (= y$1525 y$prop))) :rule equiv_pos2)
(step t134 (cl (= y$1526 y$1526)) :rule refl)
(step t135 (cl (= (= y$prop y$1525) (= y$1525 y$prop))) :rule rare_rewrite :args ("eq-symm" y$prop y$1525))
(step t136 (cl (= (= y$1526 (= y$prop y$1525)) (= y$1526 (= y$1525 y$prop)))) :rule cong :premises (t134 t135))
(step t137 (cl (= y$1526 (= y$1525 y$prop))) :rule resolution :premises (t133 t136 a46))
(step t138 (cl y$1526) :rule and :premises (t4) :args (41))
(step t139 (cl (= y$1525 y$prop)) :rule resolution :premises (t132 t137 t138))
(step t140 (cl (not y$1525) y$prop) :rule equiv1 :premises (t139))
(step t141 (cl (not y$prop) (not y$1559)) :rule equiv1 :premises (a42))
(step t142 (cl y$1559) :rule and :premises (t4) :args (40))
(step t143 (cl (not y$prop)) :rule resolution :premises (t141 t142))
(step t144 (cl (not y$1525)) :rule resolution :premises (t140 t143))
(step t145 (cl y$id44_op) :rule resolution :premises (t130 t131 t144))
(step t146 (cl (= y$n5s8 y$v_k_Table)) :rule resolution :premises (t112 t129 t145))
(step t147 (cl (= (= y$n0s8 y$n5s8) (= y$v_k_Table y$v_k_Table))) :rule cong :premises (t105 t146))
(step t148 (cl (= (not (= y$n0s8 y$n5s8)) (not (= y$v_k_Table y$v_k_Table)))) :rule cong :premises (t147))
(step t149 (cl (= (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$n255s8)))) :rule refl)
(step t150 (cl (= (= y$n1s8 y$n5s8) (= y$n1s8 y$v_k_Table))) :rule cong :premises (t106 t146))
(step t151 (cl (= (not (= y$n1s8 y$n5s8)) (not (= y$n1s8 y$v_k_Table)))) :rule cong :premises (t150))
(step t152 (cl (= (= y$n255s8 y$n5s8) (= y$n255s8 y$v_k_Table))) :rule cong :premises (t109 t146))
(step t153 (cl (= (not (= y$n255s8 y$n5s8)) (not (= y$n255s8 y$v_k_Table)))) :rule cong :premises (t152))
(step t154 (cl (= (and (not (= y$n0s8 y$n1s8)) (not (= y$n0s8 y$n255s8)) (not (= y$n0s8 y$n5s8)) (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$n5s8)) (not (= y$n255s8 y$n5s8))) (and (not (= y$v_k_Table y$n1s8)) (not (= y$v_k_Table y$n255s8)) (not (= y$v_k_Table y$v_k_Table)) (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$v_k_Table)) (not (= y$n255s8 y$v_k_Table))))) :rule cong :premises (t108 t111 t148 t149 t151 t153))
(step t155 (cl (= (= y$v_k_Table y$n1s8) (= y$n1s8 y$v_k_Table))) :rule rare_rewrite :args ("eq-symm" y$v_k_Table y$n1s8))
(step t156 (cl (= (not (= y$v_k_Table y$n1s8)) (not (= y$n1s8 y$v_k_Table)))) :rule cong :premises (t155))
(step t157 (cl (= (= y$v_k_Table y$n255s8) (= y$n255s8 y$v_k_Table))) :rule rare_rewrite :args ("eq-symm" y$v_k_Table y$n255s8))
(step t158 (cl (= (not (= y$v_k_Table y$n255s8)) (not (= y$n255s8 y$v_k_Table)))) :rule cong :premises (t157))
(step t159 (cl (= (= y$v_k_Table y$v_k_Table) true)) :rule rare_rewrite :args ("eq-refl" y$v_k_Table))
(step t160 (cl (= (not (= y$v_k_Table y$v_k_Table)) (not true))) :rule cong :premises (t159))
(step t161 (cl (= (not true) false)) :rule rare_rewrite :args ("evaluate"))
(step t162 (cl (= (not (= y$v_k_Table y$v_k_Table)) false)) :rule trans :premises (t160 t161))
(step t163 (cl (= (not (= y$n1s8 y$v_k_Table)) (not (= y$n1s8 y$v_k_Table)))) :rule refl)
(step t164 (cl (= (not (= y$n255s8 y$v_k_Table)) (not (= y$n255s8 y$v_k_Table)))) :rule refl)
(step t165 (cl (= (and (not (= y$v_k_Table y$n1s8)) (not (= y$v_k_Table y$n255s8)) (not (= y$v_k_Table y$v_k_Table)) (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$v_k_Table)) (not (= y$n255s8 y$v_k_Table))) (and (not (= y$n1s8 y$v_k_Table)) (not (= y$n255s8 y$v_k_Table)) false (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$v_k_Table)) (not (= y$n255s8 y$v_k_Table))))) :rule cong :premises (t156 t158 t162 t149 t163 t164))
(step t166 (cl (= (and (not (= y$n1s8 y$v_k_Table)) (not (= y$n255s8 y$v_k_Table)) false (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$v_k_Table)) (not (= y$n255s8 y$v_k_Table))) false)) :rule rare_rewrite :args ("bool-and-false" (rare-list (not (= y$n1s8 y$v_k_Table)) (not (= y$n255s8 y$v_k_Table))) (rare-list (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$v_k_Table)) (not (= y$n255s8 y$v_k_Table)))))
(step t167 (cl (= (and (not (= y$v_k_Table y$n1s8)) (not (= y$v_k_Table y$n255s8)) (not (= y$v_k_Table y$v_k_Table)) (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$v_k_Table)) (not (= y$n255s8 y$v_k_Table))) false)) :rule trans :premises (t165 t166))
(step t168 (cl (= (and (not (= y$n0s8 y$n1s8)) (not (= y$n0s8 y$n255s8)) (not (= y$n0s8 y$n5s8)) (not (= y$n1s8 y$n255s8)) (not (= y$n1s8 y$n5s8)) (not (= y$n255s8 y$n5s8))) false)) :rule trans :premises (t154 t167))
(step t169 (cl (= (distinct y$n0s8 y$n1s8 y$n255s8 y$n5s8) false)) :rule trans :premises (t1 t168))
(step t170 (cl false) :rule resolution :premises (t0 t169 a0))
(step t171 (cl (not false)) :rule false)
(step t172 (cl) :rule resolution :premises (t170 t171))
